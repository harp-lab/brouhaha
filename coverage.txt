[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = prim
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = equal?
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:65] '`(let ,(map (lambda (x e) `(,x ,(desugar-exp e))) xs es) ,(desugar-exp body)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:148] '`(prim ,op ,@(map (alpha-rename env) es)) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:118] '`(let ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:219] '`(prim (prov ,exp) ,op ,@(map add-prov-exp es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (prim (prov (prim equal? x y)) equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:206] '`(let (prov ,exp) ,(map (lambda (x e) `(,x ,(add-prov-exp e))) xs es) ,(add-prov-exp body)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:232] '`(app (prov ,exp) ,@(map add-prov-exp es)) = (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:321] '(normalize-aes es (lambda (xs) (k `(prim ,prov ,op . ,xs)))) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:274] '`(let (prov ,e+) ((,x+ ,e+)) ,x+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define ,prov ,sig ,(normalize-anf body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:305] '(normalize e0 k) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let ,prov ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let ,prov ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let ,prov ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let ,prov ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define ,prov ,sig ,(normalize-anf body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:324] '(normalize-aes es (lambda (xs) (k `(app ,prov . ,xs)))) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define ,prov ,sig ,(normalize-anf body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:372] '`(let ,prov ((,x (prim ,prov2 ,op ,@(map T-ae aes)))) ,(T e0 cae)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define ,prov (,fname ,k ,@params) ,(T body k)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda ,prov (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda ,prov (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define ,prov (,fname ,k ,@params) ,(T body k)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:394] '`(app ,prov ,(T-ae fae) ,cae ,@(map T-ae args)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let ,prov ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let ,prov ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define ,prov (,fname ,k ,@params) ,(T body k)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:147] '`(prim ,prov ,op ,@(map (alpha-rename env) es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7829
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = xy7826
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let ,prov ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define ,prov (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7830
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda ,prov ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7831
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let ,prov ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda ,prov ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7832
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let ,prov ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define ,prov (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7833
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:160] '`(app ,prov ,@(map (alpha-rename env) es)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let ,prov ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let ,prov ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define ,prov (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:429] '`(let ,prov ((,x (prim ,prov2 ,op ,@xs))) ,e0+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc ,prov (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let ,prov ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc ,prov (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 x num2> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let ,prov ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc ,prov (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 num2 num1> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc ,prov (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:478] '`(clo-app ,prov ,f ,@xs) = (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 5))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc ,prov (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))) (proc (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main _7842 kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = prim
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = equal?
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:65] '`(let ,(map (lambda (x e) `(,x ,(desugar-exp e))) xs es) ,(desugar-exp body)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:148] '`(prim ,op ,@(map (alpha-rename env) es)) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:118] '`(let ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:219] '`(prim (prov ,exp) ,op ,@(map add-prov-exp es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (prim (prov (prim equal? x y)) equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:206] '`(let (prov ,exp) ,(map (lambda (x e) `(,x ,(add-prov-exp e))) xs es) ,(add-prov-exp body)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:232] '`(app (prov ,exp) ,@(map add-prov-exp es)) = (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:321] '(normalize-aes es (lambda (xs) (k `(prim (prov ,@prov) ,op . ,xs)))) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:274] '`(let (prov ,e+) ((,x+ ,e+)) ,x+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:305] '(normalize e0 k) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let (prov ,@prov) ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let (prov ,@prov) ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let (prov ,@prov) ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let (prov ,@prov) ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:324] '(normalize-aes es (lambda (xs) (k `(app (prov ,@prov) . ,xs)))) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:372] '`(let (prov ,@prov) ((,x (prim (prov ,@prov2) ,op ,@(map T-ae aes)))) ,(T e0 cae)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda (prov ,@prov) (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda (prov ,@prov) (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:394] '`(app (prov ,@prov) ,(T-ae fae) ,cae ,@(map T-ae args)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let (prov ,@prov) ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let (prov ,@prov) ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:147] '`(prim (prov ,@prov) ,op ,@(map (alpha-rename env) es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7829
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = xy7826
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7830
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda (prov ,@prov) ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7831
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda (prov ,@prov) ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7832
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7833
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:160] '`(app (prov ,@prov) ,@(map (alpha-rename env) es)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:429] '`(let (prov ,@prov) ((,x (prim (prov ,@prov2) ,op ,@xs))) ,e0+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let (prov ,@prov) ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc (prov ,@prov) (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 x num2> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let (prov ,@prov) ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc (prov ,@prov) (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 num2 num1> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:478] '`(clo-app (prov ,@prov) ,f ,@xs) = (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 5))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))) (proc (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main _7842 kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = prim
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = equal?
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:65] '`(let ,(map (lambda (x e) `(,x ,(desugar-exp e))) xs es) ,(desugar-exp body)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:62] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:60] '`',y = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:81] '(map desugar-exp es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:86] '`(define (,fname ,@params) ,(desugar-exp body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:148] '`(prim ,op ,@(map (alpha-rename env) es)) = (prim equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (equal? x y) (prim equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:118] '`(let ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (call num1 num2) (let ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:167] '`(define (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (brouhaha_main) (call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:219] '`(prim (prov ,exp) ,op ,@(map add-prov-exp es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (prim (prov (prim equal? x y)) equal? x y))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:206] '`(let (prov ,exp) ,(map (lambda (x e) `(,x ,(add-prov-exp e))) xs es) ,(add-prov-exp body)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1) (y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:226] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:224] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:232] '`(app (prov ,exp) ,@(map add-prov-exp es)) = (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:241] '`(define (prov ,def) ,params ,(add-prov-exp body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (app (prov (call (quote 5) (quote 42))) call (quote 5) (quote 42)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:321] '(normalize-aes es (lambda (xs) (k `(prim (prov ,@prov) ,op . ,xs)))) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:274] '`(let (prov ,e+) ((,x+ ,e+)) ,x+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:305] '(normalize e0 k) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let (prov ,@prov) ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let (prov ,@prov) ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:309] '`(let (prov ,@prov) ((,x ,(normalize rhs (lambda (x) x)))) ,(normalize `(let (prov ,@prov) ,rest ,e0) k)) = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call num1 num2) (let (prov (let ((x num1) (y num2)) x)) ((x num1)) (let (prov (let ((x num1) (y num2)) x)) ((y num2)) x)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:285] '`(let (prov ,anf) ((,x ,anf)) ,(k x)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:294] '(k `',dat) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:284] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:295] '(k x) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:324] '(normalize-aes es (lambda (xs) (k `(app (prov ,@prov) . ,xs)))) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:271] 'e+ = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:255] '`(define (prov ,@prov) ,sig ,(normalize-anf body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:372] '`(let (prov ,@prov) ((,x (prim (prov ,@prov2) ,op ,@(map T-ae aes)))) ,(T e0 cae)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda (prov ,@prov) (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:355] '`(,cae ,x) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:387] '(T rhs `(lambda (prov ,@prov) (,x) ,(T e0 cae))) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:346] 'x = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:394] '`(app (prov ,@prov) ,(T-ae fae) ,cae ,@(map T-ae args)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let (prov ,@prov) ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:381] '`(let (prov ,@prov) ((,x ',dat)) ,(T e0 cae)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:403] '`(define (prov ,@prov) (,fname ,k ,@params) ,(T body k)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = y
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:147] '`(prim (prov ,@prov) ,op ,@(map (alpha-rename env) es)) = (prim (prov (prim equal? x y)) equal? x y)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7829
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = xy7826
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (equal? x y) (prim equal? x y))) (equal? kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (kont7829 xy7826)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7830
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = x
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda (prov ,@prov) ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7831
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num2
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:124] '`(lambda (prov ,@prov) ,xs+ ,((alpha-rename env+) e0)) = (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = f7832
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = num1
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:162] '(map (alpha-rename env) es) = (f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2))))) (f7832 num1)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 5)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:161] '`',dat = (quote 42)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = call
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = kont7833
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7827
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:157] '(hash-ref env x) = a7828
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:160] '`(app (prov ,@prov) ,@(map (alpha-rename env) es)) = (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:110] '`(let (prov ,@prov) ,(map list xs+ (map (alpha-rename env) es)) ,((alpha-rename env+) e0)) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:171] '`(define (prov ,@prov) (,fname ,@params) ,((alpha-rename (foldl (lambda (x h) (hash-set h x x)) env params)) body)) = (define (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7829 xy7826)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:429] '`(let (prov ,@prov) ((,x (prim (prov ,@prov2) ,op ,@xs))) ,e0+) = (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7832 num1)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov f7831 num2)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:479] '`(clo-app dummy_prov ,f ,@xs) = (clo-app dummy_prov kont7830 x)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let (prov ,@prov) ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc (prov ,@prov) (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 x num2> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:448] '(list (set-remove (set-union envvars freevars) x) `(let (prov ,@prov) ((,x (make-closure ,fx ,@envlist))) ,e0+) `(,@procs0+ ,@procs1+ (proc (prov ,@prov) (,fx ,envx ,@xs) ,body++))) = (#<set: kont7830 num2 num1> (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1)) ((proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2)))))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:478] '`(clo-app (prov ,@prov) ,f ,@xs) = (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 42))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(prov ,@prov) = (prov (quote 5))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:421] '`(let ,(coverage `(prov ,@prov)) ((,x ',dat)) ,e0+) = (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))
[/home/sowmithk/Documents/projects/brouhaha/compile.rkt:500] '`(,@pr+ ,@procs+ (proc (prov ,@prov) (,fx ,envx . ,xs) ,body+)) = ((proc (prov (define (equal? x y) (prim equal? x y))) (equal? _7834 kont7829 x y) (let (prov (prim (prov (prim equal? x y)) equal? x y)) ((xy7826 (prim (prov (prim equal? x y)) equal? x y))) (clo-app dummy_prov kont7829 xy7826))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) (lam7835 env7836 y) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((kont7830 (env-ref env7836 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((x (env-ref env7836 1))) (clo-app dummy_prov kont7830 x)))) (proc (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) (lam7837 env7838 x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((kont7830 (env-ref env7838 2))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((num2 (env-ref env7838 1))) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (make-closure lam7835 x kont7830))) (clo-app dummy_prov f7831 num2))))) (proc (prov (define (call num1 num2) (let ((x num1) (y num2)) x))) (call _7839 kont7830 num1 num2) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (x) (let (prov (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x))) ((f7831 (lambda (prov (let ((x num1) (y num2)) x)) (y) (kont7830 x)))) (f7831 num2)))) ((f7832 (make-closure lam7837 num2 kont7830))) (clo-app dummy_prov f7832 num1))) (proc (prov (define (brouhaha_main) (call (quote 5) (quote 42)))) (brouhaha_main _7842 kont7833) (let (prov (quote 5)) ((a7827 (quote 5))) (let (prov (quote 42)) ((a7828 (quote 42))) (clo-app (prov (call (quote 5) (quote 42))) call kont7833 a7827 a7828)))))
