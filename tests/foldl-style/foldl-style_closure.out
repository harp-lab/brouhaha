'((proc
   (+ _50763 . lst)
   (let ((kont5050150601 (prim car lst)))
     (let ((lst50602 (prim cdr lst)))
       (let ((x5041250603 (apply-prim + lst50602)))
         (clo-app kont5050150601 x5041250603)))))
  (proc
   (- _50764 . lst)
   (let ((kont5050350604 (prim car lst)))
     (let ((lst50605 (prim cdr lst)))
       (let ((x5041350606 (apply-prim - lst50605)))
         (clo-app kont5050350604 x5041350606)))))
  (proc
   (* _50765 . lst)
   (let ((kont5050550607 (prim car lst)))
     (let ((lst50608 (prim cdr lst)))
       (let ((x5041450609 (apply-prim * lst50608)))
         (clo-app kont5050550607 x5041450609)))))
  (proc
   (modulo _50766 kont50507 a b)
   (let ((x5041550610 (prim modulo a b))) (clo-app kont50507 x5041550610)))
  (proc
   (/ _50767 . lst)
   (let ((kont5050850611 (prim car lst)))
     (let ((lst50612 (prim cdr lst)))
       (let ((x5041650613 (apply-prim / lst50612)))
         (clo-app kont5050850611 x5041650613)))))
  (proc
   (= _50768 . lst)
   (let ((kont5051050614 (prim car lst)))
     (let ((lst50615 (prim cdr lst)))
       (let ((x5041750616 (apply-prim = lst50615)))
         (clo-app kont5051050614 x5041750616)))))
  (proc
   (> _50769 . lst)
   (let ((kont5051250617 (prim car lst)))
     (let ((lst50618 (prim cdr lst)))
       (let ((x5041850619 (apply-prim > lst50618)))
         (clo-app kont5051250617 x5041850619)))))
  (proc
   (< _50770 . lst)
   (let ((kont5051450620 (prim car lst)))
     (let ((lst50621 (prim cdr lst)))
       (let ((x5041950622 (apply-prim < lst50621)))
         (clo-app kont5051450620 x5041950622)))))
  (proc
   (<= _50771 . lst)
   (let ((kont5051650623 (prim car lst)))
     (let ((lst50624 (prim cdr lst)))
       (let ((x5042050625 (apply-prim <= lst50624)))
         (clo-app kont5051650623 x5042050625)))))
  (proc
   (>= _50772 . lst)
   (let ((kont5051850626 (prim car lst)))
     (let ((lst50627 (prim cdr lst)))
       (let ((x5042150628 (apply-prim >= lst50627)))
         (clo-app kont5051850626 x5042150628)))))
  (proc
   (null? _50773 kont50520 x)
   (let ((x5042250629 (prim null? x))) (clo-app kont50520 x5042250629)))
  (proc
   (equal? _50774 kont50521 x y)
   (let ((x5042350630 (prim equal? x y))) (clo-app kont50521 x5042350630)))
  (proc
   (eq? _50775 kont50522 x y)
   (let ((x5042450631 (prim eq? x y))) (clo-app kont50522 x5042450631)))
  (proc
   (cons _50776 kont50523 a b)
   (let ((x5042550632 (prim cons a b))) (clo-app kont50523 x5042550632)))
  (proc
   (car _50777 kont50524 lst)
   (let ((x5042650633 (prim car lst))) (clo-app kont50524 x5042650633)))
  (proc
   (cdr _50778 kont50525 lst)
   (let ((x5042750634 (prim cdr lst))) (clo-app kont50525 x5042750634)))
  (proc
   (lam50779 env50780 a5043050638)
   (let ((equal? (env-ref env50780 3)))
     (let ((a5042850635 (env-ref env50780 2)))
       (let ((kont50526 (env-ref env50780 1)))
         (clo-app equal? kont50526 a5042850635 a5043050638)))))
  (proc
   (even? _50783 kont50526 x)
   (let ((a5042850635 '0))
     (let ((a5042950636 '2))
       (let ((f5052750637
              (make-closure lam50779 kont50526 a5042850635 equal?)))
         (clo-app modulo f5052750637 x a5042950636)))))
  (proc
   (lam50784 env50785 a5043350642)
   (let ((equal? (env-ref env50785 3)))
     (let ((a5043150639 (env-ref env50785 2)))
       (let ((kont50528 (env-ref env50785 1)))
         (clo-app equal? kont50528 a5043150639 a5043350642)))))
  (proc
   (odd? _50788 kont50528 x)
   (let ((a5043150639 '1))
     (let ((a5043250640 '2))
       (let ((f5052950641
              (make-closure lam50784 kont50528 a5043150639 equal?)))
         (clo-app modulo f5052950641 x a5043250640)))))
  (proc
   (list _50789 . x)
   (let ((kont5053050643 (prim car x)))
     (let ((x50644 (prim cdr x))) (clo-app kont5053050643 x50644))))
  (proc
   (lam50792 env50793 a5043950654)
   (let ((kont50532 (env-ref env50793 3)))
     (let ((x (env-ref env50793 2)))
       (let ((member? (env-ref env50793 1)))
         (clo-app member? kont50532 x a5043950654)))))
  (proc
   (lam50794 env50795 a5043750651)
   (let ((cdr (env-ref env50795 5)))
     (let ((kont50532 (env-ref env50795 4)))
       (let ((lst (env-ref env50795 3)))
         (let ((x (env-ref env50795 2)))
           (let ((member? (env-ref env50795 1)))
             (if a5043750651
               (let ((x5043850652 '#t)) (clo-app kont50532 x5043850652))
               (let ((f5053350653 (make-closure lam50792 member? x kont50532)))
                 (clo-app cdr f5053350653 lst)))))))))
  (proc
   (lam50796 env50797 a5043650649)
   (let ((cdr (env-ref env50797 6)))
     (let ((kont50532 (env-ref env50797 5)))
       (let ((lst (env-ref env50797 4)))
         (let ((equal? (env-ref env50797 3)))
           (let ((x (env-ref env50797 2)))
             (let ((member? (env-ref env50797 1)))
               (let ((f5053450650
                      (make-closure lam50794 member? x lst kont50532 cdr)))
                 (clo-app equal? f5053450650 a5043650649 x)))))))))
  (proc
   (lam50798 env50799 a5043450646)
   (let ((cdr (env-ref env50799 7)))
     (let ((kont50532 (env-ref env50799 6)))
       (let ((lst (env-ref env50799 5)))
         (let ((equal? (env-ref env50799 4)))
           (let ((x (env-ref env50799 3)))
             (let ((car (env-ref env50799 2)))
               (let ((member? (env-ref env50799 1)))
                 (if a5043450646
                   (let ((x5043550647 '#f)) (clo-app kont50532 x5043550647))
                   (let ((f5053550648
                          (make-closure
                           lam50796
                           member?
                           x
                           equal?
                           lst
                           kont50532
                           cdr)))
                     (clo-app car f5053550648 lst)))))))))))
  (proc
   (member? _50800 kont50532 x lst)
   (let ((f5053650645
          (make-closure lam50798 member? car x equal? lst kont50532 cdr)))
     (clo-app null? f5053650645 lst)))
  (proc
   (lam50801 env50802 a5044350662)
   (let ((a5044250660 (env-ref env50802 4)))
     (let ((kont50537 (env-ref env50802 3)))
       (let ((fun (env-ref env50802 2)))
         (let ((foldl (env-ref env50802 1)))
           (clo-app foldl kont50537 fun a5044250660 a5044350662))))))
  (proc
   (lam50803 env50804 a5044250660)
   (let ((cdr (env-ref env50804 5)))
     (let ((lst (env-ref env50804 4)))
       (let ((kont50537 (env-ref env50804 3)))
         (let ((fun (env-ref env50804 2)))
           (let ((foldl (env-ref env50804 1)))
             (let ((f5053850661
                    (make-closure lam50801 foldl fun kont50537 a5044250660)))
               (clo-app cdr f5053850661 lst))))))))
  (proc
   (lam50805 env50806 a5044150658)
   (let ((cdr (env-ref env50806 6)))
     (let ((lst (env-ref env50806 5)))
       (let ((kont50537 (env-ref env50806 4)))
         (let ((fun (env-ref env50806 3)))
           (let ((acc (env-ref env50806 2)))
             (let ((foldl (env-ref env50806 1)))
               (let ((f5053950659
                      (make-closure lam50803 foldl fun kont50537 lst cdr)))
                 (clo-app fun f5053950659 a5044150658 acc)))))))))
  (proc
   (lam50807 env50808 a5044050656)
   (let ((cdr (env-ref env50808 7)))
     (let ((lst (env-ref env50808 6)))
       (let ((kont50537 (env-ref env50808 5)))
         (let ((fun (env-ref env50808 4)))
           (let ((acc (env-ref env50808 3)))
             (let ((car (env-ref env50808 2)))
               (let ((foldl (env-ref env50808 1)))
                 (if a5044050656
                   (clo-app kont50537 acc)
                   (let ((f5054050657
                          (make-closure
                           lam50805
                           foldl
                           acc
                           fun
                           kont50537
                           lst
                           cdr)))
                     (clo-app car f5054050657 lst)))))))))))
  (proc
   (foldl _50809 kont50537 fun acc lst)
   (let ((f5054150655
          (make-closure lam50807 foldl car acc fun kont50537 lst cdr)))
     (clo-app null? f5054150655 lst)))
  (proc
   (lam50810 env50811 a5044750670)
   (let ((reverse-helper (env-ref env50811 3)))
     (let ((a5044550666 (env-ref env50811 2)))
       (let ((kont50542 (env-ref env50811 1)))
         (clo-app reverse-helper kont50542 a5044550666 a5044750670)))))
  (proc
   (lam50812 env50813 a5044650668)
   (let ((reverse-helper (env-ref env50813 5)))
     (let ((a5044550666 (env-ref env50813 4)))
       (let ((cons (env-ref env50813 3)))
         (let ((kont50542 (env-ref env50813 2)))
           (let ((lst2 (env-ref env50813 1)))
             (let ((f5054350669
                    (make-closure
                     lam50810
                     kont50542
                     a5044550666
                     reverse-helper)))
               (clo-app cons f5054350669 a5044650668 lst2))))))))
  (proc
   (lam50814 env50815 a5044550666)
   (let ((lst (env-ref env50815 6)))
     (let ((reverse-helper (env-ref env50815 5)))
       (let ((car (env-ref env50815 4)))
         (let ((cons (env-ref env50815 3)))
           (let ((kont50542 (env-ref env50815 2)))
             (let ((lst2 (env-ref env50815 1)))
               (let ((f5054450667
                      (make-closure
                       lam50812
                       lst2
                       kont50542
                       cons
                       a5044550666
                       reverse-helper)))
                 (clo-app car f5054450667 lst)))))))))
  (proc
   (lam50816 env50817 a5044450664)
   (let ((cdr (env-ref env50817 7)))
     (let ((lst (env-ref env50817 6)))
       (let ((reverse-helper (env-ref env50817 5)))
         (let ((car (env-ref env50817 4)))
           (let ((cons (env-ref env50817 3)))
             (let ((kont50542 (env-ref env50817 2)))
               (let ((lst2 (env-ref env50817 1)))
                 (if a5044450664
                   (clo-app kont50542 lst2)
                   (let ((f5054550665
                          (make-closure
                           lam50814
                           lst2
                           kont50542
                           cons
                           car
                           reverse-helper
                           lst)))
                     (clo-app cdr f5054550665 lst)))))))))))
  (proc
   (reverse-helper _50818 kont50542 lst lst2)
   (let ((f5054650663
          (make-closure
           lam50816
           lst2
           kont50542
           cons
           car
           reverse-helper
           lst
           cdr)))
     (clo-app null? f5054650663 lst)))
  (proc
   (lam50819 env50820 a5044850672)
   (let ((kont50547 (env-ref env50820 3)))
     (let ((lst (env-ref env50820 2)))
       (let ((reverse-helper (env-ref env50820 1)))
         (clo-app reverse-helper kont50547 lst a5044850672)))))
  (proc
   (reverse _50821 kont50547 lst)
   (let ((f5054850671 (make-closure lam50819 reverse-helper lst kont50547)))
     (clo-app list f5054850671)))
  (proc
   (lam50822 env50823 x5045150677)
   (let ((kont50549 (env-ref env50823 1))) (clo-app kont50549 x5045150677)))
  (proc
   (lam50824 env50825 a5045650686)
   (let ((kont50549 (env-ref env50825 4)))
     (let ((a5045250679 (env-ref env50825 3)))
       (let ((a5045450682 (env-ref env50825 2)))
         (let ((take-helper (env-ref env50825 1)))
           (clo-app
            take-helper
            kont50549
            a5045250679
            a5045450682
            a5045650686))))))
  (proc
   (lam50826 env50827 a5045550684)
   (let ((kont50549 (env-ref env50827 6)))
     (let ((a5045250679 (env-ref env50827 5)))
       (let ((a5045450682 (env-ref env50827 4)))
         (let ((cons (env-ref env50827 3)))
           (let ((take-helper (env-ref env50827 2)))
             (let ((lst2 (env-ref env50827 1)))
               (let ((f5055150685
                      (make-closure
                       lam50824
                       take-helper
                       a5045450682
                       a5045250679
                       kont50549)))
                 (clo-app cons f5055150685 a5045550684 lst2)))))))))
  (proc
   (lam50828 env50829 a5045450682)
   (let ((kont50549 (env-ref env50829 7)))
     (let ((lst (env-ref env50829 6)))
       (let ((a5045250679 (env-ref env50829 5)))
         (let ((car (env-ref env50829 4)))
           (let ((cons (env-ref env50829 3)))
             (let ((take-helper (env-ref env50829 2)))
               (let ((lst2 (env-ref env50829 1)))
                 (let ((f5055250683
                        (make-closure
                         lam50826
                         lst2
                         take-helper
                         cons
                         a5045450682
                         a5045250679
                         kont50549)))
                   (clo-app car f5055250683 lst))))))))))
  (proc
   (lam50831 env50832 a5045250679)
   (let ((kont50549 (env-ref env50832 8)))
     (let ((lst (env-ref env50832 7)))
       (let ((cons (env-ref env50832 6)))
         (let ((- (env-ref env50832 5)))
           (let ((take-helper (env-ref env50832 4)))
             (let ((lst2 (env-ref env50832 3)))
               (let ((n (env-ref env50832 2)))
                 (let ((car (env-ref env50832 1)))
                   (let ((a5045350680 '1))
                     (let ((f5055350681
                            (make-closure
                             lam50828
                             lst2
                             take-helper
                             cons
                             car
                             a5045250679
                             lst
                             kont50549)))
                       (clo-app - f5055350681 n a5045350680))))))))))))
  (proc
   (lam50833 env50834 a5045050675)
   (let ((cdr (env-ref env50834 10)))
     (let ((kont50549 (env-ref env50834 9)))
       (let ((lst (env-ref env50834 8)))
         (let ((reverse (env-ref env50834 7)))
           (let ((cons (env-ref env50834 6)))
             (let ((- (env-ref env50834 5)))
               (let ((take-helper (env-ref env50834 4)))
                 (let ((lst2 (env-ref env50834 3)))
                   (let ((n (env-ref env50834 2)))
                     (let ((car (env-ref env50834 1)))
                       (if a5045050675
                         (let ((f5055050676 (make-closure lam50822 kont50549)))
                           (clo-app reverse f5055050676 lst2))
                         (let ((f5055450678
                                (make-closure
                                 lam50831
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 lst
                                 kont50549)))
                           (clo-app cdr f5055450678 lst))))))))))))))
  (proc
   (take-helper _50836 kont50549 lst n lst2)
   (let ((a5044950673 '0))
     (let ((f5055550674
            (make-closure
             lam50833
             car
             n
             lst2
             take-helper
             -
             cons
             reverse
             lst
             kont50549
             cdr)))
       (clo-app = f5055550674 n a5044950673))))
  (proc
   (lam50837 env50838 a5045750688)
   (let ((lst (env-ref env50838 4)))
     (let ((kont50556 (env-ref env50838 3)))
       (let ((take-helper (env-ref env50838 2)))
         (let ((n (env-ref env50838 1)))
           (clo-app take-helper kont50556 lst n a5045750688))))))
  (proc
   (take _50839 kont50556 lst n)
   (let ((f5055750687 (make-closure lam50837 n take-helper kont50556 lst)))
     (clo-app list f5055750687)))
  (proc
   (lam50841 env50842 a5046250696)
   (let ((a5046050692 (env-ref env50842 3)))
     (let ((+ (env-ref env50842 2)))
       (let ((kont50558 (env-ref env50842 1)))
         (clo-app + kont50558 a5046050692 a5046250696)))))
  (proc
   (lam50843 env50844 a5046150694)
   (let ((a5046050692 (env-ref env50844 4)))
     (let ((length (env-ref env50844 3)))
       (let ((+ (env-ref env50844 2)))
         (let ((kont50558 (env-ref env50844 1)))
           (let ((f5055950695 (make-closure lam50841 kont50558 + a5046050692)))
             (clo-app length f5055950695 a5046150694)))))))
  (proc
   (lam50846 env50847 a5045850690)
   (let ((cdr (env-ref env50847 5)))
     (let ((lst (env-ref env50847 4)))
       (let ((length (env-ref env50847 3)))
         (let ((+ (env-ref env50847 2)))
           (let ((kont50558 (env-ref env50847 1)))
             (if a5045850690
               (let ((x5045950691 '0)) (clo-app kont50558 x5045950691))
               (let ((a5046050692 '1))
                 (let ((f5056050693
                        (make-closure
                         lam50843
                         kont50558
                         +
                         length
                         a5046050692)))
                   (clo-app cdr f5056050693 lst))))))))))
  (proc
   (length _50848 kont50558 lst)
   (let ((f5056150689 (make-closure lam50846 kont50558 + length lst cdr)))
     (clo-app null? f5056150689 lst)))
  (proc
   (lam50849 env50850 x5046450700)
   (let ((kont50562 (env-ref env50850 1))) (clo-app kont50562 x5046450700)))
  (proc
   (lam50851 env50852 a5046850708)
   (let ((kont50562 (env-ref env50852 3)))
     (let ((cons (env-ref env50852 2)))
       (let ((a5046650704 (env-ref env50852 1)))
         (clo-app cons kont50562 a5046650704 a5046850708)))))
  (proc
   (lam50853 env50854 a5046750706)
   (let ((kont50562 (env-ref env50854 5)))
     (let ((map (env-ref env50854 4)))
       (let ((proc (env-ref env50854 3)))
         (let ((cons (env-ref env50854 2)))
           (let ((a5046650704 (env-ref env50854 1)))
             (let ((f5056450707
                    (make-closure lam50851 a5046650704 cons kont50562)))
               (clo-app map f5056450707 proc a5046750706))))))))
  (proc
   (lam50855 env50856 a5046650704)
   (let ((lst (env-ref env50856 6)))
     (let ((map (env-ref env50856 5)))
       (let ((proc (env-ref env50856 4)))
         (let ((cons (env-ref env50856 3)))
           (let ((cdr (env-ref env50856 2)))
             (let ((kont50562 (env-ref env50856 1)))
               (let ((f5056550705
                      (make-closure
                       lam50853
                       a5046650704
                       cons
                       proc
                       map
                       kont50562)))
                 (clo-app cdr f5056550705 lst)))))))))
  (proc
   (lam50857 env50858 a5046550702)
   (let ((lst (env-ref env50858 6)))
     (let ((map (env-ref env50858 5)))
       (let ((proc (env-ref env50858 4)))
         (let ((cons (env-ref env50858 3)))
           (let ((cdr (env-ref env50858 2)))
             (let ((kont50562 (env-ref env50858 1)))
               (let ((f5056650703
                      (make-closure lam50855 kont50562 cdr cons proc map lst)))
                 (clo-app proc f5056650703 a5046550702)))))))))
  (proc
   (lam50859 env50860 a5046350698)
   (let ((lst (env-ref env50860 8)))
     (let ((map (env-ref env50860 7)))
       (let ((proc (env-ref env50860 6)))
         (let ((car (env-ref env50860 5)))
           (let ((cons (env-ref env50860 4)))
             (let ((list (env-ref env50860 3)))
               (let ((cdr (env-ref env50860 2)))
                 (let ((kont50562 (env-ref env50860 1)))
                   (if a5046350698
                     (let ((f5056350699 (make-closure lam50849 kont50562)))
                       (clo-app list f5056350699))
                     (let ((f5056750701
                            (make-closure
                             lam50857
                             kont50562
                             cdr
                             cons
                             proc
                             map
                             lst)))
                       (clo-app car f5056750701 lst))))))))))))
  (proc
   (map _50861 kont50562 proc lst)
   (let ((f5056850697
          (make-closure lam50859 kont50562 cdr list cons car proc map lst)))
     (clo-app null? f5056850697 lst)))
  (proc
   (lam50862 env50863 x5047050712)
   (let ((kont50569 (env-ref env50863 1))) (clo-app kont50569 x5047050712)))
  (proc
   (lam50864 env50865 a5047550722)
   (let ((kont50569 (env-ref env50865 3)))
     (let ((a5047350718 (env-ref env50865 2)))
       (let ((cons (env-ref env50865 1)))
         (clo-app cons kont50569 a5047350718 a5047550722)))))
  (proc
   (lam50866 env50867 a5047450720)
   (let ((a5047350718 (env-ref env50867 5)))
     (let ((filter (env-ref env50867 4)))
       (let ((cons (env-ref env50867 3)))
         (let ((op (env-ref env50867 2)))
           (let ((kont50569 (env-ref env50867 1)))
             (let ((f5057150721
                    (make-closure lam50864 cons a5047350718 kont50569)))
               (clo-app filter f5057150721 op a5047450720))))))))
  (proc
   (lam50868 env50869 a5047350718)
   (let ((cdr (env-ref env50869 6)))
     (let ((lst (env-ref env50869 5)))
       (let ((filter (env-ref env50869 4)))
         (let ((cons (env-ref env50869 3)))
           (let ((op (env-ref env50869 2)))
             (let ((kont50569 (env-ref env50869 1)))
               (let ((f5057250719
                      (make-closure
                       lam50866
                       kont50569
                       op
                       cons
                       filter
                       a5047350718)))
                 (clo-app cdr f5057250719 lst)))))))))
  (proc
   (lam50870 env50871 a5047650724)
   (let ((filter (env-ref env50871 3)))
     (let ((op (env-ref env50871 2)))
       (let ((kont50569 (env-ref env50871 1)))
         (clo-app filter kont50569 op a5047650724)))))
  (proc
   (lam50872 env50873 a5047250716)
   (let ((cdr (env-ref env50873 7)))
     (let ((lst (env-ref env50873 6)))
       (let ((cons (env-ref env50873 5)))
         (let ((op (env-ref env50873 4)))
           (let ((kont50569 (env-ref env50873 3)))
             (let ((filter (env-ref env50873 2)))
               (let ((car (env-ref env50873 1)))
                 (if a5047250716
                   (let ((f5057350717
                          (make-closure
                           lam50868
                           kont50569
                           op
                           cons
                           filter
                           lst
                           cdr)))
                     (clo-app car f5057350717 lst))
                   (let ((f5057450723
                          (make-closure lam50870 kont50569 op filter)))
                     (clo-app cdr f5057450723 lst)))))))))))
  (proc
   (lam50874 env50875 a5047150714)
   (let ((cdr (env-ref env50875 7)))
     (let ((lst (env-ref env50875 6)))
       (let ((cons (env-ref env50875 5)))
         (let ((op (env-ref env50875 4)))
           (let ((kont50569 (env-ref env50875 3)))
             (let ((filter (env-ref env50875 2)))
               (let ((car (env-ref env50875 1)))
                 (let ((f5057550715
                        (make-closure
                         lam50872
                         car
                         filter
                         kont50569
                         op
                         cons
                         lst
                         cdr)))
                   (clo-app op f5057550715 a5047150714))))))))))
  (proc
   (lam50876 env50877 a5046950710)
   (let ((lst (env-ref env50877 8)))
     (let ((cons (env-ref env50877 7)))
       (let ((list (env-ref env50877 6)))
         (let ((cdr (env-ref env50877 5)))
           (let ((op (env-ref env50877 4)))
             (let ((kont50569 (env-ref env50877 3)))
               (let ((filter (env-ref env50877 2)))
                 (let ((car (env-ref env50877 1)))
                   (if a5046950710
                     (let ((f5057050711 (make-closure lam50862 kont50569)))
                       (clo-app list f5057050711))
                     (let ((f5057650713
                            (make-closure
                             lam50874
                             car
                             filter
                             kont50569
                             op
                             cons
                             lst
                             cdr)))
                       (clo-app car f5057650713 lst))))))))))))
  (proc
   (filter _50878 kont50569 op lst)
   (let ((f5057750709
          (make-closure lam50876 car filter kont50569 op cdr list cons lst)))
     (clo-app null? f5057750709 lst)))
  (proc
   (lam50879 env50880 a5048150732)
   (let ((kont50578 (env-ref env50880 3)))
     (let ((drop (env-ref env50880 2)))
       (let ((a5047950729 (env-ref env50880 1)))
         (clo-app drop kont50578 a5047950729 a5048150732)))))
  (proc
   (lam50882 env50883 a5047950729)
   (let ((kont50578 (env-ref env50883 4)))
     (let ((drop (env-ref env50883 3)))
       (let ((n (env-ref env50883 2)))
         (let ((- (env-ref env50883 1)))
           (let ((a5048050730 '1))
             (let ((f5057950731
                    (make-closure lam50879 a5047950729 drop kont50578)))
               (clo-app - f5057950731 n a5048050730))))))))
  (proc
   (lam50884 env50885 a5047850727)
   (let ((n (env-ref env50885 6)))
     (let ((- (env-ref env50885 5)))
       (let ((cdr (env-ref env50885 4)))
         (let ((kont50578 (env-ref env50885 3)))
           (let ((lst (env-ref env50885 2)))
             (let ((drop (env-ref env50885 1)))
               (if a5047850727
                 (clo-app kont50578 lst)
                 (let ((f5058050728
                        (make-closure lam50882 - n drop kont50578)))
                   (clo-app cdr f5058050728 lst))))))))))
  (proc
   (drop _50887 kont50578 lst n)
   (let ((a5047750725 '0))
     (let ((f5058150726 (make-closure lam50884 drop lst kont50578 cdr - n)))
       (clo-app = f5058150726 n a5047750725))))
  (proc
   (lam50888 env50889 a5048550740)
   (let ((kont50582 (env-ref env50889 3)))
     (let ((proc (env-ref env50889 2)))
       (let ((a5048350736 (env-ref env50889 1)))
         (clo-app proc kont50582 a5048350736 a5048550740)))))
  (proc
   (lam50890 env50891 a5048450738)
   (let ((a5048350736 (env-ref env50891 5)))
     (let ((foldr (env-ref env50891 4)))
       (let ((kont50582 (env-ref env50891 3)))
         (let ((proc (env-ref env50891 2)))
           (let ((acc (env-ref env50891 1)))
             (let ((f5058350739
                    (make-closure lam50888 a5048350736 proc kont50582)))
               (clo-app foldr f5058350739 proc acc a5048450738))))))))
  (proc
   (lam50892 env50893 a5048350736)
   (let ((cdr (env-ref env50893 6)))
     (let ((kont50582 (env-ref env50893 5)))
       (let ((foldr (env-ref env50893 4)))
         (let ((lst (env-ref env50893 3)))
           (let ((proc (env-ref env50893 2)))
             (let ((acc (env-ref env50893 1)))
               (let ((f5058450737
                      (make-closure
                       lam50890
                       acc
                       proc
                       kont50582
                       foldr
                       a5048350736)))
                 (clo-app cdr f5058450737 lst)))))))))
  (proc
   (lam50894 env50895 a5048250734)
   (let ((cdr (env-ref env50895 7)))
     (let ((car (env-ref env50895 6)))
       (let ((kont50582 (env-ref env50895 5)))
         (let ((foldr (env-ref env50895 4)))
           (let ((lst (env-ref env50895 3)))
             (let ((proc (env-ref env50895 2)))
               (let ((acc (env-ref env50895 1)))
                 (if a5048250734
                   (clo-app kont50582 acc)
                   (let ((f5058550735
                          (make-closure
                           lam50892
                           acc
                           proc
                           lst
                           foldr
                           kont50582
                           cdr)))
                     (clo-app car f5058550735 lst)))))))))))
  (proc
   (foldr _50896 kont50582 proc acc lst)
   (let ((f5058650733
          (make-closure lam50894 acc proc lst foldr kont50582 car cdr)))
     (clo-app null? f5058650733 lst)))
  (proc
   (lam50897 env50898 a5048950748)
   (let ((a5048750744 (env-ref env50898 3)))
     (let ((kont50587 (env-ref env50898 2)))
       (let ((cons (env-ref env50898 1)))
         (clo-app cons kont50587 a5048750744 a5048950748)))))
  (proc
   (lam50899 env50900 a5048850746)
   (let ((a5048750744 (env-ref env50900 5)))
     (let ((append (env-ref env50900 4)))
       (let ((kont50587 (env-ref env50900 3)))
         (let ((lst2 (env-ref env50900 2)))
           (let ((cons (env-ref env50900 1)))
             (let ((f5058850747
                    (make-closure lam50897 cons kont50587 a5048750744)))
               (clo-app append f5058850747 a5048850746 lst2))))))))
  (proc
   (lam50901 env50902 a5048750744)
   (let ((cdr (env-ref env50902 6)))
     (let ((append (env-ref env50902 5)))
       (let ((kont50587 (env-ref env50902 4)))
         (let ((lst2 (env-ref env50902 3)))
           (let ((lst1 (env-ref env50902 2)))
             (let ((cons (env-ref env50902 1)))
               (let ((f5058950745
                      (make-closure
                       lam50899
                       cons
                       lst2
                       kont50587
                       append
                       a5048750744)))
                 (clo-app cdr f5058950745 lst1)))))))))
  (proc
   (lam50903 env50904 a5048650742)
   (let ((cdr (env-ref env50904 7)))
     (let ((append (env-ref env50904 6)))
       (let ((kont50587 (env-ref env50904 5)))
         (let ((lst2 (env-ref env50904 4)))
           (let ((cons (env-ref env50904 3)))
             (let ((lst1 (env-ref env50904 2)))
               (let ((car (env-ref env50904 1)))
                 (if a5048650742
                   (clo-app kont50587 lst2)
                   (let ((f5059050743
                          (make-closure
                           lam50901
                           cons
                           lst1
                           lst2
                           kont50587
                           append
                           cdr)))
                     (clo-app car f5059050743 lst1)))))))))))
  (proc
   (append _50905 kont50587 lst1 lst2)
   (let ((f5059150741
          (make-closure lam50903 car lst1 cons lst2 kont50587 append cdr)))
     (clo-app null? f5059150741 lst1)))
  (proc
   (hash _50906 . lst)
   (let ((kont5059250749 (prim car lst)))
     (let ((lst50750 (prim cdr lst)))
       (let ((x5049050751 (apply-prim hash lst50750)))
         (clo-app kont5059250749 x5049050751)))))
  (proc
   (hash-ref _50907 kont50594 h k)
   (let ((x5049150752 (prim hash-ref h k))) (clo-app kont50594 x5049150752)))
  (proc
   (hash-set _50908 kont50595 h k v)
   (let ((x5049250753 (prim hash-set h k v))) (clo-app kont50595 x5049250753)))
  (proc
   (hash-has-key? _50909 kont50596 h k)
   (let ((x5049350754 (prim hash-has-key? h k)))
     (clo-app kont50596 x5049350754)))
  (proc
   (hash-count _50910 kont50597 h)
   (let ((x5049450755 (prim hash-count h))) (clo-app kont50597 x5049450755)))
  (proc
   (call-foldl _50912 kont50598 lst)
   (let ((a5049550756 '0)) (clo-app foldl kont50598 + a5049550756 lst)))
  (proc
   (lam50913 env50914 a5050050762)
   (let ((kont50599 (env-ref env50914 2)))
     (let ((call-foldl (env-ref env50914 1)))
       (clo-app call-foldl kont50599 a5050050762))))
  (proc
   (brouhaha_main _50919 kont50599)
   (let ((a5049650757 '1))
     (let ((a5049750758 '2))
       (let ((a5049850759 '3))
         (let ((a5049950760 '4))
           (let ((f5060050761 (make-closure lam50913 call-foldl kont50599)))
             (clo-app
              list
              f5060050761
              a5049650757
              a5049750758
              a5049850759
              a5049950760))))))))
