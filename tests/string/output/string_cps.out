'((define (+ . lst)
    (let ((kont111139111239 (prim car lst)))
      (let ((lst111240 (prim cdr lst)))
        (let ((x111054111241 (apply-prim + lst111240)))
          (kont111139111239 x111054111241)))))
  (define (- . lst)
    (let ((kont111141111242 (prim car lst)))
      (let ((lst111243 (prim cdr lst)))
        (let ((x111055111244 (apply-prim - lst111243)))
          (kont111141111242 x111055111244)))))
  (define (* . lst)
    (let ((kont111143111245 (prim car lst)))
      (let ((lst111246 (prim cdr lst)))
        (let ((x111056111247 (apply-prim * lst111246)))
          (kont111143111245 x111056111247)))))
  (define (modulo kont111145 a b)
    (let ((x111057111248 (prim modulo a b))) (kont111145 x111057111248)))
  (define (/ . lst)
    (let ((kont111146111249 (prim car lst)))
      (let ((lst111250 (prim cdr lst)))
        (let ((x111058111251 (apply-prim / lst111250)))
          (kont111146111249 x111058111251)))))
  (define (= . lst)
    (let ((kont111148111252 (prim car lst)))
      (let ((lst111253 (prim cdr lst)))
        (let ((x111059111254 (apply-prim = lst111253)))
          (kont111148111252 x111059111254)))))
  (define (> . lst)
    (let ((kont111150111255 (prim car lst)))
      (let ((lst111256 (prim cdr lst)))
        (let ((x111060111257 (apply-prim > lst111256)))
          (kont111150111255 x111060111257)))))
  (define (< . lst)
    (let ((kont111152111258 (prim car lst)))
      (let ((lst111259 (prim cdr lst)))
        (let ((x111061111260 (apply-prim < lst111259)))
          (kont111152111258 x111061111260)))))
  (define (<= . lst)
    (let ((kont111154111261 (prim car lst)))
      (let ((lst111262 (prim cdr lst)))
        (let ((x111062111263 (apply-prim <= lst111262)))
          (kont111154111261 x111062111263)))))
  (define (>= . lst)
    (let ((kont111156111264 (prim car lst)))
      (let ((lst111265 (prim cdr lst)))
        (let ((x111063111266 (apply-prim >= lst111265)))
          (kont111156111264 x111063111266)))))
  (define (null? kont111158 x)
    (let ((x111064111267 (prim null? x))) (kont111158 x111064111267)))
  (define (equal? kont111159 x y)
    (let ((x111065111268 (prim equal? x y))) (kont111159 x111065111268)))
  (define (eq? kont111160 x y)
    (let ((x111066111269 (prim eq? x y))) (kont111160 x111066111269)))
  (define (cons kont111161 a b)
    (let ((x111067111270 (prim cons a b))) (kont111161 x111067111270)))
  (define (car kont111162 lst)
    (let ((x111068111271 (prim car lst))) (kont111162 x111068111271)))
  (define (cdr kont111163 lst)
    (let ((x111069111272 (prim cdr lst))) (kont111163 x111069111272)))
  (define (even? kont111164 x)
    (let ((a111070111273 '0))
      (let ((a111071111274 '2))
        (let ((f111165111275
               (lambda (a111072111276)
                 (equal? kont111164 a111070111273 a111072111276))))
          (modulo f111165111275 x a111071111274)))))
  (define (odd? kont111166 x)
    (let ((a111073111277 '1))
      (let ((a111074111278 '2))
        (let ((f111167111279
               (lambda (a111075111280)
                 (equal? kont111166 a111073111277 a111075111280))))
          (modulo f111167111279 x a111074111278)))))
  (define (list . x)
    (let ((kont111168111281 (prim car x)))
      (let ((x111282 (prim cdr x))) (kont111168111281 x111282))))
  (define (member? kont111170 x lst)
    (let ((f111174111283
           (lambda (a111076111284)
             (if a111076111284
               (let ((x111077111285 '#f)) (kont111170 x111077111285))
               (let ((f111173111286
                      (lambda (a111078111287)
                        (let ((f111172111288
                               (lambda (a111079111289)
                                 (if a111079111289
                                   (let ((x111080111290 '#t))
                                     (kont111170 x111080111290))
                                   (let ((f111171111291
                                          (lambda (a111081111292)
                                            (member?
                                             kont111170
                                             x
                                             a111081111292))))
                                     (cdr f111171111291 lst))))))
                          (equal? f111172111288 a111078111287 x)))))
                 (car f111173111286 lst))))))
      (null? f111174111283 lst)))
  (define (foldl kont111175 fun acc lst)
    (let ((f111179111293
           (lambda (a111082111294)
             (if a111082111294
               (kont111175 acc)
               (let ((f111178111295
                      (lambda (a111083111296)
                        (let ((f111177111297
                               (lambda (a111084111298)
                                 (let ((f111176111299
                                        (lambda (a111085111300)
                                          (foldl
                                           kont111175
                                           fun
                                           a111084111298
                                           a111085111300))))
                                   (cdr f111176111299 lst)))))
                          (fun f111177111297 a111083111296 acc)))))
                 (car f111178111295 lst))))))
      (null? f111179111293 lst)))
  (define (reverse-helper kont111180 lst lst2)
    (let ((f111184111301
           (lambda (a111086111302)
             (if a111086111302
               (kont111180 lst2)
               (let ((f111183111303
                      (lambda (a111087111304)
                        (let ((f111182111305
                               (lambda (a111088111306)
                                 (let ((f111181111307
                                        (lambda (a111089111308)
                                          (reverse-helper
                                           kont111180
                                           a111087111304
                                           a111089111308))))
                                   (cons f111181111307 a111088111306 lst2)))))
                          (car f111182111305 lst)))))
                 (cdr f111183111303 lst))))))
      (null? f111184111301 lst)))
  (define (reverse kont111185 lst)
    (let ((f111186111309
           (lambda (a111090111310)
             (reverse-helper kont111185 lst a111090111310))))
      (list f111186111309)))
  (define (take-helper kont111187 lst n lst2)
    (let ((a111091111311 '0))
      (let ((f111193111312
             (lambda (a111092111313)
               (if a111092111313
                 (let ((f111188111314
                        (lambda (x111093111315) (kont111187 x111093111315))))
                   (reverse f111188111314 lst2))
                 (let ((f111192111316
                        (lambda (a111094111317)
                          (let ((a111095111318 '1))
                            (let ((f111191111319
                                   (lambda (a111096111320)
                                     (let ((f111190111321
                                            (lambda (a111097111322)
                                              (let ((f111189111323
                                                     (lambda (a111098111324)
                                                       (take-helper
                                                        kont111187
                                                        a111094111317
                                                        a111096111320
                                                        a111098111324))))
                                                (cons
                                                 f111189111323
                                                 a111097111322
                                                 lst2)))))
                                       (car f111190111321 lst)))))
                              (- f111191111319 n a111095111318))))))
                   (cdr f111192111316 lst))))))
        (= f111193111312 n a111091111311))))
  (define (take kont111194 lst n)
    (let ((f111195111325
           (lambda (a111099111326)
             (take-helper kont111194 lst n a111099111326))))
      (list f111195111325)))
  (define (length kont111196 lst)
    (let ((f111199111327
           (lambda (a111100111328)
             (if a111100111328
               (let ((x111101111329 '0)) (kont111196 x111101111329))
               (let ((a111102111330 '1))
                 (let ((f111198111331
                        (lambda (a111103111332)
                          (let ((f111197111333
                                 (lambda (a111104111334)
                                   (+
                                    kont111196
                                    a111102111330
                                    a111104111334))))
                            (length f111197111333 a111103111332)))))
                   (cdr f111198111331 lst)))))))
      (null? f111199111327 lst)))
  (define (map kont111200 proc lst)
    (let ((f111206111335
           (lambda (a111105111336)
             (if a111105111336
               (let ((f111201111337
                      (lambda (x111106111338) (kont111200 x111106111338))))
                 (list f111201111337))
               (let ((f111205111339
                      (lambda (a111107111340)
                        (let ((f111204111341
                               (lambda (a111108111342)
                                 (let ((f111203111343
                                        (lambda (a111109111344)
                                          (let ((f111202111345
                                                 (lambda (a111110111346)
                                                   (cons
                                                    kont111200
                                                    a111108111342
                                                    a111110111346))))
                                            (map
                                             f111202111345
                                             proc
                                             a111109111344)))))
                                   (cdr f111203111343 lst)))))
                          (proc f111204111341 a111107111340)))))
                 (car f111205111339 lst))))))
      (null? f111206111335 lst)))
  (define (filter kont111207 op lst)
    (let ((f111215111347
           (lambda (a111111111348)
             (if a111111111348
               (let ((f111208111349
                      (lambda (x111112111350) (kont111207 x111112111350))))
                 (list f111208111349))
               (let ((f111214111351
                      (lambda (a111113111352)
                        (let ((f111213111353
                               (lambda (a111114111354)
                                 (if a111114111354
                                   (let ((f111211111355
                                          (lambda (a111115111356)
                                            (let ((f111210111357
                                                   (lambda (a111116111358)
                                                     (let ((f111209111359
                                                            (lambda (a111117111360)
                                                              (cons
                                                               kont111207
                                                               a111115111356
                                                               a111117111360))))
                                                       (filter
                                                        f111209111359
                                                        op
                                                        a111116111358)))))
                                              (cdr f111210111357 lst)))))
                                     (car f111211111355 lst))
                                   (let ((f111212111361
                                          (lambda (a111118111362)
                                            (filter
                                             kont111207
                                             op
                                             a111118111362))))
                                     (cdr f111212111361 lst))))))
                          (op f111213111353 a111113111352)))))
                 (car f111214111351 lst))))))
      (null? f111215111347 lst)))
  (define (drop kont111216 lst n)
    (let ((a111119111363 '0))
      (let ((f111219111364
             (lambda (a111120111365)
               (if a111120111365
                 (kont111216 lst)
                 (let ((f111218111366
                        (lambda (a111121111367)
                          (let ((a111122111368 '1))
                            (let ((f111217111369
                                   (lambda (a111123111370)
                                     (drop
                                      kont111216
                                      a111121111367
                                      a111123111370))))
                              (- f111217111369 n a111122111368))))))
                   (cdr f111218111366 lst))))))
        (= f111219111364 n a111119111363))))
  (define (foldr kont111220 proc acc lst)
    (let ((f111224111371
           (lambda (a111124111372)
             (if a111124111372
               (kont111220 acc)
               (let ((f111223111373
                      (lambda (a111125111374)
                        (let ((f111222111375
                               (lambda (a111126111376)
                                 (let ((f111221111377
                                        (lambda (a111127111378)
                                          (proc
                                           kont111220
                                           a111125111374
                                           a111127111378))))
                                   (foldr
                                    f111221111377
                                    proc
                                    acc
                                    a111126111376)))))
                          (cdr f111222111375 lst)))))
                 (car f111223111373 lst))))))
      (null? f111224111371 lst)))
  (define (append kont111225 lst1 lst2)
    (let ((f111229111379
           (lambda (a111128111380)
             (if a111128111380
               (kont111225 lst2)
               (let ((f111228111381
                      (lambda (a111129111382)
                        (let ((f111227111383
                               (lambda (a111130111384)
                                 (let ((f111226111385
                                        (lambda (a111131111386)
                                          (cons
                                           kont111225
                                           a111129111382
                                           a111131111386))))
                                   (append
                                    f111226111385
                                    a111130111384
                                    lst2)))))
                          (cdr f111227111383 lst1)))))
                 (car f111228111381 lst1))))))
      (null? f111229111379 lst1)))
  (define (hash . lst)
    (let ((kont111230111387 (prim car lst)))
      (let ((lst111388 (prim cdr lst)))
        (let ((x111132111389 (apply-prim hash lst111388)))
          (kont111230111387 x111132111389)))))
  (define (hash-ref kont111232 h k)
    (let ((x111133111390 (prim hash-ref h k))) (kont111232 x111133111390)))
  (define (hash-set kont111233 h k v)
    (let ((x111134111391 (prim hash-set h k v))) (kont111233 x111134111391)))
  (define (hash-has-key? kont111234 h k)
    (let ((x111135111392 (prim hash-has-key? h k)))
      (kont111234 x111135111392)))
  (define (hash-count kont111235 h)
    (let ((x111136111393 (prim hash-count h))) (kont111235 x111136111393)))
  (define (call kont111236)
    (let ((x111137111394 "random")) (kont111236 x111137111394)))
  (define (brouhaha_main kont111237)
    (let ((f111238111395 (lambda (x111138111396) (kont111237 x111138111396))))
      (call f111238111395))))
