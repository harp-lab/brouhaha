'((proc
   (+ _59016 . lst)
   (let ((kont5875158852 (prim car lst)))
     (let ((lst58853 (prim cdr lst)))
       (let ((x5866158854 (apply-prim + lst58853)))
         (clo-app kont5875158852 x5866158854)))))
  (proc
   (- _59017 . lst)
   (let ((kont5875358855 (prim car lst)))
     (let ((lst58856 (prim cdr lst)))
       (let ((x5866258857 (apply-prim - lst58856)))
         (clo-app kont5875358855 x5866258857)))))
  (proc
   (* _59018 . lst)
   (let ((kont5875558858 (prim car lst)))
     (let ((lst58859 (prim cdr lst)))
       (let ((x5866358860 (apply-prim * lst58859)))
         (clo-app kont5875558858 x5866358860)))))
  (proc
   (modulo _59019 kont58757 a b)
   (let ((x5866458861 (prim modulo a b))) (clo-app kont58757 x5866458861)))
  (proc
   (/ _59020 . lst)
   (let ((kont5875858862 (prim car lst)))
     (let ((lst58863 (prim cdr lst)))
       (let ((x5866558864 (apply-prim / lst58863)))
         (clo-app kont5875858862 x5866558864)))))
  (proc
   (= _59021 . lst)
   (let ((kont5876058865 (prim car lst)))
     (let ((lst58866 (prim cdr lst)))
       (let ((x5866658867 (apply-prim = lst58866)))
         (clo-app kont5876058865 x5866658867)))))
  (proc
   (> _59022 . lst)
   (let ((kont5876258868 (prim car lst)))
     (let ((lst58869 (prim cdr lst)))
       (let ((x5866758870 (apply-prim > lst58869)))
         (clo-app kont5876258868 x5866758870)))))
  (proc
   (< _59023 . lst)
   (let ((kont5876458871 (prim car lst)))
     (let ((lst58872 (prim cdr lst)))
       (let ((x5866858873 (apply-prim < lst58872)))
         (clo-app kont5876458871 x5866858873)))))
  (proc
   (<= _59024 . lst)
   (let ((kont5876658874 (prim car lst)))
     (let ((lst58875 (prim cdr lst)))
       (let ((x5866958876 (apply-prim <= lst58875)))
         (clo-app kont5876658874 x5866958876)))))
  (proc
   (>= _59025 . lst)
   (let ((kont5876858877 (prim car lst)))
     (let ((lst58878 (prim cdr lst)))
       (let ((x5867058879 (apply-prim >= lst58878)))
         (clo-app kont5876858877 x5867058879)))))
  (proc
   (null? _59026 kont58770 x)
   (let ((x5867158880 (prim null? x))) (clo-app kont58770 x5867158880)))
  (proc
   (equal? _59027 kont58771 x y)
   (let ((x5867258881 (prim equal? x y))) (clo-app kont58771 x5867258881)))
  (proc
   (eq? _59028 kont58772 x y)
   (let ((x5867358882 (prim eq? x y))) (clo-app kont58772 x5867358882)))
  (proc
   (cons _59029 kont58773 a b)
   (let ((x5867458883 (prim cons a b))) (clo-app kont58773 x5867458883)))
  (proc
   (car _59030 kont58774 lst)
   (let ((x5867558884 (prim car lst))) (clo-app kont58774 x5867558884)))
  (proc
   (cdr _59031 kont58775 lst)
   (let ((x5867658885 (prim cdr lst))) (clo-app kont58775 x5867658885)))
  (proc
   (lam59032 env59033 a5867958889)
   (let ((kont58776 (env-ref env59033 3)))
     (let ((equal? (env-ref env59033 2)))
       (let ((a5867758886 (env-ref env59033 1)))
         (clo-app equal? kont58776 a5867758886 a5867958889)))))
  (proc
   (even? _59036 kont58776 x)
   (let ((a5867758886 '0))
     (let ((a5867858887 '2))
       (let ((f5877758888
              (make-closure lam59032 a5867758886 equal? kont58776)))
         (clo-app modulo f5877758888 x a5867858887)))))
  (proc
   (lam59037 env59038 a5868258893)
   (let ((equal? (env-ref env59038 3)))
     (let ((a5868058890 (env-ref env59038 2)))
       (let ((kont58778 (env-ref env59038 1)))
         (clo-app equal? kont58778 a5868058890 a5868258893)))))
  (proc
   (odd? _59041 kont58778 x)
   (let ((a5868058890 '1))
     (let ((a5868158891 '2))
       (let ((f5877958892
              (make-closure lam59037 kont58778 a5868058890 equal?)))
         (clo-app modulo f5877958892 x a5868158891)))))
  (proc
   (list _59042 . x)
   (let ((kont5878058894 (prim car x)))
     (let ((x58895 (prim cdr x))) (clo-app kont5878058894 x58895))))
  (proc
   (lam59045 env59046 a5868858905)
   (let ((kont58782 (env-ref env59046 3)))
     (let ((x (env-ref env59046 2)))
       (let ((member? (env-ref env59046 1)))
         (clo-app member? kont58782 x a5868858905)))))
  (proc
   (lam59047 env59048 a5868658902)
   (let ((cdr (env-ref env59048 5)))
     (let ((lst (env-ref env59048 4)))
       (let ((kont58782 (env-ref env59048 3)))
         (let ((x (env-ref env59048 2)))
           (let ((member? (env-ref env59048 1)))
             (if a5868658902
               (let ((x5868758903 '#t)) (clo-app kont58782 x5868758903))
               (let ((f5878358904 (make-closure lam59045 member? x kont58782)))
                 (clo-app cdr f5878358904 lst)))))))))
  (proc
   (lam59049 env59050 a5868558900)
   (let ((cdr (env-ref env59050 6)))
     (let ((lst (env-ref env59050 5)))
       (let ((kont58782 (env-ref env59050 4)))
         (let ((equal? (env-ref env59050 3)))
           (let ((x (env-ref env59050 2)))
             (let ((member? (env-ref env59050 1)))
               (let ((f5878458901
                      (make-closure lam59047 member? x kont58782 lst cdr)))
                 (clo-app equal? f5878458901 a5868558900 x)))))))))
  (proc
   (lam59051 env59052 a5868358897)
   (let ((cdr (env-ref env59052 7)))
     (let ((lst (env-ref env59052 6)))
       (let ((kont58782 (env-ref env59052 5)))
         (let ((equal? (env-ref env59052 4)))
           (let ((x (env-ref env59052 3)))
             (let ((car (env-ref env59052 2)))
               (let ((member? (env-ref env59052 1)))
                 (if a5868358897
                   (let ((x5868458898 '#f)) (clo-app kont58782 x5868458898))
                   (let ((f5878558899
                          (make-closure
                           lam59049
                           member?
                           x
                           equal?
                           kont58782
                           lst
                           cdr)))
                     (clo-app car f5878558899 lst)))))))))))
  (proc
   (member? _59053 kont58782 x lst)
   (let ((f5878658896
          (make-closure lam59051 member? car x equal? kont58782 lst cdr)))
     (clo-app null? f5878658896 lst)))
  (proc
   (lam59054 env59055 a5869258913)
   (let ((a5869158911 (env-ref env59055 4)))
     (let ((fun (env-ref env59055 3)))
       (let ((kont58787 (env-ref env59055 2)))
         (let ((foldl (env-ref env59055 1)))
           (clo-app foldl kont58787 fun a5869158911 a5869258913))))))
  (proc
   (lam59056 env59057 a5869158911)
   (let ((cdr (env-ref env59057 5)))
     (let ((lst (env-ref env59057 4)))
       (let ((fun (env-ref env59057 3)))
         (let ((kont58787 (env-ref env59057 2)))
           (let ((foldl (env-ref env59057 1)))
             (let ((f5878858912
                    (make-closure lam59054 foldl kont58787 fun a5869158911)))
               (clo-app cdr f5878858912 lst))))))))
  (proc
   (lam59058 env59059 a5869058909)
   (let ((cdr (env-ref env59059 6)))
     (let ((lst (env-ref env59059 5)))
       (let ((fun (env-ref env59059 4)))
         (let ((foldl (env-ref env59059 3)))
           (let ((acc (env-ref env59059 2)))
             (let ((kont58787 (env-ref env59059 1)))
               (let ((f5878958910
                      (make-closure lam59056 foldl kont58787 fun lst cdr)))
                 (clo-app fun f5878958910 a5869058909 acc)))))))))
  (proc
   (lam59060 env59061 a5868958907)
   (let ((cdr (env-ref env59061 7)))
     (let ((lst (env-ref env59061 6)))
       (let ((fun (env-ref env59061 5)))
         (let ((car (env-ref env59061 4)))
           (let ((foldl (env-ref env59061 3)))
             (let ((acc (env-ref env59061 2)))
               (let ((kont58787 (env-ref env59061 1)))
                 (if a5868958907
                   (clo-app kont58787 acc)
                   (let ((f5879058908
                          (make-closure
                           lam59058
                           kont58787
                           acc
                           foldl
                           fun
                           lst
                           cdr)))
                     (clo-app car f5879058908 lst)))))))))))
  (proc
   (foldl _59062 kont58787 fun acc lst)
   (let ((f5879158906
          (make-closure lam59060 kont58787 acc foldl car fun lst cdr)))
     (clo-app null? f5879158906 lst)))
  (proc
   (lam59063 env59064 a5869658921)
   (let ((kont58792 (env-ref env59064 3)))
     (let ((reverse-helper (env-ref env59064 2)))
       (let ((a5869458917 (env-ref env59064 1)))
         (clo-app reverse-helper kont58792 a5869458917 a5869658921)))))
  (proc
   (lam59065 env59066 a5869558919)
   (let ((kont58792 (env-ref env59066 5)))
     (let ((reverse-helper (env-ref env59066 4)))
       (let ((lst2 (env-ref env59066 3)))
         (let ((a5869458917 (env-ref env59066 2)))
           (let ((cons (env-ref env59066 1)))
             (let ((f5879358920
                    (make-closure
                     lam59063
                     a5869458917
                     reverse-helper
                     kont58792)))
               (clo-app cons f5879358920 a5869558919 lst2))))))))
  (proc
   (lam59067 env59068 a5869458917)
   (let ((kont58792 (env-ref env59068 6)))
     (let ((lst (env-ref env59068 5)))
       (let ((reverse-helper (env-ref env59068 4)))
         (let ((lst2 (env-ref env59068 3)))
           (let ((car (env-ref env59068 2)))
             (let ((cons (env-ref env59068 1)))
               (let ((f5879458918
                      (make-closure
                       lam59065
                       cons
                       a5869458917
                       lst2
                       reverse-helper
                       kont58792)))
                 (clo-app car f5879458918 lst)))))))))
  (proc
   (lam59069 env59070 a5869358915)
   (let ((lst (env-ref env59070 7)))
     (let ((reverse-helper (env-ref env59070 6)))
       (let ((lst2 (env-ref env59070 5)))
         (let ((car (env-ref env59070 4)))
           (let ((cons (env-ref env59070 3)))
             (let ((kont58792 (env-ref env59070 2)))
               (let ((cdr (env-ref env59070 1)))
                 (if a5869358915
                   (clo-app kont58792 lst2)
                   (let ((f5879558916
                          (make-closure
                           lam59067
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont58792)))
                     (clo-app cdr f5879558916 lst)))))))))))
  (proc
   (reverse-helper _59071 kont58792 lst lst2)
   (let ((f5879658914
          (make-closure
           lam59069
           cdr
           kont58792
           cons
           car
           lst2
           reverse-helper
           lst)))
     (clo-app null? f5879658914 lst)))
  (proc
   (lam59072 env59073 a5869758923)
   (let ((lst (env-ref env59073 3)))
     (let ((kont58797 (env-ref env59073 2)))
       (let ((reverse-helper (env-ref env59073 1)))
         (clo-app reverse-helper kont58797 lst a5869758923)))))
  (proc
   (reverse _59074 kont58797 lst)
   (let ((f5879858922 (make-closure lam59072 reverse-helper kont58797 lst)))
     (clo-app list f5879858922)))
  (proc
   (lam59075 env59076 x5870058928)
   (let ((kont58799 (env-ref env59076 1))) (clo-app kont58799 x5870058928)))
  (proc
   (lam59077 env59078 a5870558937)
   (let ((kont58799 (env-ref env59078 4)))
     (let ((a5870158930 (env-ref env59078 3)))
       (let ((take-helper (env-ref env59078 2)))
         (let ((a5870358933 (env-ref env59078 1)))
           (clo-app
            take-helper
            kont58799
            a5870158930
            a5870358933
            a5870558937))))))
  (proc
   (lam59079 env59080 a5870458935)
   (let ((kont58799 (env-ref env59080 6)))
     (let ((a5870158930 (env-ref env59080 5)))
       (let ((a5870358933 (env-ref env59080 4)))
         (let ((cons (env-ref env59080 3)))
           (let ((take-helper (env-ref env59080 2)))
             (let ((lst2 (env-ref env59080 1)))
               (let ((f5880158936
                      (make-closure
                       lam59077
                       a5870358933
                       take-helper
                       a5870158930
                       kont58799)))
                 (clo-app cons f5880158936 a5870458935 lst2)))))))))
  (proc
   (lam59081 env59082 a5870358933)
   (let ((lst (env-ref env59082 7)))
     (let ((kont58799 (env-ref env59082 6)))
       (let ((a5870158930 (env-ref env59082 5)))
         (let ((car (env-ref env59082 4)))
           (let ((cons (env-ref env59082 3)))
             (let ((take-helper (env-ref env59082 2)))
               (let ((lst2 (env-ref env59082 1)))
                 (let ((f5880258934
                        (make-closure
                         lam59079
                         lst2
                         take-helper
                         cons
                         a5870358933
                         a5870158930
                         kont58799)))
                   (clo-app car f5880258934 lst))))))))))
  (proc
   (lam59084 env59085 a5870158930)
   (let ((lst (env-ref env59085 8)))
     (let ((kont58799 (env-ref env59085 7)))
       (let ((cons (env-ref env59085 6)))
         (let ((- (env-ref env59085 5)))
           (let ((take-helper (env-ref env59085 4)))
             (let ((lst2 (env-ref env59085 3)))
               (let ((n (env-ref env59085 2)))
                 (let ((car (env-ref env59085 1)))
                   (let ((a5870258931 '1))
                     (let ((f5880358932
                            (make-closure
                             lam59081
                             lst2
                             take-helper
                             cons
                             car
                             a5870158930
                             kont58799
                             lst)))
                       (clo-app - f5880358932 n a5870258931))))))))))))
  (proc
   (lam59086 env59087 a5869958926)
   (let ((cdr (env-ref env59087 10)))
     (let ((lst (env-ref env59087 9)))
       (let ((cons (env-ref env59087 8)))
         (let ((- (env-ref env59087 7)))
           (let ((kont58799 (env-ref env59087 6)))
             (let ((reverse (env-ref env59087 5)))
               (let ((take-helper (env-ref env59087 4)))
                 (let ((lst2 (env-ref env59087 3)))
                   (let ((n (env-ref env59087 2)))
                     (let ((car (env-ref env59087 1)))
                       (if a5869958926
                         (let ((f5880058927 (make-closure lam59075 kont58799)))
                           (clo-app reverse f5880058927 lst2))
                         (let ((f5880458929
                                (make-closure
                                 lam59084
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont58799
                                 lst)))
                           (clo-app cdr f5880458929 lst))))))))))))))
  (proc
   (take-helper _59089 kont58799 lst n lst2)
   (let ((a5869858924 '0))
     (let ((f5880558925
            (make-closure
             lam59086
             car
             n
             lst2
             take-helper
             reverse
             kont58799
             -
             cons
             lst
             cdr)))
       (clo-app = f5880558925 n a5869858924))))
  (proc
   (lam59090 env59091 a5870658939)
   (let ((lst (env-ref env59091 4)))
     (let ((take-helper (env-ref env59091 3)))
       (let ((n (env-ref env59091 2)))
         (let ((kont58806 (env-ref env59091 1)))
           (clo-app take-helper kont58806 lst n a5870658939))))))
  (proc
   (take _59092 kont58806 lst n)
   (let ((f5880758938 (make-closure lam59090 kont58806 n take-helper lst)))
     (clo-app list f5880758938)))
  (proc
   (lam59094 env59095 a5871158947)
   (let ((kont58808 (env-ref env59095 3)))
     (let ((a5870958943 (env-ref env59095 2)))
       (let ((+ (env-ref env59095 1)))
         (clo-app + kont58808 a5870958943 a5871158947)))))
  (proc
   (lam59096 env59097 a5871058945)
   (let ((kont58808 (env-ref env59097 4)))
     (let ((length (env-ref env59097 3)))
       (let ((a5870958943 (env-ref env59097 2)))
         (let ((+ (env-ref env59097 1)))
           (let ((f5880958946 (make-closure lam59094 + a5870958943 kont58808)))
             (clo-app length f5880958946 a5871058945)))))))
  (proc
   (lam59099 env59100 a5870758941)
   (let ((lst (env-ref env59100 5)))
     (let ((length (env-ref env59100 4)))
       (let ((+ (env-ref env59100 3)))
         (let ((kont58808 (env-ref env59100 2)))
           (let ((cdr (env-ref env59100 1)))
             (if a5870758941
               (let ((x5870858942 '0)) (clo-app kont58808 x5870858942))
               (let ((a5870958943 '1))
                 (let ((f5881058944
                        (make-closure
                         lam59096
                         +
                         a5870958943
                         length
                         kont58808)))
                   (clo-app cdr f5881058944 lst))))))))))
  (proc
   (length _59101 kont58808 lst)
   (let ((f5881158940 (make-closure lam59099 cdr kont58808 + length lst)))
     (clo-app null? f5881158940 lst)))
  (proc
   (lam59102 env59103 x5871358951)
   (let ((kont58812 (env-ref env59103 1))) (clo-app kont58812 x5871358951)))
  (proc
   (lam59104 env59105 a5871758959)
   (let ((a5871558955 (env-ref env59105 3)))
     (let ((kont58812 (env-ref env59105 2)))
       (let ((cons (env-ref env59105 1)))
         (clo-app cons kont58812 a5871558955 a5871758959)))))
  (proc
   (lam59106 env59107 a5871658957)
   (let ((a5871558955 (env-ref env59107 5)))
     (let ((kont58812 (env-ref env59107 4)))
       (let ((map (env-ref env59107 3)))
         (let ((proc (env-ref env59107 2)))
           (let ((cons (env-ref env59107 1)))
             (let ((f5881458958
                    (make-closure lam59104 cons kont58812 a5871558955)))
               (clo-app map f5881458958 proc a5871658957))))))))
  (proc
   (lam59108 env59109 a5871558955)
   (let ((cdr (env-ref env59109 6)))
     (let ((map (env-ref env59109 5)))
       (let ((proc (env-ref env59109 4)))
         (let ((cons (env-ref env59109 3)))
           (let ((lst (env-ref env59109 2)))
             (let ((kont58812 (env-ref env59109 1)))
               (let ((f5881558956
                      (make-closure
                       lam59106
                       cons
                       proc
                       map
                       kont58812
                       a5871558955)))
                 (clo-app cdr f5881558956 lst)))))))))
  (proc
   (lam59110 env59111 a5871458953)
   (let ((cdr (env-ref env59111 6)))
     (let ((map (env-ref env59111 5)))
       (let ((proc (env-ref env59111 4)))
         (let ((cons (env-ref env59111 3)))
           (let ((lst (env-ref env59111 2)))
             (let ((kont58812 (env-ref env59111 1)))
               (let ((f5881658954
                      (make-closure lam59108 kont58812 lst cons proc map cdr)))
                 (clo-app proc f5881658954 a5871458953)))))))))
  (proc
   (lam59112 env59113 a5871258949)
   (let ((map (env-ref env59113 8)))
     (let ((proc (env-ref env59113 7)))
       (let ((car (env-ref env59113 6)))
         (let ((cons (env-ref env59113 5)))
           (let ((list (env-ref env59113 4)))
             (let ((cdr (env-ref env59113 3)))
               (let ((lst (env-ref env59113 2)))
                 (let ((kont58812 (env-ref env59113 1)))
                   (if a5871258949
                     (let ((f5881358950 (make-closure lam59102 kont58812)))
                       (clo-app list f5881358950))
                     (let ((f5881758952
                            (make-closure
                             lam59110
                             kont58812
                             lst
                             cons
                             proc
                             map
                             cdr)))
                       (clo-app car f5881758952 lst))))))))))))
  (proc
   (map _59114 kont58812 proc lst)
   (let ((f5881858948
          (make-closure lam59112 kont58812 lst cdr list cons car proc map)))
     (clo-app null? f5881858948 lst)))
  (proc
   (lam59115 env59116 x5871958963)
   (let ((kont58819 (env-ref env59116 1))) (clo-app kont58819 x5871958963)))
  (proc
   (lam59117 env59118 a5872458973)
   (let ((a5872258969 (env-ref env59118 3)))
     (let ((kont58819 (env-ref env59118 2)))
       (let ((cons (env-ref env59118 1)))
         (clo-app cons kont58819 a5872258969 a5872458973)))))
  (proc
   (lam59119 env59120 a5872358971)
   (let ((a5872258969 (env-ref env59120 5)))
     (let ((op (env-ref env59120 4)))
       (let ((kont58819 (env-ref env59120 3)))
         (let ((filter (env-ref env59120 2)))
           (let ((cons (env-ref env59120 1)))
             (let ((f5882158972
                    (make-closure lam59117 cons kont58819 a5872258969)))
               (clo-app filter f5882158972 op a5872358971))))))))
  (proc
   (lam59121 env59122 a5872258969)
   (let ((cdr (env-ref env59122 6)))
     (let ((lst (env-ref env59122 5)))
       (let ((op (env-ref env59122 4)))
         (let ((kont58819 (env-ref env59122 3)))
           (let ((filter (env-ref env59122 2)))
             (let ((cons (env-ref env59122 1)))
               (let ((f5882258970
                      (make-closure
                       lam59119
                       cons
                       filter
                       kont58819
                       op
                       a5872258969)))
                 (clo-app cdr f5882258970 lst)))))))))
  (proc
   (lam59123 env59124 a5872558975)
   (let ((op (env-ref env59124 3)))
     (let ((kont58819 (env-ref env59124 2)))
       (let ((filter (env-ref env59124 1)))
         (clo-app filter kont58819 op a5872558975)))))
  (proc
   (lam59125 env59126 a5872158967)
   (let ((cdr (env-ref env59126 7)))
     (let ((lst (env-ref env59126 6)))
       (let ((op (env-ref env59126 5)))
         (let ((kont58819 (env-ref env59126 4)))
           (let ((cons (env-ref env59126 3)))
             (let ((filter (env-ref env59126 2)))
               (let ((car (env-ref env59126 1)))
                 (if a5872158967
                   (let ((f5882358968
                          (make-closure
                           lam59121
                           cons
                           filter
                           kont58819
                           op
                           lst
                           cdr)))
                     (clo-app car f5882358968 lst))
                   (let ((f5882458974
                          (make-closure lam59123 filter kont58819 op)))
                     (clo-app cdr f5882458974 lst)))))))))))
  (proc
   (lam59127 env59128 a5872058965)
   (let ((cdr (env-ref env59128 7)))
     (let ((lst (env-ref env59128 6)))
       (let ((op (env-ref env59128 5)))
         (let ((kont58819 (env-ref env59128 4)))
           (let ((cons (env-ref env59128 3)))
             (let ((filter (env-ref env59128 2)))
               (let ((car (env-ref env59128 1)))
                 (let ((f5882558966
                        (make-closure
                         lam59125
                         car
                         filter
                         cons
                         kont58819
                         op
                         lst
                         cdr)))
                   (clo-app op f5882558966 a5872058965))))))))))
  (proc
   (lam59129 env59130 a5871858961)
   (let ((lst (env-ref env59130 8)))
     (let ((op (env-ref env59130 7)))
       (let ((kont58819 (env-ref env59130 6)))
         (let ((cons (env-ref env59130 5)))
           (let ((list (env-ref env59130 4)))
             (let ((cdr (env-ref env59130 3)))
               (let ((filter (env-ref env59130 2)))
                 (let ((car (env-ref env59130 1)))
                   (if a5871858961
                     (let ((f5882058962 (make-closure lam59115 kont58819)))
                       (clo-app list f5882058962))
                     (let ((f5882658964
                            (make-closure
                             lam59127
                             car
                             filter
                             cons
                             kont58819
                             op
                             lst
                             cdr)))
                       (clo-app car f5882658964 lst))))))))))))
  (proc
   (filter _59131 kont58819 op lst)
   (let ((f5882758960
          (make-closure lam59129 car filter cdr list cons kont58819 op lst)))
     (clo-app null? f5882758960 lst)))
  (proc
   (lam59132 env59133 a5873058983)
   (let ((a5872858980 (env-ref env59133 3)))
     (let ((kont58828 (env-ref env59133 2)))
       (let ((drop (env-ref env59133 1)))
         (clo-app drop kont58828 a5872858980 a5873058983)))))
  (proc
   (lam59135 env59136 a5872858980)
   (let ((n (env-ref env59136 4)))
     (let ((- (env-ref env59136 3)))
       (let ((kont58828 (env-ref env59136 2)))
         (let ((drop (env-ref env59136 1)))
           (let ((a5872958981 '1))
             (let ((f5882958982
                    (make-closure lam59132 drop kont58828 a5872858980)))
               (clo-app - f5882958982 n a5872958981))))))))
  (proc
   (lam59137 env59138 a5872758978)
   (let ((cdr (env-ref env59138 6)))
     (let ((n (env-ref env59138 5)))
       (let ((- (env-ref env59138 4)))
         (let ((lst (env-ref env59138 3)))
           (let ((kont58828 (env-ref env59138 2)))
             (let ((drop (env-ref env59138 1)))
               (if a5872758978
                 (clo-app kont58828 lst)
                 (let ((f5883058979
                        (make-closure lam59135 drop kont58828 - n)))
                   (clo-app cdr f5883058979 lst))))))))))
  (proc
   (drop _59140 kont58828 lst n)
   (let ((a5872658976 '0))
     (let ((f5883158977 (make-closure lam59137 drop kont58828 lst - n cdr)))
       (clo-app = f5883158977 n a5872658976))))
  (proc
   (lam59141 env59142 a5873458991)
   (let ((a5873258987 (env-ref env59142 3)))
     (let ((kont58832 (env-ref env59142 2)))
       (let ((proc (env-ref env59142 1)))
         (clo-app proc kont58832 a5873258987 a5873458991)))))
  (proc
   (lam59143 env59144 a5873358989)
   (let ((a5873258987 (env-ref env59144 5)))
     (let ((foldr (env-ref env59144 4)))
       (let ((kont58832 (env-ref env59144 3)))
         (let ((proc (env-ref env59144 2)))
           (let ((acc (env-ref env59144 1)))
             (let ((f5883358990
                    (make-closure lam59141 proc kont58832 a5873258987)))
               (clo-app foldr f5883358990 proc acc a5873358989))))))))
  (proc
   (lam59145 env59146 a5873258987)
   (let ((cdr (env-ref env59146 6)))
     (let ((kont58832 (env-ref env59146 5)))
       (let ((foldr (env-ref env59146 4)))
         (let ((lst (env-ref env59146 3)))
           (let ((proc (env-ref env59146 2)))
             (let ((acc (env-ref env59146 1)))
               (let ((f5883458988
                      (make-closure
                       lam59143
                       acc
                       proc
                       kont58832
                       foldr
                       a5873258987)))
                 (clo-app cdr f5883458988 lst)))))))))
  (proc
   (lam59147 env59148 a5873158985)
   (let ((cdr (env-ref env59148 7)))
     (let ((kont58832 (env-ref env59148 6)))
       (let ((car (env-ref env59148 5)))
         (let ((foldr (env-ref env59148 4)))
           (let ((lst (env-ref env59148 3)))
             (let ((proc (env-ref env59148 2)))
               (let ((acc (env-ref env59148 1)))
                 (if a5873158985
                   (clo-app kont58832 acc)
                   (let ((f5883558986
                          (make-closure
                           lam59145
                           acc
                           proc
                           lst
                           foldr
                           kont58832
                           cdr)))
                     (clo-app car f5883558986 lst)))))))))))
  (proc
   (foldr _59149 kont58832 proc acc lst)
   (let ((f5883658984
          (make-closure lam59147 acc proc lst foldr car kont58832 cdr)))
     (clo-app null? f5883658984 lst)))
  (proc
   (lam59150 env59151 a5873858999)
   (let ((a5873658995 (env-ref env59151 3)))
     (let ((kont58837 (env-ref env59151 2)))
       (let ((cons (env-ref env59151 1)))
         (clo-app cons kont58837 a5873658995 a5873858999)))))
  (proc
   (lam59152 env59153 a5873758997)
   (let ((append (env-ref env59153 5)))
     (let ((a5873658995 (env-ref env59153 4)))
       (let ((lst2 (env-ref env59153 3)))
         (let ((kont58837 (env-ref env59153 2)))
           (let ((cons (env-ref env59153 1)))
             (let ((f5883858998
                    (make-closure lam59150 cons kont58837 a5873658995)))
               (clo-app append f5883858998 a5873758997 lst2))))))))
  (proc
   (lam59154 env59155 a5873658995)
   (let ((cdr (env-ref env59155 6)))
     (let ((append (env-ref env59155 5)))
       (let ((lst2 (env-ref env59155 4)))
         (let ((cons (env-ref env59155 3)))
           (let ((lst1 (env-ref env59155 2)))
             (let ((kont58837 (env-ref env59155 1)))
               (let ((f5883958996
                      (make-closure
                       lam59152
                       cons
                       kont58837
                       lst2
                       a5873658995
                       append)))
                 (clo-app cdr f5883958996 lst1)))))))))
  (proc
   (lam59156 env59157 a5873558993)
   (let ((cdr (env-ref env59157 7)))
     (let ((append (env-ref env59157 6)))
       (let ((lst2 (env-ref env59157 5)))
         (let ((cons (env-ref env59157 4)))
           (let ((lst1 (env-ref env59157 3)))
             (let ((kont58837 (env-ref env59157 2)))
               (let ((car (env-ref env59157 1)))
                 (if a5873558993
                   (clo-app kont58837 lst2)
                   (let ((f5884058994
                          (make-closure
                           lam59154
                           kont58837
                           lst1
                           cons
                           lst2
                           append
                           cdr)))
                     (clo-app car f5884058994 lst1)))))))))))
  (proc
   (append _59158 kont58837 lst1 lst2)
   (let ((f5884158992
          (make-closure lam59156 car kont58837 lst1 cons lst2 append cdr)))
     (clo-app null? f5884158992 lst1)))
  (proc
   (hash _59159 . lst)
   (let ((kont5884259000 (prim car lst)))
     (let ((lst59001 (prim cdr lst)))
       (let ((x5873959002 (apply-prim hash lst59001)))
         (clo-app kont5884259000 x5873959002)))))
  (proc
   (hash-ref _59160 kont58844 h k)
   (let ((x5874059003 (prim hash-ref h k))) (clo-app kont58844 x5874059003)))
  (proc
   (hash-set _59161 kont58845 h k v)
   (let ((x5874159004 (prim hash-set h k v))) (clo-app kont58845 x5874159004)))
  (proc
   (hash-has-key? _59162 kont58846 h k)
   (let ((x5874259005 (prim hash-has-key? h k)))
     (clo-app kont58846 x5874259005)))
  (proc
   (hash-count _59163 kont58847 h)
   (let ((x5874359006 (prim hash-count h))) (clo-app kont58847 x5874359006)))
  (proc
   (lam59165 env59166 a5874859012)
   (let ((hash-ref (env-ref env59166 2)))
     (let ((kont58848 (env-ref env59166 1)))
       (let ((a5874959013 '10))
         (clo-app hash-ref kont58848 a5874859012 a5874959013)))))
  (proc
   (call _59171 kont58848)
   (let ((a5874459007 "work"))
     (let ((a5874559008 '80))
       (let ((a5874659009 '10))
         (let ((a5874759010 "lmao"))
           (let ((f5884959011 (make-closure lam59165 kont58848 hash-ref)))
             (clo-app
              hash
              f5884959011
              a5874459007
              a5874559008
              a5874659009
              a5874759010)))))))
  (proc
   (lam59172 env59173 x5875059015)
   (let ((kont58850 (env-ref env59173 1))) (clo-app kont58850 x5875059015)))
  (proc
   (brouhaha_main _59174 kont58850)
   (let ((f5885159014 (make-closure lam59172 kont58850)))
     (clo-app call f5885159014))))
