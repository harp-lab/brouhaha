'((define (+ . lst)
    (let ((kont5875158852 (prim car lst)))
      (let ((lst58853 (prim cdr lst)))
        (let ((x5866158854 (apply-prim + lst58853)))
          (kont5875158852 x5866158854)))))
  (define (- . lst)
    (let ((kont5875358855 (prim car lst)))
      (let ((lst58856 (prim cdr lst)))
        (let ((x5866258857 (apply-prim - lst58856)))
          (kont5875358855 x5866258857)))))
  (define (* . lst)
    (let ((kont5875558858 (prim car lst)))
      (let ((lst58859 (prim cdr lst)))
        (let ((x5866358860 (apply-prim * lst58859)))
          (kont5875558858 x5866358860)))))
  (define (modulo kont58757 a b)
    (let ((x5866458861 (prim modulo a b))) (kont58757 x5866458861)))
  (define (/ . lst)
    (let ((kont5875858862 (prim car lst)))
      (let ((lst58863 (prim cdr lst)))
        (let ((x5866558864 (apply-prim / lst58863)))
          (kont5875858862 x5866558864)))))
  (define (= . lst)
    (let ((kont5876058865 (prim car lst)))
      (let ((lst58866 (prim cdr lst)))
        (let ((x5866658867 (apply-prim = lst58866)))
          (kont5876058865 x5866658867)))))
  (define (> . lst)
    (let ((kont5876258868 (prim car lst)))
      (let ((lst58869 (prim cdr lst)))
        (let ((x5866758870 (apply-prim > lst58869)))
          (kont5876258868 x5866758870)))))
  (define (< . lst)
    (let ((kont5876458871 (prim car lst)))
      (let ((lst58872 (prim cdr lst)))
        (let ((x5866858873 (apply-prim < lst58872)))
          (kont5876458871 x5866858873)))))
  (define (<= . lst)
    (let ((kont5876658874 (prim car lst)))
      (let ((lst58875 (prim cdr lst)))
        (let ((x5866958876 (apply-prim <= lst58875)))
          (kont5876658874 x5866958876)))))
  (define (>= . lst)
    (let ((kont5876858877 (prim car lst)))
      (let ((lst58878 (prim cdr lst)))
        (let ((x5867058879 (apply-prim >= lst58878)))
          (kont5876858877 x5867058879)))))
  (define (null? kont58770 x)
    (let ((x5867158880 (prim null? x))) (kont58770 x5867158880)))
  (define (equal? kont58771 x y)
    (let ((x5867258881 (prim equal? x y))) (kont58771 x5867258881)))
  (define (eq? kont58772 x y)
    (let ((x5867358882 (prim eq? x y))) (kont58772 x5867358882)))
  (define (cons kont58773 a b)
    (let ((x5867458883 (prim cons a b))) (kont58773 x5867458883)))
  (define (car kont58774 lst)
    (let ((x5867558884 (prim car lst))) (kont58774 x5867558884)))
  (define (cdr kont58775 lst)
    (let ((x5867658885 (prim cdr lst))) (kont58775 x5867658885)))
  (define (even? kont58776 x)
    (let ((a5867758886 '0))
      (let ((a5867858887 '2))
        (let ((f5877758888
               (lambda (a5867958889)
                 (equal? kont58776 a5867758886 a5867958889))))
          (modulo f5877758888 x a5867858887)))))
  (define (odd? kont58778 x)
    (let ((a5868058890 '1))
      (let ((a5868158891 '2))
        (let ((f5877958892
               (lambda (a5868258893)
                 (equal? kont58778 a5868058890 a5868258893))))
          (modulo f5877958892 x a5868158891)))))
  (define (list . x)
    (let ((kont5878058894 (prim car x)))
      (let ((x58895 (prim cdr x))) (kont5878058894 x58895))))
  (define (member? kont58782 x lst)
    (let ((f5878658896
           (lambda (a5868358897)
             (if a5868358897
               (let ((x5868458898 '#f)) (kont58782 x5868458898))
               (let ((f5878558899
                      (lambda (a5868558900)
                        (let ((f5878458901
                               (lambda (a5868658902)
                                 (if a5868658902
                                   (let ((x5868758903 '#t))
                                     (kont58782 x5868758903))
                                   (let ((f5878358904
                                          (lambda (a5868858905)
                                            (member?
                                             kont58782
                                             x
                                             a5868858905))))
                                     (cdr f5878358904 lst))))))
                          (equal? f5878458901 a5868558900 x)))))
                 (car f5878558899 lst))))))
      (null? f5878658896 lst)))
  (define (foldl kont58787 fun acc lst)
    (let ((f5879158906
           (lambda (a5868958907)
             (if a5868958907
               (kont58787 acc)
               (let ((f5879058908
                      (lambda (a5869058909)
                        (let ((f5878958910
                               (lambda (a5869158911)
                                 (let ((f5878858912
                                        (lambda (a5869258913)
                                          (foldl
                                           kont58787
                                           fun
                                           a5869158911
                                           a5869258913))))
                                   (cdr f5878858912 lst)))))
                          (fun f5878958910 a5869058909 acc)))))
                 (car f5879058908 lst))))))
      (null? f5879158906 lst)))
  (define (reverse-helper kont58792 lst lst2)
    (let ((f5879658914
           (lambda (a5869358915)
             (if a5869358915
               (kont58792 lst2)
               (let ((f5879558916
                      (lambda (a5869458917)
                        (let ((f5879458918
                               (lambda (a5869558919)
                                 (let ((f5879358920
                                        (lambda (a5869658921)
                                          (reverse-helper
                                           kont58792
                                           a5869458917
                                           a5869658921))))
                                   (cons f5879358920 a5869558919 lst2)))))
                          (car f5879458918 lst)))))
                 (cdr f5879558916 lst))))))
      (null? f5879658914 lst)))
  (define (reverse kont58797 lst)
    (let ((f5879858922
           (lambda (a5869758923) (reverse-helper kont58797 lst a5869758923))))
      (list f5879858922)))
  (define (take-helper kont58799 lst n lst2)
    (let ((a5869858924 '0))
      (let ((f5880558925
             (lambda (a5869958926)
               (if a5869958926
                 (let ((f5880058927
                        (lambda (x5870058928) (kont58799 x5870058928))))
                   (reverse f5880058927 lst2))
                 (let ((f5880458929
                        (lambda (a5870158930)
                          (let ((a5870258931 '1))
                            (let ((f5880358932
                                   (lambda (a5870358933)
                                     (let ((f5880258934
                                            (lambda (a5870458935)
                                              (let ((f5880158936
                                                     (lambda (a5870558937)
                                                       (take-helper
                                                        kont58799
                                                        a5870158930
                                                        a5870358933
                                                        a5870558937))))
                                                (cons
                                                 f5880158936
                                                 a5870458935
                                                 lst2)))))
                                       (car f5880258934 lst)))))
                              (- f5880358932 n a5870258931))))))
                   (cdr f5880458929 lst))))))
        (= f5880558925 n a5869858924))))
  (define (take kont58806 lst n)
    (let ((f5880758938
           (lambda (a5870658939) (take-helper kont58806 lst n a5870658939))))
      (list f5880758938)))
  (define (length kont58808 lst)
    (let ((f5881158940
           (lambda (a5870758941)
             (if a5870758941
               (let ((x5870858942 '0)) (kont58808 x5870858942))
               (let ((a5870958943 '1))
                 (let ((f5881058944
                        (lambda (a5871058945)
                          (let ((f5880958946
                                 (lambda (a5871158947)
                                   (+ kont58808 a5870958943 a5871158947))))
                            (length f5880958946 a5871058945)))))
                   (cdr f5881058944 lst)))))))
      (null? f5881158940 lst)))
  (define (map kont58812 proc lst)
    (let ((f5881858948
           (lambda (a5871258949)
             (if a5871258949
               (let ((f5881358950
                      (lambda (x5871358951) (kont58812 x5871358951))))
                 (list f5881358950))
               (let ((f5881758952
                      (lambda (a5871458953)
                        (let ((f5881658954
                               (lambda (a5871558955)
                                 (let ((f5881558956
                                        (lambda (a5871658957)
                                          (let ((f5881458958
                                                 (lambda (a5871758959)
                                                   (cons
                                                    kont58812
                                                    a5871558955
                                                    a5871758959))))
                                            (map
                                             f5881458958
                                             proc
                                             a5871658957)))))
                                   (cdr f5881558956 lst)))))
                          (proc f5881658954 a5871458953)))))
                 (car f5881758952 lst))))))
      (null? f5881858948 lst)))
  (define (filter kont58819 op lst)
    (let ((f5882758960
           (lambda (a5871858961)
             (if a5871858961
               (let ((f5882058962
                      (lambda (x5871958963) (kont58819 x5871958963))))
                 (list f5882058962))
               (let ((f5882658964
                      (lambda (a5872058965)
                        (let ((f5882558966
                               (lambda (a5872158967)
                                 (if a5872158967
                                   (let ((f5882358968
                                          (lambda (a5872258969)
                                            (let ((f5882258970
                                                   (lambda (a5872358971)
                                                     (let ((f5882158972
                                                            (lambda (a5872458973)
                                                              (cons
                                                               kont58819
                                                               a5872258969
                                                               a5872458973))))
                                                       (filter
                                                        f5882158972
                                                        op
                                                        a5872358971)))))
                                              (cdr f5882258970 lst)))))
                                     (car f5882358968 lst))
                                   (let ((f5882458974
                                          (lambda (a5872558975)
                                            (filter
                                             kont58819
                                             op
                                             a5872558975))))
                                     (cdr f5882458974 lst))))))
                          (op f5882558966 a5872058965)))))
                 (car f5882658964 lst))))))
      (null? f5882758960 lst)))
  (define (drop kont58828 lst n)
    (let ((a5872658976 '0))
      (let ((f5883158977
             (lambda (a5872758978)
               (if a5872758978
                 (kont58828 lst)
                 (let ((f5883058979
                        (lambda (a5872858980)
                          (let ((a5872958981 '1))
                            (let ((f5882958982
                                   (lambda (a5873058983)
                                     (drop
                                      kont58828
                                      a5872858980
                                      a5873058983))))
                              (- f5882958982 n a5872958981))))))
                   (cdr f5883058979 lst))))))
        (= f5883158977 n a5872658976))))
  (define (foldr kont58832 proc acc lst)
    (let ((f5883658984
           (lambda (a5873158985)
             (if a5873158985
               (kont58832 acc)
               (let ((f5883558986
                      (lambda (a5873258987)
                        (let ((f5883458988
                               (lambda (a5873358989)
                                 (let ((f5883358990
                                        (lambda (a5873458991)
                                          (proc
                                           kont58832
                                           a5873258987
                                           a5873458991))))
                                   (foldr f5883358990 proc acc a5873358989)))))
                          (cdr f5883458988 lst)))))
                 (car f5883558986 lst))))))
      (null? f5883658984 lst)))
  (define (append kont58837 lst1 lst2)
    (let ((f5884158992
           (lambda (a5873558993)
             (if a5873558993
               (kont58837 lst2)
               (let ((f5884058994
                      (lambda (a5873658995)
                        (let ((f5883958996
                               (lambda (a5873758997)
                                 (let ((f5883858998
                                        (lambda (a5873858999)
                                          (cons
                                           kont58837
                                           a5873658995
                                           a5873858999))))
                                   (append f5883858998 a5873758997 lst2)))))
                          (cdr f5883958996 lst1)))))
                 (car f5884058994 lst1))))))
      (null? f5884158992 lst1)))
  (define (hash . lst)
    (let ((kont5884259000 (prim car lst)))
      (let ((lst59001 (prim cdr lst)))
        (let ((x5873959002 (apply-prim hash lst59001)))
          (kont5884259000 x5873959002)))))
  (define (hash-ref kont58844 h k)
    (let ((x5874059003 (prim hash-ref h k))) (kont58844 x5874059003)))
  (define (hash-set kont58845 h k v)
    (let ((x5874159004 (prim hash-set h k v))) (kont58845 x5874159004)))
  (define (hash-has-key? kont58846 h k)
    (let ((x5874259005 (prim hash-has-key? h k))) (kont58846 x5874259005)))
  (define (hash-count kont58847 h)
    (let ((x5874359006 (prim hash-count h))) (kont58847 x5874359006)))
  (define (call kont58848)
    (let ((a5874459007 "work"))
      (let ((a5874559008 '80))
        (let ((a5874659009 '10))
          (let ((a5874759010 "lmao"))
            (let ((f5884959011
                   (lambda (a5874859012)
                     (let ((a5874959013 '10))
                       (hash-ref kont58848 a5874859012 a5874959013)))))
              (hash
               f5884959011
               a5874459007
               a5874559008
               a5874659009
               a5874759010)))))))
  (define (brouhaha_main kont58850)
    (let ((f5885159014 (lambda (x5875059015) (kont58850 x5875059015))))
      (call f5885159014))))
