'((proc
   (+ _57584 . lst)
   (let ((kont5731957420 (prim car lst)))
     (let ((lst57421 (prim cdr lst)))
       (let ((x5722957422 (apply-prim + lst57421)))
         (clo-app kont5731957420 x5722957422)))))
  (proc
   (- _57585 . lst)
   (let ((kont5732157423 (prim car lst)))
     (let ((lst57424 (prim cdr lst)))
       (let ((x5723057425 (apply-prim - lst57424)))
         (clo-app kont5732157423 x5723057425)))))
  (proc
   (* _57586 . lst)
   (let ((kont5732357426 (prim car lst)))
     (let ((lst57427 (prim cdr lst)))
       (let ((x5723157428 (apply-prim * lst57427)))
         (clo-app kont5732357426 x5723157428)))))
  (proc
   (modulo _57587 kont57325 a b)
   (let ((x5723257429 (prim modulo a b))) (clo-app kont57325 x5723257429)))
  (proc
   (/ _57588 . lst)
   (let ((kont5732657430 (prim car lst)))
     (let ((lst57431 (prim cdr lst)))
       (let ((x5723357432 (apply-prim / lst57431)))
         (clo-app kont5732657430 x5723357432)))))
  (proc
   (= _57589 . lst)
   (let ((kont5732857433 (prim car lst)))
     (let ((lst57434 (prim cdr lst)))
       (let ((x5723457435 (apply-prim = lst57434)))
         (clo-app kont5732857433 x5723457435)))))
  (proc
   (> _57590 . lst)
   (let ((kont5733057436 (prim car lst)))
     (let ((lst57437 (prim cdr lst)))
       (let ((x5723557438 (apply-prim > lst57437)))
         (clo-app kont5733057436 x5723557438)))))
  (proc
   (< _57591 . lst)
   (let ((kont5733257439 (prim car lst)))
     (let ((lst57440 (prim cdr lst)))
       (let ((x5723657441 (apply-prim < lst57440)))
         (clo-app kont5733257439 x5723657441)))))
  (proc
   (<= _57592 . lst)
   (let ((kont5733457442 (prim car lst)))
     (let ((lst57443 (prim cdr lst)))
       (let ((x5723757444 (apply-prim <= lst57443)))
         (clo-app kont5733457442 x5723757444)))))
  (proc
   (>= _57593 . lst)
   (let ((kont5733657445 (prim car lst)))
     (let ((lst57446 (prim cdr lst)))
       (let ((x5723857447 (apply-prim >= lst57446)))
         (clo-app kont5733657445 x5723857447)))))
  (proc
   (null? _57594 kont57338 x)
   (let ((x5723957448 (prim null? x))) (clo-app kont57338 x5723957448)))
  (proc
   (equal? _57595 kont57339 x y)
   (let ((x5724057449 (prim equal? x y))) (clo-app kont57339 x5724057449)))
  (proc
   (eq? _57596 kont57340 x y)
   (let ((x5724157450 (prim eq? x y))) (clo-app kont57340 x5724157450)))
  (proc
   (cons _57597 kont57341 a b)
   (let ((x5724257451 (prim cons a b))) (clo-app kont57341 x5724257451)))
  (proc
   (car _57598 kont57342 lst)
   (let ((x5724357452 (prim car lst))) (clo-app kont57342 x5724357452)))
  (proc
   (cdr _57599 kont57343 lst)
   (let ((x5724457453 (prim cdr lst))) (clo-app kont57343 x5724457453)))
  (proc
   (lam57600 env57601 a5724757457)
   (let ((equal? (env-ref env57601 3)))
     (let ((a5724557454 (env-ref env57601 2)))
       (let ((kont57344 (env-ref env57601 1)))
         (clo-app equal? kont57344 a5724557454 a5724757457)))))
  (proc
   (even? _57604 kont57344 x)
   (let ((a5724557454 '0))
     (let ((a5724657455 '2))
       (let ((f5734557456
              (make-closure lam57600 kont57344 a5724557454 equal?)))
         (clo-app modulo f5734557456 x a5724657455)))))
  (proc
   (lam57605 env57606 a5725057461)
   (let ((equal? (env-ref env57606 3)))
     (let ((kont57346 (env-ref env57606 2)))
       (let ((a5724857458 (env-ref env57606 1)))
         (clo-app equal? kont57346 a5724857458 a5725057461)))))
  (proc
   (odd? _57609 kont57346 x)
   (let ((a5724857458 '1))
     (let ((a5724957459 '2))
       (let ((f5734757460
              (make-closure lam57605 a5724857458 kont57346 equal?)))
         (clo-app modulo f5734757460 x a5724957459)))))
  (proc
   (list _57610 . x)
   (let ((kont5734857462 (prim car x)))
     (let ((x57463 (prim cdr x))) (clo-app kont5734857462 x57463))))
  (proc
   (lam57613 env57614 a5725657473)
   (let ((kont57350 (env-ref env57614 3)))
     (let ((x (env-ref env57614 2)))
       (let ((member? (env-ref env57614 1)))
         (clo-app member? kont57350 x a5725657473)))))
  (proc
   (lam57615 env57616 a5725457470)
   (let ((cdr (env-ref env57616 5)))
     (let ((kont57350 (env-ref env57616 4)))
       (let ((lst (env-ref env57616 3)))
         (let ((x (env-ref env57616 2)))
           (let ((member? (env-ref env57616 1)))
             (if a5725457470
               (let ((x5725557471 '#t)) (clo-app kont57350 x5725557471))
               (let ((f5735157472 (make-closure lam57613 member? x kont57350)))
                 (clo-app cdr f5735157472 lst)))))))))
  (proc
   (lam57617 env57618 a5725357468)
   (let ((cdr (env-ref env57618 6)))
     (let ((kont57350 (env-ref env57618 5)))
       (let ((lst (env-ref env57618 4)))
         (let ((equal? (env-ref env57618 3)))
           (let ((x (env-ref env57618 2)))
             (let ((member? (env-ref env57618 1)))
               (let ((f5735257469
                      (make-closure lam57615 member? x lst kont57350 cdr)))
                 (clo-app equal? f5735257469 a5725357468 x)))))))))
  (proc
   (lam57619 env57620 a5725157465)
   (let ((cdr (env-ref env57620 7)))
     (let ((kont57350 (env-ref env57620 6)))
       (let ((lst (env-ref env57620 5)))
         (let ((equal? (env-ref env57620 4)))
           (let ((x (env-ref env57620 3)))
             (let ((car (env-ref env57620 2)))
               (let ((member? (env-ref env57620 1)))
                 (if a5725157465
                   (let ((x5725257466 '#f)) (clo-app kont57350 x5725257466))
                   (let ((f5735357467
                          (make-closure
                           lam57617
                           member?
                           x
                           equal?
                           lst
                           kont57350
                           cdr)))
                     (clo-app car f5735357467 lst)))))))))))
  (proc
   (member? _57621 kont57350 x lst)
   (let ((f5735457464
          (make-closure lam57619 member? car x equal? lst kont57350 cdr)))
     (clo-app null? f5735457464 lst)))
  (proc
   (lam57622 env57623 a5726057481)
   (let ((a5725957479 (env-ref env57623 4)))
     (let ((kont57355 (env-ref env57623 3)))
       (let ((fun (env-ref env57623 2)))
         (let ((foldl (env-ref env57623 1)))
           (clo-app foldl kont57355 fun a5725957479 a5726057481))))))
  (proc
   (lam57624 env57625 a5725957479)
   (let ((cdr (env-ref env57625 5)))
     (let ((lst (env-ref env57625 4)))
       (let ((kont57355 (env-ref env57625 3)))
         (let ((fun (env-ref env57625 2)))
           (let ((foldl (env-ref env57625 1)))
             (let ((f5735657480
                    (make-closure lam57622 foldl fun kont57355 a5725957479)))
               (clo-app cdr f5735657480 lst))))))))
  (proc
   (lam57626 env57627 a5725857477)
   (let ((cdr (env-ref env57627 6)))
     (let ((lst (env-ref env57627 5)))
       (let ((kont57355 (env-ref env57627 4)))
         (let ((fun (env-ref env57627 3)))
           (let ((acc (env-ref env57627 2)))
             (let ((foldl (env-ref env57627 1)))
               (let ((f5735757478
                      (make-closure lam57624 foldl fun kont57355 lst cdr)))
                 (clo-app fun f5735757478 a5725857477 acc)))))))))
  (proc
   (lam57628 env57629 a5725757475)
   (let ((cdr (env-ref env57629 7)))
     (let ((lst (env-ref env57629 6)))
       (let ((kont57355 (env-ref env57629 5)))
         (let ((fun (env-ref env57629 4)))
           (let ((acc (env-ref env57629 3)))
             (let ((car (env-ref env57629 2)))
               (let ((foldl (env-ref env57629 1)))
                 (if a5725757475
                   (clo-app kont57355 acc)
                   (let ((f5735857476
                          (make-closure
                           lam57626
                           foldl
                           acc
                           fun
                           kont57355
                           lst
                           cdr)))
                     (clo-app car f5735857476 lst)))))))))))
  (proc
   (foldl _57630 kont57355 fun acc lst)
   (let ((f5735957474
          (make-closure lam57628 foldl car acc fun kont57355 lst cdr)))
     (clo-app null? f5735957474 lst)))
  (proc
   (lam57631 env57632 a5726457489)
   (let ((reverse-helper (env-ref env57632 3)))
     (let ((a5726257485 (env-ref env57632 2)))
       (let ((kont57360 (env-ref env57632 1)))
         (clo-app reverse-helper kont57360 a5726257485 a5726457489)))))
  (proc
   (lam57633 env57634 a5726357487)
   (let ((reverse-helper (env-ref env57634 5)))
     (let ((a5726257485 (env-ref env57634 4)))
       (let ((kont57360 (env-ref env57634 3)))
         (let ((lst2 (env-ref env57634 2)))
           (let ((cons (env-ref env57634 1)))
             (let ((f5736157488
                    (make-closure
                     lam57631
                     kont57360
                     a5726257485
                     reverse-helper)))
               (clo-app cons f5736157488 a5726357487 lst2))))))))
  (proc
   (lam57635 env57636 a5726257485)
   (let ((lst (env-ref env57636 6)))
     (let ((reverse-helper (env-ref env57636 5)))
       (let ((kont57360 (env-ref env57636 4)))
         (let ((lst2 (env-ref env57636 3)))
           (let ((car (env-ref env57636 2)))
             (let ((cons (env-ref env57636 1)))
               (let ((f5736257486
                      (make-closure
                       lam57633
                       cons
                       lst2
                       kont57360
                       a5726257485
                       reverse-helper)))
                 (clo-app car f5736257486 lst)))))))))
  (proc
   (lam57637 env57638 a5726157483)
   (let ((cdr (env-ref env57638 7)))
     (let ((lst (env-ref env57638 6)))
       (let ((reverse-helper (env-ref env57638 5)))
         (let ((kont57360 (env-ref env57638 4)))
           (let ((lst2 (env-ref env57638 3)))
             (let ((car (env-ref env57638 2)))
               (let ((cons (env-ref env57638 1)))
                 (if a5726157483
                   (clo-app kont57360 lst2)
                   (let ((f5736357484
                          (make-closure
                           lam57635
                           cons
                           car
                           lst2
                           kont57360
                           reverse-helper
                           lst)))
                     (clo-app cdr f5736357484 lst)))))))))))
  (proc
   (reverse-helper _57639 kont57360 lst lst2)
   (let ((f5736457482
          (make-closure
           lam57637
           cons
           car
           lst2
           kont57360
           reverse-helper
           lst
           cdr)))
     (clo-app null? f5736457482 lst)))
  (proc
   (lam57640 env57641 a5726557491)
   (let ((kont57365 (env-ref env57641 3)))
     (let ((lst (env-ref env57641 2)))
       (let ((reverse-helper (env-ref env57641 1)))
         (clo-app reverse-helper kont57365 lst a5726557491)))))
  (proc
   (reverse _57642 kont57365 lst)
   (let ((f5736657490 (make-closure lam57640 reverse-helper lst kont57365)))
     (clo-app list f5736657490)))
  (proc
   (lam57643 env57644 x5726857496)
   (let ((kont57367 (env-ref env57644 1))) (clo-app kont57367 x5726857496)))
  (proc
   (lam57645 env57646 a5727357505)
   (let ((kont57367 (env-ref env57646 4)))
     (let ((a5726957498 (env-ref env57646 3)))
       (let ((a5727157501 (env-ref env57646 2)))
         (let ((take-helper (env-ref env57646 1)))
           (clo-app
            take-helper
            kont57367
            a5726957498
            a5727157501
            a5727357505))))))
  (proc
   (lam57647 env57648 a5727257503)
   (let ((kont57367 (env-ref env57648 6)))
     (let ((a5726957498 (env-ref env57648 5)))
       (let ((a5727157501 (env-ref env57648 4)))
         (let ((cons (env-ref env57648 3)))
           (let ((take-helper (env-ref env57648 2)))
             (let ((lst2 (env-ref env57648 1)))
               (let ((f5736957504
                      (make-closure
                       lam57645
                       take-helper
                       a5727157501
                       a5726957498
                       kont57367)))
                 (clo-app cons f5736957504 a5727257503 lst2)))))))))
  (proc
   (lam57649 env57650 a5727157501)
   (let ((kont57367 (env-ref env57650 7)))
     (let ((lst (env-ref env57650 6)))
       (let ((a5726957498 (env-ref env57650 5)))
         (let ((car (env-ref env57650 4)))
           (let ((cons (env-ref env57650 3)))
             (let ((take-helper (env-ref env57650 2)))
               (let ((lst2 (env-ref env57650 1)))
                 (let ((f5737057502
                        (make-closure
                         lam57647
                         lst2
                         take-helper
                         cons
                         a5727157501
                         a5726957498
                         kont57367)))
                   (clo-app car f5737057502 lst))))))))))
  (proc
   (lam57652 env57653 a5726957498)
   (let ((kont57367 (env-ref env57653 8)))
     (let ((lst (env-ref env57653 7)))
       (let ((cons (env-ref env57653 6)))
         (let ((- (env-ref env57653 5)))
           (let ((take-helper (env-ref env57653 4)))
             (let ((lst2 (env-ref env57653 3)))
               (let ((n (env-ref env57653 2)))
                 (let ((car (env-ref env57653 1)))
                   (let ((a5727057499 '1))
                     (let ((f5737157500
                            (make-closure
                             lam57649
                             lst2
                             take-helper
                             cons
                             car
                             a5726957498
                             lst
                             kont57367)))
                       (clo-app - f5737157500 n a5727057499))))))))))))
  (proc
   (lam57654 env57655 a5726757494)
   (let ((cdr (env-ref env57655 10)))
     (let ((kont57367 (env-ref env57655 9)))
       (let ((lst (env-ref env57655 8)))
         (let ((reverse (env-ref env57655 7)))
           (let ((cons (env-ref env57655 6)))
             (let ((- (env-ref env57655 5)))
               (let ((take-helper (env-ref env57655 4)))
                 (let ((lst2 (env-ref env57655 3)))
                   (let ((n (env-ref env57655 2)))
                     (let ((car (env-ref env57655 1)))
                       (if a5726757494
                         (let ((f5736857495 (make-closure lam57643 kont57367)))
                           (clo-app reverse f5736857495 lst2))
                         (let ((f5737257497
                                (make-closure
                                 lam57652
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 lst
                                 kont57367)))
                           (clo-app cdr f5737257497 lst))))))))))))))
  (proc
   (take-helper _57657 kont57367 lst n lst2)
   (let ((a5726657492 '0))
     (let ((f5737357493
            (make-closure
             lam57654
             car
             n
             lst2
             take-helper
             -
             cons
             reverse
             lst
             kont57367
             cdr)))
       (clo-app = f5737357493 n a5726657492))))
  (proc
   (lam57658 env57659 a5727457507)
   (let ((lst (env-ref env57659 4)))
     (let ((kont57374 (env-ref env57659 3)))
       (let ((take-helper (env-ref env57659 2)))
         (let ((n (env-ref env57659 1)))
           (clo-app take-helper kont57374 lst n a5727457507))))))
  (proc
   (take _57660 kont57374 lst n)
   (let ((f5737557506 (make-closure lam57658 n take-helper kont57374 lst)))
     (clo-app list f5737557506)))
  (proc
   (lam57662 env57663 a5727957515)
   (let ((a5727757511 (env-ref env57663 3)))
     (let ((+ (env-ref env57663 2)))
       (let ((kont57376 (env-ref env57663 1)))
         (clo-app + kont57376 a5727757511 a5727957515)))))
  (proc
   (lam57664 env57665 a5727857513)
   (let ((a5727757511 (env-ref env57665 4)))
     (let ((length (env-ref env57665 3)))
       (let ((+ (env-ref env57665 2)))
         (let ((kont57376 (env-ref env57665 1)))
           (let ((f5737757514 (make-closure lam57662 kont57376 + a5727757511)))
             (clo-app length f5737757514 a5727857513)))))))
  (proc
   (lam57667 env57668 a5727557509)
   (let ((cdr (env-ref env57668 5)))
     (let ((lst (env-ref env57668 4)))
       (let ((length (env-ref env57668 3)))
         (let ((+ (env-ref env57668 2)))
           (let ((kont57376 (env-ref env57668 1)))
             (if a5727557509
               (let ((x5727657510 '0)) (clo-app kont57376 x5727657510))
               (let ((a5727757511 '1))
                 (let ((f5737857512
                        (make-closure
                         lam57664
                         kont57376
                         +
                         length
                         a5727757511)))
                   (clo-app cdr f5737857512 lst))))))))))
  (proc
   (length _57669 kont57376 lst)
   (let ((f5737957508 (make-closure lam57667 kont57376 + length lst cdr)))
     (clo-app null? f5737957508 lst)))
  (proc
   (lam57670 env57671 x5728157519)
   (let ((kont57380 (env-ref env57671 1))) (clo-app kont57380 x5728157519)))
  (proc
   (lam57672 env57673 a5728557527)
   (let ((kont57380 (env-ref env57673 3)))
     (let ((a5728357523 (env-ref env57673 2)))
       (let ((cons (env-ref env57673 1)))
         (clo-app cons kont57380 a5728357523 a5728557527)))))
  (proc
   (lam57674 env57675 a5728457525)
   (let ((map (env-ref env57675 5)))
     (let ((proc (env-ref env57675 4)))
       (let ((kont57380 (env-ref env57675 3)))
         (let ((a5728357523 (env-ref env57675 2)))
           (let ((cons (env-ref env57675 1)))
             (let ((f5738257526
                    (make-closure lam57672 cons a5728357523 kont57380)))
               (clo-app map f5738257526 proc a5728457525))))))))
  (proc
   (lam57676 env57677 a5728357523)
   (let ((cdr (env-ref env57677 6)))
     (let ((lst (env-ref env57677 5)))
       (let ((map (env-ref env57677 4)))
         (let ((proc (env-ref env57677 3)))
           (let ((cons (env-ref env57677 2)))
             (let ((kont57380 (env-ref env57677 1)))
               (let ((f5738357524
                      (make-closure
                       lam57674
                       cons
                       a5728357523
                       kont57380
                       proc
                       map)))
                 (clo-app cdr f5738357524 lst)))))))))
  (proc
   (lam57678 env57679 a5728257521)
   (let ((cdr (env-ref env57679 6)))
     (let ((lst (env-ref env57679 5)))
       (let ((map (env-ref env57679 4)))
         (let ((proc (env-ref env57679 3)))
           (let ((cons (env-ref env57679 2)))
             (let ((kont57380 (env-ref env57679 1)))
               (let ((f5738457522
                      (make-closure lam57676 kont57380 cons proc map lst cdr)))
                 (clo-app proc f5738457522 a5728257521)))))))))
  (proc
   (lam57680 env57681 a5728057517)
   (let ((lst (env-ref env57681 8)))
     (let ((map (env-ref env57681 7)))
       (let ((proc (env-ref env57681 6)))
         (let ((car (env-ref env57681 5)))
           (let ((cons (env-ref env57681 4)))
             (let ((kont57380 (env-ref env57681 3)))
               (let ((list (env-ref env57681 2)))
                 (let ((cdr (env-ref env57681 1)))
                   (if a5728057517
                     (let ((f5738157518 (make-closure lam57670 kont57380)))
                       (clo-app list f5738157518))
                     (let ((f5738557520
                            (make-closure
                             lam57678
                             kont57380
                             cons
                             proc
                             map
                             lst
                             cdr)))
                       (clo-app car f5738557520 lst))))))))))))
  (proc
   (map _57682 kont57380 proc lst)
   (let ((f5738657516
          (make-closure lam57680 cdr list kont57380 cons car proc map lst)))
     (clo-app null? f5738657516 lst)))
  (proc
   (lam57683 env57684 x5728757531)
   (let ((kont57387 (env-ref env57684 1))) (clo-app kont57387 x5728757531)))
  (proc
   (lam57685 env57686 a5729257541)
   (let ((kont57387 (env-ref env57686 3)))
     (let ((a5729057537 (env-ref env57686 2)))
       (let ((cons (env-ref env57686 1)))
         (clo-app cons kont57387 a5729057537 a5729257541)))))
  (proc
   (lam57687 env57688 a5729157539)
   (let ((kont57387 (env-ref env57688 5)))
     (let ((op (env-ref env57688 4)))
       (let ((a5729057537 (env-ref env57688 3)))
         (let ((filter (env-ref env57688 2)))
           (let ((cons (env-ref env57688 1)))
             (let ((f5738957540
                    (make-closure lam57685 cons a5729057537 kont57387)))
               (clo-app filter f5738957540 op a5729157539))))))))
  (proc
   (lam57689 env57690 a5729057537)
   (let ((cdr (env-ref env57690 6)))
     (let ((lst (env-ref env57690 5)))
       (let ((kont57387 (env-ref env57690 4)))
         (let ((op (env-ref env57690 3)))
           (let ((filter (env-ref env57690 2)))
             (let ((cons (env-ref env57690 1)))
               (let ((f5739057538
                      (make-closure
                       lam57687
                       cons
                       filter
                       a5729057537
                       op
                       kont57387)))
                 (clo-app cdr f5739057538 lst)))))))))
  (proc
   (lam57691 env57692 a5729357543)
   (let ((kont57387 (env-ref env57692 3)))
     (let ((op (env-ref env57692 2)))
       (let ((filter (env-ref env57692 1)))
         (clo-app filter kont57387 op a5729357543)))))
  (proc
   (lam57693 env57694 a5728957535)
   (let ((cdr (env-ref env57694 7)))
     (let ((lst (env-ref env57694 6)))
       (let ((kont57387 (env-ref env57694 5)))
         (let ((op (env-ref env57694 4)))
           (let ((cons (env-ref env57694 3)))
             (let ((filter (env-ref env57694 2)))
               (let ((car (env-ref env57694 1)))
                 (if a5728957535
                   (let ((f5739157536
                          (make-closure
                           lam57689
                           cons
                           filter
                           op
                           kont57387
                           lst
                           cdr)))
                     (clo-app car f5739157536 lst))
                   (let ((f5739257542
                          (make-closure lam57691 filter op kont57387)))
                     (clo-app cdr f5739257542 lst)))))))))))
  (proc
   (lam57695 env57696 a5728857533)
   (let ((cdr (env-ref env57696 7)))
     (let ((lst (env-ref env57696 6)))
       (let ((kont57387 (env-ref env57696 5)))
         (let ((op (env-ref env57696 4)))
           (let ((cons (env-ref env57696 3)))
             (let ((filter (env-ref env57696 2)))
               (let ((car (env-ref env57696 1)))
                 (let ((f5739357534
                        (make-closure
                         lam57693
                         car
                         filter
                         cons
                         op
                         kont57387
                         lst
                         cdr)))
                   (clo-app op f5739357534 a5728857533))))))))))
  (proc
   (lam57697 env57698 a5728657529)
   (let ((lst (env-ref env57698 8)))
     (let ((kont57387 (env-ref env57698 7)))
       (let ((op (env-ref env57698 6)))
         (let ((cons (env-ref env57698 5)))
           (let ((list (env-ref env57698 4)))
             (let ((cdr (env-ref env57698 3)))
               (let ((filter (env-ref env57698 2)))
                 (let ((car (env-ref env57698 1)))
                   (if a5728657529
                     (let ((f5738857530 (make-closure lam57683 kont57387)))
                       (clo-app list f5738857530))
                     (let ((f5739457532
                            (make-closure
                             lam57695
                             car
                             filter
                             cons
                             op
                             kont57387
                             lst
                             cdr)))
                       (clo-app car f5739457532 lst))))))))))))
  (proc
   (filter _57699 kont57387 op lst)
   (let ((f5739557528
          (make-closure lam57697 car filter cdr list cons op kont57387 lst)))
     (clo-app null? f5739557528 lst)))
  (proc
   (lam57700 env57701 a5729857551)
   (let ((drop (env-ref env57701 3)))
     (let ((a5729657548 (env-ref env57701 2)))
       (let ((kont57396 (env-ref env57701 1)))
         (clo-app drop kont57396 a5729657548 a5729857551)))))
  (proc
   (lam57703 env57704 a5729657548)
   (let ((drop (env-ref env57704 4)))
     (let ((n (env-ref env57704 3)))
       (let ((kont57396 (env-ref env57704 2)))
         (let ((- (env-ref env57704 1)))
           (let ((a5729757549 '1))
             (let ((f5739757550
                    (make-closure lam57700 kont57396 a5729657548 drop)))
               (clo-app - f5739757550 n a5729757549))))))))
  (proc
   (lam57705 env57706 a5729557546)
   (let ((cdr (env-ref env57706 6)))
     (let ((n (env-ref env57706 5)))
       (let ((lst (env-ref env57706 4)))
         (let ((drop (env-ref env57706 3)))
           (let ((kont57396 (env-ref env57706 2)))
             (let ((- (env-ref env57706 1)))
               (if a5729557546
                 (clo-app kont57396 lst)
                 (let ((f5739857547
                        (make-closure lam57703 - kont57396 n drop)))
                   (clo-app cdr f5739857547 lst))))))))))
  (proc
   (drop _57708 kont57396 lst n)
   (let ((a5729457544 '0))
     (let ((f5739957545 (make-closure lam57705 - kont57396 drop lst n cdr)))
       (clo-app = f5739957545 n a5729457544))))
  (proc
   (lam57709 env57710 a5730257559)
   (let ((kont57400 (env-ref env57710 3)))
     (let ((proc (env-ref env57710 2)))
       (let ((a5730057555 (env-ref env57710 1)))
         (clo-app proc kont57400 a5730057555 a5730257559)))))
  (proc
   (lam57711 env57712 a5730157557)
   (let ((kont57400 (env-ref env57712 5)))
     (let ((foldr (env-ref env57712 4)))
       (let ((a5730057555 (env-ref env57712 3)))
         (let ((proc (env-ref env57712 2)))
           (let ((acc (env-ref env57712 1)))
             (let ((f5740157558
                    (make-closure lam57709 a5730057555 proc kont57400)))
               (clo-app foldr f5740157558 proc acc a5730157557))))))))
  (proc
   (lam57713 env57714 a5730057555)
   (let ((cdr (env-ref env57714 6)))
     (let ((kont57400 (env-ref env57714 5)))
       (let ((foldr (env-ref env57714 4)))
         (let ((lst (env-ref env57714 3)))
           (let ((proc (env-ref env57714 2)))
             (let ((acc (env-ref env57714 1)))
               (let ((f5740257556
                      (make-closure
                       lam57711
                       acc
                       proc
                       a5730057555
                       foldr
                       kont57400)))
                 (clo-app cdr f5740257556 lst)))))))))
  (proc
   (lam57715 env57716 a5729957553)
   (let ((cdr (env-ref env57716 7)))
     (let ((kont57400 (env-ref env57716 6)))
       (let ((car (env-ref env57716 5)))
         (let ((foldr (env-ref env57716 4)))
           (let ((lst (env-ref env57716 3)))
             (let ((proc (env-ref env57716 2)))
               (let ((acc (env-ref env57716 1)))
                 (if a5729957553
                   (clo-app kont57400 acc)
                   (let ((f5740357554
                          (make-closure
                           lam57713
                           acc
                           proc
                           lst
                           foldr
                           kont57400
                           cdr)))
                     (clo-app car f5740357554 lst)))))))))))
  (proc
   (foldr _57717 kont57400 proc acc lst)
   (let ((f5740457552
          (make-closure lam57715 acc proc lst foldr car kont57400 cdr)))
     (clo-app null? f5740457552 lst)))
  (proc
   (lam57718 env57719 a5730657567)
   (let ((a5730457563 (env-ref env57719 3)))
     (let ((kont57405 (env-ref env57719 2)))
       (let ((cons (env-ref env57719 1)))
         (clo-app cons kont57405 a5730457563 a5730657567)))))
  (proc
   (lam57720 env57721 a5730557565)
   (let ((a5730457563 (env-ref env57721 5)))
     (let ((lst2 (env-ref env57721 4)))
       (let ((cons (env-ref env57721 3)))
         (let ((append (env-ref env57721 2)))
           (let ((kont57405 (env-ref env57721 1)))
             (let ((f5740657566
                    (make-closure lam57718 cons kont57405 a5730457563)))
               (clo-app append f5740657566 a5730557565 lst2))))))))
  (proc
   (lam57722 env57723 a5730457563)
   (let ((cdr (env-ref env57723 6)))
     (let ((lst2 (env-ref env57723 5)))
       (let ((lst1 (env-ref env57723 4)))
         (let ((cons (env-ref env57723 3)))
           (let ((append (env-ref env57723 2)))
             (let ((kont57405 (env-ref env57723 1)))
               (let ((f5740757564
                      (make-closure
                       lam57720
                       kont57405
                       append
                       cons
                       lst2
                       a5730457563)))
                 (clo-app cdr f5740757564 lst1)))))))))
  (proc
   (lam57724 env57725 a5730357561)
   (let ((cdr (env-ref env57725 7)))
     (let ((lst2 (env-ref env57725 6)))
       (let ((cons (env-ref env57725 5)))
         (let ((append (env-ref env57725 4)))
           (let ((kont57405 (env-ref env57725 3)))
             (let ((lst1 (env-ref env57725 2)))
               (let ((car (env-ref env57725 1)))
                 (if a5730357561
                   (clo-app kont57405 lst2)
                   (let ((f5740857562
                          (make-closure
                           lam57722
                           kont57405
                           append
                           cons
                           lst1
                           lst2
                           cdr)))
                     (clo-app car f5740857562 lst1)))))))))))
  (proc
   (append _57726 kont57405 lst1 lst2)
   (let ((f5740957560
          (make-closure lam57724 car lst1 kont57405 append cons lst2 cdr)))
     (clo-app null? f5740957560 lst1)))
  (proc
   (hash _57727 . lst)
   (let ((kont5741057568 (prim car lst)))
     (let ((lst57569 (prim cdr lst)))
       (let ((x5730757570 (apply-prim hash lst57569)))
         (clo-app kont5741057568 x5730757570)))))
  (proc
   (hash-ref _57728 kont57412 h k)
   (let ((x5730857571 (prim hash-ref h k))) (clo-app kont57412 x5730857571)))
  (proc
   (hash-set _57729 kont57413 h k v)
   (let ((x5730957572 (prim hash-set h k v))) (clo-app kont57413 x5730957572)))
  (proc
   (hash-has-key? _57730 kont57414 h k)
   (let ((x5731057573 (prim hash-has-key? h k)))
     (clo-app kont57414 x5731057573)))
  (proc
   (hash-count _57731 kont57415 h)
   (let ((x5731157574 (prim hash-count h))) (clo-app kont57415 x5731157574)))
  (proc
   (lam57733 env57734 a5731657580)
   (let ((kont57416 (env-ref env57734 2)))
     (let ((hash-has-key? (env-ref env57734 1)))
       (let ((a5731757581 '5))
         (clo-app hash-has-key? kont57416 a5731657580 a5731757581)))))
  (proc
   (call _57739 kont57416)
   (let ((a5731257575 '100))
     (let ((a5731357576 '80))
       (let ((a5731457577 '10))
         (let ((a5731557578 '2))
           (let ((f5741757579 (make-closure lam57733 hash-has-key? kont57416)))
             (clo-app
              hash
              f5741757579
              a5731257575
              a5731357576
              a5731457577
              a5731557578)))))))
  (proc
   (lam57740 env57741 x5731857583)
   (let ((kont57418 (env-ref env57741 1))) (clo-app kont57418 x5731857583)))
  (proc
   (brouhaha_main _57742 kont57418)
   (let ((f5741957582 (make-closure lam57740 kont57418)))
     (clo-app call f5741957582))))
