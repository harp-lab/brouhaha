'((define (+ . lst)
    (let ((kont4038540486 (prim car lst)))
      (let ((lst40487 (prim cdr lst)))
        (let ((x4029740488 (apply-prim + lst40487)))
          (kont4038540486 x4029740488)))))
  (define (- . lst)
    (let ((kont4038740489 (prim car lst)))
      (let ((lst40490 (prim cdr lst)))
        (let ((x4029840491 (apply-prim - lst40490)))
          (kont4038740489 x4029840491)))))
  (define (* . lst)
    (let ((kont4038940492 (prim car lst)))
      (let ((lst40493 (prim cdr lst)))
        (let ((x4029940494 (apply-prim * lst40493)))
          (kont4038940492 x4029940494)))))
  (define (modulo kont40391 a b)
    (let ((x4030040495 (prim modulo a b))) (kont40391 x4030040495)))
  (define (/ . lst)
    (let ((kont4039240496 (prim car lst)))
      (let ((lst40497 (prim cdr lst)))
        (let ((x4030140498 (apply-prim / lst40497)))
          (kont4039240496 x4030140498)))))
  (define (= . lst)
    (let ((kont4039440499 (prim car lst)))
      (let ((lst40500 (prim cdr lst)))
        (let ((x4030240501 (apply-prim = lst40500)))
          (kont4039440499 x4030240501)))))
  (define (> . lst)
    (let ((kont4039640502 (prim car lst)))
      (let ((lst40503 (prim cdr lst)))
        (let ((x4030340504 (apply-prim > lst40503)))
          (kont4039640502 x4030340504)))))
  (define (< . lst)
    (let ((kont4039840505 (prim car lst)))
      (let ((lst40506 (prim cdr lst)))
        (let ((x4030440507 (apply-prim < lst40506)))
          (kont4039840505 x4030440507)))))
  (define (<= . lst)
    (let ((kont4040040508 (prim car lst)))
      (let ((lst40509 (prim cdr lst)))
        (let ((x4030540510 (apply-prim <= lst40509)))
          (kont4040040508 x4030540510)))))
  (define (>= . lst)
    (let ((kont4040240511 (prim car lst)))
      (let ((lst40512 (prim cdr lst)))
        (let ((x4030640513 (apply-prim >= lst40512)))
          (kont4040240511 x4030640513)))))
  (define (null? kont40404 x)
    (let ((x4030740514 (prim null? x))) (kont40404 x4030740514)))
  (define (equal? kont40405 x y)
    (let ((x4030840515 (prim equal? x y))) (kont40405 x4030840515)))
  (define (eq? kont40406 x y)
    (let ((x4030940516 (prim eq? x y))) (kont40406 x4030940516)))
  (define (cons kont40407 a b)
    (let ((x4031040517 (prim cons a b))) (kont40407 x4031040517)))
  (define (car kont40408 lst)
    (let ((x4031140518 (prim car lst))) (kont40408 x4031140518)))
  (define (cdr kont40409 lst)
    (let ((x4031240519 (prim cdr lst))) (kont40409 x4031240519)))
  (define (even? kont40410 x)
    (let ((a4031340520 '0))
      (let ((a4031440521 '2))
        (let ((f4041140522
               (lambda (a4031540523)
                 (equal? kont40410 a4031340520 a4031540523))))
          (modulo f4041140522 x a4031440521)))))
  (define (odd? kont40412 x)
    (let ((a4031640524 '1))
      (let ((a4031740525 '2))
        (let ((f4041340526
               (lambda (a4031840527)
                 (equal? kont40412 a4031640524 a4031840527))))
          (modulo f4041340526 x a4031740525)))))
  (define (list . x)
    (let ((kont4041440528 (prim car x)))
      (let ((x40529 (prim cdr x))) (kont4041440528 x40529))))
  (define (member? kont40416 x lst)
    (let ((f4042040530
           (lambda (a4031940531)
             (if a4031940531
               (let ((x4032040532 '#f)) (kont40416 x4032040532))
               (let ((f4041940533
                      (lambda (a4032140534)
                        (let ((f4041840535
                               (lambda (a4032240536)
                                 (if a4032240536
                                   (let ((x4032340537 '#t))
                                     (kont40416 x4032340537))
                                   (let ((f4041740538
                                          (lambda (a4032440539)
                                            (member?
                                             kont40416
                                             x
                                             a4032440539))))
                                     (cdr f4041740538 lst))))))
                          (equal? f4041840535 a4032140534 x)))))
                 (car f4041940533 lst))))))
      (null? f4042040530 lst)))
  (define (foldl kont40421 fun acc lst)
    (let ((f4042540540
           (lambda (a4032540541)
             (if a4032540541
               (kont40421 acc)
               (let ((f4042440542
                      (lambda (a4032640543)
                        (let ((f4042340544
                               (lambda (a4032740545)
                                 (let ((f4042240546
                                        (lambda (a4032840547)
                                          (foldl
                                           kont40421
                                           fun
                                           a4032740545
                                           a4032840547))))
                                   (cdr f4042240546 lst)))))
                          (fun f4042340544 a4032640543 acc)))))
                 (car f4042440542 lst))))))
      (null? f4042540540 lst)))
  (define (reverse-helper kont40426 lst lst2)
    (let ((f4043040548
           (lambda (a4032940549)
             (if a4032940549
               (kont40426 lst2)
               (let ((f4042940550
                      (lambda (a4033040551)
                        (let ((f4042840552
                               (lambda (a4033140553)
                                 (let ((f4042740554
                                        (lambda (a4033240555)
                                          (reverse-helper
                                           kont40426
                                           a4033040551
                                           a4033240555))))
                                   (cons f4042740554 a4033140553 lst2)))))
                          (car f4042840552 lst)))))
                 (cdr f4042940550 lst))))))
      (null? f4043040548 lst)))
  (define (reverse kont40431 lst)
    (let ((f4043240556
           (lambda (a4033340557) (reverse-helper kont40431 lst a4033340557))))
      (list f4043240556)))
  (define (take-helper kont40433 lst n lst2)
    (let ((a4033440558 '0))
      (let ((f4043940559
             (lambda (a4033540560)
               (if a4033540560
                 (let ((f4043440561
                        (lambda (x4033640562) (kont40433 x4033640562))))
                   (reverse f4043440561 lst2))
                 (let ((f4043840563
                        (lambda (a4033740564)
                          (let ((a4033840565 '1))
                            (let ((f4043740566
                                   (lambda (a4033940567)
                                     (let ((f4043640568
                                            (lambda (a4034040569)
                                              (let ((f4043540570
                                                     (lambda (a4034140571)
                                                       (take-helper
                                                        kont40433
                                                        a4033740564
                                                        a4033940567
                                                        a4034140571))))
                                                (cons
                                                 f4043540570
                                                 a4034040569
                                                 lst2)))))
                                       (car f4043640568 lst)))))
                              (- f4043740566 n a4033840565))))))
                   (cdr f4043840563 lst))))))
        (= f4043940559 n a4033440558))))
  (define (take kont40440 lst n)
    (let ((f4044140572
           (lambda (a4034240573) (take-helper kont40440 lst n a4034240573))))
      (list f4044140572)))
  (define (length kont40442 lst)
    (let ((f4044540574
           (lambda (a4034340575)
             (if a4034340575
               (let ((x4034440576 '0)) (kont40442 x4034440576))
               (let ((a4034540577 '1))
                 (let ((f4044440578
                        (lambda (a4034640579)
                          (let ((f4044340580
                                 (lambda (a4034740581)
                                   (+ kont40442 a4034540577 a4034740581))))
                            (length f4044340580 a4034640579)))))
                   (cdr f4044440578 lst)))))))
      (null? f4044540574 lst)))
  (define (map kont40446 proc lst)
    (let ((f4045240582
           (lambda (a4034840583)
             (if a4034840583
               (let ((f4044740584
                      (lambda (x4034940585) (kont40446 x4034940585))))
                 (list f4044740584))
               (let ((f4045140586
                      (lambda (a4035040587)
                        (let ((f4045040588
                               (lambda (a4035140589)
                                 (let ((f4044940590
                                        (lambda (a4035240591)
                                          (let ((f4044840592
                                                 (lambda (a4035340593)
                                                   (cons
                                                    kont40446
                                                    a4035140589
                                                    a4035340593))))
                                            (map
                                             f4044840592
                                             proc
                                             a4035240591)))))
                                   (cdr f4044940590 lst)))))
                          (proc f4045040588 a4035040587)))))
                 (car f4045140586 lst))))))
      (null? f4045240582 lst)))
  (define (filter kont40453 op lst)
    (let ((f4046140594
           (lambda (a4035440595)
             (if a4035440595
               (let ((f4045440596
                      (lambda (x4035540597) (kont40453 x4035540597))))
                 (list f4045440596))
               (let ((f4046040598
                      (lambda (a4035640599)
                        (let ((f4045940600
                               (lambda (a4035740601)
                                 (if a4035740601
                                   (let ((f4045740602
                                          (lambda (a4035840603)
                                            (let ((f4045640604
                                                   (lambda (a4035940605)
                                                     (let ((f4045540606
                                                            (lambda (a4036040607)
                                                              (cons
                                                               kont40453
                                                               a4035840603
                                                               a4036040607))))
                                                       (filter
                                                        f4045540606
                                                        op
                                                        a4035940605)))))
                                              (cdr f4045640604 lst)))))
                                     (car f4045740602 lst))
                                   (let ((f4045840608
                                          (lambda (a4036140609)
                                            (filter
                                             kont40453
                                             op
                                             a4036140609))))
                                     (cdr f4045840608 lst))))))
                          (op f4045940600 a4035640599)))))
                 (car f4046040598 lst))))))
      (null? f4046140594 lst)))
  (define (drop kont40462 lst n)
    (let ((a4036240610 '0))
      (let ((f4046540611
             (lambda (a4036340612)
               (if a4036340612
                 (kont40462 lst)
                 (let ((f4046440613
                        (lambda (a4036440614)
                          (let ((a4036540615 '1))
                            (let ((f4046340616
                                   (lambda (a4036640617)
                                     (drop
                                      kont40462
                                      a4036440614
                                      a4036640617))))
                              (- f4046340616 n a4036540615))))))
                   (cdr f4046440613 lst))))))
        (= f4046540611 n a4036240610))))
  (define (foldr kont40466 proc acc lst)
    (let ((f4047040618
           (lambda (a4036740619)
             (if a4036740619
               (kont40466 acc)
               (let ((f4046940620
                      (lambda (a4036840621)
                        (let ((f4046840622
                               (lambda (a4036940623)
                                 (let ((f4046740624
                                        (lambda (a4037040625)
                                          (proc
                                           kont40466
                                           a4036840621
                                           a4037040625))))
                                   (foldr f4046740624 proc acc a4036940623)))))
                          (cdr f4046840622 lst)))))
                 (car f4046940620 lst))))))
      (null? f4047040618 lst)))
  (define (append kont40471 lst1 lst2)
    (let ((f4047540626
           (lambda (a4037140627)
             (if a4037140627
               (kont40471 lst2)
               (let ((f4047440628
                      (lambda (a4037240629)
                        (let ((f4047340630
                               (lambda (a4037340631)
                                 (let ((f4047240632
                                        (lambda (a4037440633)
                                          (cons
                                           kont40471
                                           a4037240629
                                           a4037440633))))
                                   (append f4047240632 a4037340631 lst2)))))
                          (cdr f4047340630 lst1)))))
                 (car f4047440628 lst1))))))
      (null? f4047540626 lst1)))
  (define (hash . lst)
    (let ((kont4047640634 (prim car lst)))
      (let ((lst40635 (prim cdr lst)))
        (let ((x4037540636 (apply-prim hash lst40635)))
          (kont4047640634 x4037540636)))))
  (define (hash-ref kont40478 h k)
    (let ((x4037640637 (prim hash-ref h k))) (kont40478 x4037640637)))
  (define (hash-set kont40479 h k v)
    (let ((x4037740638 (prim hash-set h k v))) (kont40479 x4037740638)))
  (define (hash-has-key? kont40480 h k)
    (let ((x4037840639 (prim hash-has-key? h k))) (kont40480 x4037840639)))
  (define (hash-count kont40481 h)
    (let ((x4037940640 (prim hash-count h))) (kont40481 x4037940640)))
  (define (call kont40482)
    (let ((a4038040641 '1))
      (let ((a4038140642 '2))
        (let ((a4038240643 '3))
          (let ((f4048340644
                 (lambda (a4038340645) (filter kont40482 odd? a4038340645))))
            (list f4048340644 a4038040641 a4038140642 a4038240643))))))
  (define (brouhaha_main kont40484)
    (let ((f4048540646 (lambda (x4038440647) (kont40484 x4038440647))))
      (call f4048540646))))
