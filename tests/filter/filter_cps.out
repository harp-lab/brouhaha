'((define (+ . lst)
    (let ((kont4219642297 (prim car lst)))
      (let ((lst42298 (prim cdr lst)))
        (let ((x4210842299 (apply-prim + lst42298)))
          (kont4219642297 x4210842299)))))
  (define (- . lst)
    (let ((kont4219842300 (prim car lst)))
      (let ((lst42301 (prim cdr lst)))
        (let ((x4210942302 (apply-prim - lst42301)))
          (kont4219842300 x4210942302)))))
  (define (* . lst)
    (let ((kont4220042303 (prim car lst)))
      (let ((lst42304 (prim cdr lst)))
        (let ((x4211042305 (apply-prim * lst42304)))
          (kont4220042303 x4211042305)))))
  (define (modulo kont42202 a b)
    (let ((x4211142306 (prim modulo a b))) (kont42202 x4211142306)))
  (define (/ . lst)
    (let ((kont4220342307 (prim car lst)))
      (let ((lst42308 (prim cdr lst)))
        (let ((x4211242309 (apply-prim / lst42308)))
          (kont4220342307 x4211242309)))))
  (define (= . lst)
    (let ((kont4220542310 (prim car lst)))
      (let ((lst42311 (prim cdr lst)))
        (let ((x4211342312 (apply-prim = lst42311)))
          (kont4220542310 x4211342312)))))
  (define (> . lst)
    (let ((kont4220742313 (prim car lst)))
      (let ((lst42314 (prim cdr lst)))
        (let ((x4211442315 (apply-prim > lst42314)))
          (kont4220742313 x4211442315)))))
  (define (< . lst)
    (let ((kont4220942316 (prim car lst)))
      (let ((lst42317 (prim cdr lst)))
        (let ((x4211542318 (apply-prim < lst42317)))
          (kont4220942316 x4211542318)))))
  (define (<= . lst)
    (let ((kont4221142319 (prim car lst)))
      (let ((lst42320 (prim cdr lst)))
        (let ((x4211642321 (apply-prim <= lst42320)))
          (kont4221142319 x4211642321)))))
  (define (>= . lst)
    (let ((kont4221342322 (prim car lst)))
      (let ((lst42323 (prim cdr lst)))
        (let ((x4211742324 (apply-prim >= lst42323)))
          (kont4221342322 x4211742324)))))
  (define (null? kont42215 x)
    (let ((x4211842325 (prim null? x))) (kont42215 x4211842325)))
  (define (equal? kont42216 x y)
    (let ((x4211942326 (prim equal? x y))) (kont42216 x4211942326)))
  (define (eq? kont42217 x y)
    (let ((x4212042327 (prim eq? x y))) (kont42217 x4212042327)))
  (define (cons kont42218 a b)
    (let ((x4212142328 (prim cons a b))) (kont42218 x4212142328)))
  (define (car kont42219 lst)
    (let ((x4212242329 (prim car lst))) (kont42219 x4212242329)))
  (define (cdr kont42220 lst)
    (let ((x4212342330 (prim cdr lst))) (kont42220 x4212342330)))
  (define (even? kont42221 x)
    (let ((a4212442331 '0))
      (let ((a4212542332 '2))
        (let ((f4222242333
               (lambda (a4212642334)
                 (equal? kont42221 a4212442331 a4212642334))))
          (modulo f4222242333 x a4212542332)))))
  (define (odd? kont42223 x)
    (let ((a4212742335 '1))
      (let ((a4212842336 '2))
        (let ((f4222442337
               (lambda (a4212942338)
                 (equal? kont42223 a4212742335 a4212942338))))
          (modulo f4222442337 x a4212842336)))))
  (define (list . x)
    (let ((kont4222542339 (prim car x)))
      (let ((x42340 (prim cdr x))) (kont4222542339 x42340))))
  (define (member? kont42227 x lst)
    (let ((f4223142341
           (lambda (a4213042342)
             (if a4213042342
               (let ((x4213142343 '#f)) (kont42227 x4213142343))
               (let ((f4223042344
                      (lambda (a4213242345)
                        (let ((f4222942346
                               (lambda (a4213342347)
                                 (if a4213342347
                                   (let ((x4213442348 '#t))
                                     (kont42227 x4213442348))
                                   (let ((f4222842349
                                          (lambda (a4213542350)
                                            (member?
                                             kont42227
                                             x
                                             a4213542350))))
                                     (cdr f4222842349 lst))))))
                          (equal? f4222942346 a4213242345 x)))))
                 (car f4223042344 lst))))))
      (null? f4223142341 lst)))
  (define (foldl kont42232 fun acc lst)
    (let ((f4223642351
           (lambda (a4213642352)
             (if a4213642352
               (kont42232 acc)
               (let ((f4223542353
                      (lambda (a4213742354)
                        (let ((f4223442355
                               (lambda (a4213842356)
                                 (let ((f4223342357
                                        (lambda (a4213942358)
                                          (foldl
                                           kont42232
                                           fun
                                           a4213842356
                                           a4213942358))))
                                   (cdr f4223342357 lst)))))
                          (fun f4223442355 a4213742354 acc)))))
                 (car f4223542353 lst))))))
      (null? f4223642351 lst)))
  (define (reverse-helper kont42237 lst lst2)
    (let ((f4224142359
           (lambda (a4214042360)
             (if a4214042360
               (kont42237 lst2)
               (let ((f4224042361
                      (lambda (a4214142362)
                        (let ((f4223942363
                               (lambda (a4214242364)
                                 (let ((f4223842365
                                        (lambda (a4214342366)
                                          (reverse-helper
                                           kont42237
                                           a4214142362
                                           a4214342366))))
                                   (cons f4223842365 a4214242364 lst2)))))
                          (car f4223942363 lst)))))
                 (cdr f4224042361 lst))))))
      (null? f4224142359 lst)))
  (define (reverse kont42242 lst)
    (let ((f4224342367
           (lambda (a4214442368) (reverse-helper kont42242 lst a4214442368))))
      (list f4224342367)))
  (define (take-helper kont42244 lst n lst2)
    (let ((a4214542369 '0))
      (let ((f4225042370
             (lambda (a4214642371)
               (if a4214642371
                 (let ((f4224542372
                        (lambda (x4214742373) (kont42244 x4214742373))))
                   (reverse f4224542372 lst2))
                 (let ((f4224942374
                        (lambda (a4214842375)
                          (let ((a4214942376 '1))
                            (let ((f4224842377
                                   (lambda (a4215042378)
                                     (let ((f4224742379
                                            (lambda (a4215142380)
                                              (let ((f4224642381
                                                     (lambda (a4215242382)
                                                       (take-helper
                                                        kont42244
                                                        a4214842375
                                                        a4215042378
                                                        a4215242382))))
                                                (cons
                                                 f4224642381
                                                 a4215142380
                                                 lst2)))))
                                       (car f4224742379 lst)))))
                              (- f4224842377 n a4214942376))))))
                   (cdr f4224942374 lst))))))
        (= f4225042370 n a4214542369))))
  (define (take kont42251 lst n)
    (let ((f4225242383
           (lambda (a4215342384) (take-helper kont42251 lst n a4215342384))))
      (list f4225242383)))
  (define (length kont42253 lst)
    (let ((f4225642385
           (lambda (a4215442386)
             (if a4215442386
               (let ((x4215542387 '0)) (kont42253 x4215542387))
               (let ((a4215642388 '1))
                 (let ((f4225542389
                        (lambda (a4215742390)
                          (let ((f4225442391
                                 (lambda (a4215842392)
                                   (+ kont42253 a4215642388 a4215842392))))
                            (length f4225442391 a4215742390)))))
                   (cdr f4225542389 lst)))))))
      (null? f4225642385 lst)))
  (define (map kont42257 proc lst)
    (let ((f4226342393
           (lambda (a4215942394)
             (if a4215942394
               (let ((f4225842395
                      (lambda (x4216042396) (kont42257 x4216042396))))
                 (list f4225842395))
               (let ((f4226242397
                      (lambda (a4216142398)
                        (let ((f4226142399
                               (lambda (a4216242400)
                                 (let ((f4226042401
                                        (lambda (a4216342402)
                                          (let ((f4225942403
                                                 (lambda (a4216442404)
                                                   (cons
                                                    kont42257
                                                    a4216242400
                                                    a4216442404))))
                                            (map
                                             f4225942403
                                             proc
                                             a4216342402)))))
                                   (cdr f4226042401 lst)))))
                          (proc f4226142399 a4216142398)))))
                 (car f4226242397 lst))))))
      (null? f4226342393 lst)))
  (define (filter kont42264 op lst)
    (let ((f4227242405
           (lambda (a4216542406)
             (if a4216542406
               (let ((f4226542407
                      (lambda (x4216642408) (kont42264 x4216642408))))
                 (list f4226542407))
               (let ((f4227142409
                      (lambda (a4216742410)
                        (let ((f4227042411
                               (lambda (a4216842412)
                                 (if a4216842412
                                   (let ((f4226842413
                                          (lambda (a4216942414)
                                            (let ((f4226742415
                                                   (lambda (a4217042416)
                                                     (let ((f4226642417
                                                            (lambda (a4217142418)
                                                              (cons
                                                               kont42264
                                                               a4216942414
                                                               a4217142418))))
                                                       (filter
                                                        f4226642417
                                                        op
                                                        a4217042416)))))
                                              (cdr f4226742415 lst)))))
                                     (car f4226842413 lst))
                                   (let ((f4226942419
                                          (lambda (a4217242420)
                                            (filter
                                             kont42264
                                             op
                                             a4217242420))))
                                     (cdr f4226942419 lst))))))
                          (op f4227042411 a4216742410)))))
                 (car f4227142409 lst))))))
      (null? f4227242405 lst)))
  (define (drop kont42273 lst n)
    (let ((a4217342421 '0))
      (let ((f4227642422
             (lambda (a4217442423)
               (if a4217442423
                 (kont42273 lst)
                 (let ((f4227542424
                        (lambda (a4217542425)
                          (let ((a4217642426 '1))
                            (let ((f4227442427
                                   (lambda (a4217742428)
                                     (drop
                                      kont42273
                                      a4217542425
                                      a4217742428))))
                              (- f4227442427 n a4217642426))))))
                   (cdr f4227542424 lst))))))
        (= f4227642422 n a4217342421))))
  (define (foldr kont42277 proc acc lst)
    (let ((f4228142429
           (lambda (a4217842430)
             (if a4217842430
               (kont42277 acc)
               (let ((f4228042431
                      (lambda (a4217942432)
                        (let ((f4227942433
                               (lambda (a4218042434)
                                 (let ((f4227842435
                                        (lambda (a4218142436)
                                          (proc
                                           kont42277
                                           a4217942432
                                           a4218142436))))
                                   (foldr f4227842435 proc acc a4218042434)))))
                          (cdr f4227942433 lst)))))
                 (car f4228042431 lst))))))
      (null? f4228142429 lst)))
  (define (append kont42282 lst1 lst2)
    (let ((f4228642437
           (lambda (a4218242438)
             (if a4218242438
               (kont42282 lst2)
               (let ((f4228542439
                      (lambda (a4218342440)
                        (let ((f4228442441
                               (lambda (a4218442442)
                                 (let ((f4228342443
                                        (lambda (a4218542444)
                                          (cons
                                           kont42282
                                           a4218342440
                                           a4218542444))))
                                   (append f4228342443 a4218442442 lst2)))))
                          (cdr f4228442441 lst1)))))
                 (car f4228542439 lst1))))))
      (null? f4228642437 lst1)))
  (define (hash . lst)
    (let ((kont4228742445 (prim car lst)))
      (let ((lst42446 (prim cdr lst)))
        (let ((x4218642447 (apply-prim hash lst42446)))
          (kont4228742445 x4218642447)))))
  (define (hash-ref kont42289 h k)
    (let ((x4218742448 (prim hash-ref h k))) (kont42289 x4218742448)))
  (define (hash-set kont42290 h k v)
    (let ((x4218842449 (prim hash-set h k v))) (kont42290 x4218842449)))
  (define (hash-has-key? kont42291 h k)
    (let ((x4218942450 (prim hash-has-key? h k))) (kont42291 x4218942450)))
  (define (hash-count kont42292 h)
    (let ((x4219042451 (prim hash-count h))) (kont42292 x4219042451)))
  (define (call kont42293)
    (let ((a4219142452 '1))
      (let ((a4219242453 '2))
        (let ((a4219342454 '3))
          (let ((f4229442455
                 (lambda (a4219442456) (filter kont42293 odd? a4219442456))))
            (list f4229442455 a4219142452 a4219242453 a4219342454))))))
  (define (brouhaha_main kont42295)
    (let ((f4229642457 (lambda (x4219542458) (kont42295 x4219542458))))
      (call f4229642457))))
