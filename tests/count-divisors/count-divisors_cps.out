'((define (+ . lst)
    (let ((kont58285933 (prim car lst)))
      (let ((lst5934 (prim cdr lst)))
        (let ((x57345935 (apply-prim + lst5934))) (kont58285933 x57345935)))))
  (define (- . lst)
    (let ((kont58305936 (prim car lst)))
      (let ((lst5937 (prim cdr lst)))
        (let ((x57355938 (apply-prim - lst5937))) (kont58305936 x57355938)))))
  (define (* . lst)
    (let ((kont58325939 (prim car lst)))
      (let ((lst5940 (prim cdr lst)))
        (let ((x57365941 (apply-prim * lst5940))) (kont58325939 x57365941)))))
  (define (modulo kont5834 a b)
    (let ((x57375942 (prim modulo a b))) (kont5834 x57375942)))
  (define (/ . lst)
    (let ((kont58355943 (prim car lst)))
      (let ((lst5944 (prim cdr lst)))
        (let ((x57385945 (apply-prim / lst5944))) (kont58355943 x57385945)))))
  (define (= . lst)
    (let ((kont58375946 (prim car lst)))
      (let ((lst5947 (prim cdr lst)))
        (let ((x57395948 (apply-prim = lst5947))) (kont58375946 x57395948)))))
  (define (> . lst)
    (let ((kont58395949 (prim car lst)))
      (let ((lst5950 (prim cdr lst)))
        (let ((x57405951 (apply-prim > lst5950))) (kont58395949 x57405951)))))
  (define (< . lst)
    (let ((kont58415952 (prim car lst)))
      (let ((lst5953 (prim cdr lst)))
        (let ((x57415954 (apply-prim < lst5953))) (kont58415952 x57415954)))))
  (define (<= . lst)
    (let ((kont58435955 (prim car lst)))
      (let ((lst5956 (prim cdr lst)))
        (let ((x57425957 (apply-prim <= lst5956))) (kont58435955 x57425957)))))
  (define (>= . lst)
    (let ((kont58455958 (prim car lst)))
      (let ((lst5959 (prim cdr lst)))
        (let ((x57435960 (apply-prim >= lst5959))) (kont58455958 x57435960)))))
  (define (null? kont5847 x)
    (let ((x57445961 (prim null? x))) (kont5847 x57445961)))
  (define (equal? kont5848 x y)
    (let ((x57455962 (prim equal? x y))) (kont5848 x57455962)))
  (define (eq? kont5849 x y)
    (let ((x57465963 (prim eq? x y))) (kont5849 x57465963)))
  (define (cons kont5850 a b)
    (let ((x57475964 (prim cons a b))) (kont5850 x57475964)))
  (define (car kont5851 lst)
    (let ((x57485965 (prim car lst))) (kont5851 x57485965)))
  (define (cdr kont5852 lst)
    (let ((x57495966 (prim cdr lst))) (kont5852 x57495966)))
  (define (even? kont5853 x)
    (let ((a57505967 '0))
      (let ((a57515968 '2))
        (let ((f58545969
               (lambda (a57525970) (equal? kont5853 a57505967 a57525970))))
          (modulo f58545969 x a57515968)))))
  (define (odd? kont5855 x)
    (let ((a57535971 '1))
      (let ((a57545972 '2))
        (let ((f58565973
               (lambda (a57555974) (equal? kont5855 a57535971 a57555974))))
          (modulo f58565973 x a57545972)))))
  (define (list . x)
    (let ((kont58575975 (prim car x)))
      (let ((x5976 (prim cdr x))) (kont58575975 x5976))))
  (define (member? kont5859 x lst)
    (let ((f58635977
           (lambda (a57565978)
             (if a57565978
               (let ((x57575979 '#f)) (kont5859 x57575979))
               (let ((f58625980
                      (lambda (a57585981)
                        (let ((f58615982
                               (lambda (a57595983)
                                 (if a57595983
                                   (let ((x57605984 '#t)) (kont5859 x57605984))
                                   (let ((f58605985
                                          (lambda (a57615986)
                                            (member? kont5859 x a57615986))))
                                     (cdr f58605985 lst))))))
                          (equal? f58615982 a57585981 x)))))
                 (car f58625980 lst))))))
      (null? f58635977 lst)))
  (define (foldl kont5864 fun acc lst)
    (let ((f58685987
           (lambda (a57625988)
             (if a57625988
               (kont5864 acc)
               (let ((f58675989
                      (lambda (a57635990)
                        (let ((f58665991
                               (lambda (a57645992)
                                 (let ((f58655993
                                        (lambda (a57655994)
                                          (foldl
                                           kont5864
                                           fun
                                           a57645992
                                           a57655994))))
                                   (cdr f58655993 lst)))))
                          (fun f58665991 a57635990 acc)))))
                 (car f58675989 lst))))))
      (null? f58685987 lst)))
  (define (reverse-helper kont5869 lst lst2)
    (let ((f58735995
           (lambda (a57665996)
             (if a57665996
               (kont5869 lst2)
               (let ((f58725997
                      (lambda (a57675998)
                        (let ((f58715999
                               (lambda (a57686000)
                                 (let ((f58706001
                                        (lambda (a57696002)
                                          (reverse-helper
                                           kont5869
                                           a57675998
                                           a57696002))))
                                   (cons f58706001 a57686000 lst2)))))
                          (car f58715999 lst)))))
                 (cdr f58725997 lst))))))
      (null? f58735995 lst)))
  (define (reverse kont5874 lst)
    (let ((f58756003
           (lambda (a57706004) (reverse-helper kont5874 lst a57706004))))
      (list f58756003)))
  (define (take-helper kont5876 lst n lst2)
    (let ((a57716005 '0))
      (let ((f58826006
             (lambda (a57726007)
               (if a57726007
                 (let ((f58776008 (lambda (x57736009) (kont5876 x57736009))))
                   (reverse f58776008 lst2))
                 (let ((f58816010
                        (lambda (a57746011)
                          (let ((a57756012 '1))
                            (let ((f58806013
                                   (lambda (a57766014)
                                     (let ((f58796015
                                            (lambda (a57776016)
                                              (let ((f58786017
                                                     (lambda (a57786018)
                                                       (take-helper
                                                        kont5876
                                                        a57746011
                                                        a57766014
                                                        a57786018))))
                                                (cons
                                                 f58786017
                                                 a57776016
                                                 lst2)))))
                                       (car f58796015 lst)))))
                              (- f58806013 n a57756012))))))
                   (cdr f58816010 lst))))))
        (= f58826006 n a57716005))))
  (define (take kont5883 lst n)
    (let ((f58846019
           (lambda (a57796020) (take-helper kont5883 lst n a57796020))))
      (list f58846019)))
  (define (length kont5885 lst)
    (let ((f58886021
           (lambda (a57806022)
             (if a57806022
               (let ((x57816023 '0)) (kont5885 x57816023))
               (let ((a57826024 '1))
                 (let ((f58876025
                        (lambda (a57836026)
                          (let ((f58866027
                                 (lambda (a57846028)
                                   (+ kont5885 a57826024 a57846028))))
                            (length f58866027 a57836026)))))
                   (cdr f58876025 lst)))))))
      (null? f58886021 lst)))
  (define (map kont5889 proc lst)
    (let ((f58956029
           (lambda (a57856030)
             (if a57856030
               (let ((f58906031 (lambda (x57866032) (kont5889 x57866032))))
                 (list f58906031))
               (let ((f58946033
                      (lambda (a57876034)
                        (let ((f58936035
                               (lambda (a57886036)
                                 (let ((f58926037
                                        (lambda (a57896038)
                                          (let ((f58916039
                                                 (lambda (a57906040)
                                                   (cons
                                                    kont5889
                                                    a57886036
                                                    a57906040))))
                                            (map f58916039 proc a57896038)))))
                                   (cdr f58926037 lst)))))
                          (proc f58936035 a57876034)))))
                 (car f58946033 lst))))))
      (null? f58956029 lst)))
  (define (filter kont5896 op lst)
    (let ((f59046041
           (lambda (a57916042)
             (if a57916042
               (let ((f58976043 (lambda (x57926044) (kont5896 x57926044))))
                 (list f58976043))
               (let ((f59036045
                      (lambda (a57936046)
                        (let ((f59026047
                               (lambda (a57946048)
                                 (if a57946048
                                   (let ((f59006049
                                          (lambda (a57956050)
                                            (let ((f58996051
                                                   (lambda (a57966052)
                                                     (let ((f58986053
                                                            (lambda (a57976054)
                                                              (cons
                                                               kont5896
                                                               a57956050
                                                               a57976054))))
                                                       (filter
                                                        f58986053
                                                        op
                                                        a57966052)))))
                                              (cdr f58996051 lst)))))
                                     (car f59006049 lst))
                                   (let ((f59016055
                                          (lambda (a57986056)
                                            (filter kont5896 op a57986056))))
                                     (cdr f59016055 lst))))))
                          (op f59026047 a57936046)))))
                 (car f59036045 lst))))))
      (null? f59046041 lst)))
  (define (drop kont5905 lst n)
    (let ((a57996057 '0))
      (let ((f59086058
             (lambda (a58006059)
               (if a58006059
                 (kont5905 lst)
                 (let ((f59076060
                        (lambda (a58016061)
                          (let ((a58026062 '1))
                            (let ((f59066063
                                   (lambda (a58036064)
                                     (drop kont5905 a58016061 a58036064))))
                              (- f59066063 n a58026062))))))
                   (cdr f59076060 lst))))))
        (= f59086058 n a57996057))))
  (define (foldr kont5909 proc acc lst)
    (let ((f59136065
           (lambda (a58046066)
             (if a58046066
               (kont5909 acc)
               (let ((f59126067
                      (lambda (a58056068)
                        (let ((f59116069
                               (lambda (a58066070)
                                 (let ((f59106071
                                        (lambda (a58076072)
                                          (proc
                                           kont5909
                                           a58056068
                                           a58076072))))
                                   (foldr f59106071 proc acc a58066070)))))
                          (cdr f59116069 lst)))))
                 (car f59126067 lst))))))
      (null? f59136065 lst)))
  (define (append kont5914 lst1 lst2)
    (let ((f59186073
           (lambda (a58086074)
             (if a58086074
               (kont5914 lst2)
               (let ((f59176075
                      (lambda (a58096076)
                        (let ((f59166077
                               (lambda (a58106078)
                                 (let ((f59156079
                                        (lambda (a58116080)
                                          (cons
                                           kont5914
                                           a58096076
                                           a58116080))))
                                   (append f59156079 a58106078 lst2)))))
                          (cdr f59166077 lst1)))))
                 (car f59176075 lst1))))))
      (null? f59186073 lst1)))
  (define (hash . lst)
    (let ((kont59196081 (prim car lst)))
      (let ((lst6082 (prim cdr lst)))
        (let ((x58126083 (apply-prim hash lst6082)))
          (kont59196081 x58126083)))))
  (define (hash-ref kont5921 h k)
    (let ((x58136084 (prim hash-ref h k))) (kont5921 x58136084)))
  (define (hash-set kont5922 h k v)
    (let ((x58146085 (prim hash-set h k v))) (kont5922 x58146085)))
  (define (hash-has-key? kont5923 h k)
    (let ((x58156086 (prim hash-has-key? h k))) (kont5923 x58156086)))
  (define (hash-count kont5924 h)
    (let ((x58166087 (prim hash-count h))) (kont5924 x58166087)))
  (define (helper kont5925 i count num)
    (let ((f59306088
           (lambda (a58176089)
             (if a58176089
               (kont5925 count)
               (let ((a58186090 '1))
                 (let ((f59296091
                        (lambda (a58196092)
                          (let ((f59286093
                                 (lambda (a58206094)
                                   (let ((a58216095 '0))
                                     (let ((f59276096
                                            (lambda (a58226097)
                                              (let ((f59266098
                                                     (lambda (a58246099)
                                                       (helper
                                                        kont5925
                                                        a58196092
                                                        a58246099
                                                        num))))
                                                (if a58226097
                                                  (let ((a58236100 '1))
                                                    (+
                                                     f59266098
                                                     count
                                                     a58236100))
                                                  (f59266098 count))))))
                                       (= f59276096 a58206094 a58216095))))))
                            (modulo f59286093 num i)))))
                   (+ f59296091 i a58186090)))))))
      (> f59306088 i num)))
  (define (count-divisors kont5931 num)
    (let ((a58256101 '1))
      (let ((a58266102 '0)) (helper kont5931 a58256101 a58266102 num))))
  (define (brouhaha_main kont5932)
    (let ((a58276103 '10)) (count-divisors kont5932 a58276103))))
