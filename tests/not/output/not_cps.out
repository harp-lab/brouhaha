'((define (+ . lst)
    (let ((kont9122691326 (prim car lst)))
      (let ((lst91327 (prim cdr lst)))
        (let ((x9113991328 (apply-prim + lst91327)))
          (kont9122691326 x9113991328)))))
  (define (- . lst)
    (let ((kont9122891329 (prim car lst)))
      (let ((lst91330 (prim cdr lst)))
        (let ((x9114091331 (apply-prim - lst91330)))
          (kont9122891329 x9114091331)))))
  (define (* . lst)
    (let ((kont9123091332 (prim car lst)))
      (let ((lst91333 (prim cdr lst)))
        (let ((x9114191334 (apply-prim * lst91333)))
          (kont9123091332 x9114191334)))))
  (define (modulo kont91232 a b)
    (let ((x9114291335 (prim modulo a b))) (kont91232 x9114291335)))
  (define (/ . lst)
    (let ((kont9123391336 (prim car lst)))
      (let ((lst91337 (prim cdr lst)))
        (let ((x9114391338 (apply-prim / lst91337)))
          (kont9123391336 x9114391338)))))
  (define (= . lst)
    (let ((kont9123591339 (prim car lst)))
      (let ((lst91340 (prim cdr lst)))
        (let ((x9114491341 (apply-prim = lst91340)))
          (kont9123591339 x9114491341)))))
  (define (> . lst)
    (let ((kont9123791342 (prim car lst)))
      (let ((lst91343 (prim cdr lst)))
        (let ((x9114591344 (apply-prim > lst91343)))
          (kont9123791342 x9114591344)))))
  (define (< . lst)
    (let ((kont9123991345 (prim car lst)))
      (let ((lst91346 (prim cdr lst)))
        (let ((x9114691347 (apply-prim < lst91346)))
          (kont9123991345 x9114691347)))))
  (define (<= . lst)
    (let ((kont9124191348 (prim car lst)))
      (let ((lst91349 (prim cdr lst)))
        (let ((x9114791350 (apply-prim <= lst91349)))
          (kont9124191348 x9114791350)))))
  (define (>= . lst)
    (let ((kont9124391351 (prim car lst)))
      (let ((lst91352 (prim cdr lst)))
        (let ((x9114891353 (apply-prim >= lst91352)))
          (kont9124391351 x9114891353)))))
  (define (null? kont91245 x)
    (let ((x9114991354 (prim null? x))) (kont91245 x9114991354)))
  (define (equal? kont91246 x y)
    (let ((x9115091355 (prim equal? x y))) (kont91246 x9115091355)))
  (define (eq? kont91247 x y)
    (let ((x9115191356 (prim eq? x y))) (kont91247 x9115191356)))
  (define (cons kont91248 a b)
    (let ((x9115291357 (prim cons a b))) (kont91248 x9115291357)))
  (define (car kont91249 lst)
    (let ((x9115391358 (prim car lst))) (kont91249 x9115391358)))
  (define (cdr kont91250 lst)
    (let ((x9115491359 (prim cdr lst))) (kont91250 x9115491359)))
  (define (even? kont91251 x)
    (let ((a9115591360 '0))
      (let ((a9115691361 '2))
        (let ((f9125291362
               (lambda (a9115791363)
                 (equal? kont91251 a9115591360 a9115791363))))
          (modulo f9125291362 x a9115691361)))))
  (define (odd? kont91253 x)
    (let ((a9115891364 '1))
      (let ((a9115991365 '2))
        (let ((f9125491366
               (lambda (a9116091367)
                 (equal? kont91253 a9115891364 a9116091367))))
          (modulo f9125491366 x a9115991365)))))
  (define (list . x)
    (let ((kont9125591368 (prim car x)))
      (let ((x91369 (prim cdr x))) (kont9125591368 x91369))))
  (define (member? kont91257 x lst)
    (let ((f9126191370
           (lambda (a9116191371)
             (if a9116191371
               (let ((x9116291372 '#f)) (kont91257 x9116291372))
               (let ((f9126091373
                      (lambda (a9116391374)
                        (let ((f9125991375
                               (lambda (a9116491376)
                                 (if a9116491376
                                   (let ((x9116591377 '#t))
                                     (kont91257 x9116591377))
                                   (let ((f9125891378
                                          (lambda (a9116691379)
                                            (member?
                                             kont91257
                                             x
                                             a9116691379))))
                                     (cdr f9125891378 lst))))))
                          (equal? f9125991375 a9116391374 x)))))
                 (car f9126091373 lst))))))
      (null? f9126191370 lst)))
  (define (foldl kont91262 fun acc lst)
    (let ((f9126691380
           (lambda (a9116791381)
             (if a9116791381
               (kont91262 acc)
               (let ((f9126591382
                      (lambda (a9116891383)
                        (let ((f9126491384
                               (lambda (a9116991385)
                                 (let ((f9126391386
                                        (lambda (a9117091387)
                                          (foldl
                                           kont91262
                                           fun
                                           a9116991385
                                           a9117091387))))
                                   (cdr f9126391386 lst)))))
                          (fun f9126491384 a9116891383 acc)))))
                 (car f9126591382 lst))))))
      (null? f9126691380 lst)))
  (define (reverse-helper kont91267 lst lst2)
    (let ((f9127191388
           (lambda (a9117191389)
             (if a9117191389
               (kont91267 lst2)
               (let ((f9127091390
                      (lambda (a9117291391)
                        (let ((f9126991392
                               (lambda (a9117391393)
                                 (let ((f9126891394
                                        (lambda (a9117491395)
                                          (reverse-helper
                                           kont91267
                                           a9117291391
                                           a9117491395))))
                                   (cons f9126891394 a9117391393 lst2)))))
                          (car f9126991392 lst)))))
                 (cdr f9127091390 lst))))))
      (null? f9127191388 lst)))
  (define (reverse kont91272 lst)
    (let ((f9127391396
           (lambda (a9117591397) (reverse-helper kont91272 lst a9117591397))))
      (list f9127391396)))
  (define (take-helper kont91274 lst n lst2)
    (let ((a9117691398 '0))
      (let ((f9128091399
             (lambda (a9117791400)
               (if a9117791400
                 (let ((f9127591401
                        (lambda (x9117891402) (kont91274 x9117891402))))
                   (reverse f9127591401 lst2))
                 (let ((f9127991403
                        (lambda (a9117991404)
                          (let ((a9118091405 '1))
                            (let ((f9127891406
                                   (lambda (a9118191407)
                                     (let ((f9127791408
                                            (lambda (a9118291409)
                                              (let ((f9127691410
                                                     (lambda (a9118391411)
                                                       (take-helper
                                                        kont91274
                                                        a9117991404
                                                        a9118191407
                                                        a9118391411))))
                                                (cons
                                                 f9127691410
                                                 a9118291409
                                                 lst2)))))
                                       (car f9127791408 lst)))))
                              (- f9127891406 n a9118091405))))))
                   (cdr f9127991403 lst))))))
        (= f9128091399 n a9117691398))))
  (define (take kont91281 lst n)
    (let ((f9128291412
           (lambda (a9118491413) (take-helper kont91281 lst n a9118491413))))
      (list f9128291412)))
  (define (length kont91283 lst)
    (let ((f9128691414
           (lambda (a9118591415)
             (if a9118591415
               (let ((x9118691416 '0)) (kont91283 x9118691416))
               (let ((a9118791417 '1))
                 (let ((f9128591418
                        (lambda (a9118891419)
                          (let ((f9128491420
                                 (lambda (a9118991421)
                                   (+ kont91283 a9118791417 a9118991421))))
                            (length f9128491420 a9118891419)))))
                   (cdr f9128591418 lst)))))))
      (null? f9128691414 lst)))
  (define (map kont91287 proc lst)
    (let ((f9129391422
           (lambda (a9119091423)
             (if a9119091423
               (let ((f9128891424
                      (lambda (x9119191425) (kont91287 x9119191425))))
                 (list f9128891424))
               (let ((f9129291426
                      (lambda (a9119291427)
                        (let ((f9129191428
                               (lambda (a9119391429)
                                 (let ((f9129091430
                                        (lambda (a9119491431)
                                          (let ((f9128991432
                                                 (lambda (a9119591433)
                                                   (cons
                                                    kont91287
                                                    a9119391429
                                                    a9119591433))))
                                            (map
                                             f9128991432
                                             proc
                                             a9119491431)))))
                                   (cdr f9129091430 lst)))))
                          (proc f9129191428 a9119291427)))))
                 (car f9129291426 lst))))))
      (null? f9129391422 lst)))
  (define (filter kont91294 op lst)
    (let ((f9130291434
           (lambda (a9119691435)
             (if a9119691435
               (let ((f9129591436
                      (lambda (x9119791437) (kont91294 x9119791437))))
                 (list f9129591436))
               (let ((f9130191438
                      (lambda (a9119891439)
                        (let ((f9130091440
                               (lambda (a9119991441)
                                 (if a9119991441
                                   (let ((f9129891442
                                          (lambda (a9120091443)
                                            (let ((f9129791444
                                                   (lambda (a9120191445)
                                                     (let ((f9129691446
                                                            (lambda (a9120291447)
                                                              (cons
                                                               kont91294
                                                               a9120091443
                                                               a9120291447))))
                                                       (filter
                                                        f9129691446
                                                        op
                                                        a9120191445)))))
                                              (cdr f9129791444 lst)))))
                                     (car f9129891442 lst))
                                   (let ((f9129991448
                                          (lambda (a9120391449)
                                            (filter
                                             kont91294
                                             op
                                             a9120391449))))
                                     (cdr f9129991448 lst))))))
                          (op f9130091440 a9119891439)))))
                 (car f9130191438 lst))))))
      (null? f9130291434 lst)))
  (define (drop kont91303 lst n)
    (let ((a9120491450 '0))
      (let ((f9130691451
             (lambda (a9120591452)
               (if a9120591452
                 (kont91303 lst)
                 (let ((f9130591453
                        (lambda (a9120691454)
                          (let ((a9120791455 '1))
                            (let ((f9130491456
                                   (lambda (a9120891457)
                                     (drop
                                      kont91303
                                      a9120691454
                                      a9120891457))))
                              (- f9130491456 n a9120791455))))))
                   (cdr f9130591453 lst))))))
        (= f9130691451 n a9120491450))))
  (define (foldr kont91307 proc acc lst)
    (let ((f9131191458
           (lambda (a9120991459)
             (if a9120991459
               (kont91307 acc)
               (let ((f9131091460
                      (lambda (a9121091461)
                        (let ((f9130991462
                               (lambda (a9121191463)
                                 (let ((f9130891464
                                        (lambda (a9121291465)
                                          (proc
                                           kont91307
                                           a9121091461
                                           a9121291465))))
                                   (foldr f9130891464 proc acc a9121191463)))))
                          (cdr f9130991462 lst)))))
                 (car f9131091460 lst))))))
      (null? f9131191458 lst)))
  (define (append kont91312 lst1 lst2)
    (let ((f9131691466
           (lambda (a9121391467)
             (if a9121391467
               (kont91312 lst2)
               (let ((f9131591468
                      (lambda (a9121491469)
                        (let ((f9131491470
                               (lambda (a9121591471)
                                 (let ((f9131391472
                                        (lambda (a9121691473)
                                          (cons
                                           kont91312
                                           a9121491469
                                           a9121691473))))
                                   (append f9131391472 a9121591471 lst2)))))
                          (cdr f9131491470 lst1)))))
                 (car f9131591468 lst1))))))
      (null? f9131691466 lst1)))
  (define (hash . lst)
    (let ((kont9131791474 (prim car lst)))
      (let ((lst91475 (prim cdr lst)))
        (let ((x9121791476 (apply-prim hash lst91475)))
          (kont9131791474 x9121791476)))))
  (define (hash-ref kont91319 h k)
    (let ((x9121891477 (prim hash-ref h k))) (kont91319 x9121891477)))
  (define (hash-set kont91320 h k v)
    (let ((x9121991478 (prim hash-set h k v))) (kont91320 x9121991478)))
  (define (hash-has-key? kont91321 h k)
    (let ((x9122091479 (prim hash-has-key? h k))) (kont91321 x9122091479)))
  (define (hash-count kont91322 h)
    (let ((x9122191480 (prim hash-count h))) (kont91322 x9122191480)))
  (define (call kont91323)
    (let ((a9122291481 '#f))
      (if a9122291481
        (let ((x9122391482 '#f)) (kont91323 x9122391482))
        (let ((x9122491483 '#t)) (kont91323 x9122491483)))))
  (define (brouhaha_main kont91324)
    (let ((f9132591484 (lambda (x9122591485) (kont91324 x9122591485))))
      (call f9132591484))))
