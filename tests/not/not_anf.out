'((define (+ . lst)
    (let ((kont95797 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95710 (apply-prim + lst))) (kont95797 x95710)))))
  (define (- . lst)
    (let ((kont95799 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95711 (apply-prim - lst))) (kont95799 x95711)))))
  (define (* . lst)
    (let ((kont95801 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95712 (apply-prim * lst))) (kont95801 x95712)))))
  (define (modulo kont95803 a b)
    (let ((x95713 (prim modulo a b))) (kont95803 x95713)))
  (define (/ . lst)
    (let ((kont95804 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95714 (apply-prim / lst))) (kont95804 x95714)))))
  (define (= . lst)
    (let ((kont95806 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95715 (apply-prim = lst))) (kont95806 x95715)))))
  (define (> . lst)
    (let ((kont95808 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95716 (apply-prim > lst))) (kont95808 x95716)))))
  (define (< . lst)
    (let ((kont95810 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95717 (apply-prim < lst))) (kont95810 x95717)))))
  (define (<= . lst)
    (let ((kont95812 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95718 (apply-prim <= lst))) (kont95812 x95718)))))
  (define (>= . lst)
    (let ((kont95814 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95719 (apply-prim >= lst))) (kont95814 x95719)))))
  (define (null? kont95816 x)
    (let ((x95720 (prim null? x))) (kont95816 x95720)))
  (define (equal? kont95817 x y)
    (let ((x95721 (prim equal? x y))) (kont95817 x95721)))
  (define (eq? kont95818 x y)
    (let ((x95722 (prim eq? x y))) (kont95818 x95722)))
  (define (cons kont95819 a b)
    (let ((x95723 (prim cons a b))) (kont95819 x95723)))
  (define (car kont95820 lst)
    (let ((x95724 (prim car lst))) (kont95820 x95724)))
  (define (cdr kont95821 lst)
    (let ((x95725 (prim cdr lst))) (kont95821 x95725)))
  (define (even? kont95822 x)
    (let ((a95726 '0))
      (let ((a95727 '2))
        (let ((f95823 (lambda (a95728) (equal? kont95822 a95726 a95728))))
          (modulo f95823 x a95727)))))
  (define (odd? kont95824 x)
    (let ((a95729 '1))
      (let ((a95730 '2))
        (let ((f95825 (lambda (a95731) (equal? kont95824 a95729 a95731))))
          (modulo f95825 x a95730)))))
  (define (list . x)
    (let ((kont95826 (prim car x))) (let ((x (prim cdr x))) (kont95826 x))))
  (define (member? kont95828 x lst)
    (let ((f95832
           (lambda (a95732)
             (if a95732
               (let ((x95733 '#f)) (kont95828 x95733))
               (let ((f95831
                      (lambda (a95734)
                        (let ((f95830
                               (lambda (a95735)
                                 (if a95735
                                   (let ((x95736 '#t)) (kont95828 x95736))
                                   (let ((f95829
                                          (lambda (a95737)
                                            (member? kont95828 x a95737))))
                                     (cdr f95829 lst))))))
                          (equal? f95830 a95734 x)))))
                 (car f95831 lst))))))
      (null? f95832 lst)))
  (define (foldl kont95833 fun acc lst)
    (let ((f95837
           (lambda (a95738)
             (if a95738
               (kont95833 acc)
               (let ((f95836
                      (lambda (a95739)
                        (let ((f95835
                               (lambda (a95740)
                                 (let ((f95834
                                        (lambda (a95741)
                                          (foldl
                                           kont95833
                                           fun
                                           a95740
                                           a95741))))
                                   (cdr f95834 lst)))))
                          (fun f95835 a95739 acc)))))
                 (car f95836 lst))))))
      (null? f95837 lst)))
  (define (reverse-helper kont95838 lst lst2)
    (let ((f95842
           (lambda (a95742)
             (if a95742
               (kont95838 lst2)
               (let ((f95841
                      (lambda (a95743)
                        (let ((f95840
                               (lambda (a95744)
                                 (let ((f95839
                                        (lambda (a95745)
                                          (reverse-helper
                                           kont95838
                                           a95743
                                           a95745))))
                                   (cons f95839 a95744 lst2)))))
                          (car f95840 lst)))))
                 (cdr f95841 lst))))))
      (null? f95842 lst)))
  (define (reverse kont95843 lst)
    (let ((f95844 (lambda (a95746) (reverse-helper kont95843 lst a95746))))
      (list f95844)))
  (define (take-helper kont95845 lst n lst2)
    (let ((a95747 '0))
      (let ((f95851
             (lambda (a95748)
               (if a95748
                 (let ((f95846 (lambda (x95749) (kont95845 x95749))))
                   (reverse f95846 lst2))
                 (let ((f95850
                        (lambda (a95750)
                          (let ((a95751 '1))
                            (let ((f95849
                                   (lambda (a95752)
                                     (let ((f95848
                                            (lambda (a95753)
                                              (let ((f95847
                                                     (lambda (a95754)
                                                       (take-helper
                                                        kont95845
                                                        a95750
                                                        a95752
                                                        a95754))))
                                                (cons f95847 a95753 lst2)))))
                                       (car f95848 lst)))))
                              (- f95849 n a95751))))))
                   (cdr f95850 lst))))))
        (= f95851 n a95747))))
  (define (take kont95852 lst n)
    (let ((f95853 (lambda (a95755) (take-helper kont95852 lst n a95755))))
      (list f95853)))
  (define (length kont95854 lst)
    (let ((f95857
           (lambda (a95756)
             (if a95756
               (let ((x95757 '0)) (kont95854 x95757))
               (let ((a95758 '1))
                 (let ((f95856
                        (lambda (a95759)
                          (let ((f95855
                                 (lambda (a95760)
                                   (+ kont95854 a95758 a95760))))
                            (length f95855 a95759)))))
                   (cdr f95856 lst)))))))
      (null? f95857 lst)))
  (define (map kont95858 proc lst)
    (let ((f95864
           (lambda (a95761)
             (if a95761
               (let ((f95859 (lambda (x95762) (kont95858 x95762))))
                 (list f95859))
               (let ((f95863
                      (lambda (a95763)
                        (let ((f95862
                               (lambda (a95764)
                                 (let ((f95861
                                        (lambda (a95765)
                                          (let ((f95860
                                                 (lambda (a95766)
                                                   (cons
                                                    kont95858
                                                    a95764
                                                    a95766))))
                                            (map f95860 proc a95765)))))
                                   (cdr f95861 lst)))))
                          (proc f95862 a95763)))))
                 (car f95863 lst))))))
      (null? f95864 lst)))
  (define (filter kont95865 op lst)
    (let ((f95873
           (lambda (a95767)
             (if a95767
               (let ((f95866 (lambda (x95768) (kont95865 x95768))))
                 (list f95866))
               (let ((f95872
                      (lambda (a95769)
                        (let ((f95871
                               (lambda (a95770)
                                 (if a95770
                                   (let ((f95869
                                          (lambda (a95771)
                                            (let ((f95868
                                                   (lambda (a95772)
                                                     (let ((f95867
                                                            (lambda (a95773)
                                                              (cons
                                                               kont95865
                                                               a95771
                                                               a95773))))
                                                       (filter
                                                        f95867
                                                        op
                                                        a95772)))))
                                              (cdr f95868 lst)))))
                                     (car f95869 lst))
                                   (let ((f95870
                                          (lambda (a95774)
                                            (filter kont95865 op a95774))))
                                     (cdr f95870 lst))))))
                          (op f95871 a95769)))))
                 (car f95872 lst))))))
      (null? f95873 lst)))
  (define (drop kont95874 lst n)
    (let ((a95775 '0))
      (let ((f95877
             (lambda (a95776)
               (if a95776
                 (kont95874 lst)
                 (let ((f95876
                        (lambda (a95777)
                          (let ((a95778 '1))
                            (let ((f95875
                                   (lambda (a95779)
                                     (drop kont95874 a95777 a95779))))
                              (- f95875 n a95778))))))
                   (cdr f95876 lst))))))
        (= f95877 n a95775))))
  (define (foldr kont95878 proc acc lst)
    (let ((f95882
           (lambda (a95780)
             (if a95780
               (kont95878 acc)
               (let ((f95881
                      (lambda (a95781)
                        (let ((f95880
                               (lambda (a95782)
                                 (let ((f95879
                                        (lambda (a95783)
                                          (proc kont95878 a95781 a95783))))
                                   (foldr f95879 proc acc a95782)))))
                          (cdr f95880 lst)))))
                 (car f95881 lst))))))
      (null? f95882 lst)))
  (define (append kont95883 lst1 lst2)
    (let ((f95887
           (lambda (a95784)
             (if a95784
               (kont95883 lst2)
               (let ((f95886
                      (lambda (a95785)
                        (let ((f95885
                               (lambda (a95786)
                                 (let ((f95884
                                        (lambda (a95787)
                                          (cons kont95883 a95785 a95787))))
                                   (append f95884 a95786 lst2)))))
                          (cdr f95885 lst1)))))
                 (car f95886 lst1))))))
      (null? f95887 lst1)))
  (define (hash . lst)
    (let ((kont95888 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x95788 (apply-prim hash lst))) (kont95888 x95788)))))
  (define (hash-ref kont95890 h k)
    (let ((x95789 (prim hash-ref h k))) (kont95890 x95789)))
  (define (hash-set kont95891 h k v)
    (let ((x95790 (prim hash-set h k v))) (kont95891 x95790)))
  (define (hash-has-key? kont95892 h k)
    (let ((x95791 (prim hash-has-key? h k))) (kont95892 x95791)))
  (define (hash-count kont95893 h)
    (let ((x95792 (prim hash-count h))) (kont95893 x95792)))
  (define (call kont95894)
    (let ((a95793 '#f))
      (if a95793
        (let ((x95794 '#f)) (kont95894 x95794))
        (let ((x95795 '#t)) (kont95894 x95795)))))
  (define (brouhaha_main kont95895)
    (let ((f95896 (lambda (x95796) (kont95895 x95796)))) (call f95896))))
