'((define (+ . lst)
    (let ((kont112910113010 (prim car lst)))
      (let ((lst113011 (prim cdr lst)))
        (let ((x112821113012 (apply-prim + lst113011)))
          (kont112910113010 x112821113012)))))
  (define (- . lst)
    (let ((kont112912113013 (prim car lst)))
      (let ((lst113014 (prim cdr lst)))
        (let ((x112822113015 (apply-prim - lst113014)))
          (kont112912113013 x112822113015)))))
  (define (* . lst)
    (let ((kont112914113016 (prim car lst)))
      (let ((lst113017 (prim cdr lst)))
        (let ((x112823113018 (apply-prim * lst113017)))
          (kont112914113016 x112823113018)))))
  (define (modulo kont112916 a b)
    (let ((x112824113019 (prim modulo a b))) (kont112916 x112824113019)))
  (define (/ . lst)
    (let ((kont112917113020 (prim car lst)))
      (let ((lst113021 (prim cdr lst)))
        (let ((x112825113022 (apply-prim / lst113021)))
          (kont112917113020 x112825113022)))))
  (define (= . lst)
    (let ((kont112919113023 (prim car lst)))
      (let ((lst113024 (prim cdr lst)))
        (let ((x112826113025 (apply-prim = lst113024)))
          (kont112919113023 x112826113025)))))
  (define (> . lst)
    (let ((kont112921113026 (prim car lst)))
      (let ((lst113027 (prim cdr lst)))
        (let ((x112827113028 (apply-prim > lst113027)))
          (kont112921113026 x112827113028)))))
  (define (< . lst)
    (let ((kont112923113029 (prim car lst)))
      (let ((lst113030 (prim cdr lst)))
        (let ((x112828113031 (apply-prim < lst113030)))
          (kont112923113029 x112828113031)))))
  (define (<= . lst)
    (let ((kont112925113032 (prim car lst)))
      (let ((lst113033 (prim cdr lst)))
        (let ((x112829113034 (apply-prim <= lst113033)))
          (kont112925113032 x112829113034)))))
  (define (>= . lst)
    (let ((kont112927113035 (prim car lst)))
      (let ((lst113036 (prim cdr lst)))
        (let ((x112830113037 (apply-prim >= lst113036)))
          (kont112927113035 x112830113037)))))
  (define (null? kont112929 x)
    (let ((x112831113038 (prim null? x))) (kont112929 x112831113038)))
  (define (equal? kont112930 x y)
    (let ((x112832113039 (prim equal? x y))) (kont112930 x112832113039)))
  (define (eq? kont112931 x y)
    (let ((x112833113040 (prim eq? x y))) (kont112931 x112833113040)))
  (define (cons kont112932 a b)
    (let ((x112834113041 (prim cons a b))) (kont112932 x112834113041)))
  (define (car kont112933 lst)
    (let ((x112835113042 (prim car lst))) (kont112933 x112835113042)))
  (define (cdr kont112934 lst)
    (let ((x112836113043 (prim cdr lst))) (kont112934 x112836113043)))
  (define (even? kont112935 x)
    (let ((a112837113044 '0))
      (let ((a112838113045 '2))
        (let ((f112936113046
               (lambda (a112839113047)
                 (equal? kont112935 a112837113044 a112839113047))))
          (modulo f112936113046 x a112838113045)))))
  (define (odd? kont112937 x)
    (let ((a112840113048 '1))
      (let ((a112841113049 '2))
        (let ((f112938113050
               (lambda (a112842113051)
                 (equal? kont112937 a112840113048 a112842113051))))
          (modulo f112938113050 x a112841113049)))))
  (define (list . x)
    (let ((kont112939113052 (prim car x)))
      (let ((x113053 (prim cdr x))) (kont112939113052 x113053))))
  (define (member? kont112941 x lst)
    (let ((f112945113054
           (lambda (a112843113055)
             (if a112843113055
               (let ((x112844113056 '#f)) (kont112941 x112844113056))
               (let ((f112944113057
                      (lambda (a112845113058)
                        (let ((f112943113059
                               (lambda (a112846113060)
                                 (if a112846113060
                                   (let ((x112847113061 '#t))
                                     (kont112941 x112847113061))
                                   (let ((f112942113062
                                          (lambda (a112848113063)
                                            (member?
                                             kont112941
                                             x
                                             a112848113063))))
                                     (cdr f112942113062 lst))))))
                          (equal? f112943113059 a112845113058 x)))))
                 (car f112944113057 lst))))))
      (null? f112945113054 lst)))
  (define (foldl kont112946 fun acc lst)
    (let ((f112950113064
           (lambda (a112849113065)
             (if a112849113065
               (kont112946 acc)
               (let ((f112949113066
                      (lambda (a112850113067)
                        (let ((f112948113068
                               (lambda (a112851113069)
                                 (let ((f112947113070
                                        (lambda (a112852113071)
                                          (foldl
                                           kont112946
                                           fun
                                           a112851113069
                                           a112852113071))))
                                   (cdr f112947113070 lst)))))
                          (fun f112948113068 a112850113067 acc)))))
                 (car f112949113066 lst))))))
      (null? f112950113064 lst)))
  (define (reverse-helper kont112951 lst lst2)
    (let ((f112955113072
           (lambda (a112853113073)
             (if a112853113073
               (kont112951 lst2)
               (let ((f112954113074
                      (lambda (a112854113075)
                        (let ((f112953113076
                               (lambda (a112855113077)
                                 (let ((f112952113078
                                        (lambda (a112856113079)
                                          (reverse-helper
                                           kont112951
                                           a112854113075
                                           a112856113079))))
                                   (cons f112952113078 a112855113077 lst2)))))
                          (car f112953113076 lst)))))
                 (cdr f112954113074 lst))))))
      (null? f112955113072 lst)))
  (define (reverse kont112956 lst)
    (let ((f112957113080
           (lambda (a112857113081)
             (reverse-helper kont112956 lst a112857113081))))
      (list f112957113080)))
  (define (take-helper kont112958 lst n lst2)
    (let ((a112858113082 '0))
      (let ((f112964113083
             (lambda (a112859113084)
               (if a112859113084
                 (let ((f112959113085
                        (lambda (x112860113086) (kont112958 x112860113086))))
                   (reverse f112959113085 lst2))
                 (let ((f112963113087
                        (lambda (a112861113088)
                          (let ((a112862113089 '1))
                            (let ((f112962113090
                                   (lambda (a112863113091)
                                     (let ((f112961113092
                                            (lambda (a112864113093)
                                              (let ((f112960113094
                                                     (lambda (a112865113095)
                                                       (take-helper
                                                        kont112958
                                                        a112861113088
                                                        a112863113091
                                                        a112865113095))))
                                                (cons
                                                 f112960113094
                                                 a112864113093
                                                 lst2)))))
                                       (car f112961113092 lst)))))
                              (- f112962113090 n a112862113089))))))
                   (cdr f112963113087 lst))))))
        (= f112964113083 n a112858113082))))
  (define (take kont112965 lst n)
    (let ((f112966113096
           (lambda (a112866113097)
             (take-helper kont112965 lst n a112866113097))))
      (list f112966113096)))
  (define (length kont112967 lst)
    (let ((f112970113098
           (lambda (a112867113099)
             (if a112867113099
               (let ((x112868113100 '0)) (kont112967 x112868113100))
               (let ((a112869113101 '1))
                 (let ((f112969113102
                        (lambda (a112870113103)
                          (let ((f112968113104
                                 (lambda (a112871113105)
                                   (+
                                    kont112967
                                    a112869113101
                                    a112871113105))))
                            (length f112968113104 a112870113103)))))
                   (cdr f112969113102 lst)))))))
      (null? f112970113098 lst)))
  (define (map kont112971 proc lst)
    (let ((f112977113106
           (lambda (a112872113107)
             (if a112872113107
               (let ((f112972113108
                      (lambda (x112873113109) (kont112971 x112873113109))))
                 (list f112972113108))
               (let ((f112976113110
                      (lambda (a112874113111)
                        (let ((f112975113112
                               (lambda (a112875113113)
                                 (let ((f112974113114
                                        (lambda (a112876113115)
                                          (let ((f112973113116
                                                 (lambda (a112877113117)
                                                   (cons
                                                    kont112971
                                                    a112875113113
                                                    a112877113117))))
                                            (map
                                             f112973113116
                                             proc
                                             a112876113115)))))
                                   (cdr f112974113114 lst)))))
                          (proc f112975113112 a112874113111)))))
                 (car f112976113110 lst))))))
      (null? f112977113106 lst)))
  (define (filter kont112978 op lst)
    (let ((f112986113118
           (lambda (a112878113119)
             (if a112878113119
               (let ((f112979113120
                      (lambda (x112879113121) (kont112978 x112879113121))))
                 (list f112979113120))
               (let ((f112985113122
                      (lambda (a112880113123)
                        (let ((f112984113124
                               (lambda (a112881113125)
                                 (if a112881113125
                                   (let ((f112982113126
                                          (lambda (a112882113127)
                                            (let ((f112981113128
                                                   (lambda (a112883113129)
                                                     (let ((f112980113130
                                                            (lambda (a112884113131)
                                                              (cons
                                                               kont112978
                                                               a112882113127
                                                               a112884113131))))
                                                       (filter
                                                        f112980113130
                                                        op
                                                        a112883113129)))))
                                              (cdr f112981113128 lst)))))
                                     (car f112982113126 lst))
                                   (let ((f112983113132
                                          (lambda (a112885113133)
                                            (filter
                                             kont112978
                                             op
                                             a112885113133))))
                                     (cdr f112983113132 lst))))))
                          (op f112984113124 a112880113123)))))
                 (car f112985113122 lst))))))
      (null? f112986113118 lst)))
  (define (drop kont112987 lst n)
    (let ((a112886113134 '0))
      (let ((f112990113135
             (lambda (a112887113136)
               (if a112887113136
                 (kont112987 lst)
                 (let ((f112989113137
                        (lambda (a112888113138)
                          (let ((a112889113139 '1))
                            (let ((f112988113140
                                   (lambda (a112890113141)
                                     (drop
                                      kont112987
                                      a112888113138
                                      a112890113141))))
                              (- f112988113140 n a112889113139))))))
                   (cdr f112989113137 lst))))))
        (= f112990113135 n a112886113134))))
  (define (foldr kont112991 proc acc lst)
    (let ((f112995113142
           (lambda (a112891113143)
             (if a112891113143
               (kont112991 acc)
               (let ((f112994113144
                      (lambda (a112892113145)
                        (let ((f112993113146
                               (lambda (a112893113147)
                                 (let ((f112992113148
                                        (lambda (a112894113149)
                                          (proc
                                           kont112991
                                           a112892113145
                                           a112894113149))))
                                   (foldr
                                    f112992113148
                                    proc
                                    acc
                                    a112893113147)))))
                          (cdr f112993113146 lst)))))
                 (car f112994113144 lst))))))
      (null? f112995113142 lst)))
  (define (append kont112996 lst1 lst2)
    (let ((f113000113150
           (lambda (a112895113151)
             (if a112895113151
               (kont112996 lst2)
               (let ((f112999113152
                      (lambda (a112896113153)
                        (let ((f112998113154
                               (lambda (a112897113155)
                                 (let ((f112997113156
                                        (lambda (a112898113157)
                                          (cons
                                           kont112996
                                           a112896113153
                                           a112898113157))))
                                   (append
                                    f112997113156
                                    a112897113155
                                    lst2)))))
                          (cdr f112998113154 lst1)))))
                 (car f112999113152 lst1))))))
      (null? f113000113150 lst1)))
  (define (hash . lst)
    (let ((kont113001113158 (prim car lst)))
      (let ((lst113159 (prim cdr lst)))
        (let ((x112899113160 (apply-prim hash lst113159)))
          (kont113001113158 x112899113160)))))
  (define (hash-ref kont113003 h k)
    (let ((x112900113161 (prim hash-ref h k))) (kont113003 x112900113161)))
  (define (hash-set kont113004 h k v)
    (let ((x112901113162 (prim hash-set h k v))) (kont113004 x112901113162)))
  (define (hash-has-key? kont113005 h k)
    (let ((x112902113163 (prim hash-has-key? h k)))
      (kont113005 x112902113163)))
  (define (hash-count kont113006 h)
    (let ((x112903113164 (prim hash-count h))) (kont113006 x112903113164)))
  (define (call kont113007)
    (let ((a112904113165 '100))
      (let ((a112905113166 '20))
        (let ((a112906113167 '10))
          (let ((a112907113168 '5))
            (let ((a112908113169 '1))
              (>
               kont113007
               a112904113165
               a112905113166
               a112906113167
               a112907113168
               a112908113169)))))))
  (define (brouhaha_main kont113008)
    (let ((f113009113170 (lambda (x112909113171) (kont113008 x112909113171))))
      (call f113009113170))))
