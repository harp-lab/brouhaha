'((define (+ . lst)
    (let ((kont118705118805 (prim car lst)))
      (let ((lst118806 (prim cdr lst)))
        (let ((x118616118807 (apply-prim + lst118806)))
          (kont118705118805 x118616118807)))))
  (define (- . lst)
    (let ((kont118707118808 (prim car lst)))
      (let ((lst118809 (prim cdr lst)))
        (let ((x118617118810 (apply-prim - lst118809)))
          (kont118707118808 x118617118810)))))
  (define (* . lst)
    (let ((kont118709118811 (prim car lst)))
      (let ((lst118812 (prim cdr lst)))
        (let ((x118618118813 (apply-prim * lst118812)))
          (kont118709118811 x118618118813)))))
  (define (modulo kont118711 a b)
    (let ((x118619118814 (prim modulo a b))) (kont118711 x118619118814)))
  (define (/ . lst)
    (let ((kont118712118815 (prim car lst)))
      (let ((lst118816 (prim cdr lst)))
        (let ((x118620118817 (apply-prim / lst118816)))
          (kont118712118815 x118620118817)))))
  (define (= . lst)
    (let ((kont118714118818 (prim car lst)))
      (let ((lst118819 (prim cdr lst)))
        (let ((x118621118820 (apply-prim = lst118819)))
          (kont118714118818 x118621118820)))))
  (define (> . lst)
    (let ((kont118716118821 (prim car lst)))
      (let ((lst118822 (prim cdr lst)))
        (let ((x118622118823 (apply-prim > lst118822)))
          (kont118716118821 x118622118823)))))
  (define (< . lst)
    (let ((kont118718118824 (prim car lst)))
      (let ((lst118825 (prim cdr lst)))
        (let ((x118623118826 (apply-prim < lst118825)))
          (kont118718118824 x118623118826)))))
  (define (<= . lst)
    (let ((kont118720118827 (prim car lst)))
      (let ((lst118828 (prim cdr lst)))
        (let ((x118624118829 (apply-prim <= lst118828)))
          (kont118720118827 x118624118829)))))
  (define (>= . lst)
    (let ((kont118722118830 (prim car lst)))
      (let ((lst118831 (prim cdr lst)))
        (let ((x118625118832 (apply-prim >= lst118831)))
          (kont118722118830 x118625118832)))))
  (define (null? kont118724 x)
    (let ((x118626118833 (prim null? x))) (kont118724 x118626118833)))
  (define (equal? kont118725 x y)
    (let ((x118627118834 (prim equal? x y))) (kont118725 x118627118834)))
  (define (eq? kont118726 x y)
    (let ((x118628118835 (prim eq? x y))) (kont118726 x118628118835)))
  (define (cons kont118727 a b)
    (let ((x118629118836 (prim cons a b))) (kont118727 x118629118836)))
  (define (car kont118728 lst)
    (let ((x118630118837 (prim car lst))) (kont118728 x118630118837)))
  (define (cdr kont118729 lst)
    (let ((x118631118838 (prim cdr lst))) (kont118729 x118631118838)))
  (define (even? kont118730 x)
    (let ((a118632118839 '0))
      (let ((a118633118840 '2))
        (let ((f118731118841
               (lambda (a118634118842)
                 (equal? kont118730 a118632118839 a118634118842))))
          (modulo f118731118841 x a118633118840)))))
  (define (odd? kont118732 x)
    (let ((a118635118843 '1))
      (let ((a118636118844 '2))
        (let ((f118733118845
               (lambda (a118637118846)
                 (equal? kont118732 a118635118843 a118637118846))))
          (modulo f118733118845 x a118636118844)))))
  (define (list . x)
    (let ((kont118734118847 (prim car x)))
      (let ((x118848 (prim cdr x))) (kont118734118847 x118848))))
  (define (member? kont118736 x lst)
    (let ((f118740118849
           (lambda (a118638118850)
             (if a118638118850
               (let ((x118639118851 '#f)) (kont118736 x118639118851))
               (let ((f118739118852
                      (lambda (a118640118853)
                        (let ((f118738118854
                               (lambda (a118641118855)
                                 (if a118641118855
                                   (let ((x118642118856 '#t))
                                     (kont118736 x118642118856))
                                   (let ((f118737118857
                                          (lambda (a118643118858)
                                            (member?
                                             kont118736
                                             x
                                             a118643118858))))
                                     (cdr f118737118857 lst))))))
                          (equal? f118738118854 a118640118853 x)))))
                 (car f118739118852 lst))))))
      (null? f118740118849 lst)))
  (define (foldl kont118741 fun acc lst)
    (let ((f118745118859
           (lambda (a118644118860)
             (if a118644118860
               (kont118741 acc)
               (let ((f118744118861
                      (lambda (a118645118862)
                        (let ((f118743118863
                               (lambda (a118646118864)
                                 (let ((f118742118865
                                        (lambda (a118647118866)
                                          (foldl
                                           kont118741
                                           fun
                                           a118646118864
                                           a118647118866))))
                                   (cdr f118742118865 lst)))))
                          (fun f118743118863 a118645118862 acc)))))
                 (car f118744118861 lst))))))
      (null? f118745118859 lst)))
  (define (reverse-helper kont118746 lst lst2)
    (let ((f118750118867
           (lambda (a118648118868)
             (if a118648118868
               (kont118746 lst2)
               (let ((f118749118869
                      (lambda (a118649118870)
                        (let ((f118748118871
                               (lambda (a118650118872)
                                 (let ((f118747118873
                                        (lambda (a118651118874)
                                          (reverse-helper
                                           kont118746
                                           a118649118870
                                           a118651118874))))
                                   (cons f118747118873 a118650118872 lst2)))))
                          (car f118748118871 lst)))))
                 (cdr f118749118869 lst))))))
      (null? f118750118867 lst)))
  (define (reverse kont118751 lst)
    (let ((f118752118875
           (lambda (a118652118876)
             (reverse-helper kont118751 lst a118652118876))))
      (list f118752118875)))
  (define (take-helper kont118753 lst n lst2)
    (let ((a118653118877 '0))
      (let ((f118759118878
             (lambda (a118654118879)
               (if a118654118879
                 (let ((f118754118880
                        (lambda (x118655118881) (kont118753 x118655118881))))
                   (reverse f118754118880 lst2))
                 (let ((f118758118882
                        (lambda (a118656118883)
                          (let ((a118657118884 '1))
                            (let ((f118757118885
                                   (lambda (a118658118886)
                                     (let ((f118756118887
                                            (lambda (a118659118888)
                                              (let ((f118755118889
                                                     (lambda (a118660118890)
                                                       (take-helper
                                                        kont118753
                                                        a118656118883
                                                        a118658118886
                                                        a118660118890))))
                                                (cons
                                                 f118755118889
                                                 a118659118888
                                                 lst2)))))
                                       (car f118756118887 lst)))))
                              (- f118757118885 n a118657118884))))))
                   (cdr f118758118882 lst))))))
        (= f118759118878 n a118653118877))))
  (define (take kont118760 lst n)
    (let ((f118761118891
           (lambda (a118661118892)
             (take-helper kont118760 lst n a118661118892))))
      (list f118761118891)))
  (define (length kont118762 lst)
    (let ((f118765118893
           (lambda (a118662118894)
             (if a118662118894
               (let ((x118663118895 '0)) (kont118762 x118663118895))
               (let ((a118664118896 '1))
                 (let ((f118764118897
                        (lambda (a118665118898)
                          (let ((f118763118899
                                 (lambda (a118666118900)
                                   (+
                                    kont118762
                                    a118664118896
                                    a118666118900))))
                            (length f118763118899 a118665118898)))))
                   (cdr f118764118897 lst)))))))
      (null? f118765118893 lst)))
  (define (map kont118766 proc lst)
    (let ((f118772118901
           (lambda (a118667118902)
             (if a118667118902
               (let ((f118767118903
                      (lambda (x118668118904) (kont118766 x118668118904))))
                 (list f118767118903))
               (let ((f118771118905
                      (lambda (a118669118906)
                        (let ((f118770118907
                               (lambda (a118670118908)
                                 (let ((f118769118909
                                        (lambda (a118671118910)
                                          (let ((f118768118911
                                                 (lambda (a118672118912)
                                                   (cons
                                                    kont118766
                                                    a118670118908
                                                    a118672118912))))
                                            (map
                                             f118768118911
                                             proc
                                             a118671118910)))))
                                   (cdr f118769118909 lst)))))
                          (proc f118770118907 a118669118906)))))
                 (car f118771118905 lst))))))
      (null? f118772118901 lst)))
  (define (filter kont118773 op lst)
    (let ((f118781118913
           (lambda (a118673118914)
             (if a118673118914
               (let ((f118774118915
                      (lambda (x118674118916) (kont118773 x118674118916))))
                 (list f118774118915))
               (let ((f118780118917
                      (lambda (a118675118918)
                        (let ((f118779118919
                               (lambda (a118676118920)
                                 (if a118676118920
                                   (let ((f118777118921
                                          (lambda (a118677118922)
                                            (let ((f118776118923
                                                   (lambda (a118678118924)
                                                     (let ((f118775118925
                                                            (lambda (a118679118926)
                                                              (cons
                                                               kont118773
                                                               a118677118922
                                                               a118679118926))))
                                                       (filter
                                                        f118775118925
                                                        op
                                                        a118678118924)))))
                                              (cdr f118776118923 lst)))))
                                     (car f118777118921 lst))
                                   (let ((f118778118927
                                          (lambda (a118680118928)
                                            (filter
                                             kont118773
                                             op
                                             a118680118928))))
                                     (cdr f118778118927 lst))))))
                          (op f118779118919 a118675118918)))))
                 (car f118780118917 lst))))))
      (null? f118781118913 lst)))
  (define (drop kont118782 lst n)
    (let ((a118681118929 '0))
      (let ((f118785118930
             (lambda (a118682118931)
               (if a118682118931
                 (kont118782 lst)
                 (let ((f118784118932
                        (lambda (a118683118933)
                          (let ((a118684118934 '1))
                            (let ((f118783118935
                                   (lambda (a118685118936)
                                     (drop
                                      kont118782
                                      a118683118933
                                      a118685118936))))
                              (- f118783118935 n a118684118934))))))
                   (cdr f118784118932 lst))))))
        (= f118785118930 n a118681118929))))
  (define (foldr kont118786 proc acc lst)
    (let ((f118790118937
           (lambda (a118686118938)
             (if a118686118938
               (kont118786 acc)
               (let ((f118789118939
                      (lambda (a118687118940)
                        (let ((f118788118941
                               (lambda (a118688118942)
                                 (let ((f118787118943
                                        (lambda (a118689118944)
                                          (proc
                                           kont118786
                                           a118687118940
                                           a118689118944))))
                                   (foldr
                                    f118787118943
                                    proc
                                    acc
                                    a118688118942)))))
                          (cdr f118788118941 lst)))))
                 (car f118789118939 lst))))))
      (null? f118790118937 lst)))
  (define (append kont118791 lst1 lst2)
    (let ((f118795118945
           (lambda (a118690118946)
             (if a118690118946
               (kont118791 lst2)
               (let ((f118794118947
                      (lambda (a118691118948)
                        (let ((f118793118949
                               (lambda (a118692118950)
                                 (let ((f118792118951
                                        (lambda (a118693118952)
                                          (cons
                                           kont118791
                                           a118691118948
                                           a118693118952))))
                                   (append
                                    f118792118951
                                    a118692118950
                                    lst2)))))
                          (cdr f118793118949 lst1)))))
                 (car f118794118947 lst1))))))
      (null? f118795118945 lst1)))
  (define (hash . lst)
    (let ((kont118796118953 (prim car lst)))
      (let ((lst118954 (prim cdr lst)))
        (let ((x118694118955 (apply-prim hash lst118954)))
          (kont118796118953 x118694118955)))))
  (define (hash-ref kont118798 h k)
    (let ((x118695118956 (prim hash-ref h k))) (kont118798 x118695118956)))
  (define (hash-set kont118799 h k v)
    (let ((x118696118957 (prim hash-set h k v))) (kont118799 x118696118957)))
  (define (hash-has-key? kont118800 h k)
    (let ((x118697118958 (prim hash-has-key? h k)))
      (kont118800 x118697118958)))
  (define (hash-count kont118801 h)
    (let ((x118698118959 (prim hash-count h))) (kont118801 x118698118959)))
  (define (call kont118802)
    (let ((a118699118960 '100))
      (let ((a118700118961 '20))
        (let ((a118701118962 '10))
          (let ((a118702118963 '5))
            (let ((a118703118964 '1))
              (>
               kont118802
               a118699118960
               a118700118961
               a118701118962
               a118702118963
               a118703118964)))))))
  (define (brouhaha_main kont118803)
    (let ((f118804118965 (lambda (x118704118966) (kont118803 x118704118966))))
      (call f118804118965))))
