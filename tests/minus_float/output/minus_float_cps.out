'((define (+ . lst)
    (let ((kont8150281602 (prim car lst)))
      (let ((lst81603 (prim cdr lst)))
        (let ((x8141481604 (apply-prim + lst81603)))
          (kont8150281602 x8141481604)))))
  (define (- . lst)
    (let ((kont8150481605 (prim car lst)))
      (let ((lst81606 (prim cdr lst)))
        (let ((x8141581607 (apply-prim - lst81606)))
          (kont8150481605 x8141581607)))))
  (define (* . lst)
    (let ((kont8150681608 (prim car lst)))
      (let ((lst81609 (prim cdr lst)))
        (let ((x8141681610 (apply-prim * lst81609)))
          (kont8150681608 x8141681610)))))
  (define (modulo kont81508 a b)
    (let ((x8141781611 (prim modulo a b))) (kont81508 x8141781611)))
  (define (/ . lst)
    (let ((kont8150981612 (prim car lst)))
      (let ((lst81613 (prim cdr lst)))
        (let ((x8141881614 (apply-prim / lst81613)))
          (kont8150981612 x8141881614)))))
  (define (= . lst)
    (let ((kont8151181615 (prim car lst)))
      (let ((lst81616 (prim cdr lst)))
        (let ((x8141981617 (apply-prim = lst81616)))
          (kont8151181615 x8141981617)))))
  (define (> . lst)
    (let ((kont8151381618 (prim car lst)))
      (let ((lst81619 (prim cdr lst)))
        (let ((x8142081620 (apply-prim > lst81619)))
          (kont8151381618 x8142081620)))))
  (define (< . lst)
    (let ((kont8151581621 (prim car lst)))
      (let ((lst81622 (prim cdr lst)))
        (let ((x8142181623 (apply-prim < lst81622)))
          (kont8151581621 x8142181623)))))
  (define (<= . lst)
    (let ((kont8151781624 (prim car lst)))
      (let ((lst81625 (prim cdr lst)))
        (let ((x8142281626 (apply-prim <= lst81625)))
          (kont8151781624 x8142281626)))))
  (define (>= . lst)
    (let ((kont8151981627 (prim car lst)))
      (let ((lst81628 (prim cdr lst)))
        (let ((x8142381629 (apply-prim >= lst81628)))
          (kont8151981627 x8142381629)))))
  (define (null? kont81521 x)
    (let ((x8142481630 (prim null? x))) (kont81521 x8142481630)))
  (define (equal? kont81522 x y)
    (let ((x8142581631 (prim equal? x y))) (kont81522 x8142581631)))
  (define (eq? kont81523 x y)
    (let ((x8142681632 (prim eq? x y))) (kont81523 x8142681632)))
  (define (cons kont81524 a b)
    (let ((x8142781633 (prim cons a b))) (kont81524 x8142781633)))
  (define (car kont81525 lst)
    (let ((x8142881634 (prim car lst))) (kont81525 x8142881634)))
  (define (cdr kont81526 lst)
    (let ((x8142981635 (prim cdr lst))) (kont81526 x8142981635)))
  (define (even? kont81527 x)
    (let ((a8143081636 '0))
      (let ((a8143181637 '2))
        (let ((f8152881638
               (lambda (a8143281639)
                 (equal? kont81527 a8143081636 a8143281639))))
          (modulo f8152881638 x a8143181637)))))
  (define (odd? kont81529 x)
    (let ((a8143381640 '1))
      (let ((a8143481641 '2))
        (let ((f8153081642
               (lambda (a8143581643)
                 (equal? kont81529 a8143381640 a8143581643))))
          (modulo f8153081642 x a8143481641)))))
  (define (list . x)
    (let ((kont8153181644 (prim car x)))
      (let ((x81645 (prim cdr x))) (kont8153181644 x81645))))
  (define (member? kont81533 x lst)
    (let ((f8153781646
           (lambda (a8143681647)
             (if a8143681647
               (let ((x8143781648 '#f)) (kont81533 x8143781648))
               (let ((f8153681649
                      (lambda (a8143881650)
                        (let ((f8153581651
                               (lambda (a8143981652)
                                 (if a8143981652
                                   (let ((x8144081653 '#t))
                                     (kont81533 x8144081653))
                                   (let ((f8153481654
                                          (lambda (a8144181655)
                                            (member?
                                             kont81533
                                             x
                                             a8144181655))))
                                     (cdr f8153481654 lst))))))
                          (equal? f8153581651 a8143881650 x)))))
                 (car f8153681649 lst))))))
      (null? f8153781646 lst)))
  (define (foldl kont81538 fun acc lst)
    (let ((f8154281656
           (lambda (a8144281657)
             (if a8144281657
               (kont81538 acc)
               (let ((f8154181658
                      (lambda (a8144381659)
                        (let ((f8154081660
                               (lambda (a8144481661)
                                 (let ((f8153981662
                                        (lambda (a8144581663)
                                          (foldl
                                           kont81538
                                           fun
                                           a8144481661
                                           a8144581663))))
                                   (cdr f8153981662 lst)))))
                          (fun f8154081660 a8144381659 acc)))))
                 (car f8154181658 lst))))))
      (null? f8154281656 lst)))
  (define (reverse-helper kont81543 lst lst2)
    (let ((f8154781664
           (lambda (a8144681665)
             (if a8144681665
               (kont81543 lst2)
               (let ((f8154681666
                      (lambda (a8144781667)
                        (let ((f8154581668
                               (lambda (a8144881669)
                                 (let ((f8154481670
                                        (lambda (a8144981671)
                                          (reverse-helper
                                           kont81543
                                           a8144781667
                                           a8144981671))))
                                   (cons f8154481670 a8144881669 lst2)))))
                          (car f8154581668 lst)))))
                 (cdr f8154681666 lst))))))
      (null? f8154781664 lst)))
  (define (reverse kont81548 lst)
    (let ((f8154981672
           (lambda (a8145081673) (reverse-helper kont81548 lst a8145081673))))
      (list f8154981672)))
  (define (take-helper kont81550 lst n lst2)
    (let ((a8145181674 '0))
      (let ((f8155681675
             (lambda (a8145281676)
               (if a8145281676
                 (let ((f8155181677
                        (lambda (x8145381678) (kont81550 x8145381678))))
                   (reverse f8155181677 lst2))
                 (let ((f8155581679
                        (lambda (a8145481680)
                          (let ((a8145581681 '1))
                            (let ((f8155481682
                                   (lambda (a8145681683)
                                     (let ((f8155381684
                                            (lambda (a8145781685)
                                              (let ((f8155281686
                                                     (lambda (a8145881687)
                                                       (take-helper
                                                        kont81550
                                                        a8145481680
                                                        a8145681683
                                                        a8145881687))))
                                                (cons
                                                 f8155281686
                                                 a8145781685
                                                 lst2)))))
                                       (car f8155381684 lst)))))
                              (- f8155481682 n a8145581681))))))
                   (cdr f8155581679 lst))))))
        (= f8155681675 n a8145181674))))
  (define (take kont81557 lst n)
    (let ((f8155881688
           (lambda (a8145981689) (take-helper kont81557 lst n a8145981689))))
      (list f8155881688)))
  (define (length kont81559 lst)
    (let ((f8156281690
           (lambda (a8146081691)
             (if a8146081691
               (let ((x8146181692 '0)) (kont81559 x8146181692))
               (let ((a8146281693 '1))
                 (let ((f8156181694
                        (lambda (a8146381695)
                          (let ((f8156081696
                                 (lambda (a8146481697)
                                   (+ kont81559 a8146281693 a8146481697))))
                            (length f8156081696 a8146381695)))))
                   (cdr f8156181694 lst)))))))
      (null? f8156281690 lst)))
  (define (map kont81563 proc lst)
    (let ((f8156981698
           (lambda (a8146581699)
             (if a8146581699
               (let ((f8156481700
                      (lambda (x8146681701) (kont81563 x8146681701))))
                 (list f8156481700))
               (let ((f8156881702
                      (lambda (a8146781703)
                        (let ((f8156781704
                               (lambda (a8146881705)
                                 (let ((f8156681706
                                        (lambda (a8146981707)
                                          (let ((f8156581708
                                                 (lambda (a8147081709)
                                                   (cons
                                                    kont81563
                                                    a8146881705
                                                    a8147081709))))
                                            (map
                                             f8156581708
                                             proc
                                             a8146981707)))))
                                   (cdr f8156681706 lst)))))
                          (proc f8156781704 a8146781703)))))
                 (car f8156881702 lst))))))
      (null? f8156981698 lst)))
  (define (filter kont81570 op lst)
    (let ((f8157881710
           (lambda (a8147181711)
             (if a8147181711
               (let ((f8157181712
                      (lambda (x8147281713) (kont81570 x8147281713))))
                 (list f8157181712))
               (let ((f8157781714
                      (lambda (a8147381715)
                        (let ((f8157681716
                               (lambda (a8147481717)
                                 (if a8147481717
                                   (let ((f8157481718
                                          (lambda (a8147581719)
                                            (let ((f8157381720
                                                   (lambda (a8147681721)
                                                     (let ((f8157281722
                                                            (lambda (a8147781723)
                                                              (cons
                                                               kont81570
                                                               a8147581719
                                                               a8147781723))))
                                                       (filter
                                                        f8157281722
                                                        op
                                                        a8147681721)))))
                                              (cdr f8157381720 lst)))))
                                     (car f8157481718 lst))
                                   (let ((f8157581724
                                          (lambda (a8147881725)
                                            (filter
                                             kont81570
                                             op
                                             a8147881725))))
                                     (cdr f8157581724 lst))))))
                          (op f8157681716 a8147381715)))))
                 (car f8157781714 lst))))))
      (null? f8157881710 lst)))
  (define (drop kont81579 lst n)
    (let ((a8147981726 '0))
      (let ((f8158281727
             (lambda (a8148081728)
               (if a8148081728
                 (kont81579 lst)
                 (let ((f8158181729
                        (lambda (a8148181730)
                          (let ((a8148281731 '1))
                            (let ((f8158081732
                                   (lambda (a8148381733)
                                     (drop
                                      kont81579
                                      a8148181730
                                      a8148381733))))
                              (- f8158081732 n a8148281731))))))
                   (cdr f8158181729 lst))))))
        (= f8158281727 n a8147981726))))
  (define (foldr kont81583 proc acc lst)
    (let ((f8158781734
           (lambda (a8148481735)
             (if a8148481735
               (kont81583 acc)
               (let ((f8158681736
                      (lambda (a8148581737)
                        (let ((f8158581738
                               (lambda (a8148681739)
                                 (let ((f8158481740
                                        (lambda (a8148781741)
                                          (proc
                                           kont81583
                                           a8148581737
                                           a8148781741))))
                                   (foldr f8158481740 proc acc a8148681739)))))
                          (cdr f8158581738 lst)))))
                 (car f8158681736 lst))))))
      (null? f8158781734 lst)))
  (define (append kont81588 lst1 lst2)
    (let ((f8159281742
           (lambda (a8148881743)
             (if a8148881743
               (kont81588 lst2)
               (let ((f8159181744
                      (lambda (a8148981745)
                        (let ((f8159081746
                               (lambda (a8149081747)
                                 (let ((f8158981748
                                        (lambda (a8149181749)
                                          (cons
                                           kont81588
                                           a8148981745
                                           a8149181749))))
                                   (append f8158981748 a8149081747 lst2)))))
                          (cdr f8159081746 lst1)))))
                 (car f8159181744 lst1))))))
      (null? f8159281742 lst1)))
  (define (hash . lst)
    (let ((kont8159381750 (prim car lst)))
      (let ((lst81751 (prim cdr lst)))
        (let ((x8149281752 (apply-prim hash lst81751)))
          (kont8159381750 x8149281752)))))
  (define (hash-ref kont81595 h k)
    (let ((x8149381753 (prim hash-ref h k))) (kont81595 x8149381753)))
  (define (hash-set kont81596 h k v)
    (let ((x8149481754 (prim hash-set h k v))) (kont81596 x8149481754)))
  (define (hash-has-key? kont81597 h k)
    (let ((x8149581755 (prim hash-has-key? h k))) (kont81597 x8149581755)))
  (define (hash-count kont81598 h)
    (let ((x8149681756 (prim hash-count h))) (kont81598 x8149681756)))
  (define (call kont81599)
    (let ((a8149781757 '100.8))
      (let ((a8149881758 '80))
        (let ((a8149981759 '10))
          (let ((a8150081760 '2.4))
            (- kont81599 a8149781757 a8149881758 a8149981759 a8150081760))))))
  (define (brouhaha_main kont81600)
    (let ((f8160181761 (lambda (x8150181762) (kont81600 x8150181762))))
      (call f8160181761))))
