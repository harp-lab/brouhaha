(define (call)
  ;   (cond
  ;     [else 5])

;   (cond
;     [(positive? -5) "doesn't_get_here"]
;     [(negative? 5) 'negative]
;     [else "doesn't_get_here_either"])


;   (cond
;     [(filter even? (list 1 2 3))]) ; didn't work for slog non termination issue

; works
; (cond [(foldl + 0 (list 1 2 3))])

; not working because of the slog bug?
; (cond [(foldr + 0 (list 1 2 3)) => (lambda (l) (+ l l))])

; working, foldl works but foldr doesn't
(cond [(foldl + 0 (list 1 2 3)) => (lambda (l) (+ l l))])

; works
; (cond [100 => (lambda (l) (+ l l))])
; (cond [100 => (lambda l l)])

; (cond)
)

(define (brouhaha_main)
  (call))