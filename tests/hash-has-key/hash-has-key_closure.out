'((proc
   (+ _59199 . lst)
   (let ((kont5893459035 (prim car lst)))
     (let ((lst59036 (prim cdr lst)))
       (let ((x5884459037 (apply-prim + lst59036)))
         (clo-app kont5893459035 x5884459037)))))
  (proc
   (- _59200 . lst)
   (let ((kont5893659038 (prim car lst)))
     (let ((lst59039 (prim cdr lst)))
       (let ((x5884559040 (apply-prim - lst59039)))
         (clo-app kont5893659038 x5884559040)))))
  (proc
   (* _59201 . lst)
   (let ((kont5893859041 (prim car lst)))
     (let ((lst59042 (prim cdr lst)))
       (let ((x5884659043 (apply-prim * lst59042)))
         (clo-app kont5893859041 x5884659043)))))
  (proc
   (modulo _59202 kont58940 a b)
   (let ((x5884759044 (prim modulo a b))) (clo-app kont58940 x5884759044)))
  (proc
   (/ _59203 . lst)
   (let ((kont5894159045 (prim car lst)))
     (let ((lst59046 (prim cdr lst)))
       (let ((x5884859047 (apply-prim / lst59046)))
         (clo-app kont5894159045 x5884859047)))))
  (proc
   (= _59204 . lst)
   (let ((kont5894359048 (prim car lst)))
     (let ((lst59049 (prim cdr lst)))
       (let ((x5884959050 (apply-prim = lst59049)))
         (clo-app kont5894359048 x5884959050)))))
  (proc
   (> _59205 . lst)
   (let ((kont5894559051 (prim car lst)))
     (let ((lst59052 (prim cdr lst)))
       (let ((x5885059053 (apply-prim > lst59052)))
         (clo-app kont5894559051 x5885059053)))))
  (proc
   (< _59206 . lst)
   (let ((kont5894759054 (prim car lst)))
     (let ((lst59055 (prim cdr lst)))
       (let ((x5885159056 (apply-prim < lst59055)))
         (clo-app kont5894759054 x5885159056)))))
  (proc
   (<= _59207 . lst)
   (let ((kont5894959057 (prim car lst)))
     (let ((lst59058 (prim cdr lst)))
       (let ((x5885259059 (apply-prim <= lst59058)))
         (clo-app kont5894959057 x5885259059)))))
  (proc
   (>= _59208 . lst)
   (let ((kont5895159060 (prim car lst)))
     (let ((lst59061 (prim cdr lst)))
       (let ((x5885359062 (apply-prim >= lst59061)))
         (clo-app kont5895159060 x5885359062)))))
  (proc
   (null? _59209 kont58953 x)
   (let ((x5885459063 (prim null? x))) (clo-app kont58953 x5885459063)))
  (proc
   (equal? _59210 kont58954 x y)
   (let ((x5885559064 (prim equal? x y))) (clo-app kont58954 x5885559064)))
  (proc
   (eq? _59211 kont58955 x y)
   (let ((x5885659065 (prim eq? x y))) (clo-app kont58955 x5885659065)))
  (proc
   (cons _59212 kont58956 a b)
   (let ((x5885759066 (prim cons a b))) (clo-app kont58956 x5885759066)))
  (proc
   (car _59213 kont58957 lst)
   (let ((x5885859067 (prim car lst))) (clo-app kont58957 x5885859067)))
  (proc
   (cdr _59214 kont58958 lst)
   (let ((x5885959068 (prim cdr lst))) (clo-app kont58958 x5885959068)))
  (proc
   (lam59215 env59216 a5886259072)
   (let ((kont58959 (env-ref env59216 3)))
     (let ((equal? (env-ref env59216 2)))
       (let ((a5886059069 (env-ref env59216 1)))
         (clo-app equal? kont58959 a5886059069 a5886259072)))))
  (proc
   (even? _59219 kont58959 x)
   (let ((a5886059069 '0))
     (let ((a5886159070 '2))
       (let ((f5896059071
              (make-closure lam59215 a5886059069 equal? kont58959)))
         (clo-app modulo f5896059071 x a5886159070)))))
  (proc
   (lam59220 env59221 a5886559076)
   (let ((equal? (env-ref env59221 3)))
     (let ((kont58961 (env-ref env59221 2)))
       (let ((a5886359073 (env-ref env59221 1)))
         (clo-app equal? kont58961 a5886359073 a5886559076)))))
  (proc
   (odd? _59224 kont58961 x)
   (let ((a5886359073 '1))
     (let ((a5886459074 '2))
       (let ((f5896259075
              (make-closure lam59220 a5886359073 kont58961 equal?)))
         (clo-app modulo f5896259075 x a5886459074)))))
  (proc
   (list _59225 . x)
   (let ((kont5896359077 (prim car x)))
     (let ((x59078 (prim cdr x))) (clo-app kont5896359077 x59078))))
  (proc
   (lam59228 env59229 a5887159088)
   (let ((kont58965 (env-ref env59229 3)))
     (let ((x (env-ref env59229 2)))
       (let ((member? (env-ref env59229 1)))
         (clo-app member? kont58965 x a5887159088)))))
  (proc
   (lam59230 env59231 a5886959085)
   (let ((cdr (env-ref env59231 5)))
     (let ((lst (env-ref env59231 4)))
       (let ((kont58965 (env-ref env59231 3)))
         (let ((x (env-ref env59231 2)))
           (let ((member? (env-ref env59231 1)))
             (if a5886959085
               (let ((x5887059086 '#t)) (clo-app kont58965 x5887059086))
               (let ((f5896659087 (make-closure lam59228 member? x kont58965)))
                 (clo-app cdr f5896659087 lst)))))))))
  (proc
   (lam59232 env59233 a5886859083)
   (let ((cdr (env-ref env59233 6)))
     (let ((lst (env-ref env59233 5)))
       (let ((kont58965 (env-ref env59233 4)))
         (let ((equal? (env-ref env59233 3)))
           (let ((x (env-ref env59233 2)))
             (let ((member? (env-ref env59233 1)))
               (let ((f5896759084
                      (make-closure lam59230 member? x kont58965 lst cdr)))
                 (clo-app equal? f5896759084 a5886859083 x)))))))))
  (proc
   (lam59234 env59235 a5886659080)
   (let ((cdr (env-ref env59235 7)))
     (let ((lst (env-ref env59235 6)))
       (let ((kont58965 (env-ref env59235 5)))
         (let ((equal? (env-ref env59235 4)))
           (let ((x (env-ref env59235 3)))
             (let ((car (env-ref env59235 2)))
               (let ((member? (env-ref env59235 1)))
                 (if a5886659080
                   (let ((x5886759081 '#f)) (clo-app kont58965 x5886759081))
                   (let ((f5896859082
                          (make-closure
                           lam59232
                           member?
                           x
                           equal?
                           kont58965
                           lst
                           cdr)))
                     (clo-app car f5896859082 lst)))))))))))
  (proc
   (member? _59236 kont58965 x lst)
   (let ((f5896959079
          (make-closure lam59234 member? car x equal? kont58965 lst cdr)))
     (clo-app null? f5896959079 lst)))
  (proc
   (lam59237 env59238 a5887559096)
   (let ((a5887459094 (env-ref env59238 4)))
     (let ((fun (env-ref env59238 3)))
       (let ((kont58970 (env-ref env59238 2)))
         (let ((foldl (env-ref env59238 1)))
           (clo-app foldl kont58970 fun a5887459094 a5887559096))))))
  (proc
   (lam59239 env59240 a5887459094)
   (let ((cdr (env-ref env59240 5)))
     (let ((lst (env-ref env59240 4)))
       (let ((fun (env-ref env59240 3)))
         (let ((kont58970 (env-ref env59240 2)))
           (let ((foldl (env-ref env59240 1)))
             (let ((f5897159095
                    (make-closure lam59237 foldl kont58970 fun a5887459094)))
               (clo-app cdr f5897159095 lst))))))))
  (proc
   (lam59241 env59242 a5887359092)
   (let ((cdr (env-ref env59242 6)))
     (let ((lst (env-ref env59242 5)))
       (let ((fun (env-ref env59242 4)))
         (let ((acc (env-ref env59242 3)))
           (let ((kont58970 (env-ref env59242 2)))
             (let ((foldl (env-ref env59242 1)))
               (let ((f5897259093
                      (make-closure lam59239 foldl kont58970 fun lst cdr)))
                 (clo-app fun f5897259093 a5887359092 acc)))))))))
  (proc
   (lam59243 env59244 a5887259090)
   (let ((cdr (env-ref env59244 7)))
     (let ((lst (env-ref env59244 6)))
       (let ((fun (env-ref env59244 5)))
         (let ((acc (env-ref env59244 4)))
           (let ((kont58970 (env-ref env59244 3)))
             (let ((car (env-ref env59244 2)))
               (let ((foldl (env-ref env59244 1)))
                 (if a5887259090
                   (clo-app kont58970 acc)
                   (let ((f5897359091
                          (make-closure
                           lam59241
                           foldl
                           kont58970
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f5897359091 lst)))))))))))
  (proc
   (foldl _59245 kont58970 fun acc lst)
   (let ((f5897459089
          (make-closure lam59243 foldl car kont58970 acc fun lst cdr)))
     (clo-app null? f5897459089 lst)))
  (proc
   (lam59246 env59247 a5887959104)
   (let ((kont58975 (env-ref env59247 3)))
     (let ((reverse-helper (env-ref env59247 2)))
       (let ((a5887759100 (env-ref env59247 1)))
         (clo-app reverse-helper kont58975 a5887759100 a5887959104)))))
  (proc
   (lam59248 env59249 a5887859102)
   (let ((kont58975 (env-ref env59249 5)))
     (let ((reverse-helper (env-ref env59249 4)))
       (let ((lst2 (env-ref env59249 3)))
         (let ((cons (env-ref env59249 2)))
           (let ((a5887759100 (env-ref env59249 1)))
             (let ((f5897659103
                    (make-closure
                     lam59246
                     a5887759100
                     reverse-helper
                     kont58975)))
               (clo-app cons f5897659103 a5887859102 lst2))))))))
  (proc
   (lam59250 env59251 a5887759100)
   (let ((kont58975 (env-ref env59251 6)))
     (let ((lst (env-ref env59251 5)))
       (let ((reverse-helper (env-ref env59251 4)))
         (let ((lst2 (env-ref env59251 3)))
           (let ((car (env-ref env59251 2)))
             (let ((cons (env-ref env59251 1)))
               (let ((f5897759101
                      (make-closure
                       lam59248
                       a5887759100
                       cons
                       lst2
                       reverse-helper
                       kont58975)))
                 (clo-app car f5897759101 lst)))))))))
  (proc
   (lam59252 env59253 a5887659098)
   (let ((cdr (env-ref env59253 7)))
     (let ((kont58975 (env-ref env59253 6)))
       (let ((lst (env-ref env59253 5)))
         (let ((reverse-helper (env-ref env59253 4)))
           (let ((lst2 (env-ref env59253 3)))
             (let ((car (env-ref env59253 2)))
               (let ((cons (env-ref env59253 1)))
                 (if a5887659098
                   (clo-app kont58975 lst2)
                   (let ((f5897859099
                          (make-closure
                           lam59250
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont58975)))
                     (clo-app cdr f5897859099 lst)))))))))))
  (proc
   (reverse-helper _59254 kont58975 lst lst2)
   (let ((f5897959097
          (make-closure
           lam59252
           cons
           car
           lst2
           reverse-helper
           lst
           kont58975
           cdr)))
     (clo-app null? f5897959097 lst)))
  (proc
   (lam59255 env59256 a5888059106)
   (let ((lst (env-ref env59256 3)))
     (let ((kont58980 (env-ref env59256 2)))
       (let ((reverse-helper (env-ref env59256 1)))
         (clo-app reverse-helper kont58980 lst a5888059106)))))
  (proc
   (reverse _59257 kont58980 lst)
   (let ((f5898159105 (make-closure lam59255 reverse-helper kont58980 lst)))
     (clo-app list f5898159105)))
  (proc
   (lam59258 env59259 x5888359111)
   (let ((kont58982 (env-ref env59259 1))) (clo-app kont58982 x5888359111)))
  (proc
   (lam59260 env59261 a5888859120)
   (let ((kont58982 (env-ref env59261 4)))
     (let ((a5888459113 (env-ref env59261 3)))
       (let ((take-helper (env-ref env59261 2)))
         (let ((a5888659116 (env-ref env59261 1)))
           (clo-app
            take-helper
            kont58982
            a5888459113
            a5888659116
            a5888859120))))))
  (proc
   (lam59262 env59263 a5888759118)
   (let ((kont58982 (env-ref env59263 6)))
     (let ((a5888459113 (env-ref env59263 5)))
       (let ((take-helper (env-ref env59263 4)))
         (let ((lst2 (env-ref env59263 3)))
           (let ((cons (env-ref env59263 2)))
             (let ((a5888659116 (env-ref env59263 1)))
               (let ((f5898459119
                      (make-closure
                       lam59260
                       a5888659116
                       take-helper
                       a5888459113
                       kont58982)))
                 (clo-app cons f5898459119 a5888759118 lst2)))))))))
  (proc
   (lam59264 env59265 a5888659116)
   (let ((lst (env-ref env59265 7)))
     (let ((kont58982 (env-ref env59265 6)))
       (let ((a5888459113 (env-ref env59265 5)))
         (let ((car (env-ref env59265 4)))
           (let ((cons (env-ref env59265 3)))
             (let ((take-helper (env-ref env59265 2)))
               (let ((lst2 (env-ref env59265 1)))
                 (let ((f5898559117
                        (make-closure
                         lam59262
                         a5888659116
                         cons
                         lst2
                         take-helper
                         a5888459113
                         kont58982)))
                   (clo-app car f5898559117 lst))))))))))
  (proc
   (lam59267 env59268 a5888459113)
   (let ((lst (env-ref env59268 8)))
     (let ((kont58982 (env-ref env59268 7)))
       (let ((cons (env-ref env59268 6)))
         (let ((- (env-ref env59268 5)))
           (let ((take-helper (env-ref env59268 4)))
             (let ((lst2 (env-ref env59268 3)))
               (let ((n (env-ref env59268 2)))
                 (let ((car (env-ref env59268 1)))
                   (let ((a5888559114 '1))
                     (let ((f5898659115
                            (make-closure
                             lam59264
                             lst2
                             take-helper
                             cons
                             car
                             a5888459113
                             kont58982
                             lst)))
                       (clo-app - f5898659115 n a5888559114))))))))))))
  (proc
   (lam59269 env59270 a5888259109)
   (let ((cdr (env-ref env59270 10)))
     (let ((lst (env-ref env59270 9)))
       (let ((reverse (env-ref env59270 8)))
         (let ((kont58982 (env-ref env59270 7)))
           (let ((cons (env-ref env59270 6)))
             (let ((- (env-ref env59270 5)))
               (let ((take-helper (env-ref env59270 4)))
                 (let ((lst2 (env-ref env59270 3)))
                   (let ((n (env-ref env59270 2)))
                     (let ((car (env-ref env59270 1)))
                       (if a5888259109
                         (let ((f5898359110 (make-closure lam59258 kont58982)))
                           (clo-app reverse f5898359110 lst2))
                         (let ((f5898759112
                                (make-closure
                                 lam59267
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont58982
                                 lst)))
                           (clo-app cdr f5898759112 lst))))))))))))))
  (proc
   (take-helper _59272 kont58982 lst n lst2)
   (let ((a5888159107 '0))
     (let ((f5898859108
            (make-closure
             lam59269
             car
             n
             lst2
             take-helper
             -
             cons
             kont58982
             reverse
             lst
             cdr)))
       (clo-app = f5898859108 n a5888159107))))
  (proc
   (lam59273 env59274 a5888959122)
   (let ((lst (env-ref env59274 4)))
     (let ((take-helper (env-ref env59274 3)))
       (let ((n (env-ref env59274 2)))
         (let ((kont58989 (env-ref env59274 1)))
           (clo-app take-helper kont58989 lst n a5888959122))))))
  (proc
   (take _59275 kont58989 lst n)
   (let ((f5899059121 (make-closure lam59273 kont58989 n take-helper lst)))
     (clo-app list f5899059121)))
  (proc
   (lam59277 env59278 a5889459130)
   (let ((kont58991 (env-ref env59278 3)))
     (let ((a5889259126 (env-ref env59278 2)))
       (let ((+ (env-ref env59278 1)))
         (clo-app + kont58991 a5889259126 a5889459130)))))
  (proc
   (lam59279 env59280 a5889359128)
   (let ((kont58991 (env-ref env59280 4)))
     (let ((length (env-ref env59280 3)))
       (let ((a5889259126 (env-ref env59280 2)))
         (let ((+ (env-ref env59280 1)))
           (let ((f5899259129 (make-closure lam59277 + a5889259126 kont58991)))
             (clo-app length f5899259129 a5889359128)))))))
  (proc
   (lam59282 env59283 a5889059124)
   (let ((cdr (env-ref env59283 5)))
     (let ((kont58991 (env-ref env59283 4)))
       (let ((lst (env-ref env59283 3)))
         (let ((length (env-ref env59283 2)))
           (let ((+ (env-ref env59283 1)))
             (if a5889059124
               (let ((x5889159125 '0)) (clo-app kont58991 x5889159125))
               (let ((a5889259126 '1))
                 (let ((f5899359127
                        (make-closure
                         lam59279
                         +
                         a5889259126
                         length
                         kont58991)))
                   (clo-app cdr f5899359127 lst))))))))))
  (proc
   (length _59284 kont58991 lst)
   (let ((f5899459123 (make-closure lam59282 + length lst kont58991 cdr)))
     (clo-app null? f5899459123 lst)))
  (proc
   (lam59285 env59286 x5889659134)
   (let ((kont58995 (env-ref env59286 1))) (clo-app kont58995 x5889659134)))
  (proc
   (lam59287 env59288 a5890059142)
   (let ((a5889859138 (env-ref env59288 3)))
     (let ((kont58995 (env-ref env59288 2)))
       (let ((cons (env-ref env59288 1)))
         (clo-app cons kont58995 a5889859138 a5890059142)))))
  (proc
   (lam59289 env59290 a5889959140)
   (let ((a5889859138 (env-ref env59290 5)))
     (let ((proc (env-ref env59290 4)))
       (let ((cons (env-ref env59290 3)))
         (let ((map (env-ref env59290 2)))
           (let ((kont58995 (env-ref env59290 1)))
             (let ((f5899759141
                    (make-closure lam59287 cons kont58995 a5889859138)))
               (clo-app map f5899759141 proc a5889959140))))))))
  (proc
   (lam59291 env59292 a5889859138)
   (let ((cdr (env-ref env59292 6)))
     (let ((lst (env-ref env59292 5)))
       (let ((proc (env-ref env59292 4)))
         (let ((cons (env-ref env59292 3)))
           (let ((map (env-ref env59292 2)))
             (let ((kont58995 (env-ref env59292 1)))
               (let ((f5899859139
                      (make-closure
                       lam59289
                       kont58995
                       map
                       cons
                       proc
                       a5889859138)))
                 (clo-app cdr f5899859139 lst)))))))))
  (proc
   (lam59293 env59294 a5889759136)
   (let ((cdr (env-ref env59294 6)))
     (let ((lst (env-ref env59294 5)))
       (let ((proc (env-ref env59294 4)))
         (let ((cons (env-ref env59294 3)))
           (let ((map (env-ref env59294 2)))
             (let ((kont58995 (env-ref env59294 1)))
               (let ((f5899959137
                      (make-closure lam59291 kont58995 map cons proc lst cdr)))
                 (clo-app proc f5899959137 a5889759136)))))))))
  (proc
   (lam59295 env59296 a5889559132)
   (let ((lst (env-ref env59296 8)))
     (let ((proc (env-ref env59296 7)))
       (let ((car (env-ref env59296 6)))
         (let ((cons (env-ref env59296 5)))
           (let ((list (env-ref env59296 4)))
             (let ((cdr (env-ref env59296 3)))
               (let ((map (env-ref env59296 2)))
                 (let ((kont58995 (env-ref env59296 1)))
                   (if a5889559132
                     (let ((f5899659133 (make-closure lam59285 kont58995)))
                       (clo-app list f5899659133))
                     (let ((f5900059135
                            (make-closure
                             lam59293
                             kont58995
                             map
                             cons
                             proc
                             lst
                             cdr)))
                       (clo-app car f5900059135 lst))))))))))))
  (proc
   (map _59297 kont58995 proc lst)
   (let ((f5900159131
          (make-closure lam59295 kont58995 map cdr list cons car proc lst)))
     (clo-app null? f5900159131 lst)))
  (proc
   (lam59298 env59299 x5890259146)
   (let ((kont59002 (env-ref env59299 1))) (clo-app kont59002 x5890259146)))
  (proc
   (lam59300 env59301 a5890759156)
   (let ((a5890559152 (env-ref env59301 3)))
     (let ((kont59002 (env-ref env59301 2)))
       (let ((cons (env-ref env59301 1)))
         (clo-app cons kont59002 a5890559152 a5890759156)))))
  (proc
   (lam59302 env59303 a5890659154)
   (let ((a5890559152 (env-ref env59303 5)))
     (let ((op (env-ref env59303 4)))
       (let ((kont59002 (env-ref env59303 3)))
         (let ((filter (env-ref env59303 2)))
           (let ((cons (env-ref env59303 1)))
             (let ((f5900459155
                    (make-closure lam59300 cons kont59002 a5890559152)))
               (clo-app filter f5900459155 op a5890659154))))))))
  (proc
   (lam59304 env59305 a5890559152)
   (let ((cdr (env-ref env59305 6)))
     (let ((lst (env-ref env59305 5)))
       (let ((op (env-ref env59305 4)))
         (let ((kont59002 (env-ref env59305 3)))
           (let ((filter (env-ref env59305 2)))
             (let ((cons (env-ref env59305 1)))
               (let ((f5900559153
                      (make-closure
                       lam59302
                       cons
                       filter
                       kont59002
                       op
                       a5890559152)))
                 (clo-app cdr f5900559153 lst)))))))))
  (proc
   (lam59306 env59307 a5890859158)
   (let ((op (env-ref env59307 3)))
     (let ((kont59002 (env-ref env59307 2)))
       (let ((filter (env-ref env59307 1)))
         (clo-app filter kont59002 op a5890859158)))))
  (proc
   (lam59308 env59309 a5890459150)
   (let ((cdr (env-ref env59309 7)))
     (let ((lst (env-ref env59309 6)))
       (let ((op (env-ref env59309 5)))
         (let ((kont59002 (env-ref env59309 4)))
           (let ((cons (env-ref env59309 3)))
             (let ((filter (env-ref env59309 2)))
               (let ((car (env-ref env59309 1)))
                 (if a5890459150
                   (let ((f5900659151
                          (make-closure
                           lam59304
                           cons
                           filter
                           kont59002
                           op
                           lst
                           cdr)))
                     (clo-app car f5900659151 lst))
                   (let ((f5900759157
                          (make-closure lam59306 filter kont59002 op)))
                     (clo-app cdr f5900759157 lst)))))))))))
  (proc
   (lam59310 env59311 a5890359148)
   (let ((cdr (env-ref env59311 7)))
     (let ((lst (env-ref env59311 6)))
       (let ((op (env-ref env59311 5)))
         (let ((kont59002 (env-ref env59311 4)))
           (let ((cons (env-ref env59311 3)))
             (let ((filter (env-ref env59311 2)))
               (let ((car (env-ref env59311 1)))
                 (let ((f5900859149
                        (make-closure
                         lam59308
                         car
                         filter
                         cons
                         kont59002
                         op
                         lst
                         cdr)))
                   (clo-app op f5900859149 a5890359148))))))))))
  (proc
   (lam59312 env59313 a5890159144)
   (let ((lst (env-ref env59313 8)))
     (let ((op (env-ref env59313 7)))
       (let ((kont59002 (env-ref env59313 6)))
         (let ((cons (env-ref env59313 5)))
           (let ((list (env-ref env59313 4)))
             (let ((cdr (env-ref env59313 3)))
               (let ((filter (env-ref env59313 2)))
                 (let ((car (env-ref env59313 1)))
                   (if a5890159144
                     (let ((f5900359145 (make-closure lam59298 kont59002)))
                       (clo-app list f5900359145))
                     (let ((f5900959147
                            (make-closure
                             lam59310
                             car
                             filter
                             cons
                             kont59002
                             op
                             lst
                             cdr)))
                       (clo-app car f5900959147 lst))))))))))))
  (proc
   (filter _59314 kont59002 op lst)
   (let ((f5901059143
          (make-closure lam59312 car filter cdr list cons kont59002 op lst)))
     (clo-app null? f5901059143 lst)))
  (proc
   (lam59315 env59316 a5891359166)
   (let ((drop (env-ref env59316 3)))
     (let ((kont59011 (env-ref env59316 2)))
       (let ((a5891159163 (env-ref env59316 1)))
         (clo-app drop kont59011 a5891159163 a5891359166)))))
  (proc
   (lam59318 env59319 a5891159163)
   (let ((drop (env-ref env59319 4)))
     (let ((kont59011 (env-ref env59319 3)))
       (let ((n (env-ref env59319 2)))
         (let ((- (env-ref env59319 1)))
           (let ((a5891259164 '1))
             (let ((f5901259165
                    (make-closure lam59315 a5891159163 kont59011 drop)))
               (clo-app - f5901259165 n a5891259164))))))))
  (proc
   (lam59320 env59321 a5891059161)
   (let ((cdr (env-ref env59321 6)))
     (let ((kont59011 (env-ref env59321 5)))
       (let ((n (env-ref env59321 4)))
         (let ((- (env-ref env59321 3)))
           (let ((lst (env-ref env59321 2)))
             (let ((drop (env-ref env59321 1)))
               (if a5891059161
                 (clo-app kont59011 lst)
                 (let ((f5901359162
                        (make-closure lam59318 - n kont59011 drop)))
                   (clo-app cdr f5901359162 lst))))))))))
  (proc
   (drop _59323 kont59011 lst n)
   (let ((a5890959159 '0))
     (let ((f5901459160 (make-closure lam59320 drop lst - n kont59011 cdr)))
       (clo-app = f5901459160 n a5890959159))))
  (proc
   (lam59324 env59325 a5891759174)
   (let ((a5891559170 (env-ref env59325 3)))
     (let ((kont59015 (env-ref env59325 2)))
       (let ((proc (env-ref env59325 1)))
         (clo-app proc kont59015 a5891559170 a5891759174)))))
  (proc
   (lam59326 env59327 a5891659172)
   (let ((kont59015 (env-ref env59327 5)))
     (let ((foldr (env-ref env59327 4)))
       (let ((a5891559170 (env-ref env59327 3)))
         (let ((proc (env-ref env59327 2)))
           (let ((acc (env-ref env59327 1)))
             (let ((f5901659173
                    (make-closure lam59324 proc kont59015 a5891559170)))
               (clo-app foldr f5901659173 proc acc a5891659172))))))))
  (proc
   (lam59328 env59329 a5891559170)
   (let ((cdr (env-ref env59329 6)))
     (let ((kont59015 (env-ref env59329 5)))
       (let ((foldr (env-ref env59329 4)))
         (let ((lst (env-ref env59329 3)))
           (let ((proc (env-ref env59329 2)))
             (let ((acc (env-ref env59329 1)))
               (let ((f5901759171
                      (make-closure
                       lam59326
                       acc
                       proc
                       a5891559170
                       foldr
                       kont59015)))
                 (clo-app cdr f5901759171 lst)))))))))
  (proc
   (lam59330 env59331 a5891459168)
   (let ((cdr (env-ref env59331 7)))
     (let ((kont59015 (env-ref env59331 6)))
       (let ((car (env-ref env59331 5)))
         (let ((foldr (env-ref env59331 4)))
           (let ((lst (env-ref env59331 3)))
             (let ((proc (env-ref env59331 2)))
               (let ((acc (env-ref env59331 1)))
                 (if a5891459168
                   (clo-app kont59015 acc)
                   (let ((f5901859169
                          (make-closure
                           lam59328
                           acc
                           proc
                           lst
                           foldr
                           kont59015
                           cdr)))
                     (clo-app car f5901859169 lst)))))))))))
  (proc
   (foldr _59332 kont59015 proc acc lst)
   (let ((f5901959167
          (make-closure lam59330 acc proc lst foldr car kont59015 cdr)))
     (clo-app null? f5901959167 lst)))
  (proc
   (lam59333 env59334 a5892159182)
   (let ((a5891959178 (env-ref env59334 3)))
     (let ((cons (env-ref env59334 2)))
       (let ((kont59020 (env-ref env59334 1)))
         (clo-app cons kont59020 a5891959178 a5892159182)))))
  (proc
   (lam59335 env59336 a5892059180)
   (let ((append (env-ref env59336 5)))
     (let ((a5891959178 (env-ref env59336 4)))
       (let ((lst2 (env-ref env59336 3)))
         (let ((cons (env-ref env59336 2)))
           (let ((kont59020 (env-ref env59336 1)))
             (let ((f5902159181
                    (make-closure lam59333 kont59020 cons a5891959178)))
               (clo-app append f5902159181 a5892059180 lst2))))))))
  (proc
   (lam59337 env59338 a5891959178)
   (let ((cdr (env-ref env59338 6)))
     (let ((append (env-ref env59338 5)))
       (let ((lst2 (env-ref env59338 4)))
         (let ((lst1 (env-ref env59338 3)))
           (let ((cons (env-ref env59338 2)))
             (let ((kont59020 (env-ref env59338 1)))
               (let ((f5902259179
                      (make-closure
                       lam59335
                       kont59020
                       cons
                       lst2
                       a5891959178
                       append)))
                 (clo-app cdr f5902259179 lst1)))))))))
  (proc
   (lam59339 env59340 a5891859176)
   (let ((cdr (env-ref env59340 7)))
     (let ((append (env-ref env59340 6)))
       (let ((lst2 (env-ref env59340 5)))
         (let ((lst1 (env-ref env59340 4)))
           (let ((car (env-ref env59340 3)))
             (let ((cons (env-ref env59340 2)))
               (let ((kont59020 (env-ref env59340 1)))
                 (if a5891859176
                   (clo-app kont59020 lst2)
                   (let ((f5902359177
                          (make-closure
                           lam59337
                           kont59020
                           cons
                           lst1
                           lst2
                           append
                           cdr)))
                     (clo-app car f5902359177 lst1)))))))))))
  (proc
   (append _59341 kont59020 lst1 lst2)
   (let ((f5902459175
          (make-closure lam59339 kont59020 cons car lst1 lst2 append cdr)))
     (clo-app null? f5902459175 lst1)))
  (proc
   (hash _59342 . lst)
   (let ((kont5902559183 (prim car lst)))
     (let ((lst59184 (prim cdr lst)))
       (let ((x5892259185 (apply-prim hash lst59184)))
         (clo-app kont5902559183 x5892259185)))))
  (proc
   (hash-ref _59343 kont59027 h k)
   (let ((x5892359186 (prim hash-ref h k))) (clo-app kont59027 x5892359186)))
  (proc
   (hash-set _59344 kont59028 h k v)
   (let ((x5892459187 (prim hash-set h k v))) (clo-app kont59028 x5892459187)))
  (proc
   (hash-has-key? _59345 kont59029 h k)
   (let ((x5892559188 (prim hash-has-key? h k)))
     (clo-app kont59029 x5892559188)))
  (proc
   (hash-count _59346 kont59030 h)
   (let ((x5892659189 (prim hash-count h))) (clo-app kont59030 x5892659189)))
  (proc
   (lam59348 env59349 a5893159195)
   (let ((hash-has-key? (env-ref env59349 2)))
     (let ((kont59031 (env-ref env59349 1)))
       (let ((a5893259196 '5))
         (clo-app hash-has-key? kont59031 a5893159195 a5893259196)))))
  (proc
   (call _59354 kont59031)
   (let ((a5892759190 '100))
     (let ((a5892859191 '80))
       (let ((a5892959192 '10))
         (let ((a5893059193 '2))
           (let ((f5903259194 (make-closure lam59348 kont59031 hash-has-key?)))
             (clo-app
              hash
              f5903259194
              a5892759190
              a5892859191
              a5892959192
              a5893059193)))))))
  (proc
   (lam59355 env59356 x5893359198)
   (let ((kont59033 (env-ref env59356 1))) (clo-app kont59033 x5893359198)))
  (proc
   (brouhaha_main _59357 kont59033)
   (let ((f5903459197 (make-closure lam59355 kont59033)))
     (clo-app call f5903459197))))
