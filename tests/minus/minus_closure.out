'((proc
   (+ _85906 . lst)
   (let ((kont8564585745 (prim car lst)))
     (let ((lst85746 (prim cdr lst)))
       (let ((x8555785747 (apply-prim + lst85746)))
         (clo-app kont8564585745 x8555785747)))))
  (proc
   (- _85907 . lst)
   (let ((kont8564785748 (prim car lst)))
     (let ((lst85749 (prim cdr lst)))
       (let ((x8555885750 (apply-prim - lst85749)))
         (clo-app kont8564785748 x8555885750)))))
  (proc
   (* _85908 . lst)
   (let ((kont8564985751 (prim car lst)))
     (let ((lst85752 (prim cdr lst)))
       (let ((x8555985753 (apply-prim * lst85752)))
         (clo-app kont8564985751 x8555985753)))))
  (proc
   (modulo _85909 kont85651 a b)
   (let ((x8556085754 (prim modulo a b))) (clo-app kont85651 x8556085754)))
  (proc
   (/ _85910 . lst)
   (let ((kont8565285755 (prim car lst)))
     (let ((lst85756 (prim cdr lst)))
       (let ((x8556185757 (apply-prim / lst85756)))
         (clo-app kont8565285755 x8556185757)))))
  (proc
   (= _85911 . lst)
   (let ((kont8565485758 (prim car lst)))
     (let ((lst85759 (prim cdr lst)))
       (let ((x8556285760 (apply-prim = lst85759)))
         (clo-app kont8565485758 x8556285760)))))
  (proc
   (> _85912 . lst)
   (let ((kont8565685761 (prim car lst)))
     (let ((lst85762 (prim cdr lst)))
       (let ((x8556385763 (apply-prim > lst85762)))
         (clo-app kont8565685761 x8556385763)))))
  (proc
   (< _85913 . lst)
   (let ((kont8565885764 (prim car lst)))
     (let ((lst85765 (prim cdr lst)))
       (let ((x8556485766 (apply-prim < lst85765)))
         (clo-app kont8565885764 x8556485766)))))
  (proc
   (<= _85914 . lst)
   (let ((kont8566085767 (prim car lst)))
     (let ((lst85768 (prim cdr lst)))
       (let ((x8556585769 (apply-prim <= lst85768)))
         (clo-app kont8566085767 x8556585769)))))
  (proc
   (>= _85915 . lst)
   (let ((kont8566285770 (prim car lst)))
     (let ((lst85771 (prim cdr lst)))
       (let ((x8556685772 (apply-prim >= lst85771)))
         (clo-app kont8566285770 x8556685772)))))
  (proc
   (null? _85916 kont85664 x)
   (let ((x8556785773 (prim null? x))) (clo-app kont85664 x8556785773)))
  (proc
   (equal? _85917 kont85665 x y)
   (let ((x8556885774 (prim equal? x y))) (clo-app kont85665 x8556885774)))
  (proc
   (eq? _85918 kont85666 x y)
   (let ((x8556985775 (prim eq? x y))) (clo-app kont85666 x8556985775)))
  (proc
   (cons _85919 kont85667 a b)
   (let ((x8557085776 (prim cons a b))) (clo-app kont85667 x8557085776)))
  (proc
   (car _85920 kont85668 lst)
   (let ((x8557185777 (prim car lst))) (clo-app kont85668 x8557185777)))
  (proc
   (cdr _85921 kont85669 lst)
   (let ((x8557285778 (prim cdr lst))) (clo-app kont85669 x8557285778)))
  (proc
   (lam85922 env85923 a8557585782)
   (let ((kont85670 (env-ref env85923 3)))
     (let ((equal? (env-ref env85923 2)))
       (let ((a8557385779 (env-ref env85923 1)))
         (clo-app equal? kont85670 a8557385779 a8557585782)))))
  (proc
   (even? _85926 kont85670 x)
   (let ((a8557385779 '0))
     (let ((a8557485780 '2))
       (let ((f8567185781
              (make-closure lam85922 a8557385779 equal? kont85670)))
         (clo-app modulo f8567185781 x a8557485780)))))
  (proc
   (lam85927 env85928 a8557885786)
   (let ((a8557685783 (env-ref env85928 3)))
     (let ((kont85672 (env-ref env85928 2)))
       (let ((equal? (env-ref env85928 1)))
         (clo-app equal? kont85672 a8557685783 a8557885786)))))
  (proc
   (odd? _85931 kont85672 x)
   (let ((a8557685783 '1))
     (let ((a8557785784 '2))
       (let ((f8567385785
              (make-closure lam85927 equal? kont85672 a8557685783)))
         (clo-app modulo f8567385785 x a8557785784)))))
  (proc
   (list _85932 . x)
   (let ((kont8567485787 (prim car x)))
     (let ((x85788 (prim cdr x))) (clo-app kont8567485787 x85788))))
  (proc
   (lam85935 env85936 a8558485798)
   (let ((kont85676 (env-ref env85936 3)))
     (let ((x (env-ref env85936 2)))
       (let ((member? (env-ref env85936 1)))
         (clo-app member? kont85676 x a8558485798)))))
  (proc
   (lam85937 env85938 a8558285795)
   (let ((cdr (env-ref env85938 5)))
     (let ((lst (env-ref env85938 4)))
       (let ((kont85676 (env-ref env85938 3)))
         (let ((x (env-ref env85938 2)))
           (let ((member? (env-ref env85938 1)))
             (if a8558285795
               (let ((x8558385796 '#t)) (clo-app kont85676 x8558385796))
               (let ((f8567785797 (make-closure lam85935 member? x kont85676)))
                 (clo-app cdr f8567785797 lst)))))))))
  (proc
   (lam85939 env85940 a8558185793)
   (let ((cdr (env-ref env85940 6)))
     (let ((lst (env-ref env85940 5)))
       (let ((kont85676 (env-ref env85940 4)))
         (let ((equal? (env-ref env85940 3)))
           (let ((x (env-ref env85940 2)))
             (let ((member? (env-ref env85940 1)))
               (let ((f8567885794
                      (make-closure lam85937 member? x kont85676 lst cdr)))
                 (clo-app equal? f8567885794 a8558185793 x)))))))))
  (proc
   (lam85941 env85942 a8557985790)
   (let ((cdr (env-ref env85942 7)))
     (let ((lst (env-ref env85942 6)))
       (let ((kont85676 (env-ref env85942 5)))
         (let ((equal? (env-ref env85942 4)))
           (let ((x (env-ref env85942 3)))
             (let ((car (env-ref env85942 2)))
               (let ((member? (env-ref env85942 1)))
                 (if a8557985790
                   (let ((x8558085791 '#f)) (clo-app kont85676 x8558085791))
                   (let ((f8567985792
                          (make-closure
                           lam85939
                           member?
                           x
                           equal?
                           kont85676
                           lst
                           cdr)))
                     (clo-app car f8567985792 lst)))))))))))
  (proc
   (member? _85943 kont85676 x lst)
   (let ((f8568085789
          (make-closure lam85941 member? car x equal? kont85676 lst cdr)))
     (clo-app null? f8568085789 lst)))
  (proc
   (lam85944 env85945 a8558885806)
   (let ((a8558785804 (env-ref env85945 4)))
     (let ((fun (env-ref env85945 3)))
       (let ((kont85681 (env-ref env85945 2)))
         (let ((foldl (env-ref env85945 1)))
           (clo-app foldl kont85681 fun a8558785804 a8558885806))))))
  (proc
   (lam85946 env85947 a8558785804)
   (let ((cdr (env-ref env85947 5)))
     (let ((lst (env-ref env85947 4)))
       (let ((fun (env-ref env85947 3)))
         (let ((kont85681 (env-ref env85947 2)))
           (let ((foldl (env-ref env85947 1)))
             (let ((f8568285805
                    (make-closure lam85944 foldl kont85681 fun a8558785804)))
               (clo-app cdr f8568285805 lst))))))))
  (proc
   (lam85948 env85949 a8558685802)
   (let ((cdr (env-ref env85949 6)))
     (let ((lst (env-ref env85949 5)))
       (let ((fun (env-ref env85949 4)))
         (let ((acc (env-ref env85949 3)))
           (let ((kont85681 (env-ref env85949 2)))
             (let ((foldl (env-ref env85949 1)))
               (let ((f8568385803
                      (make-closure lam85946 foldl kont85681 fun lst cdr)))
                 (clo-app fun f8568385803 a8558685802 acc)))))))))
  (proc
   (lam85950 env85951 a8558585800)
   (let ((cdr (env-ref env85951 7)))
     (let ((lst (env-ref env85951 6)))
       (let ((fun (env-ref env85951 5)))
         (let ((acc (env-ref env85951 4)))
           (let ((kont85681 (env-ref env85951 3)))
             (let ((car (env-ref env85951 2)))
               (let ((foldl (env-ref env85951 1)))
                 (if a8558585800
                   (clo-app kont85681 acc)
                   (let ((f8568485801
                          (make-closure
                           lam85948
                           foldl
                           kont85681
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f8568485801 lst)))))))))))
  (proc
   (foldl _85952 kont85681 fun acc lst)
   (let ((f8568585799
          (make-closure lam85950 foldl car kont85681 acc fun lst cdr)))
     (clo-app null? f8568585799 lst)))
  (proc
   (lam85953 env85954 a8559285814)
   (let ((kont85686 (env-ref env85954 3)))
     (let ((reverse-helper (env-ref env85954 2)))
       (let ((a8559085810 (env-ref env85954 1)))
         (clo-app reverse-helper kont85686 a8559085810 a8559285814)))))
  (proc
   (lam85955 env85956 a8559185812)
   (let ((kont85686 (env-ref env85956 5)))
     (let ((reverse-helper (env-ref env85956 4)))
       (let ((lst2 (env-ref env85956 3)))
         (let ((a8559085810 (env-ref env85956 2)))
           (let ((cons (env-ref env85956 1)))
             (let ((f8568785813
                    (make-closure
                     lam85953
                     a8559085810
                     reverse-helper
                     kont85686)))
               (clo-app cons f8568785813 a8559185812 lst2))))))))
  (proc
   (lam85957 env85958 a8559085810)
   (let ((kont85686 (env-ref env85958 6)))
     (let ((lst (env-ref env85958 5)))
       (let ((reverse-helper (env-ref env85958 4)))
         (let ((lst2 (env-ref env85958 3)))
           (let ((car (env-ref env85958 2)))
             (let ((cons (env-ref env85958 1)))
               (let ((f8568885811
                      (make-closure
                       lam85955
                       cons
                       a8559085810
                       lst2
                       reverse-helper
                       kont85686)))
                 (clo-app car f8568885811 lst)))))))))
  (proc
   (lam85959 env85960 a8558985808)
   (let ((cdr (env-ref env85960 7)))
     (let ((kont85686 (env-ref env85960 6)))
       (let ((lst (env-ref env85960 5)))
         (let ((reverse-helper (env-ref env85960 4)))
           (let ((lst2 (env-ref env85960 3)))
             (let ((car (env-ref env85960 2)))
               (let ((cons (env-ref env85960 1)))
                 (if a8558985808
                   (clo-app kont85686 lst2)
                   (let ((f8568985809
                          (make-closure
                           lam85957
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont85686)))
                     (clo-app cdr f8568985809 lst)))))))))))
  (proc
   (reverse-helper _85961 kont85686 lst lst2)
   (let ((f8569085807
          (make-closure
           lam85959
           cons
           car
           lst2
           reverse-helper
           lst
           kont85686
           cdr)))
     (clo-app null? f8569085807 lst)))
  (proc
   (lam85962 env85963 a8559385816)
   (let ((lst (env-ref env85963 3)))
     (let ((kont85691 (env-ref env85963 2)))
       (let ((reverse-helper (env-ref env85963 1)))
         (clo-app reverse-helper kont85691 lst a8559385816)))))
  (proc
   (reverse _85964 kont85691 lst)
   (let ((f8569285815 (make-closure lam85962 reverse-helper kont85691 lst)))
     (clo-app list f8569285815)))
  (proc
   (lam85965 env85966 x8559685821)
   (let ((kont85693 (env-ref env85966 1))) (clo-app kont85693 x8559685821)))
  (proc
   (lam85967 env85968 a8560185830)
   (let ((kont85693 (env-ref env85968 4)))
     (let ((a8559785823 (env-ref env85968 3)))
       (let ((take-helper (env-ref env85968 2)))
         (let ((a8559985826 (env-ref env85968 1)))
           (clo-app
            take-helper
            kont85693
            a8559785823
            a8559985826
            a8560185830))))))
  (proc
   (lam85969 env85970 a8560085828)
   (let ((kont85693 (env-ref env85970 6)))
     (let ((a8559785823 (env-ref env85970 5)))
       (let ((a8559985826 (env-ref env85970 4)))
         (let ((cons (env-ref env85970 3)))
           (let ((take-helper (env-ref env85970 2)))
             (let ((lst2 (env-ref env85970 1)))
               (let ((f8569585829
                      (make-closure
                       lam85967
                       a8559985826
                       take-helper
                       a8559785823
                       kont85693)))
                 (clo-app cons f8569585829 a8560085828 lst2)))))))))
  (proc
   (lam85971 env85972 a8559985826)
   (let ((lst (env-ref env85972 7)))
     (let ((kont85693 (env-ref env85972 6)))
       (let ((a8559785823 (env-ref env85972 5)))
         (let ((car (env-ref env85972 4)))
           (let ((cons (env-ref env85972 3)))
             (let ((take-helper (env-ref env85972 2)))
               (let ((lst2 (env-ref env85972 1)))
                 (let ((f8569685827
                        (make-closure
                         lam85969
                         lst2
                         take-helper
                         cons
                         a8559985826
                         a8559785823
                         kont85693)))
                   (clo-app car f8569685827 lst))))))))))
  (proc
   (lam85974 env85975 a8559785823)
   (let ((lst (env-ref env85975 8)))
     (let ((kont85693 (env-ref env85975 7)))
       (let ((cons (env-ref env85975 6)))
         (let ((- (env-ref env85975 5)))
           (let ((take-helper (env-ref env85975 4)))
             (let ((lst2 (env-ref env85975 3)))
               (let ((n (env-ref env85975 2)))
                 (let ((car (env-ref env85975 1)))
                   (let ((a8559885824 '1))
                     (let ((f8569785825
                            (make-closure
                             lam85971
                             lst2
                             take-helper
                             cons
                             car
                             a8559785823
                             kont85693
                             lst)))
                       (clo-app - f8569785825 n a8559885824))))))))))))
  (proc
   (lam85976 env85977 a8559585819)
   (let ((cdr (env-ref env85977 10)))
     (let ((lst (env-ref env85977 9)))
       (let ((reverse (env-ref env85977 8)))
         (let ((kont85693 (env-ref env85977 7)))
           (let ((cons (env-ref env85977 6)))
             (let ((- (env-ref env85977 5)))
               (let ((take-helper (env-ref env85977 4)))
                 (let ((lst2 (env-ref env85977 3)))
                   (let ((n (env-ref env85977 2)))
                     (let ((car (env-ref env85977 1)))
                       (if a8559585819
                         (let ((f8569485820 (make-closure lam85965 kont85693)))
                           (clo-app reverse f8569485820 lst2))
                         (let ((f8569885822
                                (make-closure
                                 lam85974
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont85693
                                 lst)))
                           (clo-app cdr f8569885822 lst))))))))))))))
  (proc
   (take-helper _85979 kont85693 lst n lst2)
   (let ((a8559485817 '0))
     (let ((f8569985818
            (make-closure
             lam85976
             car
             n
             lst2
             take-helper
             -
             cons
             kont85693
             reverse
             lst
             cdr)))
       (clo-app = f8569985818 n a8559485817))))
  (proc
   (lam85980 env85981 a8560285832)
   (let ((lst (env-ref env85981 4)))
     (let ((take-helper (env-ref env85981 3)))
       (let ((n (env-ref env85981 2)))
         (let ((kont85700 (env-ref env85981 1)))
           (clo-app take-helper kont85700 lst n a8560285832))))))
  (proc
   (take _85982 kont85700 lst n)
   (let ((f8570185831 (make-closure lam85980 kont85700 n take-helper lst)))
     (clo-app list f8570185831)))
  (proc
   (lam85984 env85985 a8560785840)
   (let ((kont85702 (env-ref env85985 3)))
     (let ((a8560585836 (env-ref env85985 2)))
       (let ((+ (env-ref env85985 1)))
         (clo-app + kont85702 a8560585836 a8560785840)))))
  (proc
   (lam85986 env85987 a8560685838)
   (let ((kont85702 (env-ref env85987 4)))
     (let ((length (env-ref env85987 3)))
       (let ((a8560585836 (env-ref env85987 2)))
         (let ((+ (env-ref env85987 1)))
           (let ((f8570385839 (make-closure lam85984 + a8560585836 kont85702)))
             (clo-app length f8570385839 a8560685838)))))))
  (proc
   (lam85989 env85990 a8560385834)
   (let ((cdr (env-ref env85990 5)))
     (let ((kont85702 (env-ref env85990 4)))
       (let ((lst (env-ref env85990 3)))
         (let ((length (env-ref env85990 2)))
           (let ((+ (env-ref env85990 1)))
             (if a8560385834
               (let ((x8560485835 '0)) (clo-app kont85702 x8560485835))
               (let ((a8560585836 '1))
                 (let ((f8570485837
                        (make-closure
                         lam85986
                         +
                         a8560585836
                         length
                         kont85702)))
                   (clo-app cdr f8570485837 lst))))))))))
  (proc
   (length _85991 kont85702 lst)
   (let ((f8570585833 (make-closure lam85989 + length lst kont85702 cdr)))
     (clo-app null? f8570585833 lst)))
  (proc
   (lam85992 env85993 x8560985844)
   (let ((kont85706 (env-ref env85993 1))) (clo-app kont85706 x8560985844)))
  (proc
   (lam85994 env85995 a8561385852)
   (let ((a8561185848 (env-ref env85995 3)))
     (let ((kont85706 (env-ref env85995 2)))
       (let ((cons (env-ref env85995 1)))
         (clo-app cons kont85706 a8561185848 a8561385852)))))
  (proc
   (lam85996 env85997 a8561285850)
   (let ((a8561185848 (env-ref env85997 5)))
     (let ((proc (env-ref env85997 4)))
       (let ((cons (env-ref env85997 3)))
         (let ((kont85706 (env-ref env85997 2)))
           (let ((map (env-ref env85997 1)))
             (let ((f8570885851
                    (make-closure lam85994 cons kont85706 a8561185848)))
               (clo-app map f8570885851 proc a8561285850))))))))
  (proc
   (lam85998 env85999 a8561185848)
   (let ((cdr (env-ref env85999 6)))
     (let ((lst (env-ref env85999 5)))
       (let ((proc (env-ref env85999 4)))
         (let ((cons (env-ref env85999 3)))
           (let ((kont85706 (env-ref env85999 2)))
             (let ((map (env-ref env85999 1)))
               (let ((f8570985849
                      (make-closure
                       lam85996
                       map
                       kont85706
                       cons
                       proc
                       a8561185848)))
                 (clo-app cdr f8570985849 lst)))))))))
  (proc
   (lam86000 env86001 a8561085846)
   (let ((cdr (env-ref env86001 6)))
     (let ((lst (env-ref env86001 5)))
       (let ((proc (env-ref env86001 4)))
         (let ((cons (env-ref env86001 3)))
           (let ((kont85706 (env-ref env86001 2)))
             (let ((map (env-ref env86001 1)))
               (let ((f8571085847
                      (make-closure lam85998 map kont85706 cons proc lst cdr)))
                 (clo-app proc f8571085847 a8561085846)))))))))
  (proc
   (lam86002 env86003 a8560885842)
   (let ((lst (env-ref env86003 8)))
     (let ((proc (env-ref env86003 7)))
       (let ((car (env-ref env86003 6)))
         (let ((cons (env-ref env86003 5)))
           (let ((list (env-ref env86003 4)))
             (let ((cdr (env-ref env86003 3)))
               (let ((kont85706 (env-ref env86003 2)))
                 (let ((map (env-ref env86003 1)))
                   (if a8560885842
                     (let ((f8570785843 (make-closure lam85992 kont85706)))
                       (clo-app list f8570785843))
                     (let ((f8571185845
                            (make-closure
                             lam86000
                             map
                             kont85706
                             cons
                             proc
                             lst
                             cdr)))
                       (clo-app car f8571185845 lst))))))))))))
  (proc
   (map _86004 kont85706 proc lst)
   (let ((f8571285841
          (make-closure lam86002 map kont85706 cdr list cons car proc lst)))
     (clo-app null? f8571285841 lst)))
  (proc
   (lam86005 env86006 x8561585856)
   (let ((kont85713 (env-ref env86006 1))) (clo-app kont85713 x8561585856)))
  (proc
   (lam86007 env86008 a8562085866)
   (let ((a8561885862 (env-ref env86008 3)))
     (let ((kont85713 (env-ref env86008 2)))
       (let ((cons (env-ref env86008 1)))
         (clo-app cons kont85713 a8561885862 a8562085866)))))
  (proc
   (lam86009 env86010 a8561985864)
   (let ((a8561885862 (env-ref env86010 5)))
     (let ((op (env-ref env86010 4)))
       (let ((kont85713 (env-ref env86010 3)))
         (let ((filter (env-ref env86010 2)))
           (let ((cons (env-ref env86010 1)))
             (let ((f8571585865
                    (make-closure lam86007 cons kont85713 a8561885862)))
               (clo-app filter f8571585865 op a8561985864))))))))
  (proc
   (lam86011 env86012 a8561885862)
   (let ((cdr (env-ref env86012 6)))
     (let ((lst (env-ref env86012 5)))
       (let ((op (env-ref env86012 4)))
         (let ((kont85713 (env-ref env86012 3)))
           (let ((filter (env-ref env86012 2)))
             (let ((cons (env-ref env86012 1)))
               (let ((f8571685863
                      (make-closure
                       lam86009
                       cons
                       filter
                       kont85713
                       op
                       a8561885862)))
                 (clo-app cdr f8571685863 lst)))))))))
  (proc
   (lam86013 env86014 a8562185868)
   (let ((op (env-ref env86014 3)))
     (let ((kont85713 (env-ref env86014 2)))
       (let ((filter (env-ref env86014 1)))
         (clo-app filter kont85713 op a8562185868)))))
  (proc
   (lam86015 env86016 a8561785860)
   (let ((cdr (env-ref env86016 7)))
     (let ((lst (env-ref env86016 6)))
       (let ((op (env-ref env86016 5)))
         (let ((kont85713 (env-ref env86016 4)))
           (let ((cons (env-ref env86016 3)))
             (let ((filter (env-ref env86016 2)))
               (let ((car (env-ref env86016 1)))
                 (if a8561785860
                   (let ((f8571785861
                          (make-closure
                           lam86011
                           cons
                           filter
                           kont85713
                           op
                           lst
                           cdr)))
                     (clo-app car f8571785861 lst))
                   (let ((f8571885867
                          (make-closure lam86013 filter kont85713 op)))
                     (clo-app cdr f8571885867 lst)))))))))))
  (proc
   (lam86017 env86018 a8561685858)
   (let ((cdr (env-ref env86018 7)))
     (let ((lst (env-ref env86018 6)))
       (let ((op (env-ref env86018 5)))
         (let ((kont85713 (env-ref env86018 4)))
           (let ((cons (env-ref env86018 3)))
             (let ((filter (env-ref env86018 2)))
               (let ((car (env-ref env86018 1)))
                 (let ((f8571985859
                        (make-closure
                         lam86015
                         car
                         filter
                         cons
                         kont85713
                         op
                         lst
                         cdr)))
                   (clo-app op f8571985859 a8561685858))))))))))
  (proc
   (lam86019 env86020 a8561485854)
   (let ((lst (env-ref env86020 8)))
     (let ((op (env-ref env86020 7)))
       (let ((kont85713 (env-ref env86020 6)))
         (let ((cons (env-ref env86020 5)))
           (let ((list (env-ref env86020 4)))
             (let ((cdr (env-ref env86020 3)))
               (let ((filter (env-ref env86020 2)))
                 (let ((car (env-ref env86020 1)))
                   (if a8561485854
                     (let ((f8571485855 (make-closure lam86005 kont85713)))
                       (clo-app list f8571485855))
                     (let ((f8572085857
                            (make-closure
                             lam86017
                             car
                             filter
                             cons
                             kont85713
                             op
                             lst
                             cdr)))
                       (clo-app car f8572085857 lst))))))))))))
  (proc
   (filter _86021 kont85713 op lst)
   (let ((f8572185853
          (make-closure lam86019 car filter cdr list cons kont85713 op lst)))
     (clo-app null? f8572185853 lst)))
  (proc
   (lam86022 env86023 a8562685876)
   (let ((drop (env-ref env86023 3)))
     (let ((kont85722 (env-ref env86023 2)))
       (let ((a8562485873 (env-ref env86023 1)))
         (clo-app drop kont85722 a8562485873 a8562685876)))))
  (proc
   (lam86025 env86026 a8562485873)
   (let ((drop (env-ref env86026 4)))
     (let ((kont85722 (env-ref env86026 3)))
       (let ((n (env-ref env86026 2)))
         (let ((- (env-ref env86026 1)))
           (let ((a8562585874 '1))
             (let ((f8572385875
                    (make-closure lam86022 a8562485873 kont85722 drop)))
               (clo-app - f8572385875 n a8562585874))))))))
  (proc
   (lam86027 env86028 a8562385871)
   (let ((cdr (env-ref env86028 6)))
     (let ((kont85722 (env-ref env86028 5)))
       (let ((n (env-ref env86028 4)))
         (let ((- (env-ref env86028 3)))
           (let ((lst (env-ref env86028 2)))
             (let ((drop (env-ref env86028 1)))
               (if a8562385871
                 (clo-app kont85722 lst)
                 (let ((f8572485872
                        (make-closure lam86025 - n kont85722 drop)))
                   (clo-app cdr f8572485872 lst))))))))))
  (proc
   (drop _86030 kont85722 lst n)
   (let ((a8562285869 '0))
     (let ((f8572585870 (make-closure lam86027 drop lst - n kont85722 cdr)))
       (clo-app = f8572585870 n a8562285869))))
  (proc
   (lam86031 env86032 a8563085884)
   (let ((a8562885880 (env-ref env86032 3)))
     (let ((kont85726 (env-ref env86032 2)))
       (let ((proc (env-ref env86032 1)))
         (clo-app proc kont85726 a8562885880 a8563085884)))))
  (proc
   (lam86033 env86034 a8562985882)
   (let ((a8562885880 (env-ref env86034 5)))
     (let ((foldr (env-ref env86034 4)))
       (let ((kont85726 (env-ref env86034 3)))
         (let ((proc (env-ref env86034 2)))
           (let ((acc (env-ref env86034 1)))
             (let ((f8572785883
                    (make-closure lam86031 proc kont85726 a8562885880)))
               (clo-app foldr f8572785883 proc acc a8562985882))))))))
  (proc
   (lam86035 env86036 a8562885880)
   (let ((cdr (env-ref env86036 6)))
     (let ((kont85726 (env-ref env86036 5)))
       (let ((foldr (env-ref env86036 4)))
         (let ((lst (env-ref env86036 3)))
           (let ((proc (env-ref env86036 2)))
             (let ((acc (env-ref env86036 1)))
               (let ((f8572885881
                      (make-closure
                       lam86033
                       acc
                       proc
                       kont85726
                       foldr
                       a8562885880)))
                 (clo-app cdr f8572885881 lst)))))))))
  (proc
   (lam86037 env86038 a8562785878)
   (let ((cdr (env-ref env86038 7)))
     (let ((kont85726 (env-ref env86038 6)))
       (let ((car (env-ref env86038 5)))
         (let ((foldr (env-ref env86038 4)))
           (let ((lst (env-ref env86038 3)))
             (let ((proc (env-ref env86038 2)))
               (let ((acc (env-ref env86038 1)))
                 (if a8562785878
                   (clo-app kont85726 acc)
                   (let ((f8572985879
                          (make-closure
                           lam86035
                           acc
                           proc
                           lst
                           foldr
                           kont85726
                           cdr)))
                     (clo-app car f8572985879 lst)))))))))))
  (proc
   (foldr _86039 kont85726 proc acc lst)
   (let ((f8573085877
          (make-closure lam86037 acc proc lst foldr car kont85726 cdr)))
     (clo-app null? f8573085877 lst)))
  (proc
   (lam86040 env86041 a8563485892)
   (let ((a8563285888 (env-ref env86041 3)))
     (let ((kont85731 (env-ref env86041 2)))
       (let ((cons (env-ref env86041 1)))
         (clo-app cons kont85731 a8563285888 a8563485892)))))
  (proc
   (lam86042 env86043 a8563385890)
   (let ((append (env-ref env86043 5)))
     (let ((a8563285888 (env-ref env86043 4)))
       (let ((lst2 (env-ref env86043 3)))
         (let ((kont85731 (env-ref env86043 2)))
           (let ((cons (env-ref env86043 1)))
             (let ((f8573285891
                    (make-closure lam86040 cons kont85731 a8563285888)))
               (clo-app append f8573285891 a8563385890 lst2))))))))
  (proc
   (lam86044 env86045 a8563285888)
   (let ((cdr (env-ref env86045 6)))
     (let ((append (env-ref env86045 5)))
       (let ((lst2 (env-ref env86045 4)))
         (let ((lst1 (env-ref env86045 3)))
           (let ((kont85731 (env-ref env86045 2)))
             (let ((cons (env-ref env86045 1)))
               (let ((f8573385889
                      (make-closure
                       lam86042
                       cons
                       kont85731
                       lst2
                       a8563285888
                       append)))
                 (clo-app cdr f8573385889 lst1)))))))))
  (proc
   (lam86046 env86047 a8563185886)
   (let ((cdr (env-ref env86047 7)))
     (let ((append (env-ref env86047 6)))
       (let ((lst2 (env-ref env86047 5)))
         (let ((lst1 (env-ref env86047 4)))
           (let ((car (env-ref env86047 3)))
             (let ((kont85731 (env-ref env86047 2)))
               (let ((cons (env-ref env86047 1)))
                 (if a8563185886
                   (clo-app kont85731 lst2)
                   (let ((f8573485887
                          (make-closure
                           lam86044
                           cons
                           kont85731
                           lst1
                           lst2
                           append
                           cdr)))
                     (clo-app car f8573485887 lst1)))))))))))
  (proc
   (append _86048 kont85731 lst1 lst2)
   (let ((f8573585885
          (make-closure lam86046 cons kont85731 car lst1 lst2 append cdr)))
     (clo-app null? f8573585885 lst1)))
  (proc
   (hash _86049 . lst)
   (let ((kont8573685893 (prim car lst)))
     (let ((lst85894 (prim cdr lst)))
       (let ((x8563585895 (apply-prim hash lst85894)))
         (clo-app kont8573685893 x8563585895)))))
  (proc
   (hash-ref _86050 kont85738 h k)
   (let ((x8563685896 (prim hash-ref h k))) (clo-app kont85738 x8563685896)))
  (proc
   (hash-set _86051 kont85739 h k v)
   (let ((x8563785897 (prim hash-set h k v))) (clo-app kont85739 x8563785897)))
  (proc
   (hash-has-key? _86052 kont85740 h k)
   (let ((x8563885898 (prim hash-has-key? h k)))
     (clo-app kont85740 x8563885898)))
  (proc
   (hash-count _86053 kont85741 h)
   (let ((x8563985899 (prim hash-count h))) (clo-app kont85741 x8563985899)))
  (proc
   (call _86058 kont85742)
   (let ((a8564085900 '100))
     (let ((a8564185901 '80))
       (let ((a8564285902 '10))
         (let ((a8564385903 '2))
           (clo-app
            -
            kont85742
            a8564085900
            a8564185901
            a8564285902
            a8564385903))))))
  (proc
   (lam86059 env86060 x8564485905)
   (let ((kont85743 (env-ref env86060 1))) (clo-app kont85743 x8564485905)))
  (proc
   (brouhaha_main _86061 kont85743)
   (let ((f8574485904 (make-closure lam86059 kont85743)))
     (clo-app call f8574485904))))
