'((define (+ . lst)
    (let ((kont8564585745 (prim car lst)))
      (let ((lst85746 (prim cdr lst)))
        (let ((x8555785747 (apply-prim + lst85746)))
          (kont8564585745 x8555785747)))))
  (define (- . lst)
    (let ((kont8564785748 (prim car lst)))
      (let ((lst85749 (prim cdr lst)))
        (let ((x8555885750 (apply-prim - lst85749)))
          (kont8564785748 x8555885750)))))
  (define (* . lst)
    (let ((kont8564985751 (prim car lst)))
      (let ((lst85752 (prim cdr lst)))
        (let ((x8555985753 (apply-prim * lst85752)))
          (kont8564985751 x8555985753)))))
  (define (modulo kont85651 a b)
    (let ((x8556085754 (prim modulo a b))) (kont85651 x8556085754)))
  (define (/ . lst)
    (let ((kont8565285755 (prim car lst)))
      (let ((lst85756 (prim cdr lst)))
        (let ((x8556185757 (apply-prim / lst85756)))
          (kont8565285755 x8556185757)))))
  (define (= . lst)
    (let ((kont8565485758 (prim car lst)))
      (let ((lst85759 (prim cdr lst)))
        (let ((x8556285760 (apply-prim = lst85759)))
          (kont8565485758 x8556285760)))))
  (define (> . lst)
    (let ((kont8565685761 (prim car lst)))
      (let ((lst85762 (prim cdr lst)))
        (let ((x8556385763 (apply-prim > lst85762)))
          (kont8565685761 x8556385763)))))
  (define (< . lst)
    (let ((kont8565885764 (prim car lst)))
      (let ((lst85765 (prim cdr lst)))
        (let ((x8556485766 (apply-prim < lst85765)))
          (kont8565885764 x8556485766)))))
  (define (<= . lst)
    (let ((kont8566085767 (prim car lst)))
      (let ((lst85768 (prim cdr lst)))
        (let ((x8556585769 (apply-prim <= lst85768)))
          (kont8566085767 x8556585769)))))
  (define (>= . lst)
    (let ((kont8566285770 (prim car lst)))
      (let ((lst85771 (prim cdr lst)))
        (let ((x8556685772 (apply-prim >= lst85771)))
          (kont8566285770 x8556685772)))))
  (define (null? kont85664 x)
    (let ((x8556785773 (prim null? x))) (kont85664 x8556785773)))
  (define (equal? kont85665 x y)
    (let ((x8556885774 (prim equal? x y))) (kont85665 x8556885774)))
  (define (eq? kont85666 x y)
    (let ((x8556985775 (prim eq? x y))) (kont85666 x8556985775)))
  (define (cons kont85667 a b)
    (let ((x8557085776 (prim cons a b))) (kont85667 x8557085776)))
  (define (car kont85668 lst)
    (let ((x8557185777 (prim car lst))) (kont85668 x8557185777)))
  (define (cdr kont85669 lst)
    (let ((x8557285778 (prim cdr lst))) (kont85669 x8557285778)))
  (define (even? kont85670 x)
    (let ((a8557385779 '0))
      (let ((a8557485780 '2))
        (let ((f8567185781
               (lambda (a8557585782)
                 (equal? kont85670 a8557385779 a8557585782))))
          (modulo f8567185781 x a8557485780)))))
  (define (odd? kont85672 x)
    (let ((a8557685783 '1))
      (let ((a8557785784 '2))
        (let ((f8567385785
               (lambda (a8557885786)
                 (equal? kont85672 a8557685783 a8557885786))))
          (modulo f8567385785 x a8557785784)))))
  (define (list . x)
    (let ((kont8567485787 (prim car x)))
      (let ((x85788 (prim cdr x))) (kont8567485787 x85788))))
  (define (member? kont85676 x lst)
    (let ((f8568085789
           (lambda (a8557985790)
             (if a8557985790
               (let ((x8558085791 '#f)) (kont85676 x8558085791))
               (let ((f8567985792
                      (lambda (a8558185793)
                        (let ((f8567885794
                               (lambda (a8558285795)
                                 (if a8558285795
                                   (let ((x8558385796 '#t))
                                     (kont85676 x8558385796))
                                   (let ((f8567785797
                                          (lambda (a8558485798)
                                            (member?
                                             kont85676
                                             x
                                             a8558485798))))
                                     (cdr f8567785797 lst))))))
                          (equal? f8567885794 a8558185793 x)))))
                 (car f8567985792 lst))))))
      (null? f8568085789 lst)))
  (define (foldl kont85681 fun acc lst)
    (let ((f8568585799
           (lambda (a8558585800)
             (if a8558585800
               (kont85681 acc)
               (let ((f8568485801
                      (lambda (a8558685802)
                        (let ((f8568385803
                               (lambda (a8558785804)
                                 (let ((f8568285805
                                        (lambda (a8558885806)
                                          (foldl
                                           kont85681
                                           fun
                                           a8558785804
                                           a8558885806))))
                                   (cdr f8568285805 lst)))))
                          (fun f8568385803 a8558685802 acc)))))
                 (car f8568485801 lst))))))
      (null? f8568585799 lst)))
  (define (reverse-helper kont85686 lst lst2)
    (let ((f8569085807
           (lambda (a8558985808)
             (if a8558985808
               (kont85686 lst2)
               (let ((f8568985809
                      (lambda (a8559085810)
                        (let ((f8568885811
                               (lambda (a8559185812)
                                 (let ((f8568785813
                                        (lambda (a8559285814)
                                          (reverse-helper
                                           kont85686
                                           a8559085810
                                           a8559285814))))
                                   (cons f8568785813 a8559185812 lst2)))))
                          (car f8568885811 lst)))))
                 (cdr f8568985809 lst))))))
      (null? f8569085807 lst)))
  (define (reverse kont85691 lst)
    (let ((f8569285815
           (lambda (a8559385816) (reverse-helper kont85691 lst a8559385816))))
      (list f8569285815)))
  (define (take-helper kont85693 lst n lst2)
    (let ((a8559485817 '0))
      (let ((f8569985818
             (lambda (a8559585819)
               (if a8559585819
                 (let ((f8569485820
                        (lambda (x8559685821) (kont85693 x8559685821))))
                   (reverse f8569485820 lst2))
                 (let ((f8569885822
                        (lambda (a8559785823)
                          (let ((a8559885824 '1))
                            (let ((f8569785825
                                   (lambda (a8559985826)
                                     (let ((f8569685827
                                            (lambda (a8560085828)
                                              (let ((f8569585829
                                                     (lambda (a8560185830)
                                                       (take-helper
                                                        kont85693
                                                        a8559785823
                                                        a8559985826
                                                        a8560185830))))
                                                (cons
                                                 f8569585829
                                                 a8560085828
                                                 lst2)))))
                                       (car f8569685827 lst)))))
                              (- f8569785825 n a8559885824))))))
                   (cdr f8569885822 lst))))))
        (= f8569985818 n a8559485817))))
  (define (take kont85700 lst n)
    (let ((f8570185831
           (lambda (a8560285832) (take-helper kont85700 lst n a8560285832))))
      (list f8570185831)))
  (define (length kont85702 lst)
    (let ((f8570585833
           (lambda (a8560385834)
             (if a8560385834
               (let ((x8560485835 '0)) (kont85702 x8560485835))
               (let ((a8560585836 '1))
                 (let ((f8570485837
                        (lambda (a8560685838)
                          (let ((f8570385839
                                 (lambda (a8560785840)
                                   (+ kont85702 a8560585836 a8560785840))))
                            (length f8570385839 a8560685838)))))
                   (cdr f8570485837 lst)))))))
      (null? f8570585833 lst)))
  (define (map kont85706 proc lst)
    (let ((f8571285841
           (lambda (a8560885842)
             (if a8560885842
               (let ((f8570785843
                      (lambda (x8560985844) (kont85706 x8560985844))))
                 (list f8570785843))
               (let ((f8571185845
                      (lambda (a8561085846)
                        (let ((f8571085847
                               (lambda (a8561185848)
                                 (let ((f8570985849
                                        (lambda (a8561285850)
                                          (let ((f8570885851
                                                 (lambda (a8561385852)
                                                   (cons
                                                    kont85706
                                                    a8561185848
                                                    a8561385852))))
                                            (map
                                             f8570885851
                                             proc
                                             a8561285850)))))
                                   (cdr f8570985849 lst)))))
                          (proc f8571085847 a8561085846)))))
                 (car f8571185845 lst))))))
      (null? f8571285841 lst)))
  (define (filter kont85713 op lst)
    (let ((f8572185853
           (lambda (a8561485854)
             (if a8561485854
               (let ((f8571485855
                      (lambda (x8561585856) (kont85713 x8561585856))))
                 (list f8571485855))
               (let ((f8572085857
                      (lambda (a8561685858)
                        (let ((f8571985859
                               (lambda (a8561785860)
                                 (if a8561785860
                                   (let ((f8571785861
                                          (lambda (a8561885862)
                                            (let ((f8571685863
                                                   (lambda (a8561985864)
                                                     (let ((f8571585865
                                                            (lambda (a8562085866)
                                                              (cons
                                                               kont85713
                                                               a8561885862
                                                               a8562085866))))
                                                       (filter
                                                        f8571585865
                                                        op
                                                        a8561985864)))))
                                              (cdr f8571685863 lst)))))
                                     (car f8571785861 lst))
                                   (let ((f8571885867
                                          (lambda (a8562185868)
                                            (filter
                                             kont85713
                                             op
                                             a8562185868))))
                                     (cdr f8571885867 lst))))))
                          (op f8571985859 a8561685858)))))
                 (car f8572085857 lst))))))
      (null? f8572185853 lst)))
  (define (drop kont85722 lst n)
    (let ((a8562285869 '0))
      (let ((f8572585870
             (lambda (a8562385871)
               (if a8562385871
                 (kont85722 lst)
                 (let ((f8572485872
                        (lambda (a8562485873)
                          (let ((a8562585874 '1))
                            (let ((f8572385875
                                   (lambda (a8562685876)
                                     (drop
                                      kont85722
                                      a8562485873
                                      a8562685876))))
                              (- f8572385875 n a8562585874))))))
                   (cdr f8572485872 lst))))))
        (= f8572585870 n a8562285869))))
  (define (foldr kont85726 proc acc lst)
    (let ((f8573085877
           (lambda (a8562785878)
             (if a8562785878
               (kont85726 acc)
               (let ((f8572985879
                      (lambda (a8562885880)
                        (let ((f8572885881
                               (lambda (a8562985882)
                                 (let ((f8572785883
                                        (lambda (a8563085884)
                                          (proc
                                           kont85726
                                           a8562885880
                                           a8563085884))))
                                   (foldr f8572785883 proc acc a8562985882)))))
                          (cdr f8572885881 lst)))))
                 (car f8572985879 lst))))))
      (null? f8573085877 lst)))
  (define (append kont85731 lst1 lst2)
    (let ((f8573585885
           (lambda (a8563185886)
             (if a8563185886
               (kont85731 lst2)
               (let ((f8573485887
                      (lambda (a8563285888)
                        (let ((f8573385889
                               (lambda (a8563385890)
                                 (let ((f8573285891
                                        (lambda (a8563485892)
                                          (cons
                                           kont85731
                                           a8563285888
                                           a8563485892))))
                                   (append f8573285891 a8563385890 lst2)))))
                          (cdr f8573385889 lst1)))))
                 (car f8573485887 lst1))))))
      (null? f8573585885 lst1)))
  (define (hash . lst)
    (let ((kont8573685893 (prim car lst)))
      (let ((lst85894 (prim cdr lst)))
        (let ((x8563585895 (apply-prim hash lst85894)))
          (kont8573685893 x8563585895)))))
  (define (hash-ref kont85738 h k)
    (let ((x8563685896 (prim hash-ref h k))) (kont85738 x8563685896)))
  (define (hash-set kont85739 h k v)
    (let ((x8563785897 (prim hash-set h k v))) (kont85739 x8563785897)))
  (define (hash-has-key? kont85740 h k)
    (let ((x8563885898 (prim hash-has-key? h k))) (kont85740 x8563885898)))
  (define (hash-count kont85741 h)
    (let ((x8563985899 (prim hash-count h))) (kont85741 x8563985899)))
  (define (call kont85742)
    (let ((a8564085900 '100))
      (let ((a8564185901 '80))
        (let ((a8564285902 '10))
          (let ((a8564385903 '2))
            (- kont85742 a8564085900 a8564185901 a8564285902 a8564385903))))))
  (define (brouhaha_main kont85743)
    (let ((f8574485904 (lambda (x8564485905) (kont85743 x8564485905))))
      (call f8574485904))))
