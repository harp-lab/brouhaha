add_library(testing testing.hpp)
set_target_properties(testing PROPERTIES LINKER_LANGUAGE CXX)


# add_subdirectory(easy)
# add_subdirectory(and)
# add_subdirectory(count_divisors)
# add_subdirectory(division)
# add_subdirectory(eq)
# add_subdirectory(equal)
# add_subdirectory(even)
# add_subdirectory(fact)
# add_subdirectory(filter)
# add_subdirectory(float)
# add_subdirectory(foldl_style)
# add_subdirectory(hash)
# add_subdirectory(hash_count)
# add_subdirectory(hash_has_key)
# add_subdirectory(hash_ref)
# add_subdirectory(hash_set)
# add_subdirectory(hash_keys)
# add_subdirectory(set)
# add_subdirectory(list)
# add_subdirectory(set_to_list)
# add_subdirectory(list_to_set)
# add_subdirectory(setadd)
# add_subdirectory(set_member_huh)
# add_subdirectory(set_remove)
# add_subdirectory(set_count)
# add_subdirectory(interleave)
# add_subdirectory(lambda)
# add_subdirectory(length)
# add_subdirectory(member)
# add_subdirectory(minus_float)
# add_subdirectory(modulo)
# add_subdirectory(multiply)
# add_subdirectory(multiply_float)
# add_subdirectory(nested_if)
# add_subdirectory(not)
# add_subdirectory(null)
# add_subdirectory(or)
# add_subdirectory(power)
# add_subdirectory(reverse)
# add_subdirectory(string)
# add_subdirectory(sym_equal)
# add_subdirectory(sym_gt)
# add_subdirectory(sym_gteq)
# add_subdirectory(sym_lt)
# add_subdirectory(sym_lteq)
# add_subdirectory(take)
# add_subdirectory(var)
# add_subdirectory(yes)
# add_subdirectory(let)
# add_subdirectory(error)
# add_subdirectory(to_float)
# add_subdirectory(to_int)
# add_subdirectory(cons)
# add_subdirectory(car)
# add_subdirectory(cdr)
# add_subdirectory(string_huh)
# add_subdirectory(string_length)
# add_subdirectory(string_ref)
# add_subdirectory(string_append)
# add_subdirectory(string_to_list)
# add_subdirectory(substring)
# add_subdirectory(inner_hashes)
# add_subdirectory(apply)
# add_subdirectory(app)
# add_subdirectory(transitive_closure)
# add_subdirectory(letstar)
# add_subdirectory(vararg)
# add_subdirectory(inline_test)
# add_subdirectory(plus)
# add_subdirectory(minus)
# add_subdirectory(double_inner)
# add_subdirectory(exact_floor)
# add_subdirectory(exact_ceiling)
# add_subdirectory(exact_round)
# add_subdirectory(abs)
# add_subdirectory(max)
# add_subdirectory(min)
# add_subdirectory(expt)
# add_subdirectory(remainder)
# add_subdirectory(quotient)
# add_subdirectory(random)
# add_subdirectory(symbol_huh)
# add_subdirectory(pair_huh)
# add_subdirectory(sqrt)
# add_subdirectory(positive_huh)
# add_subdirectory(negative_huh)
# add_subdirectory(cond)
add_subdirectory(benchmark_nqueens)
# add_subdirectory(benchmark_fibfp)
# add_subdirectory(benchmark_primes)
# add_subdirectory(benchmark_pi)
# add_subdirectory(benchmark_pnpoly)
# add_subdirectory(benchmark_mazefun)
