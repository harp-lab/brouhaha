'((proc
   (+ _88008 . lst)
   (let ((kont8774887848 (prim car lst)))
     (let ((lst87849 (prim cdr lst)))
       (let ((x8766187850 (apply-prim + lst87849)))
         (clo-app kont8774887848 x8766187850)))))
  (proc
   (- _88009 . lst)
   (let ((kont8775087851 (prim car lst)))
     (let ((lst87852 (prim cdr lst)))
       (let ((x8766287853 (apply-prim - lst87852)))
         (clo-app kont8775087851 x8766287853)))))
  (proc
   (* _88010 . lst)
   (let ((kont8775287854 (prim car lst)))
     (let ((lst87855 (prim cdr lst)))
       (let ((x8766387856 (apply-prim * lst87855)))
         (clo-app kont8775287854 x8766387856)))))
  (proc
   (modulo _88011 kont87754 a b)
   (let ((x8766487857 (prim modulo a b))) (clo-app kont87754 x8766487857)))
  (proc
   (/ _88012 . lst)
   (let ((kont8775587858 (prim car lst)))
     (let ((lst87859 (prim cdr lst)))
       (let ((x8766587860 (apply-prim / lst87859)))
         (clo-app kont8775587858 x8766587860)))))
  (proc
   (= _88013 . lst)
   (let ((kont8775787861 (prim car lst)))
     (let ((lst87862 (prim cdr lst)))
       (let ((x8766687863 (apply-prim = lst87862)))
         (clo-app kont8775787861 x8766687863)))))
  (proc
   (> _88014 . lst)
   (let ((kont8775987864 (prim car lst)))
     (let ((lst87865 (prim cdr lst)))
       (let ((x8766787866 (apply-prim > lst87865)))
         (clo-app kont8775987864 x8766787866)))))
  (proc
   (< _88015 . lst)
   (let ((kont8776187867 (prim car lst)))
     (let ((lst87868 (prim cdr lst)))
       (let ((x8766887869 (apply-prim < lst87868)))
         (clo-app kont8776187867 x8766887869)))))
  (proc
   (<= _88016 . lst)
   (let ((kont8776387870 (prim car lst)))
     (let ((lst87871 (prim cdr lst)))
       (let ((x8766987872 (apply-prim <= lst87871)))
         (clo-app kont8776387870 x8766987872)))))
  (proc
   (>= _88017 . lst)
   (let ((kont8776587873 (prim car lst)))
     (let ((lst87874 (prim cdr lst)))
       (let ((x8767087875 (apply-prim >= lst87874)))
         (clo-app kont8776587873 x8767087875)))))
  (proc
   (null? _88018 kont87767 x)
   (let ((x8767187876 (prim null? x))) (clo-app kont87767 x8767187876)))
  (proc
   (equal? _88019 kont87768 x y)
   (let ((x8767287877 (prim equal? x y))) (clo-app kont87768 x8767287877)))
  (proc
   (eq? _88020 kont87769 x y)
   (let ((x8767387878 (prim eq? x y))) (clo-app kont87769 x8767387878)))
  (proc
   (cons _88021 kont87770 a b)
   (let ((x8767487879 (prim cons a b))) (clo-app kont87770 x8767487879)))
  (proc
   (car _88022 kont87771 lst)
   (let ((x8767587880 (prim car lst))) (clo-app kont87771 x8767587880)))
  (proc
   (cdr _88023 kont87772 lst)
   (let ((x8767687881 (prim cdr lst))) (clo-app kont87772 x8767687881)))
  (proc
   (lam88024 env88025 a8767987885)
   (let ((kont87773 (env-ref env88025 3)))
     (let ((equal? (env-ref env88025 2)))
       (let ((a8767787882 (env-ref env88025 1)))
         (clo-app equal? kont87773 a8767787882 a8767987885)))))
  (proc
   (even? _88028 kont87773 x)
   (let ((a8767787882 '0))
     (let ((a8767887883 '2))
       (let ((f8777487884
              (make-closure lam88024 a8767787882 equal? kont87773)))
         (clo-app modulo f8777487884 x a8767887883)))))
  (proc
   (lam88029 env88030 a8768287889)
   (let ((a8768087886 (env-ref env88030 3)))
     (let ((kont87775 (env-ref env88030 2)))
       (let ((equal? (env-ref env88030 1)))
         (clo-app equal? kont87775 a8768087886 a8768287889)))))
  (proc
   (odd? _88033 kont87775 x)
   (let ((a8768087886 '1))
     (let ((a8768187887 '2))
       (let ((f8777687888
              (make-closure lam88029 equal? kont87775 a8768087886)))
         (clo-app modulo f8777687888 x a8768187887)))))
  (proc
   (list _88034 . x)
   (let ((kont8777787890 (prim car x)))
     (let ((x87891 (prim cdr x))) (clo-app kont8777787890 x87891))))
  (proc
   (lam88037 env88038 a8768887901)
   (let ((kont87779 (env-ref env88038 3)))
     (let ((x (env-ref env88038 2)))
       (let ((member? (env-ref env88038 1)))
         (clo-app member? kont87779 x a8768887901)))))
  (proc
   (lam88039 env88040 a8768687898)
   (let ((cdr (env-ref env88040 5)))
     (let ((lst (env-ref env88040 4)))
       (let ((kont87779 (env-ref env88040 3)))
         (let ((x (env-ref env88040 2)))
           (let ((member? (env-ref env88040 1)))
             (if a8768687898
               (let ((x8768787899 '#t)) (clo-app kont87779 x8768787899))
               (let ((f8778087900 (make-closure lam88037 member? x kont87779)))
                 (clo-app cdr f8778087900 lst)))))))))
  (proc
   (lam88041 env88042 a8768587896)
   (let ((cdr (env-ref env88042 6)))
     (let ((lst (env-ref env88042 5)))
       (let ((kont87779 (env-ref env88042 4)))
         (let ((equal? (env-ref env88042 3)))
           (let ((x (env-ref env88042 2)))
             (let ((member? (env-ref env88042 1)))
               (let ((f8778187897
                      (make-closure lam88039 member? x kont87779 lst cdr)))
                 (clo-app equal? f8778187897 a8768587896 x)))))))))
  (proc
   (lam88043 env88044 a8768387893)
   (let ((cdr (env-ref env88044 7)))
     (let ((lst (env-ref env88044 6)))
       (let ((kont87779 (env-ref env88044 5)))
         (let ((equal? (env-ref env88044 4)))
           (let ((x (env-ref env88044 3)))
             (let ((car (env-ref env88044 2)))
               (let ((member? (env-ref env88044 1)))
                 (if a8768387893
                   (let ((x8768487894 '#f)) (clo-app kont87779 x8768487894))
                   (let ((f8778287895
                          (make-closure
                           lam88041
                           member?
                           x
                           equal?
                           kont87779
                           lst
                           cdr)))
                     (clo-app car f8778287895 lst)))))))))))
  (proc
   (member? _88045 kont87779 x lst)
   (let ((f8778387892
          (make-closure lam88043 member? car x equal? kont87779 lst cdr)))
     (clo-app null? f8778387892 lst)))
  (proc
   (lam88046 env88047 a8769287909)
   (let ((a8769187907 (env-ref env88047 4)))
     (let ((fun (env-ref env88047 3)))
       (let ((kont87784 (env-ref env88047 2)))
         (let ((foldl (env-ref env88047 1)))
           (clo-app foldl kont87784 fun a8769187907 a8769287909))))))
  (proc
   (lam88048 env88049 a8769187907)
   (let ((cdr (env-ref env88049 5)))
     (let ((lst (env-ref env88049 4)))
       (let ((fun (env-ref env88049 3)))
         (let ((kont87784 (env-ref env88049 2)))
           (let ((foldl (env-ref env88049 1)))
             (let ((f8778587908
                    (make-closure lam88046 foldl kont87784 fun a8769187907)))
               (clo-app cdr f8778587908 lst))))))))
  (proc
   (lam88050 env88051 a8769087905)
   (let ((cdr (env-ref env88051 6)))
     (let ((lst (env-ref env88051 5)))
       (let ((fun (env-ref env88051 4)))
         (let ((foldl (env-ref env88051 3)))
           (let ((acc (env-ref env88051 2)))
             (let ((kont87784 (env-ref env88051 1)))
               (let ((f8778687906
                      (make-closure lam88048 foldl kont87784 fun lst cdr)))
                 (clo-app fun f8778687906 a8769087905 acc)))))))))
  (proc
   (lam88052 env88053 a8768987903)
   (let ((cdr (env-ref env88053 7)))
     (let ((lst (env-ref env88053 6)))
       (let ((fun (env-ref env88053 5)))
         (let ((car (env-ref env88053 4)))
           (let ((foldl (env-ref env88053 3)))
             (let ((acc (env-ref env88053 2)))
               (let ((kont87784 (env-ref env88053 1)))
                 (if a8768987903
                   (clo-app kont87784 acc)
                   (let ((f8778787904
                          (make-closure
                           lam88050
                           kont87784
                           acc
                           foldl
                           fun
                           lst
                           cdr)))
                     (clo-app car f8778787904 lst)))))))))))
  (proc
   (foldl _88054 kont87784 fun acc lst)
   (let ((f8778887902
          (make-closure lam88052 kont87784 acc foldl car fun lst cdr)))
     (clo-app null? f8778887902 lst)))
  (proc
   (lam88055 env88056 a8769687917)
   (let ((kont87789 (env-ref env88056 3)))
     (let ((reverse-helper (env-ref env88056 2)))
       (let ((a8769487913 (env-ref env88056 1)))
         (clo-app reverse-helper kont87789 a8769487913 a8769687917)))))
  (proc
   (lam88057 env88058 a8769587915)
   (let ((kont87789 (env-ref env88058 5)))
     (let ((reverse-helper (env-ref env88058 4)))
       (let ((cons (env-ref env88058 3)))
         (let ((a8769487913 (env-ref env88058 2)))
           (let ((lst2 (env-ref env88058 1)))
             (let ((f8779087916
                    (make-closure
                     lam88055
                     a8769487913
                     reverse-helper
                     kont87789)))
               (clo-app cons f8779087916 a8769587915 lst2))))))))
  (proc
   (lam88059 env88060 a8769487913)
   (let ((kont87789 (env-ref env88060 6)))
     (let ((lst (env-ref env88060 5)))
       (let ((reverse-helper (env-ref env88060 4)))
         (let ((lst2 (env-ref env88060 3)))
           (let ((car (env-ref env88060 2)))
             (let ((cons (env-ref env88060 1)))
               (let ((f8779187914
                      (make-closure
                       lam88057
                       lst2
                       a8769487913
                       cons
                       reverse-helper
                       kont87789)))
                 (clo-app car f8779187914 lst)))))))))
  (proc
   (lam88061 env88062 a8769387911)
   (let ((lst (env-ref env88062 7)))
     (let ((reverse-helper (env-ref env88062 6)))
       (let ((lst2 (env-ref env88062 5)))
         (let ((car (env-ref env88062 4)))
           (let ((cons (env-ref env88062 3)))
             (let ((cdr (env-ref env88062 2)))
               (let ((kont87789 (env-ref env88062 1)))
                 (if a8769387911
                   (clo-app kont87789 lst2)
                   (let ((f8779287912
                          (make-closure
                           lam88059
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont87789)))
                     (clo-app cdr f8779287912 lst)))))))))))
  (proc
   (reverse-helper _88063 kont87789 lst lst2)
   (let ((f8779387910
          (make-closure
           lam88061
           kont87789
           cdr
           cons
           car
           lst2
           reverse-helper
           lst)))
     (clo-app null? f8779387910 lst)))
  (proc
   (lam88064 env88065 a8769787919)
   (let ((lst (env-ref env88065 3)))
     (let ((kont87794 (env-ref env88065 2)))
       (let ((reverse-helper (env-ref env88065 1)))
         (clo-app reverse-helper kont87794 lst a8769787919)))))
  (proc
   (reverse _88066 kont87794 lst)
   (let ((f8779587918 (make-closure lam88064 reverse-helper kont87794 lst)))
     (clo-app list f8779587918)))
  (proc
   (lam88067 env88068 x8770087924)
   (let ((kont87796 (env-ref env88068 1))) (clo-app kont87796 x8770087924)))
  (proc
   (lam88069 env88070 a8770587933)
   (let ((kont87796 (env-ref env88070 4)))
     (let ((a8770187926 (env-ref env88070 3)))
       (let ((take-helper (env-ref env88070 2)))
         (let ((a8770387929 (env-ref env88070 1)))
           (clo-app
            take-helper
            kont87796
            a8770187926
            a8770387929
            a8770587933))))))
  (proc
   (lam88071 env88072 a8770487931)
   (let ((kont87796 (env-ref env88072 6)))
     (let ((a8770187926 (env-ref env88072 5)))
       (let ((cons (env-ref env88072 4)))
         (let ((take-helper (env-ref env88072 3)))
           (let ((a8770387929 (env-ref env88072 2)))
             (let ((lst2 (env-ref env88072 1)))
               (let ((f8779887932
                      (make-closure
                       lam88069
                       a8770387929
                       take-helper
                       a8770187926
                       kont87796)))
                 (clo-app cons f8779887932 a8770487931 lst2)))))))))
  (proc
   (lam88073 env88074 a8770387929)
   (let ((lst (env-ref env88074 7)))
     (let ((kont87796 (env-ref env88074 6)))
       (let ((a8770187926 (env-ref env88074 5)))
         (let ((car (env-ref env88074 4)))
           (let ((cons (env-ref env88074 3)))
             (let ((take-helper (env-ref env88074 2)))
               (let ((lst2 (env-ref env88074 1)))
                 (let ((f8779987930
                        (make-closure
                         lam88071
                         lst2
                         a8770387929
                         take-helper
                         cons
                         a8770187926
                         kont87796)))
                   (clo-app car f8779987930 lst))))))))))
  (proc
   (lam88076 env88077 a8770187926)
   (let ((lst (env-ref env88077 8)))
     (let ((kont87796 (env-ref env88077 7)))
       (let ((cons (env-ref env88077 6)))
         (let ((- (env-ref env88077 5)))
           (let ((take-helper (env-ref env88077 4)))
             (let ((lst2 (env-ref env88077 3)))
               (let ((n (env-ref env88077 2)))
                 (let ((car (env-ref env88077 1)))
                   (let ((a8770287927 '1))
                     (let ((f8780087928
                            (make-closure
                             lam88073
                             lst2
                             take-helper
                             cons
                             car
                             a8770187926
                             kont87796
                             lst)))
                       (clo-app - f8780087928 n a8770287927))))))))))))
  (proc
   (lam88078 env88079 a8769987922)
   (let ((cdr (env-ref env88079 10)))
     (let ((lst (env-ref env88079 9)))
       (let ((cons (env-ref env88079 8)))
         (let ((- (env-ref env88079 7)))
           (let ((kont87796 (env-ref env88079 6)))
             (let ((reverse (env-ref env88079 5)))
               (let ((take-helper (env-ref env88079 4)))
                 (let ((lst2 (env-ref env88079 3)))
                   (let ((n (env-ref env88079 2)))
                     (let ((car (env-ref env88079 1)))
                       (if a8769987922
                         (let ((f8779787923 (make-closure lam88067 kont87796)))
                           (clo-app reverse f8779787923 lst2))
                         (let ((f8780187925
                                (make-closure
                                 lam88076
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont87796
                                 lst)))
                           (clo-app cdr f8780187925 lst))))))))))))))
  (proc
   (take-helper _88081 kont87796 lst n lst2)
   (let ((a8769887920 '0))
     (let ((f8780287921
            (make-closure
             lam88078
             car
             n
             lst2
             take-helper
             reverse
             kont87796
             -
             cons
             lst
             cdr)))
       (clo-app = f8780287921 n a8769887920))))
  (proc
   (lam88082 env88083 a8770687935)
   (let ((lst (env-ref env88083 4)))
     (let ((take-helper (env-ref env88083 3)))
       (let ((n (env-ref env88083 2)))
         (let ((kont87803 (env-ref env88083 1)))
           (clo-app take-helper kont87803 lst n a8770687935))))))
  (proc
   (take _88084 kont87803 lst n)
   (let ((f8780487934 (make-closure lam88082 kont87803 n take-helper lst)))
     (clo-app list f8780487934)))
  (proc
   (lam88086 env88087 a8771187943)
   (let ((kont87805 (env-ref env88087 3)))
     (let ((a8770987939 (env-ref env88087 2)))
       (let ((+ (env-ref env88087 1)))
         (clo-app + kont87805 a8770987939 a8771187943)))))
  (proc
   (lam88088 env88089 a8771087941)
   (let ((kont87805 (env-ref env88089 4)))
     (let ((length (env-ref env88089 3)))
       (let ((a8770987939 (env-ref env88089 2)))
         (let ((+ (env-ref env88089 1)))
           (let ((f8780687942 (make-closure lam88086 + a8770987939 kont87805)))
             (clo-app length f8780687942 a8771087941)))))))
  (proc
   (lam88091 env88092 a8770787937)
   (let ((lst (env-ref env88092 5)))
     (let ((length (env-ref env88092 4)))
       (let ((+ (env-ref env88092 3)))
         (let ((cdr (env-ref env88092 2)))
           (let ((kont87805 (env-ref env88092 1)))
             (if a8770787937
               (let ((x8770887938 '0)) (clo-app kont87805 x8770887938))
               (let ((a8770987939 '1))
                 (let ((f8780787940
                        (make-closure
                         lam88088
                         +
                         a8770987939
                         length
                         kont87805)))
                   (clo-app cdr f8780787940 lst))))))))))
  (proc
   (length _88093 kont87805 lst)
   (let ((f8780887936 (make-closure lam88091 kont87805 cdr + length lst)))
     (clo-app null? f8780887936 lst)))
  (proc
   (lam88094 env88095 x8771387947)
   (let ((kont87809 (env-ref env88095 1))) (clo-app kont87809 x8771387947)))
  (proc
   (lam88096 env88097 a8771787955)
   (let ((a8771587951 (env-ref env88097 3)))
     (let ((kont87809 (env-ref env88097 2)))
       (let ((cons (env-ref env88097 1)))
         (clo-app cons kont87809 a8771587951 a8771787955)))))
  (proc
   (lam88098 env88099 a8771687953)
   (let ((a8771587951 (env-ref env88099 5)))
     (let ((kont87809 (env-ref env88099 4)))
       (let ((map (env-ref env88099 3)))
         (let ((proc (env-ref env88099 2)))
           (let ((cons (env-ref env88099 1)))
             (let ((f8781187954
                    (make-closure lam88096 cons kont87809 a8771587951)))
               (clo-app map f8781187954 proc a8771687953))))))))
  (proc
   (lam88100 env88101 a8771587951)
   (let ((cdr (env-ref env88101 6)))
     (let ((map (env-ref env88101 5)))
       (let ((proc (env-ref env88101 4)))
         (let ((cons (env-ref env88101 3)))
           (let ((lst (env-ref env88101 2)))
             (let ((kont87809 (env-ref env88101 1)))
               (let ((f8781287952
                      (make-closure
                       lam88098
                       cons
                       proc
                       map
                       kont87809
                       a8771587951)))
                 (clo-app cdr f8781287952 lst)))))))))
  (proc
   (lam88102 env88103 a8771487949)
   (let ((cdr (env-ref env88103 6)))
     (let ((map (env-ref env88103 5)))
       (let ((proc (env-ref env88103 4)))
         (let ((cons (env-ref env88103 3)))
           (let ((lst (env-ref env88103 2)))
             (let ((kont87809 (env-ref env88103 1)))
               (let ((f8781387950
                      (make-closure lam88100 kont87809 lst cons proc map cdr)))
                 (clo-app proc f8781387950 a8771487949)))))))))
  (proc
   (lam88104 env88105 a8771287945)
   (let ((map (env-ref env88105 8)))
     (let ((proc (env-ref env88105 7)))
       (let ((car (env-ref env88105 6)))
         (let ((cons (env-ref env88105 5)))
           (let ((list (env-ref env88105 4)))
             (let ((cdr (env-ref env88105 3)))
               (let ((lst (env-ref env88105 2)))
                 (let ((kont87809 (env-ref env88105 1)))
                   (if a8771287945
                     (let ((f8781087946 (make-closure lam88094 kont87809)))
                       (clo-app list f8781087946))
                     (let ((f8781487948
                            (make-closure
                             lam88102
                             kont87809
                             lst
                             cons
                             proc
                             map
                             cdr)))
                       (clo-app car f8781487948 lst))))))))))))
  (proc
   (map _88106 kont87809 proc lst)
   (let ((f8781587944
          (make-closure lam88104 kont87809 lst cdr list cons car proc map)))
     (clo-app null? f8781587944 lst)))
  (proc
   (lam88107 env88108 x8771987959)
   (let ((kont87816 (env-ref env88108 1))) (clo-app kont87816 x8771987959)))
  (proc
   (lam88109 env88110 a8772487969)
   (let ((a8772287965 (env-ref env88110 3)))
     (let ((kont87816 (env-ref env88110 2)))
       (let ((cons (env-ref env88110 1)))
         (clo-app cons kont87816 a8772287965 a8772487969)))))
  (proc
   (lam88111 env88112 a8772387967)
   (let ((a8772287965 (env-ref env88112 5)))
     (let ((op (env-ref env88112 4)))
       (let ((kont87816 (env-ref env88112 3)))
         (let ((filter (env-ref env88112 2)))
           (let ((cons (env-ref env88112 1)))
             (let ((f8781887968
                    (make-closure lam88109 cons kont87816 a8772287965)))
               (clo-app filter f8781887968 op a8772387967))))))))
  (proc
   (lam88113 env88114 a8772287965)
   (let ((cdr (env-ref env88114 6)))
     (let ((lst (env-ref env88114 5)))
       (let ((op (env-ref env88114 4)))
         (let ((kont87816 (env-ref env88114 3)))
           (let ((filter (env-ref env88114 2)))
             (let ((cons (env-ref env88114 1)))
               (let ((f8781987966
                      (make-closure
                       lam88111
                       cons
                       filter
                       kont87816
                       op
                       a8772287965)))
                 (clo-app cdr f8781987966 lst)))))))))
  (proc
   (lam88115 env88116 a8772587971)
   (let ((op (env-ref env88116 3)))
     (let ((kont87816 (env-ref env88116 2)))
       (let ((filter (env-ref env88116 1)))
         (clo-app filter kont87816 op a8772587971)))))
  (proc
   (lam88117 env88118 a8772187963)
   (let ((cdr (env-ref env88118 7)))
     (let ((lst (env-ref env88118 6)))
       (let ((op (env-ref env88118 5)))
         (let ((kont87816 (env-ref env88118 4)))
           (let ((cons (env-ref env88118 3)))
             (let ((filter (env-ref env88118 2)))
               (let ((car (env-ref env88118 1)))
                 (if a8772187963
                   (let ((f8782087964
                          (make-closure
                           lam88113
                           cons
                           filter
                           kont87816
                           op
                           lst
                           cdr)))
                     (clo-app car f8782087964 lst))
                   (let ((f8782187970
                          (make-closure lam88115 filter kont87816 op)))
                     (clo-app cdr f8782187970 lst)))))))))))
  (proc
   (lam88119 env88120 a8772087961)
   (let ((cdr (env-ref env88120 7)))
     (let ((lst (env-ref env88120 6)))
       (let ((op (env-ref env88120 5)))
         (let ((kont87816 (env-ref env88120 4)))
           (let ((cons (env-ref env88120 3)))
             (let ((filter (env-ref env88120 2)))
               (let ((car (env-ref env88120 1)))
                 (let ((f8782287962
                        (make-closure
                         lam88117
                         car
                         filter
                         cons
                         kont87816
                         op
                         lst
                         cdr)))
                   (clo-app op f8782287962 a8772087961))))))))))
  (proc
   (lam88121 env88122 a8771887957)
   (let ((lst (env-ref env88122 8)))
     (let ((op (env-ref env88122 7)))
       (let ((kont87816 (env-ref env88122 6)))
         (let ((cons (env-ref env88122 5)))
           (let ((list (env-ref env88122 4)))
             (let ((cdr (env-ref env88122 3)))
               (let ((filter (env-ref env88122 2)))
                 (let ((car (env-ref env88122 1)))
                   (if a8771887957
                     (let ((f8781787958 (make-closure lam88107 kont87816)))
                       (clo-app list f8781787958))
                     (let ((f8782387960
                            (make-closure
                             lam88119
                             car
                             filter
                             cons
                             kont87816
                             op
                             lst
                             cdr)))
                       (clo-app car f8782387960 lst))))))))))))
  (proc
   (filter _88123 kont87816 op lst)
   (let ((f8782487956
          (make-closure lam88121 car filter cdr list cons kont87816 op lst)))
     (clo-app null? f8782487956 lst)))
  (proc
   (lam88124 env88125 a8773087979)
   (let ((a8772887976 (env-ref env88125 3)))
     (let ((drop (env-ref env88125 2)))
       (let ((kont87825 (env-ref env88125 1)))
         (clo-app drop kont87825 a8772887976 a8773087979)))))
  (proc
   (lam88127 env88128 a8772887976)
   (let ((n (env-ref env88128 4)))
     (let ((- (env-ref env88128 3)))
       (let ((drop (env-ref env88128 2)))
         (let ((kont87825 (env-ref env88128 1)))
           (let ((a8772987977 '1))
             (let ((f8782687978
                    (make-closure lam88124 kont87825 drop a8772887976)))
               (clo-app - f8782687978 n a8772987977))))))))
  (proc
   (lam88129 env88130 a8772787974)
   (let ((cdr (env-ref env88130 6)))
     (let ((n (env-ref env88130 5)))
       (let ((- (env-ref env88130 4)))
         (let ((lst (env-ref env88130 3)))
           (let ((drop (env-ref env88130 2)))
             (let ((kont87825 (env-ref env88130 1)))
               (if a8772787974
                 (clo-app kont87825 lst)
                 (let ((f8782787975
                        (make-closure lam88127 kont87825 drop - n)))
                   (clo-app cdr f8782787975 lst))))))))))
  (proc
   (drop _88132 kont87825 lst n)
   (let ((a8772687972 '0))
     (let ((f8782887973 (make-closure lam88129 kont87825 drop lst - n cdr)))
       (clo-app = f8782887973 n a8772687972))))
  (proc
   (lam88133 env88134 a8773487987)
   (let ((a8773287983 (env-ref env88134 3)))
     (let ((kont87829 (env-ref env88134 2)))
       (let ((proc (env-ref env88134 1)))
         (clo-app proc kont87829 a8773287983 a8773487987)))))
  (proc
   (lam88135 env88136 a8773387985)
   (let ((a8773287983 (env-ref env88136 5)))
     (let ((foldr (env-ref env88136 4)))
       (let ((kont87829 (env-ref env88136 3)))
         (let ((proc (env-ref env88136 2)))
           (let ((acc (env-ref env88136 1)))
             (let ((f8783087986
                    (make-closure lam88133 proc kont87829 a8773287983)))
               (clo-app foldr f8783087986 proc acc a8773387985))))))))
  (proc
   (lam88137 env88138 a8773287983)
   (let ((cdr (env-ref env88138 6)))
     (let ((kont87829 (env-ref env88138 5)))
       (let ((foldr (env-ref env88138 4)))
         (let ((lst (env-ref env88138 3)))
           (let ((proc (env-ref env88138 2)))
             (let ((acc (env-ref env88138 1)))
               (let ((f8783187984
                      (make-closure
                       lam88135
                       acc
                       proc
                       kont87829
                       foldr
                       a8773287983)))
                 (clo-app cdr f8783187984 lst)))))))))
  (proc
   (lam88139 env88140 a8773187981)
   (let ((cdr (env-ref env88140 7)))
     (let ((kont87829 (env-ref env88140 6)))
       (let ((car (env-ref env88140 5)))
         (let ((foldr (env-ref env88140 4)))
           (let ((lst (env-ref env88140 3)))
             (let ((proc (env-ref env88140 2)))
               (let ((acc (env-ref env88140 1)))
                 (if a8773187981
                   (clo-app kont87829 acc)
                   (let ((f8783287982
                          (make-closure
                           lam88137
                           acc
                           proc
                           lst
                           foldr
                           kont87829
                           cdr)))
                     (clo-app car f8783287982 lst)))))))))))
  (proc
   (foldr _88141 kont87829 proc acc lst)
   (let ((f8783387980
          (make-closure lam88139 acc proc lst foldr car kont87829 cdr)))
     (clo-app null? f8783387980 lst)))
  (proc
   (lam88142 env88143 a8773887995)
   (let ((a8773687991 (env-ref env88143 3)))
     (let ((kont87834 (env-ref env88143 2)))
       (let ((cons (env-ref env88143 1)))
         (clo-app cons kont87834 a8773687991 a8773887995)))))
  (proc
   (lam88144 env88145 a8773787993)
   (let ((append (env-ref env88145 5)))
     (let ((a8773687991 (env-ref env88145 4)))
       (let ((lst2 (env-ref env88145 3)))
         (let ((kont87834 (env-ref env88145 2)))
           (let ((cons (env-ref env88145 1)))
             (let ((f8783587994
                    (make-closure lam88142 cons kont87834 a8773687991)))
               (clo-app append f8783587994 a8773787993 lst2))))))))
  (proc
   (lam88146 env88147 a8773687991)
   (let ((cdr (env-ref env88147 6)))
     (let ((append (env-ref env88147 5)))
       (let ((lst2 (env-ref env88147 4)))
         (let ((cons (env-ref env88147 3)))
           (let ((lst1 (env-ref env88147 2)))
             (let ((kont87834 (env-ref env88147 1)))
               (let ((f8783687992
                      (make-closure
                       lam88144
                       cons
                       kont87834
                       lst2
                       a8773687991
                       append)))
                 (clo-app cdr f8783687992 lst1)))))))))
  (proc
   (lam88148 env88149 a8773587989)
   (let ((cdr (env-ref env88149 7)))
     (let ((append (env-ref env88149 6)))
       (let ((lst2 (env-ref env88149 5)))
         (let ((cons (env-ref env88149 4)))
           (let ((lst1 (env-ref env88149 3)))
             (let ((car (env-ref env88149 2)))
               (let ((kont87834 (env-ref env88149 1)))
                 (if a8773587989
                   (clo-app kont87834 lst2)
                   (let ((f8783787990
                          (make-closure
                           lam88146
                           kont87834
                           lst1
                           cons
                           lst2
                           append
                           cdr)))
                     (clo-app car f8783787990 lst1)))))))))))
  (proc
   (append _88150 kont87834 lst1 lst2)
   (let ((f8783887988
          (make-closure lam88148 kont87834 car lst1 cons lst2 append cdr)))
     (clo-app null? f8783887988 lst1)))
  (proc
   (hash _88151 . lst)
   (let ((kont8783987996 (prim car lst)))
     (let ((lst87997 (prim cdr lst)))
       (let ((x8773987998 (apply-prim hash lst87997)))
         (clo-app kont8783987996 x8773987998)))))
  (proc
   (hash-ref _88152 kont87841 h k)
   (let ((x8774087999 (prim hash-ref h k))) (clo-app kont87841 x8774087999)))
  (proc
   (hash-set _88153 kont87842 h k v)
   (let ((x8774188000 (prim hash-set h k v))) (clo-app kont87842 x8774188000)))
  (proc
   (hash-has-key? _88154 kont87843 h k)
   (let ((x8774288001 (prim hash-has-key? h k)))
     (clo-app kont87843 x8774288001)))
  (proc
   (hash-count _88155 kont87844 h)
   (let ((x8774388002 (prim hash-count h))) (clo-app kont87844 x8774388002)))
  (proc
   (call _88159 kont87845)
   (let ((a8774488003 '1.4))
     (let ((a8774588004 '2.5))
       (let ((a8774688005 '1.0))
         (clo-app * kont87845 a8774488003 a8774588004 a8774688005)))))
  (proc
   (lam88160 env88161 x8774788007)
   (let ((kont87846 (env-ref env88161 1))) (clo-app kont87846 x8774788007)))
  (proc
   (brouhaha_main _88162 kont87846)
   (let ((f8784788006 (make-closure lam88160 kont87846)))
     (clo-app call f8784788006))))
