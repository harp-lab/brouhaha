'((define (+ . lst)
    (let ((kont3167631776 (prim car lst)))
      (let ((lst31777 (prim cdr lst)))
        (let ((x3159131778 (apply-prim + lst31777)))
          (kont3167631776 x3159131778)))))
  (define (- . lst)
    (let ((kont3167831779 (prim car lst)))
      (let ((lst31780 (prim cdr lst)))
        (let ((x3159231781 (apply-prim - lst31780)))
          (kont3167831779 x3159231781)))))
  (define (* . lst)
    (let ((kont3168031782 (prim car lst)))
      (let ((lst31783 (prim cdr lst)))
        (let ((x3159331784 (apply-prim * lst31783)))
          (kont3168031782 x3159331784)))))
  (define (modulo kont31682 a b)
    (let ((x3159431785 (prim modulo a b))) (kont31682 x3159431785)))
  (define (/ . lst)
    (let ((kont3168331786 (prim car lst)))
      (let ((lst31787 (prim cdr lst)))
        (let ((x3159531788 (apply-prim / lst31787)))
          (kont3168331786 x3159531788)))))
  (define (= . lst)
    (let ((kont3168531789 (prim car lst)))
      (let ((lst31790 (prim cdr lst)))
        (let ((x3159631791 (apply-prim = lst31790)))
          (kont3168531789 x3159631791)))))
  (define (> . lst)
    (let ((kont3168731792 (prim car lst)))
      (let ((lst31793 (prim cdr lst)))
        (let ((x3159731794 (apply-prim > lst31793)))
          (kont3168731792 x3159731794)))))
  (define (< . lst)
    (let ((kont3168931795 (prim car lst)))
      (let ((lst31796 (prim cdr lst)))
        (let ((x3159831797 (apply-prim < lst31796)))
          (kont3168931795 x3159831797)))))
  (define (<= . lst)
    (let ((kont3169131798 (prim car lst)))
      (let ((lst31799 (prim cdr lst)))
        (let ((x3159931800 (apply-prim <= lst31799)))
          (kont3169131798 x3159931800)))))
  (define (>= . lst)
    (let ((kont3169331801 (prim car lst)))
      (let ((lst31802 (prim cdr lst)))
        (let ((x3160031803 (apply-prim >= lst31802)))
          (kont3169331801 x3160031803)))))
  (define (null? kont31695 x)
    (let ((x3160131804 (prim null? x))) (kont31695 x3160131804)))
  (define (equal? kont31696 x y)
    (let ((x3160231805 (prim equal? x y))) (kont31696 x3160231805)))
  (define (eq? kont31697 x y)
    (let ((x3160331806 (prim eq? x y))) (kont31697 x3160331806)))
  (define (cons kont31698 a b)
    (let ((x3160431807 (prim cons a b))) (kont31698 x3160431807)))
  (define (car kont31699 lst)
    (let ((x3160531808 (prim car lst))) (kont31699 x3160531808)))
  (define (cdr kont31700 lst)
    (let ((x3160631809 (prim cdr lst))) (kont31700 x3160631809)))
  (define (even? kont31701 x)
    (let ((a3160731810 '0))
      (let ((a3160831811 '2))
        (let ((f3170231812
               (lambda (a3160931813)
                 (equal? kont31701 a3160731810 a3160931813))))
          (modulo f3170231812 x a3160831811)))))
  (define (odd? kont31703 x)
    (let ((a3161031814 '1))
      (let ((a3161131815 '2))
        (let ((f3170431816
               (lambda (a3161231817)
                 (equal? kont31703 a3161031814 a3161231817))))
          (modulo f3170431816 x a3161131815)))))
  (define (list . x)
    (let ((kont3170531818 (prim car x)))
      (let ((x31819 (prim cdr x))) (kont3170531818 x31819))))
  (define (member? kont31707 x lst)
    (let ((f3171131820
           (lambda (a3161331821)
             (if a3161331821
               (let ((x3161431822 '#f)) (kont31707 x3161431822))
               (let ((f3171031823
                      (lambda (a3161531824)
                        (let ((f3170931825
                               (lambda (a3161631826)
                                 (if a3161631826
                                   (let ((x3161731827 '#t))
                                     (kont31707 x3161731827))
                                   (let ((f3170831828
                                          (lambda (a3161831829)
                                            (member?
                                             kont31707
                                             x
                                             a3161831829))))
                                     (cdr f3170831828 lst))))))
                          (equal? f3170931825 a3161531824 x)))))
                 (car f3171031823 lst))))))
      (null? f3171131820 lst)))
  (define (foldl kont31712 fun acc lst)
    (let ((f3171631830
           (lambda (a3161931831)
             (if a3161931831
               (kont31712 acc)
               (let ((f3171531832
                      (lambda (a3162031833)
                        (let ((f3171431834
                               (lambda (a3162131835)
                                 (let ((f3171331836
                                        (lambda (a3162231837)
                                          (foldl
                                           kont31712
                                           fun
                                           a3162131835
                                           a3162231837))))
                                   (cdr f3171331836 lst)))))
                          (fun f3171431834 a3162031833 acc)))))
                 (car f3171531832 lst))))))
      (null? f3171631830 lst)))
  (define (reverse-helper kont31717 lst lst2)
    (let ((f3172131838
           (lambda (a3162331839)
             (if a3162331839
               (kont31717 lst2)
               (let ((f3172031840
                      (lambda (a3162431841)
                        (let ((f3171931842
                               (lambda (a3162531843)
                                 (let ((f3171831844
                                        (lambda (a3162631845)
                                          (reverse-helper
                                           kont31717
                                           a3162431841
                                           a3162631845))))
                                   (cons f3171831844 a3162531843 lst2)))))
                          (car f3171931842 lst)))))
                 (cdr f3172031840 lst))))))
      (null? f3172131838 lst)))
  (define (reverse kont31722 lst)
    (let ((f3172331846
           (lambda (a3162731847) (reverse-helper kont31722 lst a3162731847))))
      (list f3172331846)))
  (define (take-helper kont31724 lst n lst2)
    (let ((a3162831848 '0))
      (let ((f3173031849
             (lambda (a3162931850)
               (if a3162931850
                 (let ((f3172531851
                        (lambda (x3163031852) (kont31724 x3163031852))))
                   (reverse f3172531851 lst2))
                 (let ((f3172931853
                        (lambda (a3163131854)
                          (let ((a3163231855 '1))
                            (let ((f3172831856
                                   (lambda (a3163331857)
                                     (let ((f3172731858
                                            (lambda (a3163431859)
                                              (let ((f3172631860
                                                     (lambda (a3163531861)
                                                       (take-helper
                                                        kont31724
                                                        a3163131854
                                                        a3163331857
                                                        a3163531861))))
                                                (cons
                                                 f3172631860
                                                 a3163431859
                                                 lst2)))))
                                       (car f3172731858 lst)))))
                              (- f3172831856 n a3163231855))))))
                   (cdr f3172931853 lst))))))
        (= f3173031849 n a3162831848))))
  (define (take kont31731 lst n)
    (let ((f3173231862
           (lambda (a3163631863) (take-helper kont31731 lst n a3163631863))))
      (list f3173231862)))
  (define (length kont31733 lst)
    (let ((f3173631864
           (lambda (a3163731865)
             (if a3163731865
               (let ((x3163831866 '0)) (kont31733 x3163831866))
               (let ((a3163931867 '1))
                 (let ((f3173531868
                        (lambda (a3164031869)
                          (let ((f3173431870
                                 (lambda (a3164131871)
                                   (+ kont31733 a3163931867 a3164131871))))
                            (length f3173431870 a3164031869)))))
                   (cdr f3173531868 lst)))))))
      (null? f3173631864 lst)))
  (define (map kont31737 proc lst)
    (let ((f3174331872
           (lambda (a3164231873)
             (if a3164231873
               (let ((f3173831874
                      (lambda (x3164331875) (kont31737 x3164331875))))
                 (list f3173831874))
               (let ((f3174231876
                      (lambda (a3164431877)
                        (let ((f3174131878
                               (lambda (a3164531879)
                                 (let ((f3174031880
                                        (lambda (a3164631881)
                                          (let ((f3173931882
                                                 (lambda (a3164731883)
                                                   (cons
                                                    kont31737
                                                    a3164531879
                                                    a3164731883))))
                                            (map
                                             f3173931882
                                             proc
                                             a3164631881)))))
                                   (cdr f3174031880 lst)))))
                          (proc f3174131878 a3164431877)))))
                 (car f3174231876 lst))))))
      (null? f3174331872 lst)))
  (define (filter kont31744 op lst)
    (let ((f3175231884
           (lambda (a3164831885)
             (if a3164831885
               (let ((f3174531886
                      (lambda (x3164931887) (kont31744 x3164931887))))
                 (list f3174531886))
               (let ((f3175131888
                      (lambda (a3165031889)
                        (let ((f3175031890
                               (lambda (a3165131891)
                                 (if a3165131891
                                   (let ((f3174831892
                                          (lambda (a3165231893)
                                            (let ((f3174731894
                                                   (lambda (a3165331895)
                                                     (let ((f3174631896
                                                            (lambda (a3165431897)
                                                              (cons
                                                               kont31744
                                                               a3165231893
                                                               a3165431897))))
                                                       (filter
                                                        f3174631896
                                                        op
                                                        a3165331895)))))
                                              (cdr f3174731894 lst)))))
                                     (car f3174831892 lst))
                                   (let ((f3174931898
                                          (lambda (a3165531899)
                                            (filter
                                             kont31744
                                             op
                                             a3165531899))))
                                     (cdr f3174931898 lst))))))
                          (op f3175031890 a3165031889)))))
                 (car f3175131888 lst))))))
      (null? f3175231884 lst)))
  (define (drop kont31753 lst n)
    (let ((a3165631900 '0))
      (let ((f3175631901
             (lambda (a3165731902)
               (if a3165731902
                 (kont31753 lst)
                 (let ((f3175531903
                        (lambda (a3165831904)
                          (let ((a3165931905 '1))
                            (let ((f3175431906
                                   (lambda (a3166031907)
                                     (drop
                                      kont31753
                                      a3165831904
                                      a3166031907))))
                              (- f3175431906 n a3165931905))))))
                   (cdr f3175531903 lst))))))
        (= f3175631901 n a3165631900))))
  (define (foldr kont31757 proc acc lst)
    (let ((f3176131908
           (lambda (a3166131909)
             (if a3166131909
               (kont31757 acc)
               (let ((f3176031910
                      (lambda (a3166231911)
                        (let ((f3175931912
                               (lambda (a3166331913)
                                 (let ((f3175831914
                                        (lambda (a3166431915)
                                          (proc
                                           kont31757
                                           a3166231911
                                           a3166431915))))
                                   (foldr f3175831914 proc acc a3166331913)))))
                          (cdr f3175931912 lst)))))
                 (car f3176031910 lst))))))
      (null? f3176131908 lst)))
  (define (append kont31762 lst1 lst2)
    (let ((f3176631916
           (lambda (a3166531917)
             (if a3166531917
               (kont31762 lst2)
               (let ((f3176531918
                      (lambda (a3166631919)
                        (let ((f3176431920
                               (lambda (a3166731921)
                                 (let ((f3176331922
                                        (lambda (a3166831923)
                                          (cons
                                           kont31762
                                           a3166631919
                                           a3166831923))))
                                   (append f3176331922 a3166731921 lst2)))))
                          (cdr f3176431920 lst1)))))
                 (car f3176531918 lst1))))))
      (null? f3176631916 lst1)))
  (define (hash . lst)
    (let ((kont3176731924 (prim car lst)))
      (let ((lst31925 (prim cdr lst)))
        (let ((x3166931926 (apply-prim hash lst31925)))
          (kont3176731924 x3166931926)))))
  (define (hash-ref kont31769 h k)
    (let ((x3167031927 (prim hash-ref h k))) (kont31769 x3167031927)))
  (define (hash-set kont31770 h k v)
    (let ((x3167131928 (prim hash-set h k v))) (kont31770 x3167131928)))
  (define (hash-has-key? kont31771 h k)
    (let ((x3167231929 (prim hash-has-key? h k))) (kont31771 x3167231929)))
  (define (hash-count kont31772 h)
    (let ((x3167331930 (prim hash-count h))) (kont31772 x3167331930)))
  (define (call kont31773)
    (let ((a3167431931 '5)) (even? kont31773 a3167431931)))
  (define (brouhaha_main kont31774)
    (let ((f3177531932 (lambda (x3167531933) (kont31774 x3167531933))))
      (call f3177531932))))
