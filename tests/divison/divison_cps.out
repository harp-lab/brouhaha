'((define (+ . lst)
    (let ((kont2840128501 (prim car lst)))
      (let ((lst28502 (prim cdr lst)))
        (let ((x2831428503 (apply-prim + lst28502)))
          (kont2840128501 x2831428503)))))
  (define (- . lst)
    (let ((kont2840328504 (prim car lst)))
      (let ((lst28505 (prim cdr lst)))
        (let ((x2831528506 (apply-prim - lst28505)))
          (kont2840328504 x2831528506)))))
  (define (* . lst)
    (let ((kont2840528507 (prim car lst)))
      (let ((lst28508 (prim cdr lst)))
        (let ((x2831628509 (apply-prim * lst28508)))
          (kont2840528507 x2831628509)))))
  (define (modulo kont28407 a b)
    (let ((x2831728510 (prim modulo a b))) (kont28407 x2831728510)))
  (define (/ . lst)
    (let ((kont2840828511 (prim car lst)))
      (let ((lst28512 (prim cdr lst)))
        (let ((x2831828513 (apply-prim / lst28512)))
          (kont2840828511 x2831828513)))))
  (define (= . lst)
    (let ((kont2841028514 (prim car lst)))
      (let ((lst28515 (prim cdr lst)))
        (let ((x2831928516 (apply-prim = lst28515)))
          (kont2841028514 x2831928516)))))
  (define (> . lst)
    (let ((kont2841228517 (prim car lst)))
      (let ((lst28518 (prim cdr lst)))
        (let ((x2832028519 (apply-prim > lst28518)))
          (kont2841228517 x2832028519)))))
  (define (< . lst)
    (let ((kont2841428520 (prim car lst)))
      (let ((lst28521 (prim cdr lst)))
        (let ((x2832128522 (apply-prim < lst28521)))
          (kont2841428520 x2832128522)))))
  (define (<= . lst)
    (let ((kont2841628523 (prim car lst)))
      (let ((lst28524 (prim cdr lst)))
        (let ((x2832228525 (apply-prim <= lst28524)))
          (kont2841628523 x2832228525)))))
  (define (>= . lst)
    (let ((kont2841828526 (prim car lst)))
      (let ((lst28527 (prim cdr lst)))
        (let ((x2832328528 (apply-prim >= lst28527)))
          (kont2841828526 x2832328528)))))
  (define (null? kont28420 x)
    (let ((x2832428529 (prim null? x))) (kont28420 x2832428529)))
  (define (equal? kont28421 x y)
    (let ((x2832528530 (prim equal? x y))) (kont28421 x2832528530)))
  (define (eq? kont28422 x y)
    (let ((x2832628531 (prim eq? x y))) (kont28422 x2832628531)))
  (define (cons kont28423 a b)
    (let ((x2832728532 (prim cons a b))) (kont28423 x2832728532)))
  (define (car kont28424 lst)
    (let ((x2832828533 (prim car lst))) (kont28424 x2832828533)))
  (define (cdr kont28425 lst)
    (let ((x2832928534 (prim cdr lst))) (kont28425 x2832928534)))
  (define (even? kont28426 x)
    (let ((a2833028535 '0))
      (let ((a2833128536 '2))
        (let ((f2842728537
               (lambda (a2833228538)
                 (equal? kont28426 a2833028535 a2833228538))))
          (modulo f2842728537 x a2833128536)))))
  (define (odd? kont28428 x)
    (let ((a2833328539 '1))
      (let ((a2833428540 '2))
        (let ((f2842928541
               (lambda (a2833528542)
                 (equal? kont28428 a2833328539 a2833528542))))
          (modulo f2842928541 x a2833428540)))))
  (define (list . x)
    (let ((kont2843028543 (prim car x)))
      (let ((x28544 (prim cdr x))) (kont2843028543 x28544))))
  (define (member? kont28432 x lst)
    (let ((f2843628545
           (lambda (a2833628546)
             (if a2833628546
               (let ((x2833728547 '#f)) (kont28432 x2833728547))
               (let ((f2843528548
                      (lambda (a2833828549)
                        (let ((f2843428550
                               (lambda (a2833928551)
                                 (if a2833928551
                                   (let ((x2834028552 '#t))
                                     (kont28432 x2834028552))
                                   (let ((f2843328553
                                          (lambda (a2834128554)
                                            (member?
                                             kont28432
                                             x
                                             a2834128554))))
                                     (cdr f2843328553 lst))))))
                          (equal? f2843428550 a2833828549 x)))))
                 (car f2843528548 lst))))))
      (null? f2843628545 lst)))
  (define (foldl kont28437 fun acc lst)
    (let ((f2844128555
           (lambda (a2834228556)
             (if a2834228556
               (kont28437 acc)
               (let ((f2844028557
                      (lambda (a2834328558)
                        (let ((f2843928559
                               (lambda (a2834428560)
                                 (let ((f2843828561
                                        (lambda (a2834528562)
                                          (foldl
                                           kont28437
                                           fun
                                           a2834428560
                                           a2834528562))))
                                   (cdr f2843828561 lst)))))
                          (fun f2843928559 a2834328558 acc)))))
                 (car f2844028557 lst))))))
      (null? f2844128555 lst)))
  (define (reverse-helper kont28442 lst lst2)
    (let ((f2844628563
           (lambda (a2834628564)
             (if a2834628564
               (kont28442 lst2)
               (let ((f2844528565
                      (lambda (a2834728566)
                        (let ((f2844428567
                               (lambda (a2834828568)
                                 (let ((f2844328569
                                        (lambda (a2834928570)
                                          (reverse-helper
                                           kont28442
                                           a2834728566
                                           a2834928570))))
                                   (cons f2844328569 a2834828568 lst2)))))
                          (car f2844428567 lst)))))
                 (cdr f2844528565 lst))))))
      (null? f2844628563 lst)))
  (define (reverse kont28447 lst)
    (let ((f2844828571
           (lambda (a2835028572) (reverse-helper kont28447 lst a2835028572))))
      (list f2844828571)))
  (define (take-helper kont28449 lst n lst2)
    (let ((a2835128573 '0))
      (let ((f2845528574
             (lambda (a2835228575)
               (if a2835228575
                 (let ((f2845028576
                        (lambda (x2835328577) (kont28449 x2835328577))))
                   (reverse f2845028576 lst2))
                 (let ((f2845428578
                        (lambda (a2835428579)
                          (let ((a2835528580 '1))
                            (let ((f2845328581
                                   (lambda (a2835628582)
                                     (let ((f2845228583
                                            (lambda (a2835728584)
                                              (let ((f2845128585
                                                     (lambda (a2835828586)
                                                       (take-helper
                                                        kont28449
                                                        a2835428579
                                                        a2835628582
                                                        a2835828586))))
                                                (cons
                                                 f2845128585
                                                 a2835728584
                                                 lst2)))))
                                       (car f2845228583 lst)))))
                              (- f2845328581 n a2835528580))))))
                   (cdr f2845428578 lst))))))
        (= f2845528574 n a2835128573))))
  (define (take kont28456 lst n)
    (let ((f2845728587
           (lambda (a2835928588) (take-helper kont28456 lst n a2835928588))))
      (list f2845728587)))
  (define (length kont28458 lst)
    (let ((f2846128589
           (lambda (a2836028590)
             (if a2836028590
               (let ((x2836128591 '0)) (kont28458 x2836128591))
               (let ((a2836228592 '1))
                 (let ((f2846028593
                        (lambda (a2836328594)
                          (let ((f2845928595
                                 (lambda (a2836428596)
                                   (+ kont28458 a2836228592 a2836428596))))
                            (length f2845928595 a2836328594)))))
                   (cdr f2846028593 lst)))))))
      (null? f2846128589 lst)))
  (define (map kont28462 proc lst)
    (let ((f2846828597
           (lambda (a2836528598)
             (if a2836528598
               (let ((f2846328599
                      (lambda (x2836628600) (kont28462 x2836628600))))
                 (list f2846328599))
               (let ((f2846728601
                      (lambda (a2836728602)
                        (let ((f2846628603
                               (lambda (a2836828604)
                                 (let ((f2846528605
                                        (lambda (a2836928606)
                                          (let ((f2846428607
                                                 (lambda (a2837028608)
                                                   (cons
                                                    kont28462
                                                    a2836828604
                                                    a2837028608))))
                                            (map
                                             f2846428607
                                             proc
                                             a2836928606)))))
                                   (cdr f2846528605 lst)))))
                          (proc f2846628603 a2836728602)))))
                 (car f2846728601 lst))))))
      (null? f2846828597 lst)))
  (define (filter kont28469 op lst)
    (let ((f2847728609
           (lambda (a2837128610)
             (if a2837128610
               (let ((f2847028611
                      (lambda (x2837228612) (kont28469 x2837228612))))
                 (list f2847028611))
               (let ((f2847628613
                      (lambda (a2837328614)
                        (let ((f2847528615
                               (lambda (a2837428616)
                                 (if a2837428616
                                   (let ((f2847328617
                                          (lambda (a2837528618)
                                            (let ((f2847228619
                                                   (lambda (a2837628620)
                                                     (let ((f2847128621
                                                            (lambda (a2837728622)
                                                              (cons
                                                               kont28469
                                                               a2837528618
                                                               a2837728622))))
                                                       (filter
                                                        f2847128621
                                                        op
                                                        a2837628620)))))
                                              (cdr f2847228619 lst)))))
                                     (car f2847328617 lst))
                                   (let ((f2847428623
                                          (lambda (a2837828624)
                                            (filter
                                             kont28469
                                             op
                                             a2837828624))))
                                     (cdr f2847428623 lst))))))
                          (op f2847528615 a2837328614)))))
                 (car f2847628613 lst))))))
      (null? f2847728609 lst)))
  (define (drop kont28478 lst n)
    (let ((a2837928625 '0))
      (let ((f2848128626
             (lambda (a2838028627)
               (if a2838028627
                 (kont28478 lst)
                 (let ((f2848028628
                        (lambda (a2838128629)
                          (let ((a2838228630 '1))
                            (let ((f2847928631
                                   (lambda (a2838328632)
                                     (drop
                                      kont28478
                                      a2838128629
                                      a2838328632))))
                              (- f2847928631 n a2838228630))))))
                   (cdr f2848028628 lst))))))
        (= f2848128626 n a2837928625))))
  (define (foldr kont28482 proc acc lst)
    (let ((f2848628633
           (lambda (a2838428634)
             (if a2838428634
               (kont28482 acc)
               (let ((f2848528635
                      (lambda (a2838528636)
                        (let ((f2848428637
                               (lambda (a2838628638)
                                 (let ((f2848328639
                                        (lambda (a2838728640)
                                          (proc
                                           kont28482
                                           a2838528636
                                           a2838728640))))
                                   (foldr f2848328639 proc acc a2838628638)))))
                          (cdr f2848428637 lst)))))
                 (car f2848528635 lst))))))
      (null? f2848628633 lst)))
  (define (append kont28487 lst1 lst2)
    (let ((f2849128641
           (lambda (a2838828642)
             (if a2838828642
               (kont28487 lst2)
               (let ((f2849028643
                      (lambda (a2838928644)
                        (let ((f2848928645
                               (lambda (a2839028646)
                                 (let ((f2848828647
                                        (lambda (a2839128648)
                                          (cons
                                           kont28487
                                           a2838928644
                                           a2839128648))))
                                   (append f2848828647 a2839028646 lst2)))))
                          (cdr f2848928645 lst1)))))
                 (car f2849028643 lst1))))))
      (null? f2849128641 lst1)))
  (define (hash . lst)
    (let ((kont2849228649 (prim car lst)))
      (let ((lst28650 (prim cdr lst)))
        (let ((x2839228651 (apply-prim hash lst28650)))
          (kont2849228649 x2839228651)))))
  (define (hash-ref kont28494 h k)
    (let ((x2839328652 (prim hash-ref h k))) (kont28494 x2839328652)))
  (define (hash-set kont28495 h k v)
    (let ((x2839428653 (prim hash-set h k v))) (kont28495 x2839428653)))
  (define (hash-has-key? kont28496 h k)
    (let ((x2839528654 (prim hash-has-key? h k))) (kont28496 x2839528654)))
  (define (hash-count kont28497 h)
    (let ((x2839628655 (prim hash-count h))) (kont28497 x2839628655)))
  (define (call kont28498)
    (let ((a2839728656 '100))
      (let ((a2839828657 '2))
        (let ((a2839928658 '12))
          (/ kont28498 a2839728656 a2839828657 a2839928658)))))
  (define (brouhaha_main kont28499)
    (let ((f2850028659 (lambda (x2840028660) (kont28499 x2840028660))))
      (call f2850028659))))
