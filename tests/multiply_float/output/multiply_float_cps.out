'((define (+ . lst)
    (let ((kont8520585305 (prim car lst)))
      (let ((lst85306 (prim cdr lst)))
        (let ((x8511885307 (apply-prim + lst85306)))
          (kont8520585305 x8511885307)))))
  (define (- . lst)
    (let ((kont8520785308 (prim car lst)))
      (let ((lst85309 (prim cdr lst)))
        (let ((x8511985310 (apply-prim - lst85309)))
          (kont8520785308 x8511985310)))))
  (define (* . lst)
    (let ((kont8520985311 (prim car lst)))
      (let ((lst85312 (prim cdr lst)))
        (let ((x8512085313 (apply-prim * lst85312)))
          (kont8520985311 x8512085313)))))
  (define (modulo kont85211 a b)
    (let ((x8512185314 (prim modulo a b))) (kont85211 x8512185314)))
  (define (/ . lst)
    (let ((kont8521285315 (prim car lst)))
      (let ((lst85316 (prim cdr lst)))
        (let ((x8512285317 (apply-prim / lst85316)))
          (kont8521285315 x8512285317)))))
  (define (= . lst)
    (let ((kont8521485318 (prim car lst)))
      (let ((lst85319 (prim cdr lst)))
        (let ((x8512385320 (apply-prim = lst85319)))
          (kont8521485318 x8512385320)))))
  (define (> . lst)
    (let ((kont8521685321 (prim car lst)))
      (let ((lst85322 (prim cdr lst)))
        (let ((x8512485323 (apply-prim > lst85322)))
          (kont8521685321 x8512485323)))))
  (define (< . lst)
    (let ((kont8521885324 (prim car lst)))
      (let ((lst85325 (prim cdr lst)))
        (let ((x8512585326 (apply-prim < lst85325)))
          (kont8521885324 x8512585326)))))
  (define (<= . lst)
    (let ((kont8522085327 (prim car lst)))
      (let ((lst85328 (prim cdr lst)))
        (let ((x8512685329 (apply-prim <= lst85328)))
          (kont8522085327 x8512685329)))))
  (define (>= . lst)
    (let ((kont8522285330 (prim car lst)))
      (let ((lst85331 (prim cdr lst)))
        (let ((x8512785332 (apply-prim >= lst85331)))
          (kont8522285330 x8512785332)))))
  (define (null? kont85224 x)
    (let ((x8512885333 (prim null? x))) (kont85224 x8512885333)))
  (define (equal? kont85225 x y)
    (let ((x8512985334 (prim equal? x y))) (kont85225 x8512985334)))
  (define (eq? kont85226 x y)
    (let ((x8513085335 (prim eq? x y))) (kont85226 x8513085335)))
  (define (cons kont85227 a b)
    (let ((x8513185336 (prim cons a b))) (kont85227 x8513185336)))
  (define (car kont85228 lst)
    (let ((x8513285337 (prim car lst))) (kont85228 x8513285337)))
  (define (cdr kont85229 lst)
    (let ((x8513385338 (prim cdr lst))) (kont85229 x8513385338)))
  (define (even? kont85230 x)
    (let ((a8513485339 '0))
      (let ((a8513585340 '2))
        (let ((f8523185341
               (lambda (a8513685342)
                 (equal? kont85230 a8513485339 a8513685342))))
          (modulo f8523185341 x a8513585340)))))
  (define (odd? kont85232 x)
    (let ((a8513785343 '1))
      (let ((a8513885344 '2))
        (let ((f8523385345
               (lambda (a8513985346)
                 (equal? kont85232 a8513785343 a8513985346))))
          (modulo f8523385345 x a8513885344)))))
  (define (list . x)
    (let ((kont8523485347 (prim car x)))
      (let ((x85348 (prim cdr x))) (kont8523485347 x85348))))
  (define (member? kont85236 x lst)
    (let ((f8524085349
           (lambda (a8514085350)
             (if a8514085350
               (let ((x8514185351 '#f)) (kont85236 x8514185351))
               (let ((f8523985352
                      (lambda (a8514285353)
                        (let ((f8523885354
                               (lambda (a8514385355)
                                 (if a8514385355
                                   (let ((x8514485356 '#t))
                                     (kont85236 x8514485356))
                                   (let ((f8523785357
                                          (lambda (a8514585358)
                                            (member?
                                             kont85236
                                             x
                                             a8514585358))))
                                     (cdr f8523785357 lst))))))
                          (equal? f8523885354 a8514285353 x)))))
                 (car f8523985352 lst))))))
      (null? f8524085349 lst)))
  (define (foldl kont85241 fun acc lst)
    (let ((f8524585359
           (lambda (a8514685360)
             (if a8514685360
               (kont85241 acc)
               (let ((f8524485361
                      (lambda (a8514785362)
                        (let ((f8524385363
                               (lambda (a8514885364)
                                 (let ((f8524285365
                                        (lambda (a8514985366)
                                          (foldl
                                           kont85241
                                           fun
                                           a8514885364
                                           a8514985366))))
                                   (cdr f8524285365 lst)))))
                          (fun f8524385363 a8514785362 acc)))))
                 (car f8524485361 lst))))))
      (null? f8524585359 lst)))
  (define (reverse-helper kont85246 lst lst2)
    (let ((f8525085367
           (lambda (a8515085368)
             (if a8515085368
               (kont85246 lst2)
               (let ((f8524985369
                      (lambda (a8515185370)
                        (let ((f8524885371
                               (lambda (a8515285372)
                                 (let ((f8524785373
                                        (lambda (a8515385374)
                                          (reverse-helper
                                           kont85246
                                           a8515185370
                                           a8515385374))))
                                   (cons f8524785373 a8515285372 lst2)))))
                          (car f8524885371 lst)))))
                 (cdr f8524985369 lst))))))
      (null? f8525085367 lst)))
  (define (reverse kont85251 lst)
    (let ((f8525285375
           (lambda (a8515485376) (reverse-helper kont85251 lst a8515485376))))
      (list f8525285375)))
  (define (take-helper kont85253 lst n lst2)
    (let ((a8515585377 '0))
      (let ((f8525985378
             (lambda (a8515685379)
               (if a8515685379
                 (let ((f8525485380
                        (lambda (x8515785381) (kont85253 x8515785381))))
                   (reverse f8525485380 lst2))
                 (let ((f8525885382
                        (lambda (a8515885383)
                          (let ((a8515985384 '1))
                            (let ((f8525785385
                                   (lambda (a8516085386)
                                     (let ((f8525685387
                                            (lambda (a8516185388)
                                              (let ((f8525585389
                                                     (lambda (a8516285390)
                                                       (take-helper
                                                        kont85253
                                                        a8515885383
                                                        a8516085386
                                                        a8516285390))))
                                                (cons
                                                 f8525585389
                                                 a8516185388
                                                 lst2)))))
                                       (car f8525685387 lst)))))
                              (- f8525785385 n a8515985384))))))
                   (cdr f8525885382 lst))))))
        (= f8525985378 n a8515585377))))
  (define (take kont85260 lst n)
    (let ((f8526185391
           (lambda (a8516385392) (take-helper kont85260 lst n a8516385392))))
      (list f8526185391)))
  (define (length kont85262 lst)
    (let ((f8526585393
           (lambda (a8516485394)
             (if a8516485394
               (let ((x8516585395 '0)) (kont85262 x8516585395))
               (let ((a8516685396 '1))
                 (let ((f8526485397
                        (lambda (a8516785398)
                          (let ((f8526385399
                                 (lambda (a8516885400)
                                   (+ kont85262 a8516685396 a8516885400))))
                            (length f8526385399 a8516785398)))))
                   (cdr f8526485397 lst)))))))
      (null? f8526585393 lst)))
  (define (map kont85266 proc lst)
    (let ((f8527285401
           (lambda (a8516985402)
             (if a8516985402
               (let ((f8526785403
                      (lambda (x8517085404) (kont85266 x8517085404))))
                 (list f8526785403))
               (let ((f8527185405
                      (lambda (a8517185406)
                        (let ((f8527085407
                               (lambda (a8517285408)
                                 (let ((f8526985409
                                        (lambda (a8517385410)
                                          (let ((f8526885411
                                                 (lambda (a8517485412)
                                                   (cons
                                                    kont85266
                                                    a8517285408
                                                    a8517485412))))
                                            (map
                                             f8526885411
                                             proc
                                             a8517385410)))))
                                   (cdr f8526985409 lst)))))
                          (proc f8527085407 a8517185406)))))
                 (car f8527185405 lst))))))
      (null? f8527285401 lst)))
  (define (filter kont85273 op lst)
    (let ((f8528185413
           (lambda (a8517585414)
             (if a8517585414
               (let ((f8527485415
                      (lambda (x8517685416) (kont85273 x8517685416))))
                 (list f8527485415))
               (let ((f8528085417
                      (lambda (a8517785418)
                        (let ((f8527985419
                               (lambda (a8517885420)
                                 (if a8517885420
                                   (let ((f8527785421
                                          (lambda (a8517985422)
                                            (let ((f8527685423
                                                   (lambda (a8518085424)
                                                     (let ((f8527585425
                                                            (lambda (a8518185426)
                                                              (cons
                                                               kont85273
                                                               a8517985422
                                                               a8518185426))))
                                                       (filter
                                                        f8527585425
                                                        op
                                                        a8518085424)))))
                                              (cdr f8527685423 lst)))))
                                     (car f8527785421 lst))
                                   (let ((f8527885427
                                          (lambda (a8518285428)
                                            (filter
                                             kont85273
                                             op
                                             a8518285428))))
                                     (cdr f8527885427 lst))))))
                          (op f8527985419 a8517785418)))))
                 (car f8528085417 lst))))))
      (null? f8528185413 lst)))
  (define (drop kont85282 lst n)
    (let ((a8518385429 '0))
      (let ((f8528585430
             (lambda (a8518485431)
               (if a8518485431
                 (kont85282 lst)
                 (let ((f8528485432
                        (lambda (a8518585433)
                          (let ((a8518685434 '1))
                            (let ((f8528385435
                                   (lambda (a8518785436)
                                     (drop
                                      kont85282
                                      a8518585433
                                      a8518785436))))
                              (- f8528385435 n a8518685434))))))
                   (cdr f8528485432 lst))))))
        (= f8528585430 n a8518385429))))
  (define (foldr kont85286 proc acc lst)
    (let ((f8529085437
           (lambda (a8518885438)
             (if a8518885438
               (kont85286 acc)
               (let ((f8528985439
                      (lambda (a8518985440)
                        (let ((f8528885441
                               (lambda (a8519085442)
                                 (let ((f8528785443
                                        (lambda (a8519185444)
                                          (proc
                                           kont85286
                                           a8518985440
                                           a8519185444))))
                                   (foldr f8528785443 proc acc a8519085442)))))
                          (cdr f8528885441 lst)))))
                 (car f8528985439 lst))))))
      (null? f8529085437 lst)))
  (define (append kont85291 lst1 lst2)
    (let ((f8529585445
           (lambda (a8519285446)
             (if a8519285446
               (kont85291 lst2)
               (let ((f8529485447
                      (lambda (a8519385448)
                        (let ((f8529385449
                               (lambda (a8519485450)
                                 (let ((f8529285451
                                        (lambda (a8519585452)
                                          (cons
                                           kont85291
                                           a8519385448
                                           a8519585452))))
                                   (append f8529285451 a8519485450 lst2)))))
                          (cdr f8529385449 lst1)))))
                 (car f8529485447 lst1))))))
      (null? f8529585445 lst1)))
  (define (hash . lst)
    (let ((kont8529685453 (prim car lst)))
      (let ((lst85454 (prim cdr lst)))
        (let ((x8519685455 (apply-prim hash lst85454)))
          (kont8529685453 x8519685455)))))
  (define (hash-ref kont85298 h k)
    (let ((x8519785456 (prim hash-ref h k))) (kont85298 x8519785456)))
  (define (hash-set kont85299 h k v)
    (let ((x8519885457 (prim hash-set h k v))) (kont85299 x8519885457)))
  (define (hash-has-key? kont85300 h k)
    (let ((x8519985458 (prim hash-has-key? h k))) (kont85300 x8519985458)))
  (define (hash-count kont85301 h)
    (let ((x8520085459 (prim hash-count h))) (kont85301 x8520085459)))
  (define (call kont85302)
    (let ((a8520185460 '1.4))
      (let ((a8520285461 '2.5))
        (let ((a8520385462 '1.0))
          (* kont85302 a8520185460 a8520285461 a8520385462)))))
  (define (brouhaha_main kont85303)
    (let ((f8530485463 (lambda (x8520485464) (kont85303 x8520485464))))
      (call f8530485463))))
