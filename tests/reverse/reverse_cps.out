'((define (+ . lst)
    (let ((kont110678110779 (prim car lst)))
      (let ((lst110780 (prim cdr lst)))
        (let ((x110589110781 (apply-prim + lst110780)))
          (kont110678110779 x110589110781)))))
  (define (- . lst)
    (let ((kont110680110782 (prim car lst)))
      (let ((lst110783 (prim cdr lst)))
        (let ((x110590110784 (apply-prim - lst110783)))
          (kont110680110782 x110590110784)))))
  (define (* . lst)
    (let ((kont110682110785 (prim car lst)))
      (let ((lst110786 (prim cdr lst)))
        (let ((x110591110787 (apply-prim * lst110786)))
          (kont110682110785 x110591110787)))))
  (define (modulo kont110684 a b)
    (let ((x110592110788 (prim modulo a b))) (kont110684 x110592110788)))
  (define (/ . lst)
    (let ((kont110685110789 (prim car lst)))
      (let ((lst110790 (prim cdr lst)))
        (let ((x110593110791 (apply-prim / lst110790)))
          (kont110685110789 x110593110791)))))
  (define (= . lst)
    (let ((kont110687110792 (prim car lst)))
      (let ((lst110793 (prim cdr lst)))
        (let ((x110594110794 (apply-prim = lst110793)))
          (kont110687110792 x110594110794)))))
  (define (> . lst)
    (let ((kont110689110795 (prim car lst)))
      (let ((lst110796 (prim cdr lst)))
        (let ((x110595110797 (apply-prim > lst110796)))
          (kont110689110795 x110595110797)))))
  (define (< . lst)
    (let ((kont110691110798 (prim car lst)))
      (let ((lst110799 (prim cdr lst)))
        (let ((x110596110800 (apply-prim < lst110799)))
          (kont110691110798 x110596110800)))))
  (define (<= . lst)
    (let ((kont110693110801 (prim car lst)))
      (let ((lst110802 (prim cdr lst)))
        (let ((x110597110803 (apply-prim <= lst110802)))
          (kont110693110801 x110597110803)))))
  (define (>= . lst)
    (let ((kont110695110804 (prim car lst)))
      (let ((lst110805 (prim cdr lst)))
        (let ((x110598110806 (apply-prim >= lst110805)))
          (kont110695110804 x110598110806)))))
  (define (null? kont110697 x)
    (let ((x110599110807 (prim null? x))) (kont110697 x110599110807)))
  (define (equal? kont110698 x y)
    (let ((x110600110808 (prim equal? x y))) (kont110698 x110600110808)))
  (define (eq? kont110699 x y)
    (let ((x110601110809 (prim eq? x y))) (kont110699 x110601110809)))
  (define (cons kont110700 a b)
    (let ((x110602110810 (prim cons a b))) (kont110700 x110602110810)))
  (define (car kont110701 lst)
    (let ((x110603110811 (prim car lst))) (kont110701 x110603110811)))
  (define (cdr kont110702 lst)
    (let ((x110604110812 (prim cdr lst))) (kont110702 x110604110812)))
  (define (even? kont110703 x)
    (let ((a110605110813 '0))
      (let ((a110606110814 '2))
        (let ((f110704110815
               (lambda (a110607110816)
                 (equal? kont110703 a110605110813 a110607110816))))
          (modulo f110704110815 x a110606110814)))))
  (define (odd? kont110705 x)
    (let ((a110608110817 '1))
      (let ((a110609110818 '2))
        (let ((f110706110819
               (lambda (a110610110820)
                 (equal? kont110705 a110608110817 a110610110820))))
          (modulo f110706110819 x a110609110818)))))
  (define (list . x)
    (let ((kont110707110821 (prim car x)))
      (let ((x110822 (prim cdr x))) (kont110707110821 x110822))))
  (define (member? kont110709 x lst)
    (let ((f110713110823
           (lambda (a110611110824)
             (if a110611110824
               (let ((x110612110825 '#f)) (kont110709 x110612110825))
               (let ((f110712110826
                      (lambda (a110613110827)
                        (let ((f110711110828
                               (lambda (a110614110829)
                                 (if a110614110829
                                   (let ((x110615110830 '#t))
                                     (kont110709 x110615110830))
                                   (let ((f110710110831
                                          (lambda (a110616110832)
                                            (member?
                                             kont110709
                                             x
                                             a110616110832))))
                                     (cdr f110710110831 lst))))))
                          (equal? f110711110828 a110613110827 x)))))
                 (car f110712110826 lst))))))
      (null? f110713110823 lst)))
  (define (foldl kont110714 fun acc lst)
    (let ((f110718110833
           (lambda (a110617110834)
             (if a110617110834
               (kont110714 acc)
               (let ((f110717110835
                      (lambda (a110618110836)
                        (let ((f110716110837
                               (lambda (a110619110838)
                                 (let ((f110715110839
                                        (lambda (a110620110840)
                                          (foldl
                                           kont110714
                                           fun
                                           a110619110838
                                           a110620110840))))
                                   (cdr f110715110839 lst)))))
                          (fun f110716110837 a110618110836 acc)))))
                 (car f110717110835 lst))))))
      (null? f110718110833 lst)))
  (define (reverse-helper kont110719 lst lst2)
    (let ((f110723110841
           (lambda (a110621110842)
             (if a110621110842
               (kont110719 lst2)
               (let ((f110722110843
                      (lambda (a110622110844)
                        (let ((f110721110845
                               (lambda (a110623110846)
                                 (let ((f110720110847
                                        (lambda (a110624110848)
                                          (reverse-helper
                                           kont110719
                                           a110622110844
                                           a110624110848))))
                                   (cons f110720110847 a110623110846 lst2)))))
                          (car f110721110845 lst)))))
                 (cdr f110722110843 lst))))))
      (null? f110723110841 lst)))
  (define (reverse kont110724 lst)
    (let ((f110725110849
           (lambda (a110625110850)
             (reverse-helper kont110724 lst a110625110850))))
      (list f110725110849)))
  (define (take-helper kont110726 lst n lst2)
    (let ((a110626110851 '0))
      (let ((f110732110852
             (lambda (a110627110853)
               (if a110627110853
                 (let ((f110727110854
                        (lambda (x110628110855) (kont110726 x110628110855))))
                   (reverse f110727110854 lst2))
                 (let ((f110731110856
                        (lambda (a110629110857)
                          (let ((a110630110858 '1))
                            (let ((f110730110859
                                   (lambda (a110631110860)
                                     (let ((f110729110861
                                            (lambda (a110632110862)
                                              (let ((f110728110863
                                                     (lambda (a110633110864)
                                                       (take-helper
                                                        kont110726
                                                        a110629110857
                                                        a110631110860
                                                        a110633110864))))
                                                (cons
                                                 f110728110863
                                                 a110632110862
                                                 lst2)))))
                                       (car f110729110861 lst)))))
                              (- f110730110859 n a110630110858))))))
                   (cdr f110731110856 lst))))))
        (= f110732110852 n a110626110851))))
  (define (take kont110733 lst n)
    (let ((f110734110865
           (lambda (a110634110866)
             (take-helper kont110733 lst n a110634110866))))
      (list f110734110865)))
  (define (length kont110735 lst)
    (let ((f110738110867
           (lambda (a110635110868)
             (if a110635110868
               (let ((x110636110869 '0)) (kont110735 x110636110869))
               (let ((a110637110870 '1))
                 (let ((f110737110871
                        (lambda (a110638110872)
                          (let ((f110736110873
                                 (lambda (a110639110874)
                                   (+
                                    kont110735
                                    a110637110870
                                    a110639110874))))
                            (length f110736110873 a110638110872)))))
                   (cdr f110737110871 lst)))))))
      (null? f110738110867 lst)))
  (define (map kont110739 proc lst)
    (let ((f110745110875
           (lambda (a110640110876)
             (if a110640110876
               (let ((f110740110877
                      (lambda (x110641110878) (kont110739 x110641110878))))
                 (list f110740110877))
               (let ((f110744110879
                      (lambda (a110642110880)
                        (let ((f110743110881
                               (lambda (a110643110882)
                                 (let ((f110742110883
                                        (lambda (a110644110884)
                                          (let ((f110741110885
                                                 (lambda (a110645110886)
                                                   (cons
                                                    kont110739
                                                    a110643110882
                                                    a110645110886))))
                                            (map
                                             f110741110885
                                             proc
                                             a110644110884)))))
                                   (cdr f110742110883 lst)))))
                          (proc f110743110881 a110642110880)))))
                 (car f110744110879 lst))))))
      (null? f110745110875 lst)))
  (define (filter kont110746 op lst)
    (let ((f110754110887
           (lambda (a110646110888)
             (if a110646110888
               (let ((f110747110889
                      (lambda (x110647110890) (kont110746 x110647110890))))
                 (list f110747110889))
               (let ((f110753110891
                      (lambda (a110648110892)
                        (let ((f110752110893
                               (lambda (a110649110894)
                                 (if a110649110894
                                   (let ((f110750110895
                                          (lambda (a110650110896)
                                            (let ((f110749110897
                                                   (lambda (a110651110898)
                                                     (let ((f110748110899
                                                            (lambda (a110652110900)
                                                              (cons
                                                               kont110746
                                                               a110650110896
                                                               a110652110900))))
                                                       (filter
                                                        f110748110899
                                                        op
                                                        a110651110898)))))
                                              (cdr f110749110897 lst)))))
                                     (car f110750110895 lst))
                                   (let ((f110751110901
                                          (lambda (a110653110902)
                                            (filter
                                             kont110746
                                             op
                                             a110653110902))))
                                     (cdr f110751110901 lst))))))
                          (op f110752110893 a110648110892)))))
                 (car f110753110891 lst))))))
      (null? f110754110887 lst)))
  (define (drop kont110755 lst n)
    (let ((a110654110903 '0))
      (let ((f110758110904
             (lambda (a110655110905)
               (if a110655110905
                 (kont110755 lst)
                 (let ((f110757110906
                        (lambda (a110656110907)
                          (let ((a110657110908 '1))
                            (let ((f110756110909
                                   (lambda (a110658110910)
                                     (drop
                                      kont110755
                                      a110656110907
                                      a110658110910))))
                              (- f110756110909 n a110657110908))))))
                   (cdr f110757110906 lst))))))
        (= f110758110904 n a110654110903))))
  (define (foldr kont110759 proc acc lst)
    (let ((f110763110911
           (lambda (a110659110912)
             (if a110659110912
               (kont110759 acc)
               (let ((f110762110913
                      (lambda (a110660110914)
                        (let ((f110761110915
                               (lambda (a110661110916)
                                 (let ((f110760110917
                                        (lambda (a110662110918)
                                          (proc
                                           kont110759
                                           a110660110914
                                           a110662110918))))
                                   (foldr
                                    f110760110917
                                    proc
                                    acc
                                    a110661110916)))))
                          (cdr f110761110915 lst)))))
                 (car f110762110913 lst))))))
      (null? f110763110911 lst)))
  (define (append kont110764 lst1 lst2)
    (let ((f110768110919
           (lambda (a110663110920)
             (if a110663110920
               (kont110764 lst2)
               (let ((f110767110921
                      (lambda (a110664110922)
                        (let ((f110766110923
                               (lambda (a110665110924)
                                 (let ((f110765110925
                                        (lambda (a110666110926)
                                          (cons
                                           kont110764
                                           a110664110922
                                           a110666110926))))
                                   (append
                                    f110765110925
                                    a110665110924
                                    lst2)))))
                          (cdr f110766110923 lst1)))))
                 (car f110767110921 lst1))))))
      (null? f110768110919 lst1)))
  (define (hash . lst)
    (let ((kont110769110927 (prim car lst)))
      (let ((lst110928 (prim cdr lst)))
        (let ((x110667110929 (apply-prim hash lst110928)))
          (kont110769110927 x110667110929)))))
  (define (hash-ref kont110771 h k)
    (let ((x110668110930 (prim hash-ref h k))) (kont110771 x110668110930)))
  (define (hash-set kont110772 h k v)
    (let ((x110669110931 (prim hash-set h k v))) (kont110772 x110669110931)))
  (define (hash-has-key? kont110773 h k)
    (let ((x110670110932 (prim hash-has-key? h k)))
      (kont110773 x110670110932)))
  (define (hash-count kont110774 h)
    (let ((x110671110933 (prim hash-count h))) (kont110774 x110671110933)))
  (define (call kont110775 lst)
    (let ((f110776110934 (lambda (x110672110935) (kont110775 x110672110935))))
      (reverse f110776110934 lst)))
  (define (brouhaha_main kont110777)
    (let ((a110673110936 '1))
      (let ((a110674110937 '2))
        (let ((a110675110938 '3))
          (let ((a110676110939 '4))
            (let ((f110778110940
                   (lambda (a110677110941) (call kont110777 a110677110941))))
              (list
               f110778110940
               a110673110936
               a110674110937
               a110675110938
               a110676110939))))))))
