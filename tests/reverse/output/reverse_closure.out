'((proc
   (+ _105555 . lst)
   (let ((kont105291105392 (prim car lst)))
     (let ((lst105393 (prim cdr lst)))
       (let ((x105202105394 (apply-prim + lst105393)))
         (clo-app kont105291105392 x105202105394)))))
  (proc
   (- _105556 . lst)
   (let ((kont105293105395 (prim car lst)))
     (let ((lst105396 (prim cdr lst)))
       (let ((x105203105397 (apply-prim - lst105396)))
         (clo-app kont105293105395 x105203105397)))))
  (proc
   (* _105557 . lst)
   (let ((kont105295105398 (prim car lst)))
     (let ((lst105399 (prim cdr lst)))
       (let ((x105204105400 (apply-prim * lst105399)))
         (clo-app kont105295105398 x105204105400)))))
  (proc
   (modulo _105558 kont105297 a b)
   (let ((x105205105401 (prim modulo a b)))
     (clo-app kont105297 x105205105401)))
  (proc
   (/ _105559 . lst)
   (let ((kont105298105402 (prim car lst)))
     (let ((lst105403 (prim cdr lst)))
       (let ((x105206105404 (apply-prim / lst105403)))
         (clo-app kont105298105402 x105206105404)))))
  (proc
   (= _105560 . lst)
   (let ((kont105300105405 (prim car lst)))
     (let ((lst105406 (prim cdr lst)))
       (let ((x105207105407 (apply-prim = lst105406)))
         (clo-app kont105300105405 x105207105407)))))
  (proc
   (> _105561 . lst)
   (let ((kont105302105408 (prim car lst)))
     (let ((lst105409 (prim cdr lst)))
       (let ((x105208105410 (apply-prim > lst105409)))
         (clo-app kont105302105408 x105208105410)))))
  (proc
   (< _105562 . lst)
   (let ((kont105304105411 (prim car lst)))
     (let ((lst105412 (prim cdr lst)))
       (let ((x105209105413 (apply-prim < lst105412)))
         (clo-app kont105304105411 x105209105413)))))
  (proc
   (<= _105563 . lst)
   (let ((kont105306105414 (prim car lst)))
     (let ((lst105415 (prim cdr lst)))
       (let ((x105210105416 (apply-prim <= lst105415)))
         (clo-app kont105306105414 x105210105416)))))
  (proc
   (>= _105564 . lst)
   (let ((kont105308105417 (prim car lst)))
     (let ((lst105418 (prim cdr lst)))
       (let ((x105211105419 (apply-prim >= lst105418)))
         (clo-app kont105308105417 x105211105419)))))
  (proc
   (null? _105565 kont105310 x)
   (let ((x105212105420 (prim null? x))) (clo-app kont105310 x105212105420)))
  (proc
   (equal? _105566 kont105311 x y)
   (let ((x105213105421 (prim equal? x y)))
     (clo-app kont105311 x105213105421)))
  (proc
   (eq? _105567 kont105312 x y)
   (let ((x105214105422 (prim eq? x y))) (clo-app kont105312 x105214105422)))
  (proc
   (cons _105568 kont105313 a b)
   (let ((x105215105423 (prim cons a b))) (clo-app kont105313 x105215105423)))
  (proc
   (car _105569 kont105314 lst)
   (let ((x105216105424 (prim car lst))) (clo-app kont105314 x105216105424)))
  (proc
   (cdr _105570 kont105315 lst)
   (let ((x105217105425 (prim cdr lst))) (clo-app kont105315 x105217105425)))
  (proc
   (lam105571 env105572 a105220105429)
   (let ((kont105316 (env-ref env105572 3)))
     (let ((equal? (env-ref env105572 2)))
       (let ((a105218105426 (env-ref env105572 1)))
         (clo-app equal? kont105316 a105218105426 a105220105429)))))
  (proc
   (even? _105575 kont105316 x)
   (let ((a105218105426 '0))
     (let ((a105219105427 '2))
       (let ((f105317105428
              (make-closure lam105571 a105218105426 equal? kont105316)))
         (clo-app modulo f105317105428 x a105219105427)))))
  (proc
   (lam105576 env105577 a105223105433)
   (let ((equal? (env-ref env105577 3)))
     (let ((kont105318 (env-ref env105577 2)))
       (let ((a105221105430 (env-ref env105577 1)))
         (clo-app equal? kont105318 a105221105430 a105223105433)))))
  (proc
   (odd? _105580 kont105318 x)
   (let ((a105221105430 '1))
     (let ((a105222105431 '2))
       (let ((f105319105432
              (make-closure lam105576 a105221105430 kont105318 equal?)))
         (clo-app modulo f105319105432 x a105222105431)))))
  (proc
   (list _105581 . x)
   (let ((kont105320105434 (prim car x)))
     (let ((x105435 (prim cdr x))) (clo-app kont105320105434 x105435))))
  (proc
   (lam105584 env105585 a105229105445)
   (let ((kont105322 (env-ref env105585 3)))
     (let ((x (env-ref env105585 2)))
       (let ((member? (env-ref env105585 1)))
         (clo-app member? kont105322 x a105229105445)))))
  (proc
   (lam105586 env105587 a105227105442)
   (let ((cdr (env-ref env105587 5)))
     (let ((lst (env-ref env105587 4)))
       (let ((kont105322 (env-ref env105587 3)))
         (let ((x (env-ref env105587 2)))
           (let ((member? (env-ref env105587 1)))
             (if a105227105442
               (let ((x105228105443 '#t)) (clo-app kont105322 x105228105443))
               (let ((f105323105444
                      (make-closure lam105584 member? x kont105322)))
                 (clo-app cdr f105323105444 lst)))))))))
  (proc
   (lam105588 env105589 a105226105440)
   (let ((cdr (env-ref env105589 6)))
     (let ((lst (env-ref env105589 5)))
       (let ((kont105322 (env-ref env105589 4)))
         (let ((equal? (env-ref env105589 3)))
           (let ((x (env-ref env105589 2)))
             (let ((member? (env-ref env105589 1)))
               (let ((f105324105441
                      (make-closure lam105586 member? x kont105322 lst cdr)))
                 (clo-app equal? f105324105441 a105226105440 x)))))))))
  (proc
   (lam105590 env105591 a105224105437)
   (let ((cdr (env-ref env105591 7)))
     (let ((lst (env-ref env105591 6)))
       (let ((kont105322 (env-ref env105591 5)))
         (let ((equal? (env-ref env105591 4)))
           (let ((x (env-ref env105591 3)))
             (let ((car (env-ref env105591 2)))
               (let ((member? (env-ref env105591 1)))
                 (if a105224105437
                   (let ((x105225105438 '#f))
                     (clo-app kont105322 x105225105438))
                   (let ((f105325105439
                          (make-closure
                           lam105588
                           member?
                           x
                           equal?
                           kont105322
                           lst
                           cdr)))
                     (clo-app car f105325105439 lst)))))))))))
  (proc
   (member? _105592 kont105322 x lst)
   (let ((f105326105436
          (make-closure lam105590 member? car x equal? kont105322 lst cdr)))
     (clo-app null? f105326105436 lst)))
  (proc
   (lam105593 env105594 a105233105453)
   (let ((a105232105451 (env-ref env105594 4)))
     (let ((fun (env-ref env105594 3)))
       (let ((kont105327 (env-ref env105594 2)))
         (let ((foldl (env-ref env105594 1)))
           (clo-app foldl kont105327 fun a105232105451 a105233105453))))))
  (proc
   (lam105595 env105596 a105232105451)
   (let ((cdr (env-ref env105596 5)))
     (let ((lst (env-ref env105596 4)))
       (let ((fun (env-ref env105596 3)))
         (let ((kont105327 (env-ref env105596 2)))
           (let ((foldl (env-ref env105596 1)))
             (let ((f105328105452
                    (make-closure
                     lam105593
                     foldl
                     kont105327
                     fun
                     a105232105451)))
               (clo-app cdr f105328105452 lst))))))))
  (proc
   (lam105597 env105598 a105231105449)
   (let ((cdr (env-ref env105598 6)))
     (let ((lst (env-ref env105598 5)))
       (let ((fun (env-ref env105598 4)))
         (let ((foldl (env-ref env105598 3)))
           (let ((acc (env-ref env105598 2)))
             (let ((kont105327 (env-ref env105598 1)))
               (let ((f105329105450
                      (make-closure lam105595 foldl kont105327 fun lst cdr)))
                 (clo-app fun f105329105450 a105231105449 acc)))))))))
  (proc
   (lam105599 env105600 a105230105447)
   (let ((cdr (env-ref env105600 7)))
     (let ((lst (env-ref env105600 6)))
       (let ((fun (env-ref env105600 5)))
         (let ((car (env-ref env105600 4)))
           (let ((foldl (env-ref env105600 3)))
             (let ((acc (env-ref env105600 2)))
               (let ((kont105327 (env-ref env105600 1)))
                 (if a105230105447
                   (clo-app kont105327 acc)
                   (let ((f105330105448
                          (make-closure
                           lam105597
                           kont105327
                           acc
                           foldl
                           fun
                           lst
                           cdr)))
                     (clo-app car f105330105448 lst)))))))))))
  (proc
   (foldl _105601 kont105327 fun acc lst)
   (let ((f105331105446
          (make-closure lam105599 kont105327 acc foldl car fun lst cdr)))
     (clo-app null? f105331105446 lst)))
  (proc
   (lam105602 env105603 a105237105461)
   (let ((kont105332 (env-ref env105603 3)))
     (let ((reverse-helper (env-ref env105603 2)))
       (let ((a105235105457 (env-ref env105603 1)))
         (clo-app reverse-helper kont105332 a105235105457 a105237105461)))))
  (proc
   (lam105604 env105605 a105236105459)
   (let ((kont105332 (env-ref env105605 5)))
     (let ((reverse-helper (env-ref env105605 4)))
       (let ((lst2 (env-ref env105605 3)))
         (let ((a105235105457 (env-ref env105605 2)))
           (let ((cons (env-ref env105605 1)))
             (let ((f105333105460
                    (make-closure
                     lam105602
                     a105235105457
                     reverse-helper
                     kont105332)))
               (clo-app cons f105333105460 a105236105459 lst2))))))))
  (proc
   (lam105606 env105607 a105235105457)
   (let ((kont105332 (env-ref env105607 6)))
     (let ((lst (env-ref env105607 5)))
       (let ((reverse-helper (env-ref env105607 4)))
         (let ((lst2 (env-ref env105607 3)))
           (let ((car (env-ref env105607 2)))
             (let ((cons (env-ref env105607 1)))
               (let ((f105334105458
                      (make-closure
                       lam105604
                       cons
                       a105235105457
                       lst2
                       reverse-helper
                       kont105332)))
                 (clo-app car f105334105458 lst)))))))))
  (proc
   (lam105608 env105609 a105234105455)
   (let ((lst (env-ref env105609 7)))
     (let ((reverse-helper (env-ref env105609 6)))
       (let ((lst2 (env-ref env105609 5)))
         (let ((car (env-ref env105609 4)))
           (let ((cons (env-ref env105609 3)))
             (let ((kont105332 (env-ref env105609 2)))
               (let ((cdr (env-ref env105609 1)))
                 (if a105234105455
                   (clo-app kont105332 lst2)
                   (let ((f105335105456
                          (make-closure
                           lam105606
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont105332)))
                     (clo-app cdr f105335105456 lst)))))))))))
  (proc
   (reverse-helper _105610 kont105332 lst lst2)
   (let ((f105336105454
          (make-closure
           lam105608
           cdr
           kont105332
           cons
           car
           lst2
           reverse-helper
           lst)))
     (clo-app null? f105336105454 lst)))
  (proc
   (lam105611 env105612 a105238105463)
   (let ((lst (env-ref env105612 3)))
     (let ((kont105337 (env-ref env105612 2)))
       (let ((reverse-helper (env-ref env105612 1)))
         (clo-app reverse-helper kont105337 lst a105238105463)))))
  (proc
   (reverse _105613 kont105337 lst)
   (let ((f105338105462
          (make-closure lam105611 reverse-helper kont105337 lst)))
     (clo-app list f105338105462)))
  (proc
   (lam105614 env105615 x105241105468)
   (let ((kont105339 (env-ref env105615 1)))
     (clo-app kont105339 x105241105468)))
  (proc
   (lam105616 env105617 a105246105477)
   (let ((kont105339 (env-ref env105617 4)))
     (let ((a105242105470 (env-ref env105617 3)))
       (let ((take-helper (env-ref env105617 2)))
         (let ((a105244105473 (env-ref env105617 1)))
           (clo-app
            take-helper
            kont105339
            a105242105470
            a105244105473
            a105246105477))))))
  (proc
   (lam105618 env105619 a105245105475)
   (let ((kont105339 (env-ref env105619 6)))
     (let ((a105242105470 (env-ref env105619 5)))
       (let ((a105244105473 (env-ref env105619 4)))
         (let ((cons (env-ref env105619 3)))
           (let ((take-helper (env-ref env105619 2)))
             (let ((lst2 (env-ref env105619 1)))
               (let ((f105341105476
                      (make-closure
                       lam105616
                       a105244105473
                       take-helper
                       a105242105470
                       kont105339)))
                 (clo-app cons f105341105476 a105245105475 lst2)))))))))
  (proc
   (lam105620 env105621 a105244105473)
   (let ((lst (env-ref env105621 7)))
     (let ((kont105339 (env-ref env105621 6)))
       (let ((a105242105470 (env-ref env105621 5)))
         (let ((car (env-ref env105621 4)))
           (let ((cons (env-ref env105621 3)))
             (let ((take-helper (env-ref env105621 2)))
               (let ((lst2 (env-ref env105621 1)))
                 (let ((f105342105474
                        (make-closure
                         lam105618
                         lst2
                         take-helper
                         cons
                         a105244105473
                         a105242105470
                         kont105339)))
                   (clo-app car f105342105474 lst))))))))))
  (proc
   (lam105623 env105624 a105242105470)
   (let ((lst (env-ref env105624 8)))
     (let ((kont105339 (env-ref env105624 7)))
       (let ((cons (env-ref env105624 6)))
         (let ((- (env-ref env105624 5)))
           (let ((take-helper (env-ref env105624 4)))
             (let ((lst2 (env-ref env105624 3)))
               (let ((n (env-ref env105624 2)))
                 (let ((car (env-ref env105624 1)))
                   (let ((a105243105471 '1))
                     (let ((f105343105472
                            (make-closure
                             lam105620
                             lst2
                             take-helper
                             cons
                             car
                             a105242105470
                             kont105339
                             lst)))
                       (clo-app - f105343105472 n a105243105471))))))))))))
  (proc
   (lam105625 env105626 a105240105466)
   (let ((cdr (env-ref env105626 10)))
     (let ((lst (env-ref env105626 9)))
       (let ((cons (env-ref env105626 8)))
         (let ((- (env-ref env105626 7)))
           (let ((kont105339 (env-ref env105626 6)))
             (let ((reverse (env-ref env105626 5)))
               (let ((take-helper (env-ref env105626 4)))
                 (let ((lst2 (env-ref env105626 3)))
                   (let ((n (env-ref env105626 2)))
                     (let ((car (env-ref env105626 1)))
                       (if a105240105466
                         (let ((f105340105467
                                (make-closure lam105614 kont105339)))
                           (clo-app reverse f105340105467 lst2))
                         (let ((f105344105469
                                (make-closure
                                 lam105623
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont105339
                                 lst)))
                           (clo-app cdr f105344105469 lst))))))))))))))
  (proc
   (take-helper _105628 kont105339 lst n lst2)
   (let ((a105239105464 '0))
     (let ((f105345105465
            (make-closure
             lam105625
             car
             n
             lst2
             take-helper
             reverse
             kont105339
             -
             cons
             lst
             cdr)))
       (clo-app = f105345105465 n a105239105464))))
  (proc
   (lam105629 env105630 a105247105479)
   (let ((lst (env-ref env105630 4)))
     (let ((take-helper (env-ref env105630 3)))
       (let ((n (env-ref env105630 2)))
         (let ((kont105346 (env-ref env105630 1)))
           (clo-app take-helper kont105346 lst n a105247105479))))))
  (proc
   (take _105631 kont105346 lst n)
   (let ((f105347105478 (make-closure lam105629 kont105346 n take-helper lst)))
     (clo-app list f105347105478)))
  (proc
   (lam105633 env105634 a105252105487)
   (let ((kont105348 (env-ref env105634 3)))
     (let ((a105250105483 (env-ref env105634 2)))
       (let ((+ (env-ref env105634 1)))
         (clo-app + kont105348 a105250105483 a105252105487)))))
  (proc
   (lam105635 env105636 a105251105485)
   (let ((kont105348 (env-ref env105636 4)))
     (let ((length (env-ref env105636 3)))
       (let ((a105250105483 (env-ref env105636 2)))
         (let ((+ (env-ref env105636 1)))
           (let ((f105349105486
                  (make-closure lam105633 + a105250105483 kont105348)))
             (clo-app length f105349105486 a105251105485)))))))
  (proc
   (lam105638 env105639 a105248105481)
   (let ((lst (env-ref env105639 5)))
     (let ((length (env-ref env105639 4)))
       (let ((+ (env-ref env105639 3)))
         (let ((kont105348 (env-ref env105639 2)))
           (let ((cdr (env-ref env105639 1)))
             (if a105248105481
               (let ((x105249105482 '0)) (clo-app kont105348 x105249105482))
               (let ((a105250105483 '1))
                 (let ((f105350105484
                        (make-closure
                         lam105635
                         +
                         a105250105483
                         length
                         kont105348)))
                   (clo-app cdr f105350105484 lst))))))))))
  (proc
   (length _105640 kont105348 lst)
   (let ((f105351105480 (make-closure lam105638 cdr kont105348 + length lst)))
     (clo-app null? f105351105480 lst)))
  (proc
   (lam105641 env105642 x105254105491)
   (let ((kont105352 (env-ref env105642 1)))
     (clo-app kont105352 x105254105491)))
  (proc
   (lam105643 env105644 a105258105499)
   (let ((a105256105495 (env-ref env105644 3)))
     (let ((kont105352 (env-ref env105644 2)))
       (let ((cons (env-ref env105644 1)))
         (clo-app cons kont105352 a105256105495 a105258105499)))))
  (proc
   (lam105645 env105646 a105257105497)
   (let ((a105256105495 (env-ref env105646 5)))
     (let ((kont105352 (env-ref env105646 4)))
       (let ((map (env-ref env105646 3)))
         (let ((proc (env-ref env105646 2)))
           (let ((cons (env-ref env105646 1)))
             (let ((f105354105498
                    (make-closure lam105643 cons kont105352 a105256105495)))
               (clo-app map f105354105498 proc a105257105497))))))))
  (proc
   (lam105647 env105648 a105256105495)
   (let ((cdr (env-ref env105648 6)))
     (let ((map (env-ref env105648 5)))
       (let ((proc (env-ref env105648 4)))
         (let ((cons (env-ref env105648 3)))
           (let ((lst (env-ref env105648 2)))
             (let ((kont105352 (env-ref env105648 1)))
               (let ((f105355105496
                      (make-closure
                       lam105645
                       cons
                       proc
                       map
                       kont105352
                       a105256105495)))
                 (clo-app cdr f105355105496 lst)))))))))
  (proc
   (lam105649 env105650 a105255105493)
   (let ((cdr (env-ref env105650 6)))
     (let ((map (env-ref env105650 5)))
       (let ((proc (env-ref env105650 4)))
         (let ((cons (env-ref env105650 3)))
           (let ((lst (env-ref env105650 2)))
             (let ((kont105352 (env-ref env105650 1)))
               (let ((f105356105494
                      (make-closure
                       lam105647
                       kont105352
                       lst
                       cons
                       proc
                       map
                       cdr)))
                 (clo-app proc f105356105494 a105255105493)))))))))
  (proc
   (lam105651 env105652 a105253105489)
   (let ((map (env-ref env105652 8)))
     (let ((proc (env-ref env105652 7)))
       (let ((car (env-ref env105652 6)))
         (let ((cons (env-ref env105652 5)))
           (let ((list (env-ref env105652 4)))
             (let ((cdr (env-ref env105652 3)))
               (let ((lst (env-ref env105652 2)))
                 (let ((kont105352 (env-ref env105652 1)))
                   (if a105253105489
                     (let ((f105353105490 (make-closure lam105641 kont105352)))
                       (clo-app list f105353105490))
                     (let ((f105357105492
                            (make-closure
                             lam105649
                             kont105352
                             lst
                             cons
                             proc
                             map
                             cdr)))
                       (clo-app car f105357105492 lst))))))))))))
  (proc
   (map _105653 kont105352 proc lst)
   (let ((f105358105488
          (make-closure lam105651 kont105352 lst cdr list cons car proc map)))
     (clo-app null? f105358105488 lst)))
  (proc
   (lam105654 env105655 x105260105503)
   (let ((kont105359 (env-ref env105655 1)))
     (clo-app kont105359 x105260105503)))
  (proc
   (lam105656 env105657 a105265105513)
   (let ((a105263105509 (env-ref env105657 3)))
     (let ((kont105359 (env-ref env105657 2)))
       (let ((cons (env-ref env105657 1)))
         (clo-app cons kont105359 a105263105509 a105265105513)))))
  (proc
   (lam105658 env105659 a105264105511)
   (let ((a105263105509 (env-ref env105659 5)))
     (let ((op (env-ref env105659 4)))
       (let ((kont105359 (env-ref env105659 3)))
         (let ((filter (env-ref env105659 2)))
           (let ((cons (env-ref env105659 1)))
             (let ((f105361105512
                    (make-closure lam105656 cons kont105359 a105263105509)))
               (clo-app filter f105361105512 op a105264105511))))))))
  (proc
   (lam105660 env105661 a105263105509)
   (let ((cdr (env-ref env105661 6)))
     (let ((lst (env-ref env105661 5)))
       (let ((op (env-ref env105661 4)))
         (let ((kont105359 (env-ref env105661 3)))
           (let ((filter (env-ref env105661 2)))
             (let ((cons (env-ref env105661 1)))
               (let ((f105362105510
                      (make-closure
                       lam105658
                       cons
                       filter
                       kont105359
                       op
                       a105263105509)))
                 (clo-app cdr f105362105510 lst)))))))))
  (proc
   (lam105662 env105663 a105266105515)
   (let ((op (env-ref env105663 3)))
     (let ((kont105359 (env-ref env105663 2)))
       (let ((filter (env-ref env105663 1)))
         (clo-app filter kont105359 op a105266105515)))))
  (proc
   (lam105664 env105665 a105262105507)
   (let ((cdr (env-ref env105665 7)))
     (let ((lst (env-ref env105665 6)))
       (let ((op (env-ref env105665 5)))
         (let ((kont105359 (env-ref env105665 4)))
           (let ((cons (env-ref env105665 3)))
             (let ((filter (env-ref env105665 2)))
               (let ((car (env-ref env105665 1)))
                 (if a105262105507
                   (let ((f105363105508
                          (make-closure
                           lam105660
                           cons
                           filter
                           kont105359
                           op
                           lst
                           cdr)))
                     (clo-app car f105363105508 lst))
                   (let ((f105364105514
                          (make-closure lam105662 filter kont105359 op)))
                     (clo-app cdr f105364105514 lst)))))))))))
  (proc
   (lam105666 env105667 a105261105505)
   (let ((cdr (env-ref env105667 7)))
     (let ((lst (env-ref env105667 6)))
       (let ((op (env-ref env105667 5)))
         (let ((kont105359 (env-ref env105667 4)))
           (let ((cons (env-ref env105667 3)))
             (let ((filter (env-ref env105667 2)))
               (let ((car (env-ref env105667 1)))
                 (let ((f105365105506
                        (make-closure
                         lam105664
                         car
                         filter
                         cons
                         kont105359
                         op
                         lst
                         cdr)))
                   (clo-app op f105365105506 a105261105505))))))))))
  (proc
   (lam105668 env105669 a105259105501)
   (let ((lst (env-ref env105669 8)))
     (let ((op (env-ref env105669 7)))
       (let ((kont105359 (env-ref env105669 6)))
         (let ((cons (env-ref env105669 5)))
           (let ((list (env-ref env105669 4)))
             (let ((cdr (env-ref env105669 3)))
               (let ((filter (env-ref env105669 2)))
                 (let ((car (env-ref env105669 1)))
                   (if a105259105501
                     (let ((f105360105502 (make-closure lam105654 kont105359)))
                       (clo-app list f105360105502))
                     (let ((f105366105504
                            (make-closure
                             lam105666
                             car
                             filter
                             cons
                             kont105359
                             op
                             lst
                             cdr)))
                       (clo-app car f105366105504 lst))))))))))))
  (proc
   (filter _105670 kont105359 op lst)
   (let ((f105367105500
          (make-closure lam105668 car filter cdr list cons kont105359 op lst)))
     (clo-app null? f105367105500 lst)))
  (proc
   (lam105671 env105672 a105271105523)
   (let ((a105269105520 (env-ref env105672 3)))
     (let ((kont105368 (env-ref env105672 2)))
       (let ((drop (env-ref env105672 1)))
         (clo-app drop kont105368 a105269105520 a105271105523)))))
  (proc
   (lam105674 env105675 a105269105520)
   (let ((n (env-ref env105675 4)))
     (let ((- (env-ref env105675 3)))
       (let ((kont105368 (env-ref env105675 2)))
         (let ((drop (env-ref env105675 1)))
           (let ((a105270105521 '1))
             (let ((f105369105522
                    (make-closure lam105671 drop kont105368 a105269105520)))
               (clo-app - f105369105522 n a105270105521))))))))
  (proc
   (lam105676 env105677 a105268105518)
   (let ((cdr (env-ref env105677 6)))
     (let ((n (env-ref env105677 5)))
       (let ((- (env-ref env105677 4)))
         (let ((lst (env-ref env105677 3)))
           (let ((kont105368 (env-ref env105677 2)))
             (let ((drop (env-ref env105677 1)))
               (if a105268105518
                 (clo-app kont105368 lst)
                 (let ((f105370105519
                        (make-closure lam105674 drop kont105368 - n)))
                   (clo-app cdr f105370105519 lst))))))))))
  (proc
   (drop _105679 kont105368 lst n)
   (let ((a105267105516 '0))
     (let ((f105371105517
            (make-closure lam105676 drop kont105368 lst - n cdr)))
       (clo-app = f105371105517 n a105267105516))))
  (proc
   (lam105680 env105681 a105275105531)
   (let ((a105273105527 (env-ref env105681 3)))
     (let ((kont105372 (env-ref env105681 2)))
       (let ((proc (env-ref env105681 1)))
         (clo-app proc kont105372 a105273105527 a105275105531)))))
  (proc
   (lam105682 env105683 a105274105529)
   (let ((a105273105527 (env-ref env105683 5)))
     (let ((foldr (env-ref env105683 4)))
       (let ((kont105372 (env-ref env105683 3)))
         (let ((proc (env-ref env105683 2)))
           (let ((acc (env-ref env105683 1)))
             (let ((f105373105530
                    (make-closure lam105680 proc kont105372 a105273105527)))
               (clo-app foldr f105373105530 proc acc a105274105529))))))))
  (proc
   (lam105684 env105685 a105273105527)
   (let ((cdr (env-ref env105685 6)))
     (let ((kont105372 (env-ref env105685 5)))
       (let ((foldr (env-ref env105685 4)))
         (let ((lst (env-ref env105685 3)))
           (let ((proc (env-ref env105685 2)))
             (let ((acc (env-ref env105685 1)))
               (let ((f105374105528
                      (make-closure
                       lam105682
                       acc
                       proc
                       kont105372
                       foldr
                       a105273105527)))
                 (clo-app cdr f105374105528 lst)))))))))
  (proc
   (lam105686 env105687 a105272105525)
   (let ((cdr (env-ref env105687 7)))
     (let ((kont105372 (env-ref env105687 6)))
       (let ((car (env-ref env105687 5)))
         (let ((foldr (env-ref env105687 4)))
           (let ((lst (env-ref env105687 3)))
             (let ((proc (env-ref env105687 2)))
               (let ((acc (env-ref env105687 1)))
                 (if a105272105525
                   (clo-app kont105372 acc)
                   (let ((f105375105526
                          (make-closure
                           lam105684
                           acc
                           proc
                           lst
                           foldr
                           kont105372
                           cdr)))
                     (clo-app car f105375105526 lst)))))))))))
  (proc
   (foldr _105688 kont105372 proc acc lst)
   (let ((f105376105524
          (make-closure lam105686 acc proc lst foldr car kont105372 cdr)))
     (clo-app null? f105376105524 lst)))
  (proc
   (lam105689 env105690 a105279105539)
   (let ((a105277105535 (env-ref env105690 3)))
     (let ((kont105377 (env-ref env105690 2)))
       (let ((cons (env-ref env105690 1)))
         (clo-app cons kont105377 a105277105535 a105279105539)))))
  (proc
   (lam105691 env105692 a105278105537)
   (let ((append (env-ref env105692 5)))
     (let ((a105277105535 (env-ref env105692 4)))
       (let ((lst2 (env-ref env105692 3)))
         (let ((kont105377 (env-ref env105692 2)))
           (let ((cons (env-ref env105692 1)))
             (let ((f105378105538
                    (make-closure lam105689 cons kont105377 a105277105535)))
               (clo-app append f105378105538 a105278105537 lst2))))))))
  (proc
   (lam105693 env105694 a105277105535)
   (let ((cdr (env-ref env105694 6)))
     (let ((append (env-ref env105694 5)))
       (let ((lst2 (env-ref env105694 4)))
         (let ((cons (env-ref env105694 3)))
           (let ((kont105377 (env-ref env105694 2)))
             (let ((lst1 (env-ref env105694 1)))
               (let ((f105379105536
                      (make-closure
                       lam105691
                       cons
                       kont105377
                       lst2
                       a105277105535
                       append)))
                 (clo-app cdr f105379105536 lst1)))))))))
  (proc
   (lam105695 env105696 a105276105533)
   (let ((cdr (env-ref env105696 7)))
     (let ((append (env-ref env105696 6)))
       (let ((lst2 (env-ref env105696 5)))
         (let ((cons (env-ref env105696 4)))
           (let ((kont105377 (env-ref env105696 3)))
             (let ((lst1 (env-ref env105696 2)))
               (let ((car (env-ref env105696 1)))
                 (if a105276105533
                   (clo-app kont105377 lst2)
                   (let ((f105380105534
                          (make-closure
                           lam105693
                           lst1
                           kont105377
                           cons
                           lst2
                           append
                           cdr)))
                     (clo-app car f105380105534 lst1)))))))))))
  (proc
   (append _105697 kont105377 lst1 lst2)
   (let ((f105381105532
          (make-closure lam105695 car lst1 kont105377 cons lst2 append cdr)))
     (clo-app null? f105381105532 lst1)))
  (proc
   (hash _105698 . lst)
   (let ((kont105382105540 (prim car lst)))
     (let ((lst105541 (prim cdr lst)))
       (let ((x105280105542 (apply-prim hash lst105541)))
         (clo-app kont105382105540 x105280105542)))))
  (proc
   (hash-ref _105699 kont105384 h k)
   (let ((x105281105543 (prim hash-ref h k)))
     (clo-app kont105384 x105281105543)))
  (proc
   (hash-set _105700 kont105385 h k v)
   (let ((x105282105544 (prim hash-set h k v)))
     (clo-app kont105385 x105282105544)))
  (proc
   (hash-has-key? _105701 kont105386 h k)
   (let ((x105283105545 (prim hash-has-key? h k)))
     (clo-app kont105386 x105283105545)))
  (proc
   (hash-count _105702 kont105387 h)
   (let ((x105284105546 (prim hash-count h)))
     (clo-app kont105387 x105284105546)))
  (proc
   (lam105703 env105704 x105285105548)
   (let ((kont105388 (env-ref env105704 1)))
     (clo-app kont105388 x105285105548)))
  (proc
   (call _105705 kont105388 lst)
   (let ((f105389105547 (make-closure lam105703 kont105388)))
     (clo-app reverse f105389105547 lst)))
  (proc
   (lam105706 env105707 a105290105554)
   (let ((kont105390 (env-ref env105707 2)))
     (let ((call (env-ref env105707 1)))
       (clo-app call kont105390 a105290105554))))
  (proc
   (brouhaha_main _105712 kont105390)
   (let ((a105286105549 '1))
     (let ((a105287105550 '2))
       (let ((a105288105551 '3))
         (let ((a105289105552 '4))
           (let ((f105391105553 (make-closure lam105706 call kont105390)))
             (clo-app
              list
              f105391105553
              a105286105549
              a105287105550
              a105288105551
              a105289105552))))))))
