'((define (+ . lst)
    (let ((kont6489765006 (prim car lst)))
      (let ((lst65007 (prim cdr lst)))
        (let ((x6479465008 (apply-prim + lst65007)))
          (kont6489765006 x6479465008)))))
  (define (- . lst)
    (let ((kont6489965009 (prim car lst)))
      (let ((lst65010 (prim cdr lst)))
        (let ((x6479565011 (apply-prim - lst65010)))
          (kont6489965009 x6479565011)))))
  (define (* . lst)
    (let ((kont6490165012 (prim car lst)))
      (let ((lst65013 (prim cdr lst)))
        (let ((x6479665014 (apply-prim * lst65013)))
          (kont6490165012 x6479665014)))))
  (define (modulo kont64903 a b)
    (let ((x6479765015 (prim modulo a b))) (kont64903 x6479765015)))
  (define (/ . lst)
    (let ((kont6490465016 (prim car lst)))
      (let ((lst65017 (prim cdr lst)))
        (let ((x6479865018 (apply-prim / lst65017)))
          (kont6490465016 x6479865018)))))
  (define (= . lst)
    (let ((kont6490665019 (prim car lst)))
      (let ((lst65020 (prim cdr lst)))
        (let ((x6479965021 (apply-prim = lst65020)))
          (kont6490665019 x6479965021)))))
  (define (> . lst)
    (let ((kont6490865022 (prim car lst)))
      (let ((lst65023 (prim cdr lst)))
        (let ((x6480065024 (apply-prim > lst65023)))
          (kont6490865022 x6480065024)))))
  (define (< . lst)
    (let ((kont6491065025 (prim car lst)))
      (let ((lst65026 (prim cdr lst)))
        (let ((x6480165027 (apply-prim < lst65026)))
          (kont6491065025 x6480165027)))))
  (define (<= . lst)
    (let ((kont6491265028 (prim car lst)))
      (let ((lst65029 (prim cdr lst)))
        (let ((x6480265030 (apply-prim <= lst65029)))
          (kont6491265028 x6480265030)))))
  (define (>= . lst)
    (let ((kont6491465031 (prim car lst)))
      (let ((lst65032 (prim cdr lst)))
        (let ((x6480365033 (apply-prim >= lst65032)))
          (kont6491465031 x6480365033)))))
  (define (null? kont64916 x)
    (let ((x6480465034 (prim null? x))) (kont64916 x6480465034)))
  (define (equal? kont64917 x y)
    (let ((x6480565035 (prim equal? x y))) (kont64917 x6480565035)))
  (define (eq? kont64918 x y)
    (let ((x6480665036 (prim eq? x y))) (kont64918 x6480665036)))
  (define (cons kont64919 a b)
    (let ((x6480765037 (prim cons a b))) (kont64919 x6480765037)))
  (define (car kont64920 lst)
    (let ((x6480865038 (prim car lst))) (kont64920 x6480865038)))
  (define (cdr kont64921 lst)
    (let ((x6480965039 (prim cdr lst))) (kont64921 x6480965039)))
  (define (even? kont64922 x)
    (let ((a6481065040 '0))
      (let ((a6481165041 '2))
        (let ((f6492365042
               (lambda (a6481265043)
                 (equal? kont64922 a6481065040 a6481265043))))
          (modulo f6492365042 x a6481165041)))))
  (define (odd? kont64924 x)
    (let ((a6481365044 '1))
      (let ((a6481465045 '2))
        (let ((f6492565046
               (lambda (a6481565047)
                 (equal? kont64924 a6481365044 a6481565047))))
          (modulo f6492565046 x a6481465045)))))
  (define (list . x)
    (let ((kont6492665048 (prim car x)))
      (let ((x65049 (prim cdr x))) (kont6492665048 x65049))))
  (define (member? kont64928 x lst)
    (let ((f6493265050
           (lambda (a6481665051)
             (if a6481665051
               (let ((x6481765052 '#f)) (kont64928 x6481765052))
               (let ((f6493165053
                      (lambda (a6481865054)
                        (let ((f6493065055
                               (lambda (a6481965056)
                                 (if a6481965056
                                   (let ((x6482065057 '#t))
                                     (kont64928 x6482065057))
                                   (let ((f6492965058
                                          (lambda (a6482165059)
                                            (member?
                                             kont64928
                                             x
                                             a6482165059))))
                                     (cdr f6492965058 lst))))))
                          (equal? f6493065055 a6481865054 x)))))
                 (car f6493165053 lst))))))
      (null? f6493265050 lst)))
  (define (foldl kont64933 fun acc lst)
    (let ((f6493765060
           (lambda (a6482265061)
             (if a6482265061
               (kont64933 acc)
               (let ((f6493665062
                      (lambda (a6482365063)
                        (let ((f6493565064
                               (lambda (a6482465065)
                                 (let ((f6493465066
                                        (lambda (a6482565067)
                                          (foldl
                                           kont64933
                                           fun
                                           a6482465065
                                           a6482565067))))
                                   (cdr f6493465066 lst)))))
                          (fun f6493565064 a6482365063 acc)))))
                 (car f6493665062 lst))))))
      (null? f6493765060 lst)))
  (define (reverse-helper kont64938 lst lst2)
    (let ((f6494265068
           (lambda (a6482665069)
             (if a6482665069
               (kont64938 lst2)
               (let ((f6494165070
                      (lambda (a6482765071)
                        (let ((f6494065072
                               (lambda (a6482865073)
                                 (let ((f6493965074
                                        (lambda (a6482965075)
                                          (reverse-helper
                                           kont64938
                                           a6482765071
                                           a6482965075))))
                                   (cons f6493965074 a6482865073 lst2)))))
                          (car f6494065072 lst)))))
                 (cdr f6494165070 lst))))))
      (null? f6494265068 lst)))
  (define (reverse kont64943 lst)
    (let ((f6494465076
           (lambda (a6483065077) (reverse-helper kont64943 lst a6483065077))))
      (list f6494465076)))
  (define (take-helper kont64945 lst n lst2)
    (let ((a6483165078 '0))
      (let ((f6495165079
             (lambda (a6483265080)
               (if a6483265080
                 (let ((f6494665081
                        (lambda (x6483365082) (kont64945 x6483365082))))
                   (reverse f6494665081 lst2))
                 (let ((f6495065083
                        (lambda (a6483465084)
                          (let ((a6483565085 '1))
                            (let ((f6494965086
                                   (lambda (a6483665087)
                                     (let ((f6494865088
                                            (lambda (a6483765089)
                                              (let ((f6494765090
                                                     (lambda (a6483865091)
                                                       (take-helper
                                                        kont64945
                                                        a6483465084
                                                        a6483665087
                                                        a6483865091))))
                                                (cons
                                                 f6494765090
                                                 a6483765089
                                                 lst2)))))
                                       (car f6494865088 lst)))))
                              (- f6494965086 n a6483565085))))))
                   (cdr f6495065083 lst))))))
        (= f6495165079 n a6483165078))))
  (define (take kont64952 lst n)
    (let ((f6495365092
           (lambda (a6483965093) (take-helper kont64952 lst n a6483965093))))
      (list f6495365092)))
  (define (length kont64954 lst)
    (let ((f6495765094
           (lambda (a6484065095)
             (if a6484065095
               (let ((x6484165096 '0)) (kont64954 x6484165096))
               (let ((a6484265097 '1))
                 (let ((f6495665098
                        (lambda (a6484365099)
                          (let ((f6495565100
                                 (lambda (a6484465101)
                                   (+ kont64954 a6484265097 a6484465101))))
                            (length f6495565100 a6484365099)))))
                   (cdr f6495665098 lst)))))))
      (null? f6495765094 lst)))
  (define (map kont64958 proc lst)
    (let ((f6496465102
           (lambda (a6484565103)
             (if a6484565103
               (let ((f6495965104
                      (lambda (x6484665105) (kont64958 x6484665105))))
                 (list f6495965104))
               (let ((f6496365106
                      (lambda (a6484765107)
                        (let ((f6496265108
                               (lambda (a6484865109)
                                 (let ((f6496165110
                                        (lambda (a6484965111)
                                          (let ((f6496065112
                                                 (lambda (a6485065113)
                                                   (cons
                                                    kont64958
                                                    a6484865109
                                                    a6485065113))))
                                            (map
                                             f6496065112
                                             proc
                                             a6484965111)))))
                                   (cdr f6496165110 lst)))))
                          (proc f6496265108 a6484765107)))))
                 (car f6496365106 lst))))))
      (null? f6496465102 lst)))
  (define (filter kont64965 op lst)
    (let ((f6497365114
           (lambda (a6485165115)
             (if a6485165115
               (let ((f6496665116
                      (lambda (x6485265117) (kont64965 x6485265117))))
                 (list f6496665116))
               (let ((f6497265118
                      (lambda (a6485365119)
                        (let ((f6497165120
                               (lambda (a6485465121)
                                 (if a6485465121
                                   (let ((f6496965122
                                          (lambda (a6485565123)
                                            (let ((f6496865124
                                                   (lambda (a6485665125)
                                                     (let ((f6496765126
                                                            (lambda (a6485765127)
                                                              (cons
                                                               kont64965
                                                               a6485565123
                                                               a6485765127))))
                                                       (filter
                                                        f6496765126
                                                        op
                                                        a6485665125)))))
                                              (cdr f6496865124 lst)))))
                                     (car f6496965122 lst))
                                   (let ((f6497065128
                                          (lambda (a6485865129)
                                            (filter
                                             kont64965
                                             op
                                             a6485865129))))
                                     (cdr f6497065128 lst))))))
                          (op f6497165120 a6485365119)))))
                 (car f6497265118 lst))))))
      (null? f6497365114 lst)))
  (define (drop kont64974 lst n)
    (let ((a6485965130 '0))
      (let ((f6497765131
             (lambda (a6486065132)
               (if a6486065132
                 (kont64974 lst)
                 (let ((f6497665133
                        (lambda (a6486165134)
                          (let ((a6486265135 '1))
                            (let ((f6497565136
                                   (lambda (a6486365137)
                                     (drop
                                      kont64974
                                      a6486165134
                                      a6486365137))))
                              (- f6497565136 n a6486265135))))))
                   (cdr f6497665133 lst))))))
        (= f6497765131 n a6485965130))))
  (define (foldr kont64978 proc acc lst)
    (let ((f6498265138
           (lambda (a6486465139)
             (if a6486465139
               (kont64978 acc)
               (let ((f6498165140
                      (lambda (a6486565141)
                        (let ((f6498065142
                               (lambda (a6486665143)
                                 (let ((f6497965144
                                        (lambda (a6486765145)
                                          (proc
                                           kont64978
                                           a6486565141
                                           a6486765145))))
                                   (foldr f6497965144 proc acc a6486665143)))))
                          (cdr f6498065142 lst)))))
                 (car f6498165140 lst))))))
      (null? f6498265138 lst)))
  (define (append kont64983 lst1 lst2)
    (let ((f6498765146
           (lambda (a6486865147)
             (if a6486865147
               (kont64983 lst2)
               (let ((f6498665148
                      (lambda (a6486965149)
                        (let ((f6498565150
                               (lambda (a6487065151)
                                 (let ((f6498465152
                                        (lambda (a6487165153)
                                          (cons
                                           kont64983
                                           a6486965149
                                           a6487165153))))
                                   (append f6498465152 a6487065151 lst2)))))
                          (cdr f6498565150 lst1)))))
                 (car f6498665148 lst1))))))
      (null? f6498765146 lst1)))
  (define (hash . lst)
    (let ((kont6498865154 (prim car lst)))
      (let ((lst65155 (prim cdr lst)))
        (let ((x6487265156 (apply-prim hash lst65155)))
          (kont6498865154 x6487265156)))))
  (define (hash-ref kont64990 h k)
    (let ((x6487365157 (prim hash-ref h k))) (kont64990 x6487365157)))
  (define (hash-set kont64991 h k v)
    (let ((x6487465158 (prim hash-set h k v))) (kont64991 x6487465158)))
  (define (hash-has-key? kont64992 h k)
    (let ((x6487565159 (prim hash-has-key? h k))) (kont64992 x6487565159)))
  (define (hash-count kont64993 h)
    (let ((x6487665160 (prim hash-count h))) (kont64993 x6487665160)))
  (define (interleave-direct kont64994 lst1 lst2)
    (let ((f6500265161
           (lambda (a6487765162)
             (if a6487765162
               (kont64994 lst2)
               (let ((f6500165163
                      (lambda (a6487865164)
                        (if a6487865164
                          (kont64994 lst1)
                          (let ((f6500065165
                                 (lambda (a6487965166)
                                   (let ((f6499965167
                                          (lambda (a6488065168)
                                            (let ((f6499865169
                                                   (lambda (a6488165170)
                                                     (let ((f6499765171
                                                            (lambda (a6488265172)
                                                              (let ((f6499665173
                                                                     (lambda (a6488365174)
                                                                       (let ((f6499565175
                                                                              (lambda (a6488465176)
                                                                                (cons
                                                                                 kont64994
                                                                                 a6487965166
                                                                                 a6488465176))))
                                                                         (cons
                                                                          f6499565175
                                                                          a6488065168
                                                                          a6488365174)))))
                                                                (interleave-direct
                                                                 f6499665173
                                                                 a6488165170
                                                                 a6488265172)))))
                                                       (cdr
                                                        f6499765171
                                                        lst2)))))
                                              (cdr f6499865169 lst1)))))
                                     (car f6499965167 lst2)))))
                            (car f6500065165 lst1))))))
                 (null? f6500165163 lst2))))))
      (null? f6500265161 lst1)))
  (define (brouhaha_main kont65003)
    (let ((a6488565177 '1))
      (let ((a6488665178 '2))
        (let ((a6488765179 '3))
          (let ((a6488865180 '4))
            (let ((a6488965181 '5))
              (let ((a6489065182 '6))
                (let ((f6500565183
                       (lambda (a6489165184)
                         (let ((a6489265185 '7))
                           (let ((a6489365186 '8))
                             (let ((a6489465187 '9))
                               (let ((a6489565188 '10))
                                 (let ((f6500465189
                                        (lambda (a6489665190)
                                          (interleave-direct
                                           kont65003
                                           a6489165184
                                           a6489665190))))
                                   (list
                                    f6500465189
                                    a6489265185
                                    a6489365186
                                    a6489465187
                                    a6489565188)))))))))
                  (list
                   f6500565183
                   a6488565177
                   a6488665178
                   a6488765179
                   a6488865180
                   a6488965181
                   a6489065182))))))))))
