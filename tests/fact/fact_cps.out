'((define (+ . lst)
    (let ((kont3290533007 (prim car lst)))
      (let ((lst33008 (prim cdr lst)))
        (let ((x3281533009 (apply-prim + lst33008)))
          (kont3290533007 x3281533009)))))
  (define (- . lst)
    (let ((kont3290733010 (prim car lst)))
      (let ((lst33011 (prim cdr lst)))
        (let ((x3281633012 (apply-prim - lst33011)))
          (kont3290733010 x3281633012)))))
  (define (* . lst)
    (let ((kont3290933013 (prim car lst)))
      (let ((lst33014 (prim cdr lst)))
        (let ((x3281733015 (apply-prim * lst33014)))
          (kont3290933013 x3281733015)))))
  (define (modulo kont32911 a b)
    (let ((x3281833016 (prim modulo a b))) (kont32911 x3281833016)))
  (define (/ . lst)
    (let ((kont3291233017 (prim car lst)))
      (let ((lst33018 (prim cdr lst)))
        (let ((x3281933019 (apply-prim / lst33018)))
          (kont3291233017 x3281933019)))))
  (define (= . lst)
    (let ((kont3291433020 (prim car lst)))
      (let ((lst33021 (prim cdr lst)))
        (let ((x3282033022 (apply-prim = lst33021)))
          (kont3291433020 x3282033022)))))
  (define (> . lst)
    (let ((kont3291633023 (prim car lst)))
      (let ((lst33024 (prim cdr lst)))
        (let ((x3282133025 (apply-prim > lst33024)))
          (kont3291633023 x3282133025)))))
  (define (< . lst)
    (let ((kont3291833026 (prim car lst)))
      (let ((lst33027 (prim cdr lst)))
        (let ((x3282233028 (apply-prim < lst33027)))
          (kont3291833026 x3282233028)))))
  (define (<= . lst)
    (let ((kont3292033029 (prim car lst)))
      (let ((lst33030 (prim cdr lst)))
        (let ((x3282333031 (apply-prim <= lst33030)))
          (kont3292033029 x3282333031)))))
  (define (>= . lst)
    (let ((kont3292233032 (prim car lst)))
      (let ((lst33033 (prim cdr lst)))
        (let ((x3282433034 (apply-prim >= lst33033)))
          (kont3292233032 x3282433034)))))
  (define (null? kont32924 x)
    (let ((x3282533035 (prim null? x))) (kont32924 x3282533035)))
  (define (equal? kont32925 x y)
    (let ((x3282633036 (prim equal? x y))) (kont32925 x3282633036)))
  (define (eq? kont32926 x y)
    (let ((x3282733037 (prim eq? x y))) (kont32926 x3282733037)))
  (define (cons kont32927 a b)
    (let ((x3282833038 (prim cons a b))) (kont32927 x3282833038)))
  (define (car kont32928 lst)
    (let ((x3282933039 (prim car lst))) (kont32928 x3282933039)))
  (define (cdr kont32929 lst)
    (let ((x3283033040 (prim cdr lst))) (kont32929 x3283033040)))
  (define (even? kont32930 x)
    (let ((a3283133041 '0))
      (let ((a3283233042 '2))
        (let ((f3293133043
               (lambda (a3283333044)
                 (equal? kont32930 a3283133041 a3283333044))))
          (modulo f3293133043 x a3283233042)))))
  (define (odd? kont32932 x)
    (let ((a3283433045 '1))
      (let ((a3283533046 '2))
        (let ((f3293333047
               (lambda (a3283633048)
                 (equal? kont32932 a3283433045 a3283633048))))
          (modulo f3293333047 x a3283533046)))))
  (define (list . x)
    (let ((kont3293433049 (prim car x)))
      (let ((x33050 (prim cdr x))) (kont3293433049 x33050))))
  (define (member? kont32936 x lst)
    (let ((f3294033051
           (lambda (a3283733052)
             (if a3283733052
               (let ((x3283833053 '#f)) (kont32936 x3283833053))
               (let ((f3293933054
                      (lambda (a3283933055)
                        (let ((f3293833056
                               (lambda (a3284033057)
                                 (if a3284033057
                                   (let ((x3284133058 '#t))
                                     (kont32936 x3284133058))
                                   (let ((f3293733059
                                          (lambda (a3284233060)
                                            (member?
                                             kont32936
                                             x
                                             a3284233060))))
                                     (cdr f3293733059 lst))))))
                          (equal? f3293833056 a3283933055 x)))))
                 (car f3293933054 lst))))))
      (null? f3294033051 lst)))
  (define (foldl kont32941 fun acc lst)
    (let ((f3294533061
           (lambda (a3284333062)
             (if a3284333062
               (kont32941 acc)
               (let ((f3294433063
                      (lambda (a3284433064)
                        (let ((f3294333065
                               (lambda (a3284533066)
                                 (let ((f3294233067
                                        (lambda (a3284633068)
                                          (foldl
                                           kont32941
                                           fun
                                           a3284533066
                                           a3284633068))))
                                   (cdr f3294233067 lst)))))
                          (fun f3294333065 a3284433064 acc)))))
                 (car f3294433063 lst))))))
      (null? f3294533061 lst)))
  (define (reverse-helper kont32946 lst lst2)
    (let ((f3295033069
           (lambda (a3284733070)
             (if a3284733070
               (kont32946 lst2)
               (let ((f3294933071
                      (lambda (a3284833072)
                        (let ((f3294833073
                               (lambda (a3284933074)
                                 (let ((f3294733075
                                        (lambda (a3285033076)
                                          (reverse-helper
                                           kont32946
                                           a3284833072
                                           a3285033076))))
                                   (cons f3294733075 a3284933074 lst2)))))
                          (car f3294833073 lst)))))
                 (cdr f3294933071 lst))))))
      (null? f3295033069 lst)))
  (define (reverse kont32951 lst)
    (let ((f3295233077
           (lambda (a3285133078) (reverse-helper kont32951 lst a3285133078))))
      (list f3295233077)))
  (define (take-helper kont32953 lst n lst2)
    (let ((a3285233079 '0))
      (let ((f3295933080
             (lambda (a3285333081)
               (if a3285333081
                 (let ((f3295433082
                        (lambda (x3285433083) (kont32953 x3285433083))))
                   (reverse f3295433082 lst2))
                 (let ((f3295833084
                        (lambda (a3285533085)
                          (let ((a3285633086 '1))
                            (let ((f3295733087
                                   (lambda (a3285733088)
                                     (let ((f3295633089
                                            (lambda (a3285833090)
                                              (let ((f3295533091
                                                     (lambda (a3285933092)
                                                       (take-helper
                                                        kont32953
                                                        a3285533085
                                                        a3285733088
                                                        a3285933092))))
                                                (cons
                                                 f3295533091
                                                 a3285833090
                                                 lst2)))))
                                       (car f3295633089 lst)))))
                              (- f3295733087 n a3285633086))))))
                   (cdr f3295833084 lst))))))
        (= f3295933080 n a3285233079))))
  (define (take kont32960 lst n)
    (let ((f3296133093
           (lambda (a3286033094) (take-helper kont32960 lst n a3286033094))))
      (list f3296133093)))
  (define (length kont32962 lst)
    (let ((f3296533095
           (lambda (a3286133096)
             (if a3286133096
               (let ((x3286233097 '0)) (kont32962 x3286233097))
               (let ((a3286333098 '1))
                 (let ((f3296433099
                        (lambda (a3286433100)
                          (let ((f3296333101
                                 (lambda (a3286533102)
                                   (+ kont32962 a3286333098 a3286533102))))
                            (length f3296333101 a3286433100)))))
                   (cdr f3296433099 lst)))))))
      (null? f3296533095 lst)))
  (define (map kont32966 proc lst)
    (let ((f3297233103
           (lambda (a3286633104)
             (if a3286633104
               (let ((f3296733105
                      (lambda (x3286733106) (kont32966 x3286733106))))
                 (list f3296733105))
               (let ((f3297133107
                      (lambda (a3286833108)
                        (let ((f3297033109
                               (lambda (a3286933110)
                                 (let ((f3296933111
                                        (lambda (a3287033112)
                                          (let ((f3296833113
                                                 (lambda (a3287133114)
                                                   (cons
                                                    kont32966
                                                    a3286933110
                                                    a3287133114))))
                                            (map
                                             f3296833113
                                             proc
                                             a3287033112)))))
                                   (cdr f3296933111 lst)))))
                          (proc f3297033109 a3286833108)))))
                 (car f3297133107 lst))))))
      (null? f3297233103 lst)))
  (define (filter kont32973 op lst)
    (let ((f3298133115
           (lambda (a3287233116)
             (if a3287233116
               (let ((f3297433117
                      (lambda (x3287333118) (kont32973 x3287333118))))
                 (list f3297433117))
               (let ((f3298033119
                      (lambda (a3287433120)
                        (let ((f3297933121
                               (lambda (a3287533122)
                                 (if a3287533122
                                   (let ((f3297733123
                                          (lambda (a3287633124)
                                            (let ((f3297633125
                                                   (lambda (a3287733126)
                                                     (let ((f3297533127
                                                            (lambda (a3287833128)
                                                              (cons
                                                               kont32973
                                                               a3287633124
                                                               a3287833128))))
                                                       (filter
                                                        f3297533127
                                                        op
                                                        a3287733126)))))
                                              (cdr f3297633125 lst)))))
                                     (car f3297733123 lst))
                                   (let ((f3297833129
                                          (lambda (a3287933130)
                                            (filter
                                             kont32973
                                             op
                                             a3287933130))))
                                     (cdr f3297833129 lst))))))
                          (op f3297933121 a3287433120)))))
                 (car f3298033119 lst))))))
      (null? f3298133115 lst)))
  (define (drop kont32982 lst n)
    (let ((a3288033131 '0))
      (let ((f3298533132
             (lambda (a3288133133)
               (if a3288133133
                 (kont32982 lst)
                 (let ((f3298433134
                        (lambda (a3288233135)
                          (let ((a3288333136 '1))
                            (let ((f3298333137
                                   (lambda (a3288433138)
                                     (drop
                                      kont32982
                                      a3288233135
                                      a3288433138))))
                              (- f3298333137 n a3288333136))))))
                   (cdr f3298433134 lst))))))
        (= f3298533132 n a3288033131))))
  (define (foldr kont32986 proc acc lst)
    (let ((f3299033139
           (lambda (a3288533140)
             (if a3288533140
               (kont32986 acc)
               (let ((f3298933141
                      (lambda (a3288633142)
                        (let ((f3298833143
                               (lambda (a3288733144)
                                 (let ((f3298733145
                                        (lambda (a3288833146)
                                          (proc
                                           kont32986
                                           a3288633142
                                           a3288833146))))
                                   (foldr f3298733145 proc acc a3288733144)))))
                          (cdr f3298833143 lst)))))
                 (car f3298933141 lst))))))
      (null? f3299033139 lst)))
  (define (append kont32991 lst1 lst2)
    (let ((f3299533147
           (lambda (a3288933148)
             (if a3288933148
               (kont32991 lst2)
               (let ((f3299433149
                      (lambda (a3289033150)
                        (let ((f3299333151
                               (lambda (a3289133152)
                                 (let ((f3299233153
                                        (lambda (a3289233154)
                                          (cons
                                           kont32991
                                           a3289033150
                                           a3289233154))))
                                   (append f3299233153 a3289133152 lst2)))))
                          (cdr f3299333151 lst1)))))
                 (car f3299433149 lst1))))))
      (null? f3299533147 lst1)))
  (define (hash . lst)
    (let ((kont3299633155 (prim car lst)))
      (let ((lst33156 (prim cdr lst)))
        (let ((x3289333157 (apply-prim hash lst33156)))
          (kont3299633155 x3289333157)))))
  (define (hash-ref kont32998 h k)
    (let ((x3289433158 (prim hash-ref h k))) (kont32998 x3289433158)))
  (define (hash-set kont32999 h k v)
    (let ((x3289533159 (prim hash-set h k v))) (kont32999 x3289533159)))
  (define (hash-has-key? kont33000 h k)
    (let ((x3289633160 (prim hash-has-key? h k))) (kont33000 x3289633160)))
  (define (hash-count kont33001 h)
    (let ((x3289733161 (prim hash-count h))) (kont33001 x3289733161)))
  (define (fact kont33002 n)
    (let ((a3289833162 '0))
      (let ((f3300533163
             (lambda (a3289933164)
               (if a3289933164
                 (let ((x3290033165 '1)) (kont33002 x3290033165))
                 (let ((a3290133166 '1))
                   (let ((f3300433167
                          (lambda (a3290233168)
                            (let ((f3300333169
                                   (lambda (a3290333170)
                                     (* kont33002 n a3290333170))))
                              (fact f3300333169 a3290233168)))))
                     (- f3300433167 n a3290133166)))))))
        (= f3300533163 a3289833162 n))))
  (define (brouhaha_main kont33006)
    (let ((a3290433171 '5)) (fact kont33006 a3290433171))))
