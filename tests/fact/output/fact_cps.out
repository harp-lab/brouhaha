'((define (+ . lst)
    (let ((kont3167031772 (prim car lst)))
      (let ((lst31773 (prim cdr lst)))
        (let ((x3158031774 (apply-prim + lst31773)))
          (kont3167031772 x3158031774)))))
  (define (- . lst)
    (let ((kont3167231775 (prim car lst)))
      (let ((lst31776 (prim cdr lst)))
        (let ((x3158131777 (apply-prim - lst31776)))
          (kont3167231775 x3158131777)))))
  (define (* . lst)
    (let ((kont3167431778 (prim car lst)))
      (let ((lst31779 (prim cdr lst)))
        (let ((x3158231780 (apply-prim * lst31779)))
          (kont3167431778 x3158231780)))))
  (define (modulo kont31676 a b)
    (let ((x3158331781 (prim modulo a b))) (kont31676 x3158331781)))
  (define (/ . lst)
    (let ((kont3167731782 (prim car lst)))
      (let ((lst31783 (prim cdr lst)))
        (let ((x3158431784 (apply-prim / lst31783)))
          (kont3167731782 x3158431784)))))
  (define (= . lst)
    (let ((kont3167931785 (prim car lst)))
      (let ((lst31786 (prim cdr lst)))
        (let ((x3158531787 (apply-prim = lst31786)))
          (kont3167931785 x3158531787)))))
  (define (> . lst)
    (let ((kont3168131788 (prim car lst)))
      (let ((lst31789 (prim cdr lst)))
        (let ((x3158631790 (apply-prim > lst31789)))
          (kont3168131788 x3158631790)))))
  (define (< . lst)
    (let ((kont3168331791 (prim car lst)))
      (let ((lst31792 (prim cdr lst)))
        (let ((x3158731793 (apply-prim < lst31792)))
          (kont3168331791 x3158731793)))))
  (define (<= . lst)
    (let ((kont3168531794 (prim car lst)))
      (let ((lst31795 (prim cdr lst)))
        (let ((x3158831796 (apply-prim <= lst31795)))
          (kont3168531794 x3158831796)))))
  (define (>= . lst)
    (let ((kont3168731797 (prim car lst)))
      (let ((lst31798 (prim cdr lst)))
        (let ((x3158931799 (apply-prim >= lst31798)))
          (kont3168731797 x3158931799)))))
  (define (null? kont31689 x)
    (let ((x3159031800 (prim null? x))) (kont31689 x3159031800)))
  (define (equal? kont31690 x y)
    (let ((x3159131801 (prim equal? x y))) (kont31690 x3159131801)))
  (define (eq? kont31691 x y)
    (let ((x3159231802 (prim eq? x y))) (kont31691 x3159231802)))
  (define (cons kont31692 a b)
    (let ((x3159331803 (prim cons a b))) (kont31692 x3159331803)))
  (define (car kont31693 lst)
    (let ((x3159431804 (prim car lst))) (kont31693 x3159431804)))
  (define (cdr kont31694 lst)
    (let ((x3159531805 (prim cdr lst))) (kont31694 x3159531805)))
  (define (even? kont31695 x)
    (let ((a3159631806 '0))
      (let ((a3159731807 '2))
        (let ((f3169631808
               (lambda (a3159831809)
                 (equal? kont31695 a3159631806 a3159831809))))
          (modulo f3169631808 x a3159731807)))))
  (define (odd? kont31697 x)
    (let ((a3159931810 '1))
      (let ((a3160031811 '2))
        (let ((f3169831812
               (lambda (a3160131813)
                 (equal? kont31697 a3159931810 a3160131813))))
          (modulo f3169831812 x a3160031811)))))
  (define (list . x)
    (let ((kont3169931814 (prim car x)))
      (let ((x31815 (prim cdr x))) (kont3169931814 x31815))))
  (define (member? kont31701 x lst)
    (let ((f3170531816
           (lambda (a3160231817)
             (if a3160231817
               (let ((x3160331818 '#f)) (kont31701 x3160331818))
               (let ((f3170431819
                      (lambda (a3160431820)
                        (let ((f3170331821
                               (lambda (a3160531822)
                                 (if a3160531822
                                   (let ((x3160631823 '#t))
                                     (kont31701 x3160631823))
                                   (let ((f3170231824
                                          (lambda (a3160731825)
                                            (member?
                                             kont31701
                                             x
                                             a3160731825))))
                                     (cdr f3170231824 lst))))))
                          (equal? f3170331821 a3160431820 x)))))
                 (car f3170431819 lst))))))
      (null? f3170531816 lst)))
  (define (foldl kont31706 fun acc lst)
    (let ((f3171031826
           (lambda (a3160831827)
             (if a3160831827
               (kont31706 acc)
               (let ((f3170931828
                      (lambda (a3160931829)
                        (let ((f3170831830
                               (lambda (a3161031831)
                                 (let ((f3170731832
                                        (lambda (a3161131833)
                                          (foldl
                                           kont31706
                                           fun
                                           a3161031831
                                           a3161131833))))
                                   (cdr f3170731832 lst)))))
                          (fun f3170831830 a3160931829 acc)))))
                 (car f3170931828 lst))))))
      (null? f3171031826 lst)))
  (define (reverse-helper kont31711 lst lst2)
    (let ((f3171531834
           (lambda (a3161231835)
             (if a3161231835
               (kont31711 lst2)
               (let ((f3171431836
                      (lambda (a3161331837)
                        (let ((f3171331838
                               (lambda (a3161431839)
                                 (let ((f3171231840
                                        (lambda (a3161531841)
                                          (reverse-helper
                                           kont31711
                                           a3161331837
                                           a3161531841))))
                                   (cons f3171231840 a3161431839 lst2)))))
                          (car f3171331838 lst)))))
                 (cdr f3171431836 lst))))))
      (null? f3171531834 lst)))
  (define (reverse kont31716 lst)
    (let ((f3171731842
           (lambda (a3161631843) (reverse-helper kont31716 lst a3161631843))))
      (list f3171731842)))
  (define (take-helper kont31718 lst n lst2)
    (let ((a3161731844 '0))
      (let ((f3172431845
             (lambda (a3161831846)
               (if a3161831846
                 (let ((f3171931847
                        (lambda (x3161931848) (kont31718 x3161931848))))
                   (reverse f3171931847 lst2))
                 (let ((f3172331849
                        (lambda (a3162031850)
                          (let ((a3162131851 '1))
                            (let ((f3172231852
                                   (lambda (a3162231853)
                                     (let ((f3172131854
                                            (lambda (a3162331855)
                                              (let ((f3172031856
                                                     (lambda (a3162431857)
                                                       (take-helper
                                                        kont31718
                                                        a3162031850
                                                        a3162231853
                                                        a3162431857))))
                                                (cons
                                                 f3172031856
                                                 a3162331855
                                                 lst2)))))
                                       (car f3172131854 lst)))))
                              (- f3172231852 n a3162131851))))))
                   (cdr f3172331849 lst))))))
        (= f3172431845 n a3161731844))))
  (define (take kont31725 lst n)
    (let ((f3172631858
           (lambda (a3162531859) (take-helper kont31725 lst n a3162531859))))
      (list f3172631858)))
  (define (length kont31727 lst)
    (let ((f3173031860
           (lambda (a3162631861)
             (if a3162631861
               (let ((x3162731862 '0)) (kont31727 x3162731862))
               (let ((a3162831863 '1))
                 (let ((f3172931864
                        (lambda (a3162931865)
                          (let ((f3172831866
                                 (lambda (a3163031867)
                                   (+ kont31727 a3162831863 a3163031867))))
                            (length f3172831866 a3162931865)))))
                   (cdr f3172931864 lst)))))))
      (null? f3173031860 lst)))
  (define (map kont31731 proc lst)
    (let ((f3173731868
           (lambda (a3163131869)
             (if a3163131869
               (let ((f3173231870
                      (lambda (x3163231871) (kont31731 x3163231871))))
                 (list f3173231870))
               (let ((f3173631872
                      (lambda (a3163331873)
                        (let ((f3173531874
                               (lambda (a3163431875)
                                 (let ((f3173431876
                                        (lambda (a3163531877)
                                          (let ((f3173331878
                                                 (lambda (a3163631879)
                                                   (cons
                                                    kont31731
                                                    a3163431875
                                                    a3163631879))))
                                            (map
                                             f3173331878
                                             proc
                                             a3163531877)))))
                                   (cdr f3173431876 lst)))))
                          (proc f3173531874 a3163331873)))))
                 (car f3173631872 lst))))))
      (null? f3173731868 lst)))
  (define (filter kont31738 op lst)
    (let ((f3174631880
           (lambda (a3163731881)
             (if a3163731881
               (let ((f3173931882
                      (lambda (x3163831883) (kont31738 x3163831883))))
                 (list f3173931882))
               (let ((f3174531884
                      (lambda (a3163931885)
                        (let ((f3174431886
                               (lambda (a3164031887)
                                 (if a3164031887
                                   (let ((f3174231888
                                          (lambda (a3164131889)
                                            (let ((f3174131890
                                                   (lambda (a3164231891)
                                                     (let ((f3174031892
                                                            (lambda (a3164331893)
                                                              (cons
                                                               kont31738
                                                               a3164131889
                                                               a3164331893))))
                                                       (filter
                                                        f3174031892
                                                        op
                                                        a3164231891)))))
                                              (cdr f3174131890 lst)))))
                                     (car f3174231888 lst))
                                   (let ((f3174331894
                                          (lambda (a3164431895)
                                            (filter
                                             kont31738
                                             op
                                             a3164431895))))
                                     (cdr f3174331894 lst))))))
                          (op f3174431886 a3163931885)))))
                 (car f3174531884 lst))))))
      (null? f3174631880 lst)))
  (define (drop kont31747 lst n)
    (let ((a3164531896 '0))
      (let ((f3175031897
             (lambda (a3164631898)
               (if a3164631898
                 (kont31747 lst)
                 (let ((f3174931899
                        (lambda (a3164731900)
                          (let ((a3164831901 '1))
                            (let ((f3174831902
                                   (lambda (a3164931903)
                                     (drop
                                      kont31747
                                      a3164731900
                                      a3164931903))))
                              (- f3174831902 n a3164831901))))))
                   (cdr f3174931899 lst))))))
        (= f3175031897 n a3164531896))))
  (define (foldr kont31751 proc acc lst)
    (let ((f3175531904
           (lambda (a3165031905)
             (if a3165031905
               (kont31751 acc)
               (let ((f3175431906
                      (lambda (a3165131907)
                        (let ((f3175331908
                               (lambda (a3165231909)
                                 (let ((f3175231910
                                        (lambda (a3165331911)
                                          (proc
                                           kont31751
                                           a3165131907
                                           a3165331911))))
                                   (foldr f3175231910 proc acc a3165231909)))))
                          (cdr f3175331908 lst)))))
                 (car f3175431906 lst))))))
      (null? f3175531904 lst)))
  (define (append kont31756 lst1 lst2)
    (let ((f3176031912
           (lambda (a3165431913)
             (if a3165431913
               (kont31756 lst2)
               (let ((f3175931914
                      (lambda (a3165531915)
                        (let ((f3175831916
                               (lambda (a3165631917)
                                 (let ((f3175731918
                                        (lambda (a3165731919)
                                          (cons
                                           kont31756
                                           a3165531915
                                           a3165731919))))
                                   (append f3175731918 a3165631917 lst2)))))
                          (cdr f3175831916 lst1)))))
                 (car f3175931914 lst1))))))
      (null? f3176031912 lst1)))
  (define (hash . lst)
    (let ((kont3176131920 (prim car lst)))
      (let ((lst31921 (prim cdr lst)))
        (let ((x3165831922 (apply-prim hash lst31921)))
          (kont3176131920 x3165831922)))))
  (define (hash-ref kont31763 h k)
    (let ((x3165931923 (prim hash-ref h k))) (kont31763 x3165931923)))
  (define (hash-set kont31764 h k v)
    (let ((x3166031924 (prim hash-set h k v))) (kont31764 x3166031924)))
  (define (hash-has-key? kont31765 h k)
    (let ((x3166131925 (prim hash-has-key? h k))) (kont31765 x3166131925)))
  (define (hash-count kont31766 h)
    (let ((x3166231926 (prim hash-count h))) (kont31766 x3166231926)))
  (define (fact kont31767 n)
    (let ((a3166331927 '0))
      (let ((f3177031928
             (lambda (a3166431929)
               (if a3166431929
                 (let ((x3166531930 '1)) (kont31767 x3166531930))
                 (let ((a3166631931 '1))
                   (let ((f3176931932
                          (lambda (a3166731933)
                            (let ((f3176831934
                                   (lambda (a3166831935)
                                     (* kont31767 n a3166831935))))
                              (fact f3176831934 a3166731933)))))
                     (- f3176931932 n a3166631931)))))))
        (= f3177031928 a3166331927 n))))
  (define (brouhaha_main kont31771)
    (let ((a3166931936 '5)) (fact kont31771 a3166931936))))
