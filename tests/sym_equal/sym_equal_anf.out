'((define (+ . lst)
    (let ((kont117525 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117436 (apply-prim + lst))) (kont117525 x117436)))))
  (define (- . lst)
    (let ((kont117527 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117437 (apply-prim - lst))) (kont117527 x117437)))))
  (define (* . lst)
    (let ((kont117529 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117438 (apply-prim * lst))) (kont117529 x117438)))))
  (define (modulo kont117531 a b)
    (let ((x117439 (prim modulo a b))) (kont117531 x117439)))
  (define (/ . lst)
    (let ((kont117532 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117440 (apply-prim / lst))) (kont117532 x117440)))))
  (define (= . lst)
    (let ((kont117534 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117441 (apply-prim = lst))) (kont117534 x117441)))))
  (define (> . lst)
    (let ((kont117536 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117442 (apply-prim > lst))) (kont117536 x117442)))))
  (define (< . lst)
    (let ((kont117538 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117443 (apply-prim < lst))) (kont117538 x117443)))))
  (define (<= . lst)
    (let ((kont117540 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117444 (apply-prim <= lst))) (kont117540 x117444)))))
  (define (>= . lst)
    (let ((kont117542 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117445 (apply-prim >= lst))) (kont117542 x117445)))))
  (define (null? kont117544 x)
    (let ((x117446 (prim null? x))) (kont117544 x117446)))
  (define (equal? kont117545 x y)
    (let ((x117447 (prim equal? x y))) (kont117545 x117447)))
  (define (eq? kont117546 x y)
    (let ((x117448 (prim eq? x y))) (kont117546 x117448)))
  (define (cons kont117547 a b)
    (let ((x117449 (prim cons a b))) (kont117547 x117449)))
  (define (car kont117548 lst)
    (let ((x117450 (prim car lst))) (kont117548 x117450)))
  (define (cdr kont117549 lst)
    (let ((x117451 (prim cdr lst))) (kont117549 x117451)))
  (define (even? kont117550 x)
    (let ((a117452 '0))
      (let ((a117453 '2))
        (let ((f117551 (lambda (a117454) (equal? kont117550 a117452 a117454))))
          (modulo f117551 x a117453)))))
  (define (odd? kont117552 x)
    (let ((a117455 '1))
      (let ((a117456 '2))
        (let ((f117553 (lambda (a117457) (equal? kont117552 a117455 a117457))))
          (modulo f117553 x a117456)))))
  (define (list . x)
    (let ((kont117554 (prim car x))) (let ((x (prim cdr x))) (kont117554 x))))
  (define (member? kont117556 x lst)
    (let ((f117560
           (lambda (a117458)
             (if a117458
               (let ((x117459 '#f)) (kont117556 x117459))
               (let ((f117559
                      (lambda (a117460)
                        (let ((f117558
                               (lambda (a117461)
                                 (if a117461
                                   (let ((x117462 '#t)) (kont117556 x117462))
                                   (let ((f117557
                                          (lambda (a117463)
                                            (member? kont117556 x a117463))))
                                     (cdr f117557 lst))))))
                          (equal? f117558 a117460 x)))))
                 (car f117559 lst))))))
      (null? f117560 lst)))
  (define (foldl kont117561 fun acc lst)
    (let ((f117565
           (lambda (a117464)
             (if a117464
               (kont117561 acc)
               (let ((f117564
                      (lambda (a117465)
                        (let ((f117563
                               (lambda (a117466)
                                 (let ((f117562
                                        (lambda (a117467)
                                          (foldl
                                           kont117561
                                           fun
                                           a117466
                                           a117467))))
                                   (cdr f117562 lst)))))
                          (fun f117563 a117465 acc)))))
                 (car f117564 lst))))))
      (null? f117565 lst)))
  (define (reverse-helper kont117566 lst lst2)
    (let ((f117570
           (lambda (a117468)
             (if a117468
               (kont117566 lst2)
               (let ((f117569
                      (lambda (a117469)
                        (let ((f117568
                               (lambda (a117470)
                                 (let ((f117567
                                        (lambda (a117471)
                                          (reverse-helper
                                           kont117566
                                           a117469
                                           a117471))))
                                   (cons f117567 a117470 lst2)))))
                          (car f117568 lst)))))
                 (cdr f117569 lst))))))
      (null? f117570 lst)))
  (define (reverse kont117571 lst)
    (let ((f117572 (lambda (a117472) (reverse-helper kont117571 lst a117472))))
      (list f117572)))
  (define (take-helper kont117573 lst n lst2)
    (let ((a117473 '0))
      (let ((f117579
             (lambda (a117474)
               (if a117474
                 (let ((f117574 (lambda (x117475) (kont117573 x117475))))
                   (reverse f117574 lst2))
                 (let ((f117578
                        (lambda (a117476)
                          (let ((a117477 '1))
                            (let ((f117577
                                   (lambda (a117478)
                                     (let ((f117576
                                            (lambda (a117479)
                                              (let ((f117575
                                                     (lambda (a117480)
                                                       (take-helper
                                                        kont117573
                                                        a117476
                                                        a117478
                                                        a117480))))
                                                (cons f117575 a117479 lst2)))))
                                       (car f117576 lst)))))
                              (- f117577 n a117477))))))
                   (cdr f117578 lst))))))
        (= f117579 n a117473))))
  (define (take kont117580 lst n)
    (let ((f117581 (lambda (a117481) (take-helper kont117580 lst n a117481))))
      (list f117581)))
  (define (length kont117582 lst)
    (let ((f117585
           (lambda (a117482)
             (if a117482
               (let ((x117483 '0)) (kont117582 x117483))
               (let ((a117484 '1))
                 (let ((f117584
                        (lambda (a117485)
                          (let ((f117583
                                 (lambda (a117486)
                                   (+ kont117582 a117484 a117486))))
                            (length f117583 a117485)))))
                   (cdr f117584 lst)))))))
      (null? f117585 lst)))
  (define (map kont117586 proc lst)
    (let ((f117592
           (lambda (a117487)
             (if a117487
               (let ((f117587 (lambda (x117488) (kont117586 x117488))))
                 (list f117587))
               (let ((f117591
                      (lambda (a117489)
                        (let ((f117590
                               (lambda (a117490)
                                 (let ((f117589
                                        (lambda (a117491)
                                          (let ((f117588
                                                 (lambda (a117492)
                                                   (cons
                                                    kont117586
                                                    a117490
                                                    a117492))))
                                            (map f117588 proc a117491)))))
                                   (cdr f117589 lst)))))
                          (proc f117590 a117489)))))
                 (car f117591 lst))))))
      (null? f117592 lst)))
  (define (filter kont117593 op lst)
    (let ((f117601
           (lambda (a117493)
             (if a117493
               (let ((f117594 (lambda (x117494) (kont117593 x117494))))
                 (list f117594))
               (let ((f117600
                      (lambda (a117495)
                        (let ((f117599
                               (lambda (a117496)
                                 (if a117496
                                   (let ((f117597
                                          (lambda (a117497)
                                            (let ((f117596
                                                   (lambda (a117498)
                                                     (let ((f117595
                                                            (lambda (a117499)
                                                              (cons
                                                               kont117593
                                                               a117497
                                                               a117499))))
                                                       (filter
                                                        f117595
                                                        op
                                                        a117498)))))
                                              (cdr f117596 lst)))))
                                     (car f117597 lst))
                                   (let ((f117598
                                          (lambda (a117500)
                                            (filter kont117593 op a117500))))
                                     (cdr f117598 lst))))))
                          (op f117599 a117495)))))
                 (car f117600 lst))))))
      (null? f117601 lst)))
  (define (drop kont117602 lst n)
    (let ((a117501 '0))
      (let ((f117605
             (lambda (a117502)
               (if a117502
                 (kont117602 lst)
                 (let ((f117604
                        (lambda (a117503)
                          (let ((a117504 '1))
                            (let ((f117603
                                   (lambda (a117505)
                                     (drop kont117602 a117503 a117505))))
                              (- f117603 n a117504))))))
                   (cdr f117604 lst))))))
        (= f117605 n a117501))))
  (define (foldr kont117606 proc acc lst)
    (let ((f117610
           (lambda (a117506)
             (if a117506
               (kont117606 acc)
               (let ((f117609
                      (lambda (a117507)
                        (let ((f117608
                               (lambda (a117508)
                                 (let ((f117607
                                        (lambda (a117509)
                                          (proc kont117606 a117507 a117509))))
                                   (foldr f117607 proc acc a117508)))))
                          (cdr f117608 lst)))))
                 (car f117609 lst))))))
      (null? f117610 lst)))
  (define (append kont117611 lst1 lst2)
    (let ((f117615
           (lambda (a117510)
             (if a117510
               (kont117611 lst2)
               (let ((f117614
                      (lambda (a117511)
                        (let ((f117613
                               (lambda (a117512)
                                 (let ((f117612
                                        (lambda (a117513)
                                          (cons kont117611 a117511 a117513))))
                                   (append f117612 a117512 lst2)))))
                          (cdr f117613 lst1)))))
                 (car f117614 lst1))))))
      (null? f117615 lst1)))
  (define (hash . lst)
    (let ((kont117616 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x117514 (apply-prim hash lst))) (kont117616 x117514)))))
  (define (hash-ref kont117618 h k)
    (let ((x117515 (prim hash-ref h k))) (kont117618 x117515)))
  (define (hash-set kont117619 h k v)
    (let ((x117516 (prim hash-set h k v))) (kont117619 x117516)))
  (define (hash-has-key? kont117620 h k)
    (let ((x117517 (prim hash-has-key? h k))) (kont117620 x117517)))
  (define (hash-count kont117621 h)
    (let ((x117518 (prim hash-count h))) (kont117621 x117518)))
  (define (call kont117622)
    (let ((a117519 '100))
      (let ((a117520 '100))
        (let ((a117521 '100))
          (let ((a117522 '100))
            (let ((a117523 '100))
              (= kont117622 a117519 a117520 a117521 a117522 a117523)))))))
  (define (brouhaha_main kont117623)
    (let ((f117624 (lambda (x117524) (kont117623 x117524)))) (call f117624))))
