'((define (+ . lst)
    (let ((kont111766111866 (prim car lst)))
      (let ((lst111867 (prim cdr lst)))
        (let ((x111677111868 (apply-prim + lst111867)))
          (kont111766111866 x111677111868)))))
  (define (- . lst)
    (let ((kont111768111869 (prim car lst)))
      (let ((lst111870 (prim cdr lst)))
        (let ((x111678111871 (apply-prim - lst111870)))
          (kont111768111869 x111678111871)))))
  (define (* . lst)
    (let ((kont111770111872 (prim car lst)))
      (let ((lst111873 (prim cdr lst)))
        (let ((x111679111874 (apply-prim * lst111873)))
          (kont111770111872 x111679111874)))))
  (define (modulo kont111772 a b)
    (let ((x111680111875 (prim modulo a b))) (kont111772 x111680111875)))
  (define (/ . lst)
    (let ((kont111773111876 (prim car lst)))
      (let ((lst111877 (prim cdr lst)))
        (let ((x111681111878 (apply-prim / lst111877)))
          (kont111773111876 x111681111878)))))
  (define (= . lst)
    (let ((kont111775111879 (prim car lst)))
      (let ((lst111880 (prim cdr lst)))
        (let ((x111682111881 (apply-prim = lst111880)))
          (kont111775111879 x111682111881)))))
  (define (> . lst)
    (let ((kont111777111882 (prim car lst)))
      (let ((lst111883 (prim cdr lst)))
        (let ((x111683111884 (apply-prim > lst111883)))
          (kont111777111882 x111683111884)))))
  (define (< . lst)
    (let ((kont111779111885 (prim car lst)))
      (let ((lst111886 (prim cdr lst)))
        (let ((x111684111887 (apply-prim < lst111886)))
          (kont111779111885 x111684111887)))))
  (define (<= . lst)
    (let ((kont111781111888 (prim car lst)))
      (let ((lst111889 (prim cdr lst)))
        (let ((x111685111890 (apply-prim <= lst111889)))
          (kont111781111888 x111685111890)))))
  (define (>= . lst)
    (let ((kont111783111891 (prim car lst)))
      (let ((lst111892 (prim cdr lst)))
        (let ((x111686111893 (apply-prim >= lst111892)))
          (kont111783111891 x111686111893)))))
  (define (null? kont111785 x)
    (let ((x111687111894 (prim null? x))) (kont111785 x111687111894)))
  (define (equal? kont111786 x y)
    (let ((x111688111895 (prim equal? x y))) (kont111786 x111688111895)))
  (define (eq? kont111787 x y)
    (let ((x111689111896 (prim eq? x y))) (kont111787 x111689111896)))
  (define (cons kont111788 a b)
    (let ((x111690111897 (prim cons a b))) (kont111788 x111690111897)))
  (define (car kont111789 lst)
    (let ((x111691111898 (prim car lst))) (kont111789 x111691111898)))
  (define (cdr kont111790 lst)
    (let ((x111692111899 (prim cdr lst))) (kont111790 x111692111899)))
  (define (even? kont111791 x)
    (let ((a111693111900 '0))
      (let ((a111694111901 '2))
        (let ((f111792111902
               (lambda (a111695111903)
                 (equal? kont111791 a111693111900 a111695111903))))
          (modulo f111792111902 x a111694111901)))))
  (define (odd? kont111793 x)
    (let ((a111696111904 '1))
      (let ((a111697111905 '2))
        (let ((f111794111906
               (lambda (a111698111907)
                 (equal? kont111793 a111696111904 a111698111907))))
          (modulo f111794111906 x a111697111905)))))
  (define (list . x)
    (let ((kont111795111908 (prim car x)))
      (let ((x111909 (prim cdr x))) (kont111795111908 x111909))))
  (define (member? kont111797 x lst)
    (let ((f111801111910
           (lambda (a111699111911)
             (if a111699111911
               (let ((x111700111912 '#f)) (kont111797 x111700111912))
               (let ((f111800111913
                      (lambda (a111701111914)
                        (let ((f111799111915
                               (lambda (a111702111916)
                                 (if a111702111916
                                   (let ((x111703111917 '#t))
                                     (kont111797 x111703111917))
                                   (let ((f111798111918
                                          (lambda (a111704111919)
                                            (member?
                                             kont111797
                                             x
                                             a111704111919))))
                                     (cdr f111798111918 lst))))))
                          (equal? f111799111915 a111701111914 x)))))
                 (car f111800111913 lst))))))
      (null? f111801111910 lst)))
  (define (foldl kont111802 fun acc lst)
    (let ((f111806111920
           (lambda (a111705111921)
             (if a111705111921
               (kont111802 acc)
               (let ((f111805111922
                      (lambda (a111706111923)
                        (let ((f111804111924
                               (lambda (a111707111925)
                                 (let ((f111803111926
                                        (lambda (a111708111927)
                                          (foldl
                                           kont111802
                                           fun
                                           a111707111925
                                           a111708111927))))
                                   (cdr f111803111926 lst)))))
                          (fun f111804111924 a111706111923 acc)))))
                 (car f111805111922 lst))))))
      (null? f111806111920 lst)))
  (define (reverse-helper kont111807 lst lst2)
    (let ((f111811111928
           (lambda (a111709111929)
             (if a111709111929
               (kont111807 lst2)
               (let ((f111810111930
                      (lambda (a111710111931)
                        (let ((f111809111932
                               (lambda (a111711111933)
                                 (let ((f111808111934
                                        (lambda (a111712111935)
                                          (reverse-helper
                                           kont111807
                                           a111710111931
                                           a111712111935))))
                                   (cons f111808111934 a111711111933 lst2)))))
                          (car f111809111932 lst)))))
                 (cdr f111810111930 lst))))))
      (null? f111811111928 lst)))
  (define (reverse kont111812 lst)
    (let ((f111813111936
           (lambda (a111713111937)
             (reverse-helper kont111812 lst a111713111937))))
      (list f111813111936)))
  (define (take-helper kont111814 lst n lst2)
    (let ((a111714111938 '0))
      (let ((f111820111939
             (lambda (a111715111940)
               (if a111715111940
                 (let ((f111815111941
                        (lambda (x111716111942) (kont111814 x111716111942))))
                   (reverse f111815111941 lst2))
                 (let ((f111819111943
                        (lambda (a111717111944)
                          (let ((a111718111945 '1))
                            (let ((f111818111946
                                   (lambda (a111719111947)
                                     (let ((f111817111948
                                            (lambda (a111720111949)
                                              (let ((f111816111950
                                                     (lambda (a111721111951)
                                                       (take-helper
                                                        kont111814
                                                        a111717111944
                                                        a111719111947
                                                        a111721111951))))
                                                (cons
                                                 f111816111950
                                                 a111720111949
                                                 lst2)))))
                                       (car f111817111948 lst)))))
                              (- f111818111946 n a111718111945))))))
                   (cdr f111819111943 lst))))))
        (= f111820111939 n a111714111938))))
  (define (take kont111821 lst n)
    (let ((f111822111952
           (lambda (a111722111953)
             (take-helper kont111821 lst n a111722111953))))
      (list f111822111952)))
  (define (length kont111823 lst)
    (let ((f111826111954
           (lambda (a111723111955)
             (if a111723111955
               (let ((x111724111956 '0)) (kont111823 x111724111956))
               (let ((a111725111957 '1))
                 (let ((f111825111958
                        (lambda (a111726111959)
                          (let ((f111824111960
                                 (lambda (a111727111961)
                                   (+
                                    kont111823
                                    a111725111957
                                    a111727111961))))
                            (length f111824111960 a111726111959)))))
                   (cdr f111825111958 lst)))))))
      (null? f111826111954 lst)))
  (define (map kont111827 proc lst)
    (let ((f111833111962
           (lambda (a111728111963)
             (if a111728111963
               (let ((f111828111964
                      (lambda (x111729111965) (kont111827 x111729111965))))
                 (list f111828111964))
               (let ((f111832111966
                      (lambda (a111730111967)
                        (let ((f111831111968
                               (lambda (a111731111969)
                                 (let ((f111830111970
                                        (lambda (a111732111971)
                                          (let ((f111829111972
                                                 (lambda (a111733111973)
                                                   (cons
                                                    kont111827
                                                    a111731111969
                                                    a111733111973))))
                                            (map
                                             f111829111972
                                             proc
                                             a111732111971)))))
                                   (cdr f111830111970 lst)))))
                          (proc f111831111968 a111730111967)))))
                 (car f111832111966 lst))))))
      (null? f111833111962 lst)))
  (define (filter kont111834 op lst)
    (let ((f111842111974
           (lambda (a111734111975)
             (if a111734111975
               (let ((f111835111976
                      (lambda (x111735111977) (kont111834 x111735111977))))
                 (list f111835111976))
               (let ((f111841111978
                      (lambda (a111736111979)
                        (let ((f111840111980
                               (lambda (a111737111981)
                                 (if a111737111981
                                   (let ((f111838111982
                                          (lambda (a111738111983)
                                            (let ((f111837111984
                                                   (lambda (a111739111985)
                                                     (let ((f111836111986
                                                            (lambda (a111740111987)
                                                              (cons
                                                               kont111834
                                                               a111738111983
                                                               a111740111987))))
                                                       (filter
                                                        f111836111986
                                                        op
                                                        a111739111985)))))
                                              (cdr f111837111984 lst)))))
                                     (car f111838111982 lst))
                                   (let ((f111839111988
                                          (lambda (a111741111989)
                                            (filter
                                             kont111834
                                             op
                                             a111741111989))))
                                     (cdr f111839111988 lst))))))
                          (op f111840111980 a111736111979)))))
                 (car f111841111978 lst))))))
      (null? f111842111974 lst)))
  (define (drop kont111843 lst n)
    (let ((a111742111990 '0))
      (let ((f111846111991
             (lambda (a111743111992)
               (if a111743111992
                 (kont111843 lst)
                 (let ((f111845111993
                        (lambda (a111744111994)
                          (let ((a111745111995 '1))
                            (let ((f111844111996
                                   (lambda (a111746111997)
                                     (drop
                                      kont111843
                                      a111744111994
                                      a111746111997))))
                              (- f111844111996 n a111745111995))))))
                   (cdr f111845111993 lst))))))
        (= f111846111991 n a111742111990))))
  (define (foldr kont111847 proc acc lst)
    (let ((f111851111998
           (lambda (a111747111999)
             (if a111747111999
               (kont111847 acc)
               (let ((f111850112000
                      (lambda (a111748112001)
                        (let ((f111849112002
                               (lambda (a111749112003)
                                 (let ((f111848112004
                                        (lambda (a111750112005)
                                          (proc
                                           kont111847
                                           a111748112001
                                           a111750112005))))
                                   (foldr
                                    f111848112004
                                    proc
                                    acc
                                    a111749112003)))))
                          (cdr f111849112002 lst)))))
                 (car f111850112000 lst))))))
      (null? f111851111998 lst)))
  (define (append kont111852 lst1 lst2)
    (let ((f111856112006
           (lambda (a111751112007)
             (if a111751112007
               (kont111852 lst2)
               (let ((f111855112008
                      (lambda (a111752112009)
                        (let ((f111854112010
                               (lambda (a111753112011)
                                 (let ((f111853112012
                                        (lambda (a111754112013)
                                          (cons
                                           kont111852
                                           a111752112009
                                           a111754112013))))
                                   (append
                                    f111853112012
                                    a111753112011
                                    lst2)))))
                          (cdr f111854112010 lst1)))))
                 (car f111855112008 lst1))))))
      (null? f111856112006 lst1)))
  (define (hash . lst)
    (let ((kont111857112014 (prim car lst)))
      (let ((lst112015 (prim cdr lst)))
        (let ((x111755112016 (apply-prim hash lst112015)))
          (kont111857112014 x111755112016)))))
  (define (hash-ref kont111859 h k)
    (let ((x111756112017 (prim hash-ref h k))) (kont111859 x111756112017)))
  (define (hash-set kont111860 h k v)
    (let ((x111757112018 (prim hash-set h k v))) (kont111860 x111757112018)))
  (define (hash-has-key? kont111861 h k)
    (let ((x111758112019 (prim hash-has-key? h k)))
      (kont111861 x111758112019)))
  (define (hash-count kont111862 h)
    (let ((x111759112020 (prim hash-count h))) (kont111862 x111759112020)))
  (define (call kont111863)
    (let ((a111760112021 '100))
      (let ((a111761112022 '100))
        (let ((a111762112023 '100))
          (let ((a111763112024 '100))
            (let ((a111764112025 '100))
              (=
               kont111863
               a111760112021
               a111761112022
               a111762112023
               a111763112024
               a111764112025)))))))
  (define (brouhaha_main kont111864)
    (let ((f111865112026 (lambda (x111765112027) (kont111864 x111765112027))))
      (call f111865112026))))
