'((define (+ . lst)
    (let ((kont133170133270 (prim car lst)))
      (let ((lst133271 (prim cdr lst)))
        (let ((x133086133272 (apply-prim + lst133271)))
          (kont133170133270 x133086133272)))))
  (define (- . lst)
    (let ((kont133172133273 (prim car lst)))
      (let ((lst133274 (prim cdr lst)))
        (let ((x133087133275 (apply-prim - lst133274)))
          (kont133172133273 x133087133275)))))
  (define (* . lst)
    (let ((kont133174133276 (prim car lst)))
      (let ((lst133277 (prim cdr lst)))
        (let ((x133088133278 (apply-prim * lst133277)))
          (kont133174133276 x133088133278)))))
  (define (modulo kont133176 a b)
    (let ((x133089133279 (prim modulo a b))) (kont133176 x133089133279)))
  (define (/ . lst)
    (let ((kont133177133280 (prim car lst)))
      (let ((lst133281 (prim cdr lst)))
        (let ((x133090133282 (apply-prim / lst133281)))
          (kont133177133280 x133090133282)))))
  (define (= . lst)
    (let ((kont133179133283 (prim car lst)))
      (let ((lst133284 (prim cdr lst)))
        (let ((x133091133285 (apply-prim = lst133284)))
          (kont133179133283 x133091133285)))))
  (define (> . lst)
    (let ((kont133181133286 (prim car lst)))
      (let ((lst133287 (prim cdr lst)))
        (let ((x133092133288 (apply-prim > lst133287)))
          (kont133181133286 x133092133288)))))
  (define (< . lst)
    (let ((kont133183133289 (prim car lst)))
      (let ((lst133290 (prim cdr lst)))
        (let ((x133093133291 (apply-prim < lst133290)))
          (kont133183133289 x133093133291)))))
  (define (<= . lst)
    (let ((kont133185133292 (prim car lst)))
      (let ((lst133293 (prim cdr lst)))
        (let ((x133094133294 (apply-prim <= lst133293)))
          (kont133185133292 x133094133294)))))
  (define (>= . lst)
    (let ((kont133187133295 (prim car lst)))
      (let ((lst133296 (prim cdr lst)))
        (let ((x133095133297 (apply-prim >= lst133296)))
          (kont133187133295 x133095133297)))))
  (define (null? kont133189 x)
    (let ((x133096133298 (prim null? x))) (kont133189 x133096133298)))
  (define (equal? kont133190 x y)
    (let ((x133097133299 (prim equal? x y))) (kont133190 x133097133299)))
  (define (eq? kont133191 x y)
    (let ((x133098133300 (prim eq? x y))) (kont133191 x133098133300)))
  (define (cons kont133192 a b)
    (let ((x133099133301 (prim cons a b))) (kont133192 x133099133301)))
  (define (car kont133193 lst)
    (let ((x133100133302 (prim car lst))) (kont133193 x133100133302)))
  (define (cdr kont133194 lst)
    (let ((x133101133303 (prim cdr lst))) (kont133194 x133101133303)))
  (define (even? kont133195 x)
    (let ((a133102133304 '0))
      (let ((a133103133305 '2))
        (let ((f133196133306
               (lambda (a133104133307)
                 (equal? kont133195 a133102133304 a133104133307))))
          (modulo f133196133306 x a133103133305)))))
  (define (odd? kont133197 x)
    (let ((a133105133308 '1))
      (let ((a133106133309 '2))
        (let ((f133198133310
               (lambda (a133107133311)
                 (equal? kont133197 a133105133308 a133107133311))))
          (modulo f133198133310 x a133106133309)))))
  (define (list . x)
    (let ((kont133199133312 (prim car x)))
      (let ((x133313 (prim cdr x))) (kont133199133312 x133313))))
  (define (member? kont133201 x lst)
    (let ((f133205133314
           (lambda (a133108133315)
             (if a133108133315
               (let ((x133109133316 '#f)) (kont133201 x133109133316))
               (let ((f133204133317
                      (lambda (a133110133318)
                        (let ((f133203133319
                               (lambda (a133111133320)
                                 (if a133111133320
                                   (let ((x133112133321 '#t))
                                     (kont133201 x133112133321))
                                   (let ((f133202133322
                                          (lambda (a133113133323)
                                            (member?
                                             kont133201
                                             x
                                             a133113133323))))
                                     (cdr f133202133322 lst))))))
                          (equal? f133203133319 a133110133318 x)))))
                 (car f133204133317 lst))))))
      (null? f133205133314 lst)))
  (define (foldl kont133206 fun acc lst)
    (let ((f133210133324
           (lambda (a133114133325)
             (if a133114133325
               (kont133206 acc)
               (let ((f133209133326
                      (lambda (a133115133327)
                        (let ((f133208133328
                               (lambda (a133116133329)
                                 (let ((f133207133330
                                        (lambda (a133117133331)
                                          (foldl
                                           kont133206
                                           fun
                                           a133116133329
                                           a133117133331))))
                                   (cdr f133207133330 lst)))))
                          (fun f133208133328 a133115133327 acc)))))
                 (car f133209133326 lst))))))
      (null? f133210133324 lst)))
  (define (reverse-helper kont133211 lst lst2)
    (let ((f133215133332
           (lambda (a133118133333)
             (if a133118133333
               (kont133211 lst2)
               (let ((f133214133334
                      (lambda (a133119133335)
                        (let ((f133213133336
                               (lambda (a133120133337)
                                 (let ((f133212133338
                                        (lambda (a133121133339)
                                          (reverse-helper
                                           kont133211
                                           a133119133335
                                           a133121133339))))
                                   (cons f133212133338 a133120133337 lst2)))))
                          (car f133213133336 lst)))))
                 (cdr f133214133334 lst))))))
      (null? f133215133332 lst)))
  (define (reverse kont133216 lst)
    (let ((f133217133340
           (lambda (a133122133341)
             (reverse-helper kont133216 lst a133122133341))))
      (list f133217133340)))
  (define (take-helper kont133218 lst n lst2)
    (let ((a133123133342 '0))
      (let ((f133224133343
             (lambda (a133124133344)
               (if a133124133344
                 (let ((f133219133345
                        (lambda (x133125133346) (kont133218 x133125133346))))
                   (reverse f133219133345 lst2))
                 (let ((f133223133347
                        (lambda (a133126133348)
                          (let ((a133127133349 '1))
                            (let ((f133222133350
                                   (lambda (a133128133351)
                                     (let ((f133221133352
                                            (lambda (a133129133353)
                                              (let ((f133220133354
                                                     (lambda (a133130133355)
                                                       (take-helper
                                                        kont133218
                                                        a133126133348
                                                        a133128133351
                                                        a133130133355))))
                                                (cons
                                                 f133220133354
                                                 a133129133353
                                                 lst2)))))
                                       (car f133221133352 lst)))))
                              (- f133222133350 n a133127133349))))))
                   (cdr f133223133347 lst))))))
        (= f133224133343 n a133123133342))))
  (define (take kont133225 lst n)
    (let ((f133226133356
           (lambda (a133131133357)
             (take-helper kont133225 lst n a133131133357))))
      (list f133226133356)))
  (define (length kont133227 lst)
    (let ((f133230133358
           (lambda (a133132133359)
             (if a133132133359
               (let ((x133133133360 '0)) (kont133227 x133133133360))
               (let ((a133134133361 '1))
                 (let ((f133229133362
                        (lambda (a133135133363)
                          (let ((f133228133364
                                 (lambda (a133136133365)
                                   (+
                                    kont133227
                                    a133134133361
                                    a133136133365))))
                            (length f133228133364 a133135133363)))))
                   (cdr f133229133362 lst)))))))
      (null? f133230133358 lst)))
  (define (map kont133231 proc lst)
    (let ((f133237133366
           (lambda (a133137133367)
             (if a133137133367
               (let ((f133232133368
                      (lambda (x133138133369) (kont133231 x133138133369))))
                 (list f133232133368))
               (let ((f133236133370
                      (lambda (a133139133371)
                        (let ((f133235133372
                               (lambda (a133140133373)
                                 (let ((f133234133374
                                        (lambda (a133141133375)
                                          (let ((f133233133376
                                                 (lambda (a133142133377)
                                                   (cons
                                                    kont133231
                                                    a133140133373
                                                    a133142133377))))
                                            (map
                                             f133233133376
                                             proc
                                             a133141133375)))))
                                   (cdr f133234133374 lst)))))
                          (proc f133235133372 a133139133371)))))
                 (car f133236133370 lst))))))
      (null? f133237133366 lst)))
  (define (filter kont133238 op lst)
    (let ((f133246133378
           (lambda (a133143133379)
             (if a133143133379
               (let ((f133239133380
                      (lambda (x133144133381) (kont133238 x133144133381))))
                 (list f133239133380))
               (let ((f133245133382
                      (lambda (a133145133383)
                        (let ((f133244133384
                               (lambda (a133146133385)
                                 (if a133146133385
                                   (let ((f133242133386
                                          (lambda (a133147133387)
                                            (let ((f133241133388
                                                   (lambda (a133148133389)
                                                     (let ((f133240133390
                                                            (lambda (a133149133391)
                                                              (cons
                                                               kont133238
                                                               a133147133387
                                                               a133149133391))))
                                                       (filter
                                                        f133240133390
                                                        op
                                                        a133148133389)))))
                                              (cdr f133241133388 lst)))))
                                     (car f133242133386 lst))
                                   (let ((f133243133392
                                          (lambda (a133150133393)
                                            (filter
                                             kont133238
                                             op
                                             a133150133393))))
                                     (cdr f133243133392 lst))))))
                          (op f133244133384 a133145133383)))))
                 (car f133245133382 lst))))))
      (null? f133246133378 lst)))
  (define (drop kont133247 lst n)
    (let ((a133151133394 '0))
      (let ((f133250133395
             (lambda (a133152133396)
               (if a133152133396
                 (kont133247 lst)
                 (let ((f133249133397
                        (lambda (a133153133398)
                          (let ((a133154133399 '1))
                            (let ((f133248133400
                                   (lambda (a133155133401)
                                     (drop
                                      kont133247
                                      a133153133398
                                      a133155133401))))
                              (- f133248133400 n a133154133399))))))
                   (cdr f133249133397 lst))))))
        (= f133250133395 n a133151133394))))
  (define (foldr kont133251 proc acc lst)
    (let ((f133255133402
           (lambda (a133156133403)
             (if a133156133403
               (kont133251 acc)
               (let ((f133254133404
                      (lambda (a133157133405)
                        (let ((f133253133406
                               (lambda (a133158133407)
                                 (let ((f133252133408
                                        (lambda (a133159133409)
                                          (proc
                                           kont133251
                                           a133157133405
                                           a133159133409))))
                                   (foldr
                                    f133252133408
                                    proc
                                    acc
                                    a133158133407)))))
                          (cdr f133253133406 lst)))))
                 (car f133254133404 lst))))))
      (null? f133255133402 lst)))
  (define (append kont133256 lst1 lst2)
    (let ((f133260133410
           (lambda (a133160133411)
             (if a133160133411
               (kont133256 lst2)
               (let ((f133259133412
                      (lambda (a133161133413)
                        (let ((f133258133414
                               (lambda (a133162133415)
                                 (let ((f133257133416
                                        (lambda (a133163133417)
                                          (cons
                                           kont133256
                                           a133161133413
                                           a133163133417))))
                                   (append
                                    f133257133416
                                    a133162133415
                                    lst2)))))
                          (cdr f133258133414 lst1)))))
                 (car f133259133412 lst1))))))
      (null? f133260133410 lst1)))
  (define (hash . lst)
    (let ((kont133261133418 (prim car lst)))
      (let ((lst133419 (prim cdr lst)))
        (let ((x133164133420 (apply-prim hash lst133419)))
          (kont133261133418 x133164133420)))))
  (define (hash-ref kont133263 h k)
    (let ((x133165133421 (prim hash-ref h k))) (kont133263 x133165133421)))
  (define (hash-set kont133264 h k v)
    (let ((x133166133422 (prim hash-set h k v))) (kont133264 x133166133422)))
  (define (hash-has-key? kont133265 h k)
    (let ((x133167133423 (prim hash-has-key? h k)))
      (kont133265 x133167133423)))
  (define (hash-count kont133266 h)
    (let ((x133168133424 (prim hash-count h))) (kont133266 x133168133424)))
  (define (yes kont133267)
    (let ((x133084133425 '5))
      (let ((y133085133426 '6)) (kont133267 x133084133425))))
  (define (brouhaha_main kont133268)
    (let ((f133269133427 (lambda (x133169133428) (kont133268 x133169133428))))
      (yes f133269133427))))
