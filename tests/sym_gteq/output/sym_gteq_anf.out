'((define (+ . lst)
    (let ((kont114054 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113965 (apply-prim + lst))) (kont114054 x113965)))))
  (define (- . lst)
    (let ((kont114056 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113966 (apply-prim - lst))) (kont114056 x113966)))))
  (define (* . lst)
    (let ((kont114058 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113967 (apply-prim * lst))) (kont114058 x113967)))))
  (define (modulo kont114060 a b)
    (let ((x113968 (prim modulo a b))) (kont114060 x113968)))
  (define (/ . lst)
    (let ((kont114061 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113969 (apply-prim / lst))) (kont114061 x113969)))))
  (define (= . lst)
    (let ((kont114063 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113970 (apply-prim = lst))) (kont114063 x113970)))))
  (define (> . lst)
    (let ((kont114065 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113971 (apply-prim > lst))) (kont114065 x113971)))))
  (define (< . lst)
    (let ((kont114067 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113972 (apply-prim < lst))) (kont114067 x113972)))))
  (define (<= . lst)
    (let ((kont114069 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113973 (apply-prim <= lst))) (kont114069 x113973)))))
  (define (>= . lst)
    (let ((kont114071 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x113974 (apply-prim >= lst))) (kont114071 x113974)))))
  (define (null? kont114073 x)
    (let ((x113975 (prim null? x))) (kont114073 x113975)))
  (define (equal? kont114074 x y)
    (let ((x113976 (prim equal? x y))) (kont114074 x113976)))
  (define (eq? kont114075 x y)
    (let ((x113977 (prim eq? x y))) (kont114075 x113977)))
  (define (cons kont114076 a b)
    (let ((x113978 (prim cons a b))) (kont114076 x113978)))
  (define (car kont114077 lst)
    (let ((x113979 (prim car lst))) (kont114077 x113979)))
  (define (cdr kont114078 lst)
    (let ((x113980 (prim cdr lst))) (kont114078 x113980)))
  (define (even? kont114079 x)
    (let ((a113981 '0))
      (let ((a113982 '2))
        (let ((f114080 (lambda (a113983) (equal? kont114079 a113981 a113983))))
          (modulo f114080 x a113982)))))
  (define (odd? kont114081 x)
    (let ((a113984 '1))
      (let ((a113985 '2))
        (let ((f114082 (lambda (a113986) (equal? kont114081 a113984 a113986))))
          (modulo f114082 x a113985)))))
  (define (list . x)
    (let ((kont114083 (prim car x))) (let ((x (prim cdr x))) (kont114083 x))))
  (define (member? kont114085 x lst)
    (let ((f114089
           (lambda (a113987)
             (if a113987
               (let ((x113988 '#f)) (kont114085 x113988))
               (let ((f114088
                      (lambda (a113989)
                        (let ((f114087
                               (lambda (a113990)
                                 (if a113990
                                   (let ((x113991 '#t)) (kont114085 x113991))
                                   (let ((f114086
                                          (lambda (a113992)
                                            (member? kont114085 x a113992))))
                                     (cdr f114086 lst))))))
                          (equal? f114087 a113989 x)))))
                 (car f114088 lst))))))
      (null? f114089 lst)))
  (define (foldl kont114090 fun acc lst)
    (let ((f114094
           (lambda (a113993)
             (if a113993
               (kont114090 acc)
               (let ((f114093
                      (lambda (a113994)
                        (let ((f114092
                               (lambda (a113995)
                                 (let ((f114091
                                        (lambda (a113996)
                                          (foldl
                                           kont114090
                                           fun
                                           a113995
                                           a113996))))
                                   (cdr f114091 lst)))))
                          (fun f114092 a113994 acc)))))
                 (car f114093 lst))))))
      (null? f114094 lst)))
  (define (reverse-helper kont114095 lst lst2)
    (let ((f114099
           (lambda (a113997)
             (if a113997
               (kont114095 lst2)
               (let ((f114098
                      (lambda (a113998)
                        (let ((f114097
                               (lambda (a113999)
                                 (let ((f114096
                                        (lambda (a114000)
                                          (reverse-helper
                                           kont114095
                                           a113998
                                           a114000))))
                                   (cons f114096 a113999 lst2)))))
                          (car f114097 lst)))))
                 (cdr f114098 lst))))))
      (null? f114099 lst)))
  (define (reverse kont114100 lst)
    (let ((f114101 (lambda (a114001) (reverse-helper kont114100 lst a114001))))
      (list f114101)))
  (define (take-helper kont114102 lst n lst2)
    (let ((a114002 '0))
      (let ((f114108
             (lambda (a114003)
               (if a114003
                 (let ((f114103 (lambda (x114004) (kont114102 x114004))))
                   (reverse f114103 lst2))
                 (let ((f114107
                        (lambda (a114005)
                          (let ((a114006 '1))
                            (let ((f114106
                                   (lambda (a114007)
                                     (let ((f114105
                                            (lambda (a114008)
                                              (let ((f114104
                                                     (lambda (a114009)
                                                       (take-helper
                                                        kont114102
                                                        a114005
                                                        a114007
                                                        a114009))))
                                                (cons f114104 a114008 lst2)))))
                                       (car f114105 lst)))))
                              (- f114106 n a114006))))))
                   (cdr f114107 lst))))))
        (= f114108 n a114002))))
  (define (take kont114109 lst n)
    (let ((f114110 (lambda (a114010) (take-helper kont114109 lst n a114010))))
      (list f114110)))
  (define (length kont114111 lst)
    (let ((f114114
           (lambda (a114011)
             (if a114011
               (let ((x114012 '0)) (kont114111 x114012))
               (let ((a114013 '1))
                 (let ((f114113
                        (lambda (a114014)
                          (let ((f114112
                                 (lambda (a114015)
                                   (+ kont114111 a114013 a114015))))
                            (length f114112 a114014)))))
                   (cdr f114113 lst)))))))
      (null? f114114 lst)))
  (define (map kont114115 proc lst)
    (let ((f114121
           (lambda (a114016)
             (if a114016
               (let ((f114116 (lambda (x114017) (kont114115 x114017))))
                 (list f114116))
               (let ((f114120
                      (lambda (a114018)
                        (let ((f114119
                               (lambda (a114019)
                                 (let ((f114118
                                        (lambda (a114020)
                                          (let ((f114117
                                                 (lambda (a114021)
                                                   (cons
                                                    kont114115
                                                    a114019
                                                    a114021))))
                                            (map f114117 proc a114020)))))
                                   (cdr f114118 lst)))))
                          (proc f114119 a114018)))))
                 (car f114120 lst))))))
      (null? f114121 lst)))
  (define (filter kont114122 op lst)
    (let ((f114130
           (lambda (a114022)
             (if a114022
               (let ((f114123 (lambda (x114023) (kont114122 x114023))))
                 (list f114123))
               (let ((f114129
                      (lambda (a114024)
                        (let ((f114128
                               (lambda (a114025)
                                 (if a114025
                                   (let ((f114126
                                          (lambda (a114026)
                                            (let ((f114125
                                                   (lambda (a114027)
                                                     (let ((f114124
                                                            (lambda (a114028)
                                                              (cons
                                                               kont114122
                                                               a114026
                                                               a114028))))
                                                       (filter
                                                        f114124
                                                        op
                                                        a114027)))))
                                              (cdr f114125 lst)))))
                                     (car f114126 lst))
                                   (let ((f114127
                                          (lambda (a114029)
                                            (filter kont114122 op a114029))))
                                     (cdr f114127 lst))))))
                          (op f114128 a114024)))))
                 (car f114129 lst))))))
      (null? f114130 lst)))
  (define (drop kont114131 lst n)
    (let ((a114030 '0))
      (let ((f114134
             (lambda (a114031)
               (if a114031
                 (kont114131 lst)
                 (let ((f114133
                        (lambda (a114032)
                          (let ((a114033 '1))
                            (let ((f114132
                                   (lambda (a114034)
                                     (drop kont114131 a114032 a114034))))
                              (- f114132 n a114033))))))
                   (cdr f114133 lst))))))
        (= f114134 n a114030))))
  (define (foldr kont114135 proc acc lst)
    (let ((f114139
           (lambda (a114035)
             (if a114035
               (kont114135 acc)
               (let ((f114138
                      (lambda (a114036)
                        (let ((f114137
                               (lambda (a114037)
                                 (let ((f114136
                                        (lambda (a114038)
                                          (proc kont114135 a114036 a114038))))
                                   (foldr f114136 proc acc a114037)))))
                          (cdr f114137 lst)))))
                 (car f114138 lst))))))
      (null? f114139 lst)))
  (define (append kont114140 lst1 lst2)
    (let ((f114144
           (lambda (a114039)
             (if a114039
               (kont114140 lst2)
               (let ((f114143
                      (lambda (a114040)
                        (let ((f114142
                               (lambda (a114041)
                                 (let ((f114141
                                        (lambda (a114042)
                                          (cons kont114140 a114040 a114042))))
                                   (append f114141 a114041 lst2)))))
                          (cdr f114142 lst1)))))
                 (car f114143 lst1))))))
      (null? f114144 lst1)))
  (define (hash . lst)
    (let ((kont114145 (prim car lst)))
      (let ((lst (prim cdr lst)))
        (let ((x114043 (apply-prim hash lst))) (kont114145 x114043)))))
  (define (hash-ref kont114147 h k)
    (let ((x114044 (prim hash-ref h k))) (kont114147 x114044)))
  (define (hash-set kont114148 h k v)
    (let ((x114045 (prim hash-set h k v))) (kont114148 x114045)))
  (define (hash-has-key? kont114149 h k)
    (let ((x114046 (prim hash-has-key? h k))) (kont114149 x114046)))
  (define (hash-count kont114150 h)
    (let ((x114047 (prim hash-count h))) (kont114150 x114047)))
  (define (call kont114151)
    (let ((a114048 '100))
      (let ((a114049 '90))
        (let ((a114050 '80))
          (let ((a114051 '70))
            (let ((a114052 '60))
              (>= kont114151 a114048 a114049 a114050 a114051 a114052)))))))
  (define (brouhaha_main kont114152)
    (let ((f114153 (lambda (x114053) (kont114152 x114053)))) (call f114153))))
