'((define (+ . lst)
    (let ((kont9276692868 (prim car lst)))
      (let ((lst92869 (prim cdr lst)))
        (let ((x9267392870 (apply-prim + lst92869)))
          (kont9276692868 x9267392870)))))
  (define (- . lst)
    (let ((kont9276892871 (prim car lst)))
      (let ((lst92872 (prim cdr lst)))
        (let ((x9267492873 (apply-prim - lst92872)))
          (kont9276892871 x9267492873)))))
  (define (* . lst)
    (let ((kont9277092874 (prim car lst)))
      (let ((lst92875 (prim cdr lst)))
        (let ((x9267592876 (apply-prim * lst92875)))
          (kont9277092874 x9267592876)))))
  (define (modulo kont92772 a b)
    (let ((x9267692877 (prim modulo a b))) (kont92772 x9267692877)))
  (define (/ . lst)
    (let ((kont9277392878 (prim car lst)))
      (let ((lst92879 (prim cdr lst)))
        (let ((x9267792880 (apply-prim / lst92879)))
          (kont9277392878 x9267792880)))))
  (define (= . lst)
    (let ((kont9277592881 (prim car lst)))
      (let ((lst92882 (prim cdr lst)))
        (let ((x9267892883 (apply-prim = lst92882)))
          (kont9277592881 x9267892883)))))
  (define (> . lst)
    (let ((kont9277792884 (prim car lst)))
      (let ((lst92885 (prim cdr lst)))
        (let ((x9267992886 (apply-prim > lst92885)))
          (kont9277792884 x9267992886)))))
  (define (< . lst)
    (let ((kont9277992887 (prim car lst)))
      (let ((lst92888 (prim cdr lst)))
        (let ((x9268092889 (apply-prim < lst92888)))
          (kont9277992887 x9268092889)))))
  (define (<= . lst)
    (let ((kont9278192890 (prim car lst)))
      (let ((lst92891 (prim cdr lst)))
        (let ((x9268192892 (apply-prim <= lst92891)))
          (kont9278192890 x9268192892)))))
  (define (>= . lst)
    (let ((kont9278392893 (prim car lst)))
      (let ((lst92894 (prim cdr lst)))
        (let ((x9268292895 (apply-prim >= lst92894)))
          (kont9278392893 x9268292895)))))
  (define (null? kont92785 x)
    (let ((x9268392896 (prim null? x))) (kont92785 x9268392896)))
  (define (equal? kont92786 x y)
    (let ((x9268492897 (prim equal? x y))) (kont92786 x9268492897)))
  (define (eq? kont92787 x y)
    (let ((x9268592898 (prim eq? x y))) (kont92787 x9268592898)))
  (define (cons kont92788 a b)
    (let ((x9268692899 (prim cons a b))) (kont92788 x9268692899)))
  (define (car kont92789 lst)
    (let ((x9268792900 (prim car lst))) (kont92789 x9268792900)))
  (define (cdr kont92790 lst)
    (let ((x9268892901 (prim cdr lst))) (kont92790 x9268892901)))
  (define (even? kont92791 x)
    (let ((a9268992902 '0))
      (let ((a9269092903 '2))
        (let ((f9279292904
               (lambda (a9269192905)
                 (equal? kont92791 a9268992902 a9269192905))))
          (modulo f9279292904 x a9269092903)))))
  (define (odd? kont92793 x)
    (let ((a9269292906 '1))
      (let ((a9269392907 '2))
        (let ((f9279492908
               (lambda (a9269492909)
                 (equal? kont92793 a9269292906 a9269492909))))
          (modulo f9279492908 x a9269392907)))))
  (define (list . x)
    (let ((kont9279592910 (prim car x)))
      (let ((x92911 (prim cdr x))) (kont9279592910 x92911))))
  (define (member? kont92797 x lst)
    (let ((f9280192912
           (lambda (a9269592913)
             (if a9269592913
               (let ((x9269692914 '#f)) (kont92797 x9269692914))
               (let ((f9280092915
                      (lambda (a9269792916)
                        (let ((f9279992917
                               (lambda (a9269892918)
                                 (if a9269892918
                                   (let ((x9269992919 '#t))
                                     (kont92797 x9269992919))
                                   (let ((f9279892920
                                          (lambda (a9270092921)
                                            (member?
                                             kont92797
                                             x
                                             a9270092921))))
                                     (cdr f9279892920 lst))))))
                          (equal? f9279992917 a9269792916 x)))))
                 (car f9280092915 lst))))))
      (null? f9280192912 lst)))
  (define (foldl kont92802 fun acc lst)
    (let ((f9280692922
           (lambda (a9270192923)
             (if a9270192923
               (kont92802 acc)
               (let ((f9280592924
                      (lambda (a9270292925)
                        (let ((f9280492926
                               (lambda (a9270392927)
                                 (let ((f9280392928
                                        (lambda (a9270492929)
                                          (foldl
                                           kont92802
                                           fun
                                           a9270392927
                                           a9270492929))))
                                   (cdr f9280392928 lst)))))
                          (fun f9280492926 a9270292925 acc)))))
                 (car f9280592924 lst))))))
      (null? f9280692922 lst)))
  (define (reverse-helper kont92807 lst lst2)
    (let ((f9281192930
           (lambda (a9270592931)
             (if a9270592931
               (kont92807 lst2)
               (let ((f9281092932
                      (lambda (a9270692933)
                        (let ((f9280992934
                               (lambda (a9270792935)
                                 (let ((f9280892936
                                        (lambda (a9270892937)
                                          (reverse-helper
                                           kont92807
                                           a9270692933
                                           a9270892937))))
                                   (cons f9280892936 a9270792935 lst2)))))
                          (car f9280992934 lst)))))
                 (cdr f9281092932 lst))))))
      (null? f9281192930 lst)))
  (define (reverse kont92812 lst)
    (let ((f9281392938
           (lambda (a9270992939) (reverse-helper kont92812 lst a9270992939))))
      (list f9281392938)))
  (define (take-helper kont92814 lst n lst2)
    (let ((a9271092940 '0))
      (let ((f9282092941
             (lambda (a9271192942)
               (if a9271192942
                 (let ((f9281592943
                        (lambda (x9271292944) (kont92814 x9271292944))))
                   (reverse f9281592943 lst2))
                 (let ((f9281992945
                        (lambda (a9271392946)
                          (let ((a9271492947 '1))
                            (let ((f9281892948
                                   (lambda (a9271592949)
                                     (let ((f9281792950
                                            (lambda (a9271692951)
                                              (let ((f9281692952
                                                     (lambda (a9271792953)
                                                       (take-helper
                                                        kont92814
                                                        a9271392946
                                                        a9271592949
                                                        a9271792953))))
                                                (cons
                                                 f9281692952
                                                 a9271692951
                                                 lst2)))))
                                       (car f9281792950 lst)))))
                              (- f9281892948 n a9271492947))))))
                   (cdr f9281992945 lst))))))
        (= f9282092941 n a9271092940))))
  (define (take kont92821 lst n)
    (let ((f9282292954
           (lambda (a9271892955) (take-helper kont92821 lst n a9271892955))))
      (list f9282292954)))
  (define (length kont92823 lst)
    (let ((f9282692956
           (lambda (a9271992957)
             (if a9271992957
               (let ((x9272092958 '0)) (kont92823 x9272092958))
               (let ((a9272192959 '1))
                 (let ((f9282592960
                        (lambda (a9272292961)
                          (let ((f9282492962
                                 (lambda (a9272392963)
                                   (+ kont92823 a9272192959 a9272392963))))
                            (length f9282492962 a9272292961)))))
                   (cdr f9282592960 lst)))))))
      (null? f9282692956 lst)))
  (define (map kont92827 proc lst)
    (let ((f9283392964
           (lambda (a9272492965)
             (if a9272492965
               (let ((f9282892966
                      (lambda (x9272592967) (kont92827 x9272592967))))
                 (list f9282892966))
               (let ((f9283292968
                      (lambda (a9272692969)
                        (let ((f9283192970
                               (lambda (a9272792971)
                                 (let ((f9283092972
                                        (lambda (a9272892973)
                                          (let ((f9282992974
                                                 (lambda (a9272992975)
                                                   (cons
                                                    kont92827
                                                    a9272792971
                                                    a9272992975))))
                                            (map
                                             f9282992974
                                             proc
                                             a9272892973)))))
                                   (cdr f9283092972 lst)))))
                          (proc f9283192970 a9272692969)))))
                 (car f9283292968 lst))))))
      (null? f9283392964 lst)))
  (define (filter kont92834 op lst)
    (let ((f9284292976
           (lambda (a9273092977)
             (if a9273092977
               (let ((f9283592978
                      (lambda (x9273192979) (kont92834 x9273192979))))
                 (list f9283592978))
               (let ((f9284192980
                      (lambda (a9273292981)
                        (let ((f9284092982
                               (lambda (a9273392983)
                                 (if a9273392983
                                   (let ((f9283892984
                                          (lambda (a9273492985)
                                            (let ((f9283792986
                                                   (lambda (a9273592987)
                                                     (let ((f9283692988
                                                            (lambda (a9273692989)
                                                              (cons
                                                               kont92834
                                                               a9273492985
                                                               a9273692989))))
                                                       (filter
                                                        f9283692988
                                                        op
                                                        a9273592987)))))
                                              (cdr f9283792986 lst)))))
                                     (car f9283892984 lst))
                                   (let ((f9283992990
                                          (lambda (a9273792991)
                                            (filter
                                             kont92834
                                             op
                                             a9273792991))))
                                     (cdr f9283992990 lst))))))
                          (op f9284092982 a9273292981)))))
                 (car f9284192980 lst))))))
      (null? f9284292976 lst)))
  (define (drop kont92843 lst n)
    (let ((a9273892992 '0))
      (let ((f9284692993
             (lambda (a9273992994)
               (if a9273992994
                 (kont92843 lst)
                 (let ((f9284592995
                        (lambda (a9274092996)
                          (let ((a9274192997 '1))
                            (let ((f9284492998
                                   (lambda (a9274292999)
                                     (drop
                                      kont92843
                                      a9274092996
                                      a9274292999))))
                              (- f9284492998 n a9274192997))))))
                   (cdr f9284592995 lst))))))
        (= f9284692993 n a9273892992))))
  (define (foldr kont92847 proc acc lst)
    (let ((f9285193000
           (lambda (a9274393001)
             (if a9274393001
               (kont92847 acc)
               (let ((f9285093002
                      (lambda (a9274493003)
                        (let ((f9284993004
                               (lambda (a9274593005)
                                 (let ((f9284893006
                                        (lambda (a9274693007)
                                          (proc
                                           kont92847
                                           a9274493003
                                           a9274693007))))
                                   (foldr f9284893006 proc acc a9274593005)))))
                          (cdr f9284993004 lst)))))
                 (car f9285093002 lst))))))
      (null? f9285193000 lst)))
  (define (append kont92852 lst1 lst2)
    (let ((f9285693008
           (lambda (a9274793009)
             (if a9274793009
               (kont92852 lst2)
               (let ((f9285593010
                      (lambda (a9274893011)
                        (let ((f9285493012
                               (lambda (a9274993013)
                                 (let ((f9285393014
                                        (lambda (a9275093015)
                                          (cons
                                           kont92852
                                           a9274893011
                                           a9275093015))))
                                   (append f9285393014 a9274993013 lst2)))))
                          (cdr f9285493012 lst1)))))
                 (car f9285593010 lst1))))))
      (null? f9285693008 lst1)))
  (define (hash . lst)
    (let ((kont9285793016 (prim car lst)))
      (let ((lst93017 (prim cdr lst)))
        (let ((x9275193018 (apply-prim hash lst93017)))
          (kont9285793016 x9275193018)))))
  (define (hash-ref kont92859 h k)
    (let ((x9275293019 (prim hash-ref h k))) (kont92859 x9275293019)))
  (define (hash-set kont92860 h k v)
    (let ((x9275393020 (prim hash-set h k v))) (kont92860 x9275393020)))
  (define (hash-has-key? kont92861 h k)
    (let ((x9275493021 (prim hash-has-key? h k))) (kont92861 x9275493021)))
  (define (hash-count kont92862 h)
    (let ((x9275593022 (prim hash-count h))) (kont92862 x9275593022)))
  (define (call kont92863)
    (let ((a9275693023 '1))
      (let ((a9275793024 '2))
        (let ((f9286593025
               (lambda (a9275893026)
                 (if a9275893026
                   (let ((a9275993027 '1))
                     (let ((a9276093028 '2))
                       (equal? kont92863 a9275993027 a9276093028)))
                   (let ((a9276193029 '3))
                     (let ((f9286493030
                            (lambda (a9276293031)
                              (if a9276293031
                                (let ((a9276393032 '3))
                                  (even? kont92863 a9276393032))
                                (let ((a9276493033 '2))
                                  (odd? kont92863 a9276493033))))))
                       (even? f9286493030 a9276193029)))))))
          (equal? f9286593025 a9275693023 a9275793024)))))
  (define (brouhaha_main kont92866)
    (let ((f9286793034 (lambda (x9276593035) (kont92866 x9276593035))))
      (call f9286793034))))
