'((define (+ . lst)
    (let ((kont131999132099 (prim car lst)))
      (let ((lst132100 (prim cdr lst)))
        (let ((x131912132101 (apply-prim + lst132100)))
          (kont131999132099 x131912132101)))))
  (define (- . lst)
    (let ((kont132001132102 (prim car lst)))
      (let ((lst132103 (prim cdr lst)))
        (let ((x131913132104 (apply-prim - lst132103)))
          (kont132001132102 x131913132104)))))
  (define (* . lst)
    (let ((kont132003132105 (prim car lst)))
      (let ((lst132106 (prim cdr lst)))
        (let ((x131914132107 (apply-prim * lst132106)))
          (kont132003132105 x131914132107)))))
  (define (modulo kont132005 a b)
    (let ((x131915132108 (prim modulo a b))) (kont132005 x131915132108)))
  (define (/ . lst)
    (let ((kont132006132109 (prim car lst)))
      (let ((lst132110 (prim cdr lst)))
        (let ((x131916132111 (apply-prim / lst132110)))
          (kont132006132109 x131916132111)))))
  (define (= . lst)
    (let ((kont132008132112 (prim car lst)))
      (let ((lst132113 (prim cdr lst)))
        (let ((x131917132114 (apply-prim = lst132113)))
          (kont132008132112 x131917132114)))))
  (define (> . lst)
    (let ((kont132010132115 (prim car lst)))
      (let ((lst132116 (prim cdr lst)))
        (let ((x131918132117 (apply-prim > lst132116)))
          (kont132010132115 x131918132117)))))
  (define (< . lst)
    (let ((kont132012132118 (prim car lst)))
      (let ((lst132119 (prim cdr lst)))
        (let ((x131919132120 (apply-prim < lst132119)))
          (kont132012132118 x131919132120)))))
  (define (<= . lst)
    (let ((kont132014132121 (prim car lst)))
      (let ((lst132122 (prim cdr lst)))
        (let ((x131920132123 (apply-prim <= lst132122)))
          (kont132014132121 x131920132123)))))
  (define (>= . lst)
    (let ((kont132016132124 (prim car lst)))
      (let ((lst132125 (prim cdr lst)))
        (let ((x131921132126 (apply-prim >= lst132125)))
          (kont132016132124 x131921132126)))))
  (define (null? kont132018 x)
    (let ((x131922132127 (prim null? x))) (kont132018 x131922132127)))
  (define (equal? kont132019 x y)
    (let ((x131923132128 (prim equal? x y))) (kont132019 x131923132128)))
  (define (eq? kont132020 x y)
    (let ((x131924132129 (prim eq? x y))) (kont132020 x131924132129)))
  (define (cons kont132021 a b)
    (let ((x131925132130 (prim cons a b))) (kont132021 x131925132130)))
  (define (car kont132022 lst)
    (let ((x131926132131 (prim car lst))) (kont132022 x131926132131)))
  (define (cdr kont132023 lst)
    (let ((x131927132132 (prim cdr lst))) (kont132023 x131927132132)))
  (define (even? kont132024 x)
    (let ((a131928132133 '0))
      (let ((a131929132134 '2))
        (let ((f132025132135
               (lambda (a131930132136)
                 (equal? kont132024 a131928132133 a131930132136))))
          (modulo f132025132135 x a131929132134)))))
  (define (odd? kont132026 x)
    (let ((a131931132137 '1))
      (let ((a131932132138 '2))
        (let ((f132027132139
               (lambda (a131933132140)
                 (equal? kont132026 a131931132137 a131933132140))))
          (modulo f132027132139 x a131932132138)))))
  (define (list . x)
    (let ((kont132028132141 (prim car x)))
      (let ((x132142 (prim cdr x))) (kont132028132141 x132142))))
  (define (member? kont132030 x lst)
    (let ((f132034132143
           (lambda (a131934132144)
             (if a131934132144
               (let ((x131935132145 '#f)) (kont132030 x131935132145))
               (let ((f132033132146
                      (lambda (a131936132147)
                        (let ((f132032132148
                               (lambda (a131937132149)
                                 (if a131937132149
                                   (let ((x131938132150 '#t))
                                     (kont132030 x131938132150))
                                   (let ((f132031132151
                                          (lambda (a131939132152)
                                            (member?
                                             kont132030
                                             x
                                             a131939132152))))
                                     (cdr f132031132151 lst))))))
                          (equal? f132032132148 a131936132147 x)))))
                 (car f132033132146 lst))))))
      (null? f132034132143 lst)))
  (define (foldl kont132035 fun acc lst)
    (let ((f132039132153
           (lambda (a131940132154)
             (if a131940132154
               (kont132035 acc)
               (let ((f132038132155
                      (lambda (a131941132156)
                        (let ((f132037132157
                               (lambda (a131942132158)
                                 (let ((f132036132159
                                        (lambda (a131943132160)
                                          (foldl
                                           kont132035
                                           fun
                                           a131942132158
                                           a131943132160))))
                                   (cdr f132036132159 lst)))))
                          (fun f132037132157 a131941132156 acc)))))
                 (car f132038132155 lst))))))
      (null? f132039132153 lst)))
  (define (reverse-helper kont132040 lst lst2)
    (let ((f132044132161
           (lambda (a131944132162)
             (if a131944132162
               (kont132040 lst2)
               (let ((f132043132163
                      (lambda (a131945132164)
                        (let ((f132042132165
                               (lambda (a131946132166)
                                 (let ((f132041132167
                                        (lambda (a131947132168)
                                          (reverse-helper
                                           kont132040
                                           a131945132164
                                           a131947132168))))
                                   (cons f132041132167 a131946132166 lst2)))))
                          (car f132042132165 lst)))))
                 (cdr f132043132163 lst))))))
      (null? f132044132161 lst)))
  (define (reverse kont132045 lst)
    (let ((f132046132169
           (lambda (a131948132170)
             (reverse-helper kont132045 lst a131948132170))))
      (list f132046132169)))
  (define (take-helper kont132047 lst n lst2)
    (let ((a131949132171 '0))
      (let ((f132053132172
             (lambda (a131950132173)
               (if a131950132173
                 (let ((f132048132174
                        (lambda (x131951132175) (kont132047 x131951132175))))
                   (reverse f132048132174 lst2))
                 (let ((f132052132176
                        (lambda (a131952132177)
                          (let ((a131953132178 '1))
                            (let ((f132051132179
                                   (lambda (a131954132180)
                                     (let ((f132050132181
                                            (lambda (a131955132182)
                                              (let ((f132049132183
                                                     (lambda (a131956132184)
                                                       (take-helper
                                                        kont132047
                                                        a131952132177
                                                        a131954132180
                                                        a131956132184))))
                                                (cons
                                                 f132049132183
                                                 a131955132182
                                                 lst2)))))
                                       (car f132050132181 lst)))))
                              (- f132051132179 n a131953132178))))))
                   (cdr f132052132176 lst))))))
        (= f132053132172 n a131949132171))))
  (define (take kont132054 lst n)
    (let ((f132055132185
           (lambda (a131957132186)
             (take-helper kont132054 lst n a131957132186))))
      (list f132055132185)))
  (define (length kont132056 lst)
    (let ((f132059132187
           (lambda (a131958132188)
             (if a131958132188
               (let ((x131959132189 '0)) (kont132056 x131959132189))
               (let ((a131960132190 '1))
                 (let ((f132058132191
                        (lambda (a131961132192)
                          (let ((f132057132193
                                 (lambda (a131962132194)
                                   (+
                                    kont132056
                                    a131960132190
                                    a131962132194))))
                            (length f132057132193 a131961132192)))))
                   (cdr f132058132191 lst)))))))
      (null? f132059132187 lst)))
  (define (map kont132060 proc lst)
    (let ((f132066132195
           (lambda (a131963132196)
             (if a131963132196
               (let ((f132061132197
                      (lambda (x131964132198) (kont132060 x131964132198))))
                 (list f132061132197))
               (let ((f132065132199
                      (lambda (a131965132200)
                        (let ((f132064132201
                               (lambda (a131966132202)
                                 (let ((f132063132203
                                        (lambda (a131967132204)
                                          (let ((f132062132205
                                                 (lambda (a131968132206)
                                                   (cons
                                                    kont132060
                                                    a131966132202
                                                    a131968132206))))
                                            (map
                                             f132062132205
                                             proc
                                             a131967132204)))))
                                   (cdr f132063132203 lst)))))
                          (proc f132064132201 a131965132200)))))
                 (car f132065132199 lst))))))
      (null? f132066132195 lst)))
  (define (filter kont132067 op lst)
    (let ((f132075132207
           (lambda (a131969132208)
             (if a131969132208
               (let ((f132068132209
                      (lambda (x131970132210) (kont132067 x131970132210))))
                 (list f132068132209))
               (let ((f132074132211
                      (lambda (a131971132212)
                        (let ((f132073132213
                               (lambda (a131972132214)
                                 (if a131972132214
                                   (let ((f132071132215
                                          (lambda (a131973132216)
                                            (let ((f132070132217
                                                   (lambda (a131974132218)
                                                     (let ((f132069132219
                                                            (lambda (a131975132220)
                                                              (cons
                                                               kont132067
                                                               a131973132216
                                                               a131975132220))))
                                                       (filter
                                                        f132069132219
                                                        op
                                                        a131974132218)))))
                                              (cdr f132070132217 lst)))))
                                     (car f132071132215 lst))
                                   (let ((f132072132221
                                          (lambda (a131976132222)
                                            (filter
                                             kont132067
                                             op
                                             a131976132222))))
                                     (cdr f132072132221 lst))))))
                          (op f132073132213 a131971132212)))))
                 (car f132074132211 lst))))))
      (null? f132075132207 lst)))
  (define (drop kont132076 lst n)
    (let ((a131977132223 '0))
      (let ((f132079132224
             (lambda (a131978132225)
               (if a131978132225
                 (kont132076 lst)
                 (let ((f132078132226
                        (lambda (a131979132227)
                          (let ((a131980132228 '1))
                            (let ((f132077132229
                                   (lambda (a131981132230)
                                     (drop
                                      kont132076
                                      a131979132227
                                      a131981132230))))
                              (- f132077132229 n a131980132228))))))
                   (cdr f132078132226 lst))))))
        (= f132079132224 n a131977132223))))
  (define (foldr kont132080 proc acc lst)
    (let ((f132084132231
           (lambda (a131982132232)
             (if a131982132232
               (kont132080 acc)
               (let ((f132083132233
                      (lambda (a131983132234)
                        (let ((f132082132235
                               (lambda (a131984132236)
                                 (let ((f132081132237
                                        (lambda (a131985132238)
                                          (proc
                                           kont132080
                                           a131983132234
                                           a131985132238))))
                                   (foldr
                                    f132081132237
                                    proc
                                    acc
                                    a131984132236)))))
                          (cdr f132082132235 lst)))))
                 (car f132083132233 lst))))))
      (null? f132084132231 lst)))
  (define (append kont132085 lst1 lst2)
    (let ((f132089132239
           (lambda (a131986132240)
             (if a131986132240
               (kont132085 lst2)
               (let ((f132088132241
                      (lambda (a131987132242)
                        (let ((f132087132243
                               (lambda (a131988132244)
                                 (let ((f132086132245
                                        (lambda (a131989132246)
                                          (cons
                                           kont132085
                                           a131987132242
                                           a131989132246))))
                                   (append
                                    f132086132245
                                    a131988132244
                                    lst2)))))
                          (cdr f132087132243 lst1)))))
                 (car f132088132241 lst1))))))
      (null? f132089132239 lst1)))
  (define (hash . lst)
    (let ((kont132090132247 (prim car lst)))
      (let ((lst132248 (prim cdr lst)))
        (let ((x131990132249 (apply-prim hash lst132248)))
          (kont132090132247 x131990132249)))))
  (define (hash-ref kont132092 h k)
    (let ((x131991132250 (prim hash-ref h k))) (kont132092 x131991132250)))
  (define (hash-set kont132093 h k v)
    (let ((x131992132251 (prim hash-set h k v))) (kont132093 x131992132251)))
  (define (hash-has-key? kont132094 h k)
    (let ((x131993132252 (prim hash-has-key? h k)))
      (kont132094 x131993132252)))
  (define (hash-count kont132095 h)
    (let ((x131994132253 (prim hash-count h))) (kont132095 x131994132253)))
  (define (call kont132096 x y z)
    (let ((f132097132254 (lambda (x131995132255) (kont132096 x131995132255))))
      (+ f132097132254 x y z)))
  (define (brouhaha_main kont132098)
    (let ((a131996132256 '1))
      (let ((a131997132257 '2))
        (let ((a131998132258 '3))
          (call kont132098 a131996132256 a131997132257 a131998132258))))))
