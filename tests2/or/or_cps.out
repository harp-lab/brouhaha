'((define (+ . lst)
    (let ((kont5189852000 (prim car lst)))
      (let ((lst52001 (prim cdr lst)))
        (let ((x5180552002 (apply-prim + lst52001)))
          (kont5189852000 x5180552002)))))
  (define (- . lst)
    (let ((kont5190052003 (prim car lst)))
      (let ((lst52004 (prim cdr lst)))
        (let ((x5180652005 (apply-prim - lst52004)))
          (kont5190052003 x5180652005)))))
  (define (* . lst)
    (let ((kont5190252006 (prim car lst)))
      (let ((lst52007 (prim cdr lst)))
        (let ((x5180752008 (apply-prim * lst52007)))
          (kont5190252006 x5180752008)))))
  (define (modulo kont51904 a b)
    (let ((x5180852009 (prim modulo a b))) (kont51904 x5180852009)))
  (define (/ . lst)
    (let ((kont5190552010 (prim car lst)))
      (let ((lst52011 (prim cdr lst)))
        (let ((x5180952012 (apply-prim / lst52011)))
          (kont5190552010 x5180952012)))))
  (define (= . lst)
    (let ((kont5190752013 (prim car lst)))
      (let ((lst52014 (prim cdr lst)))
        (let ((x5181052015 (apply-prim = lst52014)))
          (kont5190752013 x5181052015)))))
  (define (> . lst)
    (let ((kont5190952016 (prim car lst)))
      (let ((lst52017 (prim cdr lst)))
        (let ((x5181152018 (apply-prim > lst52017)))
          (kont5190952016 x5181152018)))))
  (define (< . lst)
    (let ((kont5191152019 (prim car lst)))
      (let ((lst52020 (prim cdr lst)))
        (let ((x5181252021 (apply-prim < lst52020)))
          (kont5191152019 x5181252021)))))
  (define (<= . lst)
    (let ((kont5191352022 (prim car lst)))
      (let ((lst52023 (prim cdr lst)))
        (let ((x5181352024 (apply-prim <= lst52023)))
          (kont5191352022 x5181352024)))))
  (define (>= . lst)
    (let ((kont5191552025 (prim car lst)))
      (let ((lst52026 (prim cdr lst)))
        (let ((x5181452027 (apply-prim >= lst52026)))
          (kont5191552025 x5181452027)))))
  (define (null? kont51917 x)
    (let ((x5181552028 (prim null? x))) (kont51917 x5181552028)))
  (define (equal? kont51918 x y)
    (let ((x5181652029 (prim equal? x y))) (kont51918 x5181652029)))
  (define (eq? kont51919 x y)
    (let ((x5181752030 (prim eq? x y))) (kont51919 x5181752030)))
  (define (cons kont51920 a b)
    (let ((x5181852031 (prim cons a b))) (kont51920 x5181852031)))
  (define (car kont51921 lst)
    (let ((x5181952032 (prim car lst))) (kont51921 x5181952032)))
  (define (cdr kont51922 lst)
    (let ((x5182052033 (prim cdr lst))) (kont51922 x5182052033)))
  (define (even? kont51923 x)
    (let ((a5182152034 '0))
      (let ((a5182252035 '2))
        (let ((f5192452036
               (lambda (a5182352037)
                 (equal? kont51923 a5182152034 a5182352037))))
          (modulo f5192452036 x a5182252035)))))
  (define (odd? kont51925 x)
    (let ((a5182452038 '1))
      (let ((a5182552039 '2))
        (let ((f5192652040
               (lambda (a5182652041)
                 (equal? kont51925 a5182452038 a5182652041))))
          (modulo f5192652040 x a5182552039)))))
  (define (list . x)
    (let ((kont5192752042 (prim car x)))
      (let ((x52043 (prim cdr x))) (kont5192752042 x52043))))
  (define (member? kont51929 x lst)
    (let ((f5193352044
           (lambda (a5182752045)
             (if a5182752045
               (let ((x5182852046 '#f)) (kont51929 x5182852046))
               (let ((f5193252047
                      (lambda (a5182952048)
                        (let ((f5193152049
                               (lambda (a5183052050)
                                 (if a5183052050
                                   (let ((x5183152051 '#t))
                                     (kont51929 x5183152051))
                                   (let ((f5193052052
                                          (lambda (a5183252053)
                                            (member?
                                             kont51929
                                             x
                                             a5183252053))))
                                     (cdr f5193052052 lst))))))
                          (equal? f5193152049 a5182952048 x)))))
                 (car f5193252047 lst))))))
      (null? f5193352044 lst)))
  (define (foldl kont51934 fun acc lst)
    (let ((f5193852054
           (lambda (a5183352055)
             (if a5183352055
               (kont51934 acc)
               (let ((f5193752056
                      (lambda (a5183452057)
                        (let ((f5193652058
                               (lambda (a5183552059)
                                 (let ((f5193552060
                                        (lambda (a5183652061)
                                          (foldl
                                           kont51934
                                           fun
                                           a5183552059
                                           a5183652061))))
                                   (cdr f5193552060 lst)))))
                          (fun f5193652058 a5183452057 acc)))))
                 (car f5193752056 lst))))))
      (null? f5193852054 lst)))
  (define (reverse-helper kont51939 lst lst2)
    (let ((f5194352062
           (lambda (a5183752063)
             (if a5183752063
               (kont51939 lst2)
               (let ((f5194252064
                      (lambda (a5183852065)
                        (let ((f5194152066
                               (lambda (a5183952067)
                                 (let ((f5194052068
                                        (lambda (a5184052069)
                                          (reverse-helper
                                           kont51939
                                           a5183852065
                                           a5184052069))))
                                   (cons f5194052068 a5183952067 lst2)))))
                          (car f5194152066 lst)))))
                 (cdr f5194252064 lst))))))
      (null? f5194352062 lst)))
  (define (reverse kont51944 lst)
    (let ((f5194552070
           (lambda (a5184152071) (reverse-helper kont51944 lst a5184152071))))
      (list f5194552070)))
  (define (take-helper kont51946 lst n lst2)
    (let ((a5184252072 '0))
      (let ((f5195252073
             (lambda (a5184352074)
               (if a5184352074
                 (let ((f5194752075
                        (lambda (x5184452076) (kont51946 x5184452076))))
                   (reverse f5194752075 lst2))
                 (let ((f5195152077
                        (lambda (a5184552078)
                          (let ((a5184652079 '1))
                            (let ((f5195052080
                                   (lambda (a5184752081)
                                     (let ((f5194952082
                                            (lambda (a5184852083)
                                              (let ((f5194852084
                                                     (lambda (a5184952085)
                                                       (take-helper
                                                        kont51946
                                                        a5184552078
                                                        a5184752081
                                                        a5184952085))))
                                                (cons
                                                 f5194852084
                                                 a5184852083
                                                 lst2)))))
                                       (car f5194952082 lst)))))
                              (- f5195052080 n a5184652079))))))
                   (cdr f5195152077 lst))))))
        (= f5195252073 n a5184252072))))
  (define (take kont51953 lst n)
    (let ((f5195452086
           (lambda (a5185052087) (take-helper kont51953 lst n a5185052087))))
      (list f5195452086)))
  (define (length kont51955 lst)
    (let ((f5195852088
           (lambda (a5185152089)
             (if a5185152089
               (let ((x5185252090 '0)) (kont51955 x5185252090))
               (let ((a5185352091 '1))
                 (let ((f5195752092
                        (lambda (a5185452093)
                          (let ((f5195652094
                                 (lambda (a5185552095)
                                   (+ kont51955 a5185352091 a5185552095))))
                            (length f5195652094 a5185452093)))))
                   (cdr f5195752092 lst)))))))
      (null? f5195852088 lst)))
  (define (map kont51959 proc lst)
    (let ((f5196552096
           (lambda (a5185652097)
             (if a5185652097
               (let ((f5196052098
                      (lambda (x5185752099) (kont51959 x5185752099))))
                 (list f5196052098))
               (let ((f5196452100
                      (lambda (a5185852101)
                        (let ((f5196352102
                               (lambda (a5185952103)
                                 (let ((f5196252104
                                        (lambda (a5186052105)
                                          (let ((f5196152106
                                                 (lambda (a5186152107)
                                                   (cons
                                                    kont51959
                                                    a5185952103
                                                    a5186152107))))
                                            (map
                                             f5196152106
                                             proc
                                             a5186052105)))))
                                   (cdr f5196252104 lst)))))
                          (proc f5196352102 a5185852101)))))
                 (car f5196452100 lst))))))
      (null? f5196552096 lst)))
  (define (filter kont51966 op lst)
    (let ((f5197452108
           (lambda (a5186252109)
             (if a5186252109
               (let ((f5196752110
                      (lambda (x5186352111) (kont51966 x5186352111))))
                 (list f5196752110))
               (let ((f5197352112
                      (lambda (a5186452113)
                        (let ((f5197252114
                               (lambda (a5186552115)
                                 (if a5186552115
                                   (let ((f5197052116
                                          (lambda (a5186652117)
                                            (let ((f5196952118
                                                   (lambda (a5186752119)
                                                     (let ((f5196852120
                                                            (lambda (a5186852121)
                                                              (cons
                                                               kont51966
                                                               a5186652117
                                                               a5186852121))))
                                                       (filter
                                                        f5196852120
                                                        op
                                                        a5186752119)))))
                                              (cdr f5196952118 lst)))))
                                     (car f5197052116 lst))
                                   (let ((f5197152122
                                          (lambda (a5186952123)
                                            (filter
                                             kont51966
                                             op
                                             a5186952123))))
                                     (cdr f5197152122 lst))))))
                          (op f5197252114 a5186452113)))))
                 (car f5197352112 lst))))))
      (null? f5197452108 lst)))
  (define (drop kont51975 lst n)
    (let ((a5187052124 '0))
      (let ((f5197852125
             (lambda (a5187152126)
               (if a5187152126
                 (kont51975 lst)
                 (let ((f5197752127
                        (lambda (a5187252128)
                          (let ((a5187352129 '1))
                            (let ((f5197652130
                                   (lambda (a5187452131)
                                     (drop
                                      kont51975
                                      a5187252128
                                      a5187452131))))
                              (- f5197652130 n a5187352129))))))
                   (cdr f5197752127 lst))))))
        (= f5197852125 n a5187052124))))
  (define (foldr kont51979 proc acc lst)
    (let ((f5198352132
           (lambda (a5187552133)
             (if a5187552133
               (kont51979 acc)
               (let ((f5198252134
                      (lambda (a5187652135)
                        (let ((f5198152136
                               (lambda (a5187752137)
                                 (let ((f5198052138
                                        (lambda (a5187852139)
                                          (proc
                                           kont51979
                                           a5187652135
                                           a5187852139))))
                                   (foldr f5198052138 proc acc a5187752137)))))
                          (cdr f5198152136 lst)))))
                 (car f5198252134 lst))))))
      (null? f5198352132 lst)))
  (define (append kont51984 lst1 lst2)
    (let ((f5198852140
           (lambda (a5187952141)
             (if a5187952141
               (kont51984 lst2)
               (let ((f5198752142
                      (lambda (a5188052143)
                        (let ((f5198652144
                               (lambda (a5188152145)
                                 (let ((f5198552146
                                        (lambda (a5188252147)
                                          (cons
                                           kont51984
                                           a5188052143
                                           a5188252147))))
                                   (append f5198552146 a5188152145 lst2)))))
                          (cdr f5198652144 lst1)))))
                 (car f5198752142 lst1))))))
      (null? f5198852140 lst1)))
  (define (hash . lst)
    (let ((kont5198952148 (prim car lst)))
      (let ((lst52149 (prim cdr lst)))
        (let ((x5188352150 (apply-prim hash lst52149)))
          (kont5198952148 x5188352150)))))
  (define (hash-ref kont51991 h k)
    (let ((x5188452151 (prim hash-ref h k))) (kont51991 x5188452151)))
  (define (hash-set kont51992 h k v)
    (let ((x5188552152 (prim hash-set h k v))) (kont51992 x5188552152)))
  (define (hash-has-key? kont51993 h k)
    (let ((x5188652153 (prim hash-has-key? h k))) (kont51993 x5188652153)))
  (define (hash-count kont51994 h)
    (let ((x5188752154 (prim hash-count h))) (kont51994 x5188752154)))
  (define (call kont51995)
    (let ((a5188852155 '1))
      (let ((a5188952156 '2))
        (let ((f5199752157
               (lambda (a5189052158)
                 (if a5189052158
                   (let ((a5189152159 '1))
                     (let ((a5189252160 '2))
                       (equal? kont51995 a5189152159 a5189252160)))
                   (let ((a5189352161 '3))
                     (let ((f5199652162
                            (lambda (a5189452163)
                              (if a5189452163
                                (let ((a5189552164 '3))
                                  (even? kont51995 a5189552164))
                                (let ((a5189652165 '2))
                                  (odd? kont51995 a5189652165))))))
                       (even? f5199652162 a5189352161)))))))
          (equal? f5199752157 a5188852155 a5188952156)))))
  (define (brouhaha_main kont51998)
    (let ((f5199952166 (lambda (x5189752167) (kont51998 x5189752167))))
      (call f5199952166))))
