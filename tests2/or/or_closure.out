'((proc
   (+ _50364 . lst)
   (let ((kont5009450196 (prim car lst)))
     (let ((lst50197 (prim cdr lst)))
       (let ((x5000150198 (apply-prim + lst50197)))
         (clo-app kont5009450196 x5000150198)))))
  (proc
   (- _50365 . lst)
   (let ((kont5009650199 (prim car lst)))
     (let ((lst50200 (prim cdr lst)))
       (let ((x5000250201 (apply-prim - lst50200)))
         (clo-app kont5009650199 x5000250201)))))
  (proc
   (* _50366 . lst)
   (let ((kont5009850202 (prim car lst)))
     (let ((lst50203 (prim cdr lst)))
       (let ((x5000350204 (apply-prim * lst50203)))
         (clo-app kont5009850202 x5000350204)))))
  (proc
   (modulo _50367 kont50100 a b)
   (let ((x5000450205 (prim modulo a b))) (clo-app kont50100 x5000450205)))
  (proc
   (/ _50368 . lst)
   (let ((kont5010150206 (prim car lst)))
     (let ((lst50207 (prim cdr lst)))
       (let ((x5000550208 (apply-prim / lst50207)))
         (clo-app kont5010150206 x5000550208)))))
  (proc
   (= _50369 . lst)
   (let ((kont5010350209 (prim car lst)))
     (let ((lst50210 (prim cdr lst)))
       (let ((x5000650211 (apply-prim = lst50210)))
         (clo-app kont5010350209 x5000650211)))))
  (proc
   (> _50370 . lst)
   (let ((kont5010550212 (prim car lst)))
     (let ((lst50213 (prim cdr lst)))
       (let ((x5000750214 (apply-prim > lst50213)))
         (clo-app kont5010550212 x5000750214)))))
  (proc
   (< _50371 . lst)
   (let ((kont5010750215 (prim car lst)))
     (let ((lst50216 (prim cdr lst)))
       (let ((x5000850217 (apply-prim < lst50216)))
         (clo-app kont5010750215 x5000850217)))))
  (proc
   (<= _50372 . lst)
   (let ((kont5010950218 (prim car lst)))
     (let ((lst50219 (prim cdr lst)))
       (let ((x5000950220 (apply-prim <= lst50219)))
         (clo-app kont5010950218 x5000950220)))))
  (proc
   (>= _50373 . lst)
   (let ((kont5011150221 (prim car lst)))
     (let ((lst50222 (prim cdr lst)))
       (let ((x5001050223 (apply-prim >= lst50222)))
         (clo-app kont5011150221 x5001050223)))))
  (proc
   (null? _50374 kont50113 x)
   (let ((x5001150224 (prim null? x))) (clo-app kont50113 x5001150224)))
  (proc
   (equal? _50375 kont50114 x y)
   (let ((x5001250225 (prim equal? x y))) (clo-app kont50114 x5001250225)))
  (proc
   (eq? _50376 kont50115 x y)
   (let ((x5001350226 (prim eq? x y))) (clo-app kont50115 x5001350226)))
  (proc
   (cons _50377 kont50116 a b)
   (let ((x5001450227 (prim cons a b))) (clo-app kont50116 x5001450227)))
  (proc
   (car _50378 kont50117 lst)
   (let ((x5001550228 (prim car lst))) (clo-app kont50117 x5001550228)))
  (proc
   (cdr _50379 kont50118 lst)
   (let ((x5001650229 (prim cdr lst))) (clo-app kont50118 x5001650229)))
  (proc
   (lam50380 env50381 a5001950233)
   (let ((a5001750230 (env-ref env50381 3)))
     (let ((kont50119 (env-ref env50381 2)))
       (let ((equal? (env-ref env50381 1)))
         (clo-app equal? kont50119 a5001750230 a5001950233)))))
  (proc
   (even? _50384 kont50119 x)
   (let ((a5001750230 '0))
     (let ((a5001850231 '2))
       (let ((f5012050232
              (make-closure lam50380 equal? kont50119 a5001750230)))
         (clo-app modulo f5012050232 x a5001850231)))))
  (proc
   (lam50385 env50386 a5002250237)
   (let ((equal? (env-ref env50386 3)))
     (let ((kont50121 (env-ref env50386 2)))
       (let ((a5002050234 (env-ref env50386 1)))
         (clo-app equal? kont50121 a5002050234 a5002250237)))))
  (proc
   (odd? _50389 kont50121 x)
   (let ((a5002050234 '1))
     (let ((a5002150235 '2))
       (let ((f5012250236
              (make-closure lam50385 a5002050234 kont50121 equal?)))
         (clo-app modulo f5012250236 x a5002150235)))))
  (proc
   (list _50390 . x)
   (let ((kont5012350238 (prim car x)))
     (let ((x50239 (prim cdr x))) (clo-app kont5012350238 x50239))))
  (proc
   (lam50393 env50394 a5002850249)
   (let ((x (env-ref env50394 3)))
     (let ((kont50125 (env-ref env50394 2)))
       (let ((member? (env-ref env50394 1)))
         (clo-app member? kont50125 x a5002850249)))))
  (proc
   (lam50395 env50396 a5002650246)
   (let ((cdr (env-ref env50396 5)))
     (let ((lst (env-ref env50396 4)))
       (let ((x (env-ref env50396 3)))
         (let ((kont50125 (env-ref env50396 2)))
           (let ((member? (env-ref env50396 1)))
             (if a5002650246
               (let ((x5002750247 '#t)) (clo-app kont50125 x5002750247))
               (let ((f5012650248 (make-closure lam50393 member? kont50125 x)))
                 (clo-app cdr f5012650248 lst)))))))))
  (proc
   (lam50397 env50398 a5002550244)
   (let ((cdr (env-ref env50398 6)))
     (let ((lst (env-ref env50398 5)))
       (let ((equal? (env-ref env50398 4)))
         (let ((x (env-ref env50398 3)))
           (let ((kont50125 (env-ref env50398 2)))
             (let ((member? (env-ref env50398 1)))
               (let ((f5012750245
                      (make-closure lam50395 member? kont50125 x lst cdr)))
                 (clo-app equal? f5012750245 a5002550244 x)))))))))
  (proc
   (lam50399 env50400 a5002350241)
   (let ((cdr (env-ref env50400 7)))
     (let ((lst (env-ref env50400 6)))
       (let ((equal? (env-ref env50400 5)))
         (let ((x (env-ref env50400 4)))
           (let ((member? (env-ref env50400 3)))
             (let ((kont50125 (env-ref env50400 2)))
               (let ((car (env-ref env50400 1)))
                 (if a5002350241
                   (let ((x5002450242 '#f)) (clo-app kont50125 x5002450242))
                   (let ((f5012850243
                          (make-closure
                           lam50397
                           member?
                           kont50125
                           x
                           equal?
                           lst
                           cdr)))
                     (clo-app car f5012850243 lst)))))))))))
  (proc
   (member? _50401 kont50125 x lst)
   (let ((f5012950240
          (make-closure lam50399 car kont50125 member? x equal? lst cdr)))
     (clo-app null? f5012950240 lst)))
  (proc
   (lam50402 env50403 a5003250257)
   (let ((kont50130 (env-ref env50403 4)))
     (let ((fun (env-ref env50403 3)))
       (let ((foldl (env-ref env50403 2)))
         (let ((a5003150255 (env-ref env50403 1)))
           (clo-app foldl kont50130 fun a5003150255 a5003250257))))))
  (proc
   (lam50404 env50405 a5003150255)
   (let ((cdr (env-ref env50405 5)))
     (let ((kont50130 (env-ref env50405 4)))
       (let ((lst (env-ref env50405 3)))
         (let ((fun (env-ref env50405 2)))
           (let ((foldl (env-ref env50405 1)))
             (let ((f5013150256
                    (make-closure lam50402 a5003150255 foldl fun kont50130)))
               (clo-app cdr f5013150256 lst))))))))
  (proc
   (lam50406 env50407 a5003050253)
   (let ((cdr (env-ref env50407 6)))
     (let ((kont50130 (env-ref env50407 5)))
       (let ((lst (env-ref env50407 4)))
         (let ((fun (env-ref env50407 3)))
           (let ((acc (env-ref env50407 2)))
             (let ((foldl (env-ref env50407 1)))
               (let ((f5013250254
                      (make-closure lam50404 foldl fun lst kont50130 cdr)))
                 (clo-app fun f5013250254 a5003050253 acc)))))))))
  (proc
   (lam50408 env50409 a5002950251)
   (let ((cdr (env-ref env50409 7)))
     (let ((kont50130 (env-ref env50409 6)))
       (let ((lst (env-ref env50409 5)))
         (let ((fun (env-ref env50409 4)))
           (let ((acc (env-ref env50409 3)))
             (let ((car (env-ref env50409 2)))
               (let ((foldl (env-ref env50409 1)))
                 (if a5002950251
                   (clo-app kont50130 acc)
                   (let ((f5013350252
                          (make-closure
                           lam50406
                           foldl
                           acc
                           fun
                           lst
                           kont50130
                           cdr)))
                     (clo-app car f5013350252 lst)))))))))))
  (proc
   (foldl _50410 kont50130 fun acc lst)
   (let ((f5013450250
          (make-closure lam50408 foldl car acc fun lst kont50130 cdr)))
     (clo-app null? f5013450250 lst)))
  (proc
   (lam50411 env50412 a5003650265)
   (let ((a5003450261 (env-ref env50412 3)))
     (let ((reverse-helper (env-ref env50412 2)))
       (let ((kont50135 (env-ref env50412 1)))
         (clo-app reverse-helper kont50135 a5003450261 a5003650265)))))
  (proc
   (lam50413 env50414 a5003550263)
   (let ((a5003450261 (env-ref env50414 5)))
     (let ((lst2 (env-ref env50414 4)))
       (let ((cons (env-ref env50414 3)))
         (let ((reverse-helper (env-ref env50414 2)))
           (let ((kont50135 (env-ref env50414 1)))
             (let ((f5013650264
                    (make-closure
                     lam50411
                     kont50135
                     reverse-helper
                     a5003450261)))
               (clo-app cons f5013650264 a5003550263 lst2))))))))
  (proc
   (lam50415 env50416 a5003450261)
   (let ((lst (env-ref env50416 6)))
     (let ((lst2 (env-ref env50416 5)))
       (let ((car (env-ref env50416 4)))
         (let ((cons (env-ref env50416 3)))
           (let ((reverse-helper (env-ref env50416 2)))
             (let ((kont50135 (env-ref env50416 1)))
               (let ((f5013750262
                      (make-closure
                       lam50413
                       kont50135
                       reverse-helper
                       cons
                       lst2
                       a5003450261)))
                 (clo-app car f5013750262 lst)))))))))
  (proc
   (lam50417 env50418 a5003350259)
   (let ((cdr (env-ref env50418 7)))
     (let ((lst (env-ref env50418 6)))
       (let ((lst2 (env-ref env50418 5)))
         (let ((car (env-ref env50418 4)))
           (let ((cons (env-ref env50418 3)))
             (let ((reverse-helper (env-ref env50418 2)))
               (let ((kont50135 (env-ref env50418 1)))
                 (if a5003350259
                   (clo-app kont50135 lst2)
                   (let ((f5013850260
                          (make-closure
                           lam50415
                           kont50135
                           reverse-helper
                           cons
                           car
                           lst2
                           lst)))
                     (clo-app cdr f5013850260 lst)))))))))))
  (proc
   (reverse-helper _50419 kont50135 lst lst2)
   (let ((f5013950258
          (make-closure
           lam50417
           kont50135
           reverse-helper
           cons
           car
           lst2
           lst
           cdr)))
     (clo-app null? f5013950258 lst)))
  (proc
   (lam50420 env50421 a5003750267)
   (let ((lst (env-ref env50421 3)))
     (let ((reverse-helper (env-ref env50421 2)))
       (let ((kont50140 (env-ref env50421 1)))
         (clo-app reverse-helper kont50140 lst a5003750267)))))
  (proc
   (reverse _50422 kont50140 lst)
   (let ((f5014150266 (make-closure lam50420 kont50140 reverse-helper lst)))
     (clo-app list f5014150266)))
  (proc
   (lam50423 env50424 x5004050272)
   (let ((kont50142 (env-ref env50424 1))) (clo-app kont50142 x5004050272)))
  (proc
   (lam50425 env50426 a5004550281)
   (let ((a5004150274 (env-ref env50426 4)))
     (let ((a5004350277 (env-ref env50426 3)))
       (let ((take-helper (env-ref env50426 2)))
         (let ((kont50142 (env-ref env50426 1)))
           (clo-app
            take-helper
            kont50142
            a5004150274
            a5004350277
            a5004550281))))))
  (proc
   (lam50427 env50428 a5004450279)
   (let ((a5004150274 (env-ref env50428 6)))
     (let ((a5004350277 (env-ref env50428 5)))
       (let ((take-helper (env-ref env50428 4)))
         (let ((lst2 (env-ref env50428 3)))
           (let ((kont50142 (env-ref env50428 2)))
             (let ((cons (env-ref env50428 1)))
               (let ((f5014450280
                      (make-closure
                       lam50425
                       kont50142
                       take-helper
                       a5004350277
                       a5004150274)))
                 (clo-app cons f5014450280 a5004450279 lst2)))))))))
  (proc
   (lam50429 env50430 a5004350277)
   (let ((a5004150274 (env-ref env50430 7)))
     (let ((lst (env-ref env50430 6)))
       (let ((car (env-ref env50430 5)))
         (let ((take-helper (env-ref env50430 4)))
           (let ((lst2 (env-ref env50430 3)))
             (let ((kont50142 (env-ref env50430 2)))
               (let ((cons (env-ref env50430 1)))
                 (let ((f5014550278
                        (make-closure
                         lam50427
                         cons
                         kont50142
                         lst2
                         take-helper
                         a5004350277
                         a5004150274)))
                   (clo-app car f5014550278 lst))))))))))
  (proc
   (lam50432 env50433 a5004150274)
   (let ((lst (env-ref env50433 8)))
     (let ((- (env-ref env50433 7)))
       (let ((take-helper (env-ref env50433 6)))
         (let ((lst2 (env-ref env50433 5)))
           (let ((n (env-ref env50433 4)))
             (let ((car (env-ref env50433 3)))
               (let ((kont50142 (env-ref env50433 2)))
                 (let ((cons (env-ref env50433 1)))
                   (let ((a5004250275 '1))
                     (let ((f5014650276
                            (make-closure
                             lam50429
                             cons
                             kont50142
                             lst2
                             take-helper
                             car
                             lst
                             a5004150274)))
                       (clo-app - f5014650276 n a5004250275))))))))))))
  (proc
   (lam50434 env50435 a5003950270)
   (let ((cdr (env-ref env50435 10)))
     (let ((lst (env-ref env50435 9)))
       (let ((reverse (env-ref env50435 8)))
         (let ((- (env-ref env50435 7)))
           (let ((take-helper (env-ref env50435 6)))
             (let ((lst2 (env-ref env50435 5)))
               (let ((n (env-ref env50435 4)))
                 (let ((car (env-ref env50435 3)))
                   (let ((kont50142 (env-ref env50435 2)))
                     (let ((cons (env-ref env50435 1)))
                       (if a5003950270
                         (let ((f5014350271 (make-closure lam50423 kont50142)))
                           (clo-app reverse f5014350271 lst2))
                         (let ((f5014750273
                                (make-closure
                                 lam50432
                                 cons
                                 kont50142
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 lst)))
                           (clo-app cdr f5014750273 lst))))))))))))))
  (proc
   (take-helper _50437 kont50142 lst n lst2)
   (let ((a5003850268 '0))
     (let ((f5014850269
            (make-closure
             lam50434
             cons
             kont50142
             car
             n
             lst2
             take-helper
             -
             reverse
             lst
             cdr)))
       (clo-app = f5014850269 n a5003850268))))
  (proc
   (lam50438 env50439 a5004650283)
   (let ((lst (env-ref env50439 4)))
     (let ((kont50149 (env-ref env50439 3)))
       (let ((take-helper (env-ref env50439 2)))
         (let ((n (env-ref env50439 1)))
           (clo-app take-helper kont50149 lst n a5004650283))))))
  (proc
   (take _50440 kont50149 lst n)
   (let ((f5015050282 (make-closure lam50438 n take-helper kont50149 lst)))
     (clo-app list f5015050282)))
  (proc
   (lam50442 env50443 a5005150291)
   (let ((kont50151 (env-ref env50443 3)))
     (let ((+ (env-ref env50443 2)))
       (let ((a5004950287 (env-ref env50443 1)))
         (clo-app + kont50151 a5004950287 a5005150291)))))
  (proc
   (lam50444 env50445 a5005050289)
   (let ((length (env-ref env50445 4)))
     (let ((kont50151 (env-ref env50445 3)))
       (let ((+ (env-ref env50445 2)))
         (let ((a5004950287 (env-ref env50445 1)))
           (let ((f5015250290 (make-closure lam50442 a5004950287 + kont50151)))
             (clo-app length f5015250290 a5005050289)))))))
  (proc
   (lam50447 env50448 a5004750285)
   (let ((cdr (env-ref env50448 5)))
     (let ((lst (env-ref env50448 4)))
       (let ((length (env-ref env50448 3)))
         (let ((kont50151 (env-ref env50448 2)))
           (let ((+ (env-ref env50448 1)))
             (if a5004750285
               (let ((x5004850286 '0)) (clo-app kont50151 x5004850286))
               (let ((a5004950287 '1))
                 (let ((f5015350288
                        (make-closure
                         lam50444
                         a5004950287
                         +
                         kont50151
                         length)))
                   (clo-app cdr f5015350288 lst))))))))))
  (proc
   (length _50449 kont50151 lst)
   (let ((f5015450284 (make-closure lam50447 + kont50151 length lst cdr)))
     (clo-app null? f5015450284 lst)))
  (proc
   (lam50450 env50451 x5005350295)
   (let ((kont50155 (env-ref env50451 1))) (clo-app kont50155 x5005350295)))
  (proc
   (lam50452 env50453 a5005750303)
   (let ((cons (env-ref env50453 3)))
     (let ((kont50155 (env-ref env50453 2)))
       (let ((a5005550299 (env-ref env50453 1)))
         (clo-app cons kont50155 a5005550299 a5005750303)))))
  (proc
   (lam50454 env50455 a5005650301)
   (let ((map (env-ref env50455 5)))
     (let ((cons (env-ref env50455 4)))
       (let ((proc (env-ref env50455 3)))
         (let ((kont50155 (env-ref env50455 2)))
           (let ((a5005550299 (env-ref env50455 1)))
             (let ((f5015750302
                    (make-closure lam50452 a5005550299 kont50155 cons)))
               (clo-app map f5015750302 proc a5005650301))))))))
  (proc
   (lam50456 env50457 a5005550299)
   (let ((cdr (env-ref env50457 6)))
     (let ((lst (env-ref env50457 5)))
       (let ((map (env-ref env50457 4)))
         (let ((cons (env-ref env50457 3)))
           (let ((proc (env-ref env50457 2)))
             (let ((kont50155 (env-ref env50457 1)))
               (let ((f5015850300
                      (make-closure
                       lam50454
                       a5005550299
                       kont50155
                       proc
                       cons
                       map)))
                 (clo-app cdr f5015850300 lst)))))))))
  (proc
   (lam50458 env50459 a5005450297)
   (let ((cdr (env-ref env50459 6)))
     (let ((lst (env-ref env50459 5)))
       (let ((map (env-ref env50459 4)))
         (let ((cons (env-ref env50459 3)))
           (let ((proc (env-ref env50459 2)))
             (let ((kont50155 (env-ref env50459 1)))
               (let ((f5015950298
                      (make-closure lam50456 kont50155 proc cons map lst cdr)))
                 (clo-app proc f5015950298 a5005450297)))))))))
  (proc
   (lam50460 env50461 a5005250293)
   (let ((lst (env-ref env50461 8)))
     (let ((map (env-ref env50461 7)))
       (let ((car (env-ref env50461 6)))
         (let ((cons (env-ref env50461 5)))
           (let ((list (env-ref env50461 4)))
             (let ((cdr (env-ref env50461 3)))
               (let ((proc (env-ref env50461 2)))
                 (let ((kont50155 (env-ref env50461 1)))
                   (if a5005250293
                     (let ((f5015650294 (make-closure lam50450 kont50155)))
                       (clo-app list f5015650294))
                     (let ((f5016050296
                            (make-closure
                             lam50458
                             kont50155
                             proc
                             cons
                             map
                             lst
                             cdr)))
                       (clo-app car f5016050296 lst))))))))))))
  (proc
   (map _50462 kont50155 proc lst)
   (let ((f5016150292
          (make-closure lam50460 kont50155 proc cdr list cons car map lst)))
     (clo-app null? f5016150292 lst)))
  (proc
   (lam50463 env50464 x5005950307)
   (let ((kont50162 (env-ref env50464 1))) (clo-app kont50162 x5005950307)))
  (proc
   (lam50465 env50466 a5006450317)
   (let ((kont50162 (env-ref env50466 3)))
     (let ((a5006250313 (env-ref env50466 2)))
       (let ((cons (env-ref env50466 1)))
         (clo-app cons kont50162 a5006250313 a5006450317)))))
  (proc
   (lam50467 env50468 a5006350315)
   (let ((kont50162 (env-ref env50468 5)))
     (let ((op (env-ref env50468 4)))
       (let ((a5006250313 (env-ref env50468 3)))
         (let ((filter (env-ref env50468 2)))
           (let ((cons (env-ref env50468 1)))
             (let ((f5016450316
                    (make-closure lam50465 cons a5006250313 kont50162)))
               (clo-app filter f5016450316 op a5006350315))))))))
  (proc
   (lam50469 env50470 a5006250313)
   (let ((cdr (env-ref env50470 6)))
     (let ((kont50162 (env-ref env50470 5)))
       (let ((lst (env-ref env50470 4)))
         (let ((op (env-ref env50470 3)))
           (let ((filter (env-ref env50470 2)))
             (let ((cons (env-ref env50470 1)))
               (let ((f5016550314
                      (make-closure
                       lam50467
                       cons
                       filter
                       a5006250313
                       op
                       kont50162)))
                 (clo-app cdr f5016550314 lst)))))))))
  (proc
   (lam50471 env50472 a5006550319)
   (let ((kont50162 (env-ref env50472 3)))
     (let ((op (env-ref env50472 2)))
       (let ((filter (env-ref env50472 1)))
         (clo-app filter kont50162 op a5006550319)))))
  (proc
   (lam50473 env50474 a5006150311)
   (let ((cdr (env-ref env50474 7)))
     (let ((kont50162 (env-ref env50474 6)))
       (let ((lst (env-ref env50474 5)))
         (let ((op (env-ref env50474 4)))
           (let ((cons (env-ref env50474 3)))
             (let ((filter (env-ref env50474 2)))
               (let ((car (env-ref env50474 1)))
                 (if a5006150311
                   (let ((f5016650312
                          (make-closure
                           lam50469
                           cons
                           filter
                           op
                           lst
                           kont50162
                           cdr)))
                     (clo-app car f5016650312 lst))
                   (let ((f5016750318
                          (make-closure lam50471 filter op kont50162)))
                     (clo-app cdr f5016750318 lst)))))))))))
  (proc
   (lam50475 env50476 a5006050309)
   (let ((cdr (env-ref env50476 7)))
     (let ((kont50162 (env-ref env50476 6)))
       (let ((lst (env-ref env50476 5)))
         (let ((op (env-ref env50476 4)))
           (let ((cons (env-ref env50476 3)))
             (let ((filter (env-ref env50476 2)))
               (let ((car (env-ref env50476 1)))
                 (let ((f5016850310
                        (make-closure
                         lam50473
                         car
                         filter
                         cons
                         op
                         lst
                         kont50162
                         cdr)))
                   (clo-app op f5016850310 a5006050309))))))))))
  (proc
   (lam50477 env50478 a5005850305)
   (let ((kont50162 (env-ref env50478 8)))
     (let ((lst (env-ref env50478 7)))
       (let ((op (env-ref env50478 6)))
         (let ((cons (env-ref env50478 5)))
           (let ((list (env-ref env50478 4)))
             (let ((cdr (env-ref env50478 3)))
               (let ((filter (env-ref env50478 2)))
                 (let ((car (env-ref env50478 1)))
                   (if a5005850305
                     (let ((f5016350306 (make-closure lam50463 kont50162)))
                       (clo-app list f5016350306))
                     (let ((f5016950308
                            (make-closure
                             lam50475
                             car
                             filter
                             cons
                             op
                             lst
                             kont50162
                             cdr)))
                       (clo-app car f5016950308 lst))))))))))))
  (proc
   (filter _50479 kont50162 op lst)
   (let ((f5017050304
          (make-closure lam50477 car filter cdr list cons op lst kont50162)))
     (clo-app null? f5017050304 lst)))
  (proc
   (lam50480 env50481 a5007050327)
   (let ((kont50171 (env-ref env50481 3)))
     (let ((a5006850324 (env-ref env50481 2)))
       (let ((drop (env-ref env50481 1)))
         (clo-app drop kont50171 a5006850324 a5007050327)))))
  (proc
   (lam50483 env50484 a5006850324)
   (let ((drop (env-ref env50484 4)))
     (let ((kont50171 (env-ref env50484 3)))
       (let ((n (env-ref env50484 2)))
         (let ((- (env-ref env50484 1)))
           (let ((a5006950325 '1))
             (let ((f5017250326
                    (make-closure lam50480 drop a5006850324 kont50171)))
               (clo-app - f5017250326 n a5006950325))))))))
  (proc
   (lam50485 env50486 a5006750322)
   (let ((cdr (env-ref env50486 6)))
     (let ((kont50171 (env-ref env50486 5)))
       (let ((n (env-ref env50486 4)))
         (let ((- (env-ref env50486 3)))
           (let ((lst (env-ref env50486 2)))
             (let ((drop (env-ref env50486 1)))
               (if a5006750322
                 (clo-app kont50171 lst)
                 (let ((f5017350323
                        (make-closure lam50483 - n kont50171 drop)))
                   (clo-app cdr f5017350323 lst))))))))))
  (proc
   (drop _50488 kont50171 lst n)
   (let ((a5006650320 '0))
     (let ((f5017450321 (make-closure lam50485 drop lst - n kont50171 cdr)))
       (clo-app = f5017450321 n a5006650320))))
  (proc
   (lam50489 env50490 a5007450335)
   (let ((kont50175 (env-ref env50490 3)))
     (let ((proc (env-ref env50490 2)))
       (let ((a5007250331 (env-ref env50490 1)))
         (clo-app proc kont50175 a5007250331 a5007450335)))))
  (proc
   (lam50491 env50492 a5007350333)
   (let ((foldr (env-ref env50492 5)))
     (let ((kont50175 (env-ref env50492 4)))
       (let ((proc (env-ref env50492 3)))
         (let ((acc (env-ref env50492 2)))
           (let ((a5007250331 (env-ref env50492 1)))
             (let ((f5017650334
                    (make-closure lam50489 a5007250331 proc kont50175)))
               (clo-app foldr f5017650334 proc acc a5007350333))))))))
  (proc
   (lam50493 env50494 a5007250331)
   (let ((cdr (env-ref env50494 6)))
     (let ((kont50175 (env-ref env50494 5)))
       (let ((foldr (env-ref env50494 4)))
         (let ((lst (env-ref env50494 3)))
           (let ((proc (env-ref env50494 2)))
             (let ((acc (env-ref env50494 1)))
               (let ((f5017750332
                      (make-closure
                       lam50491
                       a5007250331
                       acc
                       proc
                       kont50175
                       foldr)))
                 (clo-app cdr f5017750332 lst)))))))))
  (proc
   (lam50495 env50496 a5007150329)
   (let ((cdr (env-ref env50496 7)))
     (let ((car (env-ref env50496 6)))
       (let ((kont50175 (env-ref env50496 5)))
         (let ((foldr (env-ref env50496 4)))
           (let ((lst (env-ref env50496 3)))
             (let ((proc (env-ref env50496 2)))
               (let ((acc (env-ref env50496 1)))
                 (if a5007150329
                   (clo-app kont50175 acc)
                   (let ((f5017850330
                          (make-closure
                           lam50493
                           acc
                           proc
                           lst
                           foldr
                           kont50175
                           cdr)))
                     (clo-app car f5017850330 lst)))))))))))
  (proc
   (foldr _50497 kont50175 proc acc lst)
   (let ((f5017950328
          (make-closure lam50495 acc proc lst foldr kont50175 car cdr)))
     (clo-app null? f5017950328 lst)))
  (proc
   (lam50498 env50499 a5007850343)
   (let ((a5007650339 (env-ref env50499 3)))
     (let ((kont50180 (env-ref env50499 2)))
       (let ((cons (env-ref env50499 1)))
         (clo-app cons kont50180 a5007650339 a5007850343)))))
  (proc
   (lam50500 env50501 a5007750341)
   (let ((a5007650339 (env-ref env50501 5)))
     (let ((kont50180 (env-ref env50501 4)))
       (let ((append (env-ref env50501 3)))
         (let ((lst2 (env-ref env50501 2)))
           (let ((cons (env-ref env50501 1)))
             (let ((f5018150342
                    (make-closure lam50498 cons kont50180 a5007650339)))
               (clo-app append f5018150342 a5007750341 lst2))))))))
  (proc
   (lam50502 env50503 a5007650339)
   (let ((cdr (env-ref env50503 6)))
     (let ((kont50180 (env-ref env50503 5)))
       (let ((append (env-ref env50503 4)))
         (let ((lst2 (env-ref env50503 3)))
           (let ((lst1 (env-ref env50503 2)))
             (let ((cons (env-ref env50503 1)))
               (let ((f5018250340
                      (make-closure
                       lam50500
                       cons
                       lst2
                       append
                       kont50180
                       a5007650339)))
                 (clo-app cdr f5018250340 lst1)))))))))
  (proc
   (lam50504 env50505 a5007550337)
   (let ((cdr (env-ref env50505 7)))
     (let ((kont50180 (env-ref env50505 6)))
       (let ((append (env-ref env50505 5)))
         (let ((lst2 (env-ref env50505 4)))
           (let ((cons (env-ref env50505 3)))
             (let ((lst1 (env-ref env50505 2)))
               (let ((car (env-ref env50505 1)))
                 (if a5007550337
                   (clo-app kont50180 lst2)
                   (let ((f5018350338
                          (make-closure
                           lam50502
                           cons
                           lst1
                           lst2
                           append
                           kont50180
                           cdr)))
                     (clo-app car f5018350338 lst1)))))))))))
  (proc
   (append _50506 kont50180 lst1 lst2)
   (let ((f5018450336
          (make-closure lam50504 car lst1 cons lst2 append kont50180 cdr)))
     (clo-app null? f5018450336 lst1)))
  (proc
   (hash _50507 . lst)
   (let ((kont5018550344 (prim car lst)))
     (let ((lst50345 (prim cdr lst)))
       (let ((x5007950346 (apply-prim hash lst50345)))
         (clo-app kont5018550344 x5007950346)))))
  (proc
   (hash-ref _50508 kont50187 h k)
   (let ((x5008050347 (prim hash-ref h k))) (clo-app kont50187 x5008050347)))
  (proc
   (hash-set _50509 kont50188 h k v)
   (let ((x5008150348 (prim hash-set h k v))) (clo-app kont50188 x5008150348)))
  (proc
   (hash-has-key? _50510 kont50189 h k)
   (let ((x5008250349 (prim hash-has-key? h k)))
     (clo-app kont50189 x5008250349)))
  (proc
   (hash-count _50511 kont50190 h)
   (let ((x5008350350 (prim hash-count h))) (clo-app kont50190 x5008350350)))
  (proc
   (lam50516 env50517 a5009050359)
   (let ((odd? (env-ref env50517 3)))
     (let ((even? (env-ref env50517 2)))
       (let ((kont50191 (env-ref env50517 1)))
         (if a5009050359
           (let ((a5009150360 '3)) (clo-app even? kont50191 a5009150360))
           (let ((a5009250361 '2)) (clo-app odd? kont50191 a5009250361)))))))
  (proc
   (lam50519 env50520 a5008650354)
   (let ((odd? (env-ref env50520 4)))
     (let ((even? (env-ref env50520 3)))
       (let ((equal? (env-ref env50520 2)))
         (let ((kont50191 (env-ref env50520 1)))
           (if a5008650354
             (let ((a5008750355 '1))
               (let ((a5008850356 '2))
                 (clo-app equal? kont50191 a5008750355 a5008850356)))
             (let ((a5008950357 '3))
               (let ((f5019250358
                      (make-closure lam50516 kont50191 even? odd?)))
                 (clo-app even? f5019250358 a5008950357)))))))))
  (proc
   (call _50523 kont50191)
   (let ((a5008450351 '1))
     (let ((a5008550352 '2))
       (let ((f5019350353 (make-closure lam50519 kont50191 equal? even? odd?)))
         (clo-app equal? f5019350353 a5008450351 a5008550352)))))
  (proc
   (lam50524 env50525 x5009350363)
   (let ((kont50194 (env-ref env50525 1))) (clo-app kont50194 x5009350363)))
  (proc
   (brouhaha_main _50526 kont50194)
   (let ((f5019550362 (make-closure lam50524 kont50194)))
     (clo-app call f5019550362))))
