'((proc
   (+ _48632 . lst)
   (let ((kont4836248464 (prim car lst)))
     (let ((lst48465 (prim cdr lst)))
       (let ((x4826948466 (apply-prim + lst48465)))
         (clo-app kont4836248464 x4826948466)))))
  (proc
   (- _48633 . lst)
   (let ((kont4836448467 (prim car lst)))
     (let ((lst48468 (prim cdr lst)))
       (let ((x4827048469 (apply-prim - lst48468)))
         (clo-app kont4836448467 x4827048469)))))
  (proc
   (* _48634 . lst)
   (let ((kont4836648470 (prim car lst)))
     (let ((lst48471 (prim cdr lst)))
       (let ((x4827148472 (apply-prim * lst48471)))
         (clo-app kont4836648470 x4827148472)))))
  (proc
   (modulo _48635 kont48368 a b)
   (let ((x4827248473 (prim modulo a b))) (clo-app kont48368 x4827248473)))
  (proc
   (/ _48636 . lst)
   (let ((kont4836948474 (prim car lst)))
     (let ((lst48475 (prim cdr lst)))
       (let ((x4827348476 (apply-prim / lst48475)))
         (clo-app kont4836948474 x4827348476)))))
  (proc
   (= _48637 . lst)
   (let ((kont4837148477 (prim car lst)))
     (let ((lst48478 (prim cdr lst)))
       (let ((x4827448479 (apply-prim = lst48478)))
         (clo-app kont4837148477 x4827448479)))))
  (proc
   (> _48638 . lst)
   (let ((kont4837348480 (prim car lst)))
     (let ((lst48481 (prim cdr lst)))
       (let ((x4827548482 (apply-prim > lst48481)))
         (clo-app kont4837348480 x4827548482)))))
  (proc
   (< _48639 . lst)
   (let ((kont4837548483 (prim car lst)))
     (let ((lst48484 (prim cdr lst)))
       (let ((x4827648485 (apply-prim < lst48484)))
         (clo-app kont4837548483 x4827648485)))))
  (proc
   (<= _48640 . lst)
   (let ((kont4837748486 (prim car lst)))
     (let ((lst48487 (prim cdr lst)))
       (let ((x4827748488 (apply-prim <= lst48487)))
         (clo-app kont4837748486 x4827748488)))))
  (proc
   (>= _48641 . lst)
   (let ((kont4837948489 (prim car lst)))
     (let ((lst48490 (prim cdr lst)))
       (let ((x4827848491 (apply-prim >= lst48490)))
         (clo-app kont4837948489 x4827848491)))))
  (proc
   (null? _48642 kont48381 x)
   (let ((x4827948492 (prim null? x))) (clo-app kont48381 x4827948492)))
  (proc
   (equal? _48643 kont48382 x y)
   (let ((x4828048493 (prim equal? x y))) (clo-app kont48382 x4828048493)))
  (proc
   (eq? _48644 kont48383 x y)
   (let ((x4828148494 (prim eq? x y))) (clo-app kont48383 x4828148494)))
  (proc
   (cons _48645 kont48384 a b)
   (let ((x4828248495 (prim cons a b))) (clo-app kont48384 x4828248495)))
  (proc
   (car _48646 kont48385 lst)
   (let ((x4828348496 (prim car lst))) (clo-app kont48385 x4828348496)))
  (proc
   (cdr _48647 kont48386 lst)
   (let ((x4828448497 (prim cdr lst))) (clo-app kont48386 x4828448497)))
  (proc
   (lam48648 env48649 a4828748501)
   (let ((equal? (env-ref env48649 3)))
     (let ((a4828548498 (env-ref env48649 2)))
       (let ((kont48387 (env-ref env48649 1)))
         (clo-app equal? kont48387 a4828548498 a4828748501)))))
  (proc
   (even? _48652 kont48387 x)
   (let ((a4828548498 '0))
     (let ((a4828648499 '2))
       (let ((f4838848500
              (make-closure lam48648 kont48387 a4828548498 equal?)))
         (clo-app modulo f4838848500 x a4828648499)))))
  (proc
   (lam48653 env48654 a4829048505)
   (let ((kont48389 (env-ref env48654 3)))
     (let ((a4828848502 (env-ref env48654 2)))
       (let ((equal? (env-ref env48654 1)))
         (clo-app equal? kont48389 a4828848502 a4829048505)))))
  (proc
   (odd? _48657 kont48389 x)
   (let ((a4828848502 '1))
     (let ((a4828948503 '2))
       (let ((f4839048504
              (make-closure lam48653 equal? a4828848502 kont48389)))
         (clo-app modulo f4839048504 x a4828948503)))))
  (proc
   (list _48658 . x)
   (let ((kont4839148506 (prim car x)))
     (let ((x48507 (prim cdr x))) (clo-app kont4839148506 x48507))))
  (proc
   (lam48661 env48662 a4829648517)
   (let ((kont48393 (env-ref env48662 3)))
     (let ((x (env-ref env48662 2)))
       (let ((member? (env-ref env48662 1)))
         (clo-app member? kont48393 x a4829648517)))))
  (proc
   (lam48663 env48664 a4829448514)
   (let ((cdr (env-ref env48664 5)))
     (let ((x (env-ref env48664 4)))
       (let ((member? (env-ref env48664 3)))
         (let ((lst (env-ref env48664 2)))
           (let ((kont48393 (env-ref env48664 1)))
             (if a4829448514
               (let ((x4829548515 '#t)) (clo-app kont48393 x4829548515))
               (let ((f4839448516 (make-closure lam48661 member? x kont48393)))
                 (clo-app cdr f4839448516 lst)))))))))
  (proc
   (lam48665 env48666 a4829348512)
   (let ((cdr (env-ref env48666 6)))
     (let ((equal? (env-ref env48666 5)))
       (let ((x (env-ref env48666 4)))
         (let ((member? (env-ref env48666 3)))
           (let ((lst (env-ref env48666 2)))
             (let ((kont48393 (env-ref env48666 1)))
               (let ((f4839548513
                      (make-closure lam48663 kont48393 lst member? x cdr)))
                 (clo-app equal? f4839548513 a4829348512 x)))))))))
  (proc
   (lam48667 env48668 a4829148509)
   (let ((cdr (env-ref env48668 7)))
     (let ((equal? (env-ref env48668 6)))
       (let ((x (env-ref env48668 5)))
         (let ((car (env-ref env48668 4)))
           (let ((member? (env-ref env48668 3)))
             (let ((lst (env-ref env48668 2)))
               (let ((kont48393 (env-ref env48668 1)))
                 (if a4829148509
                   (let ((x4829248510 '#f)) (clo-app kont48393 x4829248510))
                   (let ((f4839648511
                          (make-closure
                           lam48665
                           kont48393
                           lst
                           member?
                           x
                           equal?
                           cdr)))
                     (clo-app car f4839648511 lst)))))))))))
  (proc
   (member? _48669 kont48393 x lst)
   (let ((f4839748508
          (make-closure lam48667 kont48393 lst member? car x equal? cdr)))
     (clo-app null? f4839748508 lst)))
  (proc
   (lam48670 env48671 a4830048525)
   (let ((a4829948523 (env-ref env48671 4)))
     (let ((kont48398 (env-ref env48671 3)))
       (let ((fun (env-ref env48671 2)))
         (let ((foldl (env-ref env48671 1)))
           (clo-app foldl kont48398 fun a4829948523 a4830048525))))))
  (proc
   (lam48672 env48673 a4829948523)
   (let ((cdr (env-ref env48673 5)))
     (let ((lst (env-ref env48673 4)))
       (let ((kont48398 (env-ref env48673 3)))
         (let ((fun (env-ref env48673 2)))
           (let ((foldl (env-ref env48673 1)))
             (let ((f4839948524
                    (make-closure lam48670 foldl fun kont48398 a4829948523)))
               (clo-app cdr f4839948524 lst))))))))
  (proc
   (lam48674 env48675 a4829848521)
   (let ((cdr (env-ref env48675 6)))
     (let ((lst (env-ref env48675 5)))
       (let ((kont48398 (env-ref env48675 4)))
         (let ((fun (env-ref env48675 3)))
           (let ((acc (env-ref env48675 2)))
             (let ((foldl (env-ref env48675 1)))
               (let ((f4840048522
                      (make-closure lam48672 foldl fun kont48398 lst cdr)))
                 (clo-app fun f4840048522 a4829848521 acc)))))))))
  (proc
   (lam48676 env48677 a4829748519)
   (let ((cdr (env-ref env48677 7)))
     (let ((lst (env-ref env48677 6)))
       (let ((kont48398 (env-ref env48677 5)))
         (let ((fun (env-ref env48677 4)))
           (let ((acc (env-ref env48677 3)))
             (let ((car (env-ref env48677 2)))
               (let ((foldl (env-ref env48677 1)))
                 (if a4829748519
                   (clo-app kont48398 acc)
                   (let ((f4840148520
                          (make-closure
                           lam48674
                           foldl
                           acc
                           fun
                           kont48398
                           lst
                           cdr)))
                     (clo-app car f4840148520 lst)))))))))))
  (proc
   (foldl _48678 kont48398 fun acc lst)
   (let ((f4840248518
          (make-closure lam48676 foldl car acc fun kont48398 lst cdr)))
     (clo-app null? f4840248518 lst)))
  (proc
   (lam48679 env48680 a4830448533)
   (let ((reverse-helper (env-ref env48680 3)))
     (let ((a4830248529 (env-ref env48680 2)))
       (let ((kont48403 (env-ref env48680 1)))
         (clo-app reverse-helper kont48403 a4830248529 a4830448533)))))
  (proc
   (lam48681 env48682 a4830348531)
   (let ((reverse-helper (env-ref env48682 5)))
     (let ((a4830248529 (env-ref env48682 4)))
       (let ((lst2 (env-ref env48682 3)))
         (let ((cons (env-ref env48682 2)))
           (let ((kont48403 (env-ref env48682 1)))
             (let ((f4840448532
                    (make-closure
                     lam48679
                     kont48403
                     a4830248529
                     reverse-helper)))
               (clo-app cons f4840448532 a4830348531 lst2))))))))
  (proc
   (lam48683 env48684 a4830248529)
   (let ((lst (env-ref env48684 6)))
     (let ((reverse-helper (env-ref env48684 5)))
       (let ((lst2 (env-ref env48684 4)))
         (let ((car (env-ref env48684 3)))
           (let ((cons (env-ref env48684 2)))
             (let ((kont48403 (env-ref env48684 1)))
               (let ((f4840548530
                      (make-closure
                       lam48681
                       kont48403
                       cons
                       lst2
                       a4830248529
                       reverse-helper)))
                 (clo-app car f4840548530 lst)))))))))
  (proc
   (lam48685 env48686 a4830148527)
   (let ((cdr (env-ref env48686 7)))
     (let ((lst (env-ref env48686 6)))
       (let ((reverse-helper (env-ref env48686 5)))
         (let ((lst2 (env-ref env48686 4)))
           (let ((car (env-ref env48686 3)))
             (let ((cons (env-ref env48686 2)))
               (let ((kont48403 (env-ref env48686 1)))
                 (if a4830148527
                   (clo-app kont48403 lst2)
                   (let ((f4840648528
                          (make-closure
                           lam48683
                           kont48403
                           cons
                           car
                           lst2
                           reverse-helper
                           lst)))
                     (clo-app cdr f4840648528 lst)))))))))))
  (proc
   (reverse-helper _48687 kont48403 lst lst2)
   (let ((f4840748526
          (make-closure
           lam48685
           kont48403
           cons
           car
           lst2
           reverse-helper
           lst
           cdr)))
     (clo-app null? f4840748526 lst)))
  (proc
   (lam48688 env48689 a4830548535)
   (let ((kont48408 (env-ref env48689 3)))
     (let ((lst (env-ref env48689 2)))
       (let ((reverse-helper (env-ref env48689 1)))
         (clo-app reverse-helper kont48408 lst a4830548535)))))
  (proc
   (reverse _48690 kont48408 lst)
   (let ((f4840948534 (make-closure lam48688 reverse-helper lst kont48408)))
     (clo-app list f4840948534)))
  (proc
   (lam48691 env48692 x4830848540)
   (let ((kont48410 (env-ref env48692 1))) (clo-app kont48410 x4830848540)))
  (proc
   (lam48693 env48694 a4831348549)
   (let ((kont48410 (env-ref env48694 4)))
     (let ((a4830948542 (env-ref env48694 3)))
       (let ((take-helper (env-ref env48694 2)))
         (let ((a4831148545 (env-ref env48694 1)))
           (clo-app
            take-helper
            kont48410
            a4830948542
            a4831148545
            a4831348549))))))
  (proc
   (lam48695 env48696 a4831248547)
   (let ((kont48410 (env-ref env48696 6)))
     (let ((a4830948542 (env-ref env48696 5)))
       (let ((cons (env-ref env48696 4)))
         (let ((take-helper (env-ref env48696 3)))
           (let ((a4831148545 (env-ref env48696 2)))
             (let ((lst2 (env-ref env48696 1)))
               (let ((f4841248548
                      (make-closure
                       lam48693
                       a4831148545
                       take-helper
                       a4830948542
                       kont48410)))
                 (clo-app cons f4841248548 a4831248547 lst2)))))))))
  (proc
   (lam48697 env48698 a4831148545)
   (let ((lst (env-ref env48698 7)))
     (let ((kont48410 (env-ref env48698 6)))
       (let ((a4830948542 (env-ref env48698 5)))
         (let ((car (env-ref env48698 4)))
           (let ((cons (env-ref env48698 3)))
             (let ((take-helper (env-ref env48698 2)))
               (let ((lst2 (env-ref env48698 1)))
                 (let ((f4841348546
                        (make-closure
                         lam48695
                         lst2
                         a4831148545
                         take-helper
                         cons
                         a4830948542
                         kont48410)))
                   (clo-app car f4841348546 lst))))))))))
  (proc
   (lam48700 env48701 a4830948542)
   (let ((lst (env-ref env48701 8)))
     (let ((kont48410 (env-ref env48701 7)))
       (let ((cons (env-ref env48701 6)))
         (let ((- (env-ref env48701 5)))
           (let ((take-helper (env-ref env48701 4)))
             (let ((lst2 (env-ref env48701 3)))
               (let ((n (env-ref env48701 2)))
                 (let ((car (env-ref env48701 1)))
                   (let ((a4831048543 '1))
                     (let ((f4841448544
                            (make-closure
                             lam48697
                             lst2
                             take-helper
                             cons
                             car
                             a4830948542
                             kont48410
                             lst)))
                       (clo-app - f4841448544 n a4831048543))))))))))))
  (proc
   (lam48702 env48703 a4830748538)
   (let ((cdr (env-ref env48703 10)))
     (let ((lst (env-ref env48703 9)))
       (let ((kont48410 (env-ref env48703 8)))
         (let ((reverse (env-ref env48703 7)))
           (let ((cons (env-ref env48703 6)))
             (let ((- (env-ref env48703 5)))
               (let ((take-helper (env-ref env48703 4)))
                 (let ((lst2 (env-ref env48703 3)))
                   (let ((n (env-ref env48703 2)))
                     (let ((car (env-ref env48703 1)))
                       (if a4830748538
                         (let ((f4841148539 (make-closure lam48691 kont48410)))
                           (clo-app reverse f4841148539 lst2))
                         (let ((f4841548541
                                (make-closure
                                 lam48700
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont48410
                                 lst)))
                           (clo-app cdr f4841548541 lst))))))))))))))
  (proc
   (take-helper _48705 kont48410 lst n lst2)
   (let ((a4830648536 '0))
     (let ((f4841648537
            (make-closure
             lam48702
             car
             n
             lst2
             take-helper
             -
             cons
             reverse
             kont48410
             lst
             cdr)))
       (clo-app = f4841648537 n a4830648536))))
  (proc
   (lam48706 env48707 a4831448551)
   (let ((lst (env-ref env48707 4)))
     (let ((n (env-ref env48707 3)))
       (let ((take-helper (env-ref env48707 2)))
         (let ((kont48417 (env-ref env48707 1)))
           (clo-app take-helper kont48417 lst n a4831448551))))))
  (proc
   (take _48708 kont48417 lst n)
   (let ((f4841848550 (make-closure lam48706 kont48417 take-helper n lst)))
     (clo-app list f4841848550)))
  (proc
   (lam48710 env48711 a4831948559)
   (let ((a4831748555 (env-ref env48711 3)))
     (let ((+ (env-ref env48711 2)))
       (let ((kont48419 (env-ref env48711 1)))
         (clo-app + kont48419 a4831748555 a4831948559)))))
  (proc
   (lam48712 env48713 a4831848557)
   (let ((length (env-ref env48713 4)))
     (let ((a4831748555 (env-ref env48713 3)))
       (let ((+ (env-ref env48713 2)))
         (let ((kont48419 (env-ref env48713 1)))
           (let ((f4842048558 (make-closure lam48710 kont48419 + a4831748555)))
             (clo-app length f4842048558 a4831848557)))))))
  (proc
   (lam48715 env48716 a4831548553)
   (let ((cdr (env-ref env48716 5)))
     (let ((lst (env-ref env48716 4)))
       (let ((length (env-ref env48716 3)))
         (let ((+ (env-ref env48716 2)))
           (let ((kont48419 (env-ref env48716 1)))
             (if a4831548553
               (let ((x4831648554 '0)) (clo-app kont48419 x4831648554))
               (let ((a4831748555 '1))
                 (let ((f4842148556
                        (make-closure
                         lam48712
                         kont48419
                         +
                         a4831748555
                         length)))
                   (clo-app cdr f4842148556 lst))))))))))
  (proc
   (length _48717 kont48419 lst)
   (let ((f4842248552 (make-closure lam48715 kont48419 + length lst cdr)))
     (clo-app null? f4842248552 lst)))
  (proc
   (lam48718 env48719 x4832148563)
   (let ((kont48423 (env-ref env48719 1))) (clo-app kont48423 x4832148563)))
  (proc
   (lam48720 env48721 a4832548571)
   (let ((cons (env-ref env48721 3)))
     (let ((a4832348567 (env-ref env48721 2)))
       (let ((kont48423 (env-ref env48721 1)))
         (clo-app cons kont48423 a4832348567 a4832548571)))))
  (proc
   (lam48722 env48723 a4832448569)
   (let ((map (env-ref env48723 5)))
     (let ((proc (env-ref env48723 4)))
       (let ((cons (env-ref env48723 3)))
         (let ((a4832348567 (env-ref env48723 2)))
           (let ((kont48423 (env-ref env48723 1)))
             (let ((f4842548570
                    (make-closure lam48720 kont48423 a4832348567 cons)))
               (clo-app map f4842548570 proc a4832448569))))))))
  (proc
   (lam48724 env48725 a4832348567)
   (let ((cdr (env-ref env48725 6)))
     (let ((kont48423 (env-ref env48725 5)))
       (let ((lst (env-ref env48725 4)))
         (let ((map (env-ref env48725 3)))
           (let ((proc (env-ref env48725 2)))
             (let ((cons (env-ref env48725 1)))
               (let ((f4842648568
                      (make-closure
                       lam48722
                       kont48423
                       a4832348567
                       cons
                       proc
                       map)))
                 (clo-app cdr f4842648568 lst)))))))))
  (proc
   (lam48726 env48727 a4832248565)
   (let ((cdr (env-ref env48727 6)))
     (let ((kont48423 (env-ref env48727 5)))
       (let ((lst (env-ref env48727 4)))
         (let ((map (env-ref env48727 3)))
           (let ((proc (env-ref env48727 2)))
             (let ((cons (env-ref env48727 1)))
               (let ((f4842748566
                      (make-closure lam48724 cons proc map lst kont48423 cdr)))
                 (clo-app proc f4842748566 a4832248565)))))))))
  (proc
   (lam48728 env48729 a4832048561)
   (let ((kont48423 (env-ref env48729 8)))
     (let ((lst (env-ref env48729 7)))
       (let ((map (env-ref env48729 6)))
         (let ((proc (env-ref env48729 5)))
           (let ((car (env-ref env48729 4)))
             (let ((cons (env-ref env48729 3)))
               (let ((list (env-ref env48729 2)))
                 (let ((cdr (env-ref env48729 1)))
                   (if a4832048561
                     (let ((f4842448562 (make-closure lam48718 kont48423)))
                       (clo-app list f4842448562))
                     (let ((f4842848564
                            (make-closure
                             lam48726
                             cons
                             proc
                             map
                             lst
                             kont48423
                             cdr)))
                       (clo-app car f4842848564 lst))))))))))))
  (proc
   (map _48730 kont48423 proc lst)
   (let ((f4842948560
          (make-closure lam48728 cdr list cons car proc map lst kont48423)))
     (clo-app null? f4842948560 lst)))
  (proc
   (lam48731 env48732 x4832748575)
   (let ((kont48430 (env-ref env48732 1))) (clo-app kont48430 x4832748575)))
  (proc
   (lam48733 env48734 a4833248585)
   (let ((a4833048581 (env-ref env48734 3)))
     (let ((kont48430 (env-ref env48734 2)))
       (let ((cons (env-ref env48734 1)))
         (clo-app cons kont48430 a4833048581 a4833248585)))))
  (proc
   (lam48735 env48736 a4833148583)
   (let ((a4833048581 (env-ref env48736 5)))
     (let ((op (env-ref env48736 4)))
       (let ((kont48430 (env-ref env48736 3)))
         (let ((filter (env-ref env48736 2)))
           (let ((cons (env-ref env48736 1)))
             (let ((f4843248584
                    (make-closure lam48733 cons kont48430 a4833048581)))
               (clo-app filter f4843248584 op a4833148583))))))))
  (proc
   (lam48737 env48738 a4833048581)
   (let ((cdr (env-ref env48738 6)))
     (let ((lst (env-ref env48738 5)))
       (let ((op (env-ref env48738 4)))
         (let ((kont48430 (env-ref env48738 3)))
           (let ((filter (env-ref env48738 2)))
             (let ((cons (env-ref env48738 1)))
               (let ((f4843348582
                      (make-closure
                       lam48735
                       cons
                       filter
                       kont48430
                       op
                       a4833048581)))
                 (clo-app cdr f4843348582 lst)))))))))
  (proc
   (lam48739 env48740 a4833348587)
   (let ((op (env-ref env48740 3)))
     (let ((kont48430 (env-ref env48740 2)))
       (let ((filter (env-ref env48740 1)))
         (clo-app filter kont48430 op a4833348587)))))
  (proc
   (lam48741 env48742 a4832948579)
   (let ((cdr (env-ref env48742 7)))
     (let ((lst (env-ref env48742 6)))
       (let ((op (env-ref env48742 5)))
         (let ((kont48430 (env-ref env48742 4)))
           (let ((cons (env-ref env48742 3)))
             (let ((filter (env-ref env48742 2)))
               (let ((car (env-ref env48742 1)))
                 (if a4832948579
                   (let ((f4843448580
                          (make-closure
                           lam48737
                           cons
                           filter
                           kont48430
                           op
                           lst
                           cdr)))
                     (clo-app car f4843448580 lst))
                   (let ((f4843548586
                          (make-closure lam48739 filter kont48430 op)))
                     (clo-app cdr f4843548586 lst)))))))))))
  (proc
   (lam48743 env48744 a4832848577)
   (let ((cdr (env-ref env48744 7)))
     (let ((lst (env-ref env48744 6)))
       (let ((op (env-ref env48744 5)))
         (let ((kont48430 (env-ref env48744 4)))
           (let ((cons (env-ref env48744 3)))
             (let ((filter (env-ref env48744 2)))
               (let ((car (env-ref env48744 1)))
                 (let ((f4843648578
                        (make-closure
                         lam48741
                         car
                         filter
                         cons
                         kont48430
                         op
                         lst
                         cdr)))
                   (clo-app op f4843648578 a4832848577))))))))))
  (proc
   (lam48745 env48746 a4832648573)
   (let ((lst (env-ref env48746 8)))
     (let ((op (env-ref env48746 7)))
       (let ((kont48430 (env-ref env48746 6)))
         (let ((cons (env-ref env48746 5)))
           (let ((list (env-ref env48746 4)))
             (let ((cdr (env-ref env48746 3)))
               (let ((filter (env-ref env48746 2)))
                 (let ((car (env-ref env48746 1)))
                   (if a4832648573
                     (let ((f4843148574 (make-closure lam48731 kont48430)))
                       (clo-app list f4843148574))
                     (let ((f4843748576
                            (make-closure
                             lam48743
                             car
                             filter
                             cons
                             kont48430
                             op
                             lst
                             cdr)))
                       (clo-app car f4843748576 lst))))))))))))
  (proc
   (filter _48747 kont48430 op lst)
   (let ((f4843848572
          (make-closure lam48745 car filter cdr list cons kont48430 op lst)))
     (clo-app null? f4843848572 lst)))
  (proc
   (lam48748 env48749 a4833848595)
   (let ((kont48439 (env-ref env48749 3)))
     (let ((drop (env-ref env48749 2)))
       (let ((a4833648592 (env-ref env48749 1)))
         (clo-app drop kont48439 a4833648592 a4833848595)))))
  (proc
   (lam48751 env48752 a4833648592)
   (let ((kont48439 (env-ref env48752 4)))
     (let ((drop (env-ref env48752 3)))
       (let ((n (env-ref env48752 2)))
         (let ((- (env-ref env48752 1)))
           (let ((a4833748593 '1))
             (let ((f4844048594
                    (make-closure lam48748 a4833648592 drop kont48439)))
               (clo-app - f4844048594 n a4833748593))))))))
  (proc
   (lam48753 env48754 a4833548590)
   (let ((cdr (env-ref env48754 6)))
     (let ((kont48439 (env-ref env48754 5)))
       (let ((n (env-ref env48754 4)))
         (let ((- (env-ref env48754 3)))
           (let ((lst (env-ref env48754 2)))
             (let ((drop (env-ref env48754 1)))
               (if a4833548590
                 (clo-app kont48439 lst)
                 (let ((f4844148591
                        (make-closure lam48751 - n drop kont48439)))
                   (clo-app cdr f4844148591 lst))))))))))
  (proc
   (drop _48756 kont48439 lst n)
   (let ((a4833448588 '0))
     (let ((f4844248589 (make-closure lam48753 drop lst - n kont48439 cdr)))
       (clo-app = f4844248589 n a4833448588))))
  (proc
   (lam48757 env48758 a4834248603)
   (let ((a4834048599 (env-ref env48758 3)))
     (let ((kont48443 (env-ref env48758 2)))
       (let ((proc (env-ref env48758 1)))
         (clo-app proc kont48443 a4834048599 a4834248603)))))
  (proc
   (lam48759 env48760 a4834148601)
   (let ((a4834048599 (env-ref env48760 5)))
     (let ((foldr (env-ref env48760 4)))
       (let ((kont48443 (env-ref env48760 3)))
         (let ((proc (env-ref env48760 2)))
           (let ((acc (env-ref env48760 1)))
             (let ((f4844448602
                    (make-closure lam48757 proc kont48443 a4834048599)))
               (clo-app foldr f4844448602 proc acc a4834148601))))))))
  (proc
   (lam48761 env48762 a4834048599)
   (let ((cdr (env-ref env48762 6)))
     (let ((kont48443 (env-ref env48762 5)))
       (let ((foldr (env-ref env48762 4)))
         (let ((lst (env-ref env48762 3)))
           (let ((proc (env-ref env48762 2)))
             (let ((acc (env-ref env48762 1)))
               (let ((f4844548600
                      (make-closure
                       lam48759
                       acc
                       proc
                       kont48443
                       foldr
                       a4834048599)))
                 (clo-app cdr f4844548600 lst)))))))))
  (proc
   (lam48763 env48764 a4833948597)
   (let ((cdr (env-ref env48764 7)))
     (let ((kont48443 (env-ref env48764 6)))
       (let ((car (env-ref env48764 5)))
         (let ((foldr (env-ref env48764 4)))
           (let ((lst (env-ref env48764 3)))
             (let ((proc (env-ref env48764 2)))
               (let ((acc (env-ref env48764 1)))
                 (if a4833948597
                   (clo-app kont48443 acc)
                   (let ((f4844648598
                          (make-closure
                           lam48761
                           acc
                           proc
                           lst
                           foldr
                           kont48443
                           cdr)))
                     (clo-app car f4844648598 lst)))))))))))
  (proc
   (foldr _48765 kont48443 proc acc lst)
   (let ((f4844748596
          (make-closure lam48763 acc proc lst foldr car kont48443 cdr)))
     (clo-app null? f4844748596 lst)))
  (proc
   (lam48766 env48767 a4834648611)
   (let ((a4834448607 (env-ref env48767 3)))
     (let ((kont48448 (env-ref env48767 2)))
       (let ((cons (env-ref env48767 1)))
         (clo-app cons kont48448 a4834448607 a4834648611)))))
  (proc
   (lam48768 env48769 a4834548609)
   (let ((append (env-ref env48769 5)))
     (let ((a4834448607 (env-ref env48769 4)))
       (let ((kont48448 (env-ref env48769 3)))
         (let ((lst2 (env-ref env48769 2)))
           (let ((cons (env-ref env48769 1)))
             (let ((f4844948610
                    (make-closure lam48766 cons kont48448 a4834448607)))
               (clo-app append f4844948610 a4834548609 lst2))))))))
  (proc
   (lam48770 env48771 a4834448607)
   (let ((cdr (env-ref env48771 6)))
     (let ((append (env-ref env48771 5)))
       (let ((kont48448 (env-ref env48771 4)))
         (let ((lst2 (env-ref env48771 3)))
           (let ((lst1 (env-ref env48771 2)))
             (let ((cons (env-ref env48771 1)))
               (let ((f4845048608
                      (make-closure
                       lam48768
                       cons
                       lst2
                       kont48448
                       a4834448607
                       append)))
                 (clo-app cdr f4845048608 lst1)))))))))
  (proc
   (lam48772 env48773 a4834348605)
   (let ((cdr (env-ref env48773 7)))
     (let ((append (env-ref env48773 6)))
       (let ((kont48448 (env-ref env48773 5)))
         (let ((lst2 (env-ref env48773 4)))
           (let ((cons (env-ref env48773 3)))
             (let ((lst1 (env-ref env48773 2)))
               (let ((car (env-ref env48773 1)))
                 (if a4834348605
                   (clo-app kont48448 lst2)
                   (let ((f4845148606
                          (make-closure
                           lam48770
                           cons
                           lst1
                           lst2
                           kont48448
                           append
                           cdr)))
                     (clo-app car f4845148606 lst1)))))))))))
  (proc
   (append _48774 kont48448 lst1 lst2)
   (let ((f4845248604
          (make-closure lam48772 car lst1 cons lst2 kont48448 append cdr)))
     (clo-app null? f4845248604 lst1)))
  (proc
   (hash _48775 . lst)
   (let ((kont4845348612 (prim car lst)))
     (let ((lst48613 (prim cdr lst)))
       (let ((x4834748614 (apply-prim hash lst48613)))
         (clo-app kont4845348612 x4834748614)))))
  (proc
   (hash-ref _48776 kont48455 h k)
   (let ((x4834848615 (prim hash-ref h k))) (clo-app kont48455 x4834848615)))
  (proc
   (hash-set _48777 kont48456 h k v)
   (let ((x4834948616 (prim hash-set h k v))) (clo-app kont48456 x4834948616)))
  (proc
   (hash-has-key? _48778 kont48457 h k)
   (let ((x4835048617 (prim hash-has-key? h k)))
     (clo-app kont48457 x4835048617)))
  (proc
   (hash-count _48779 kont48458 h)
   (let ((x4835148618 (prim hash-count h))) (clo-app kont48458 x4835148618)))
  (proc
   (lam48784 env48785 a4835848627)
   (let ((odd? (env-ref env48785 3)))
     (let ((even? (env-ref env48785 2)))
       (let ((kont48459 (env-ref env48785 1)))
         (if a4835848627
           (let ((a4835948628 '3)) (clo-app even? kont48459 a4835948628))
           (let ((a4836048629 '2)) (clo-app odd? kont48459 a4836048629)))))))
  (proc
   (lam48787 env48788 a4835448622)
   (let ((odd? (env-ref env48788 4)))
     (let ((even? (env-ref env48788 3)))
       (let ((kont48459 (env-ref env48788 2)))
         (let ((equal? (env-ref env48788 1)))
           (if a4835448622
             (let ((a4835548623 '1))
               (let ((a4835648624 '2))
                 (clo-app equal? kont48459 a4835548623 a4835648624)))
             (let ((a4835748625 '3))
               (let ((f4846048626
                      (make-closure lam48784 kont48459 even? odd?)))
                 (clo-app even? f4846048626 a4835748625)))))))))
  (proc
   (call _48791 kont48459)
   (let ((a4835248619 '1))
     (let ((a4835348620 '2))
       (let ((f4846148621 (make-closure lam48787 equal? kont48459 even? odd?)))
         (clo-app equal? f4846148621 a4835248619 a4835348620)))))
  (proc
   (lam48792 env48793 x4836148631)
   (let ((kont48462 (env-ref env48793 1))) (clo-app kont48462 x4836148631)))
  (proc
   (brouhaha_main _48794 kont48462)
   (let ((f4846348630 (make-closure lam48792 kont48462)))
     (clo-app call f4846348630))))
