'((define (+ . lst)
    (let ((kont5277952879 (prim car lst)))
      (let ((lst52880 (prim cdr lst)))
        (let ((x5269052881 (apply-prim + lst52880)))
          (kont5277952879 x5269052881)))))
  (define (- . lst)
    (let ((kont5278152882 (prim car lst)))
      (let ((lst52883 (prim cdr lst)))
        (let ((x5269152884 (apply-prim - lst52883)))
          (kont5278152882 x5269152884)))))
  (define (* . lst)
    (let ((kont5278352885 (prim car lst)))
      (let ((lst52886 (prim cdr lst)))
        (let ((x5269252887 (apply-prim * lst52886)))
          (kont5278352885 x5269252887)))))
  (define (modulo kont52785 a b)
    (let ((x5269352888 (prim modulo a b))) (kont52785 x5269352888)))
  (define (/ . lst)
    (let ((kont5278652889 (prim car lst)))
      (let ((lst52890 (prim cdr lst)))
        (let ((x5269452891 (apply-prim / lst52890)))
          (kont5278652889 x5269452891)))))
  (define (= . lst)
    (let ((kont5278852892 (prim car lst)))
      (let ((lst52893 (prim cdr lst)))
        (let ((x5269552894 (apply-prim = lst52893)))
          (kont5278852892 x5269552894)))))
  (define (> . lst)
    (let ((kont5279052895 (prim car lst)))
      (let ((lst52896 (prim cdr lst)))
        (let ((x5269652897 (apply-prim > lst52896)))
          (kont5279052895 x5269652897)))))
  (define (< . lst)
    (let ((kont5279252898 (prim car lst)))
      (let ((lst52899 (prim cdr lst)))
        (let ((x5269752900 (apply-prim < lst52899)))
          (kont5279252898 x5269752900)))))
  (define (<= . lst)
    (let ((kont5279452901 (prim car lst)))
      (let ((lst52902 (prim cdr lst)))
        (let ((x5269852903 (apply-prim <= lst52902)))
          (kont5279452901 x5269852903)))))
  (define (>= . lst)
    (let ((kont5279652904 (prim car lst)))
      (let ((lst52905 (prim cdr lst)))
        (let ((x5269952906 (apply-prim >= lst52905)))
          (kont5279652904 x5269952906)))))
  (define (null? kont52798 x)
    (let ((x5270052907 (prim null? x))) (kont52798 x5270052907)))
  (define (equal? kont52799 x y)
    (let ((x5270152908 (prim equal? x y))) (kont52799 x5270152908)))
  (define (eq? kont52800 x y)
    (let ((x5270252909 (prim eq? x y))) (kont52800 x5270252909)))
  (define (cons kont52801 a b)
    (let ((x5270352910 (prim cons a b))) (kont52801 x5270352910)))
  (define (car kont52802 lst)
    (let ((x5270452911 (prim car lst))) (kont52802 x5270452911)))
  (define (cdr kont52803 lst)
    (let ((x5270552912 (prim cdr lst))) (kont52803 x5270552912)))
  (define (even? kont52804 x)
    (let ((a5270652913 '0))
      (let ((a5270752914 '2))
        (let ((f5280552915
               (lambda (a5270852916)
                 (equal? kont52804 a5270652913 a5270852916))))
          (modulo f5280552915 x a5270752914)))))
  (define (odd? kont52806 x)
    (let ((a5270952917 '1))
      (let ((a5271052918 '2))
        (let ((f5280752919
               (lambda (a5271152920)
                 (equal? kont52806 a5270952917 a5271152920))))
          (modulo f5280752919 x a5271052918)))))
  (define (list . x)
    (let ((kont5280852921 (prim car x)))
      (let ((x52922 (prim cdr x))) (kont5280852921 x52922))))
  (define (member? kont52810 x lst)
    (let ((f5281452923
           (lambda (a5271252924)
             (if a5271252924
               (let ((x5271352925 '#f)) (kont52810 x5271352925))
               (let ((f5281352926
                      (lambda (a5271452927)
                        (let ((f5281252928
                               (lambda (a5271552929)
                                 (if a5271552929
                                   (let ((x5271652930 '#t))
                                     (kont52810 x5271652930))
                                   (let ((f5281152931
                                          (lambda (a5271752932)
                                            (member?
                                             kont52810
                                             x
                                             a5271752932))))
                                     (cdr f5281152931 lst))))))
                          (equal? f5281252928 a5271452927 x)))))
                 (car f5281352926 lst))))))
      (null? f5281452923 lst)))
  (define (foldl kont52815 fun acc lst)
    (let ((f5281952933
           (lambda (a5271852934)
             (if a5271852934
               (kont52815 acc)
               (let ((f5281852935
                      (lambda (a5271952936)
                        (let ((f5281752937
                               (lambda (a5272052938)
                                 (let ((f5281652939
                                        (lambda (a5272152940)
                                          (foldl
                                           kont52815
                                           fun
                                           a5272052938
                                           a5272152940))))
                                   (cdr f5281652939 lst)))))
                          (fun f5281752937 a5271952936 acc)))))
                 (car f5281852935 lst))))))
      (null? f5281952933 lst)))
  (define (reverse-helper kont52820 lst lst2)
    (let ((f5282452941
           (lambda (a5272252942)
             (if a5272252942
               (kont52820 lst2)
               (let ((f5282352943
                      (lambda (a5272352944)
                        (let ((f5282252945
                               (lambda (a5272452946)
                                 (let ((f5282152947
                                        (lambda (a5272552948)
                                          (reverse-helper
                                           kont52820
                                           a5272352944
                                           a5272552948))))
                                   (cons f5282152947 a5272452946 lst2)))))
                          (car f5282252945 lst)))))
                 (cdr f5282352943 lst))))))
      (null? f5282452941 lst)))
  (define (reverse kont52825 lst)
    (let ((f5282652949
           (lambda (a5272652950) (reverse-helper kont52825 lst a5272652950))))
      (list f5282652949)))
  (define (take-helper kont52827 lst n lst2)
    (let ((a5272752951 '0))
      (let ((f5283352952
             (lambda (a5272852953)
               (if a5272852953
                 (let ((f5282852954
                        (lambda (x5272952955) (kont52827 x5272952955))))
                   (reverse f5282852954 lst2))
                 (let ((f5283252956
                        (lambda (a5273052957)
                          (let ((a5273152958 '1))
                            (let ((f5283152959
                                   (lambda (a5273252960)
                                     (let ((f5283052961
                                            (lambda (a5273352962)
                                              (let ((f5282952963
                                                     (lambda (a5273452964)
                                                       (take-helper
                                                        kont52827
                                                        a5273052957
                                                        a5273252960
                                                        a5273452964))))
                                                (cons
                                                 f5282952963
                                                 a5273352962
                                                 lst2)))))
                                       (car f5283052961 lst)))))
                              (- f5283152959 n a5273152958))))))
                   (cdr f5283252956 lst))))))
        (= f5283352952 n a5272752951))))
  (define (take kont52834 lst n)
    (let ((f5283552965
           (lambda (a5273552966) (take-helper kont52834 lst n a5273552966))))
      (list f5283552965)))
  (define (length kont52836 lst)
    (let ((f5283952967
           (lambda (a5273652968)
             (if a5273652968
               (let ((x5273752969 '0)) (kont52836 x5273752969))
               (let ((a5273852970 '1))
                 (let ((f5283852971
                        (lambda (a5273952972)
                          (let ((f5283752973
                                 (lambda (a5274052974)
                                   (+ kont52836 a5273852970 a5274052974))))
                            (length f5283752973 a5273952972)))))
                   (cdr f5283852971 lst)))))))
      (null? f5283952967 lst)))
  (define (map kont52840 proc lst)
    (let ((f5284652975
           (lambda (a5274152976)
             (if a5274152976
               (let ((f5284152977
                      (lambda (x5274252978) (kont52840 x5274252978))))
                 (list f5284152977))
               (let ((f5284552979
                      (lambda (a5274352980)
                        (let ((f5284452981
                               (lambda (a5274452982)
                                 (let ((f5284352983
                                        (lambda (a5274552984)
                                          (let ((f5284252985
                                                 (lambda (a5274652986)
                                                   (cons
                                                    kont52840
                                                    a5274452982
                                                    a5274652986))))
                                            (map
                                             f5284252985
                                             proc
                                             a5274552984)))))
                                   (cdr f5284352983 lst)))))
                          (proc f5284452981 a5274352980)))))
                 (car f5284552979 lst))))))
      (null? f5284652975 lst)))
  (define (filter kont52847 op lst)
    (let ((f5285552987
           (lambda (a5274752988)
             (if a5274752988
               (let ((f5284852989
                      (lambda (x5274852990) (kont52847 x5274852990))))
                 (list f5284852989))
               (let ((f5285452991
                      (lambda (a5274952992)
                        (let ((f5285352993
                               (lambda (a5275052994)
                                 (if a5275052994
                                   (let ((f5285152995
                                          (lambda (a5275152996)
                                            (let ((f5285052997
                                                   (lambda (a5275252998)
                                                     (let ((f5284952999
                                                            (lambda (a5275353000)
                                                              (cons
                                                               kont52847
                                                               a5275152996
                                                               a5275353000))))
                                                       (filter
                                                        f5284952999
                                                        op
                                                        a5275252998)))))
                                              (cdr f5285052997 lst)))))
                                     (car f5285152995 lst))
                                   (let ((f5285253001
                                          (lambda (a5275453002)
                                            (filter
                                             kont52847
                                             op
                                             a5275453002))))
                                     (cdr f5285253001 lst))))))
                          (op f5285352993 a5274952992)))))
                 (car f5285452991 lst))))))
      (null? f5285552987 lst)))
  (define (drop kont52856 lst n)
    (let ((a5275553003 '0))
      (let ((f5285953004
             (lambda (a5275653005)
               (if a5275653005
                 (kont52856 lst)
                 (let ((f5285853006
                        (lambda (a5275753007)
                          (let ((a5275853008 '1))
                            (let ((f5285753009
                                   (lambda (a5275953010)
                                     (drop
                                      kont52856
                                      a5275753007
                                      a5275953010))))
                              (- f5285753009 n a5275853008))))))
                   (cdr f5285853006 lst))))))
        (= f5285953004 n a5275553003))))
  (define (foldr kont52860 proc acc lst)
    (let ((f5286453011
           (lambda (a5276053012)
             (if a5276053012
               (kont52860 acc)
               (let ((f5286353013
                      (lambda (a5276153014)
                        (let ((f5286253015
                               (lambda (a5276253016)
                                 (let ((f5286153017
                                        (lambda (a5276353018)
                                          (proc
                                           kont52860
                                           a5276153014
                                           a5276353018))))
                                   (foldr f5286153017 proc acc a5276253016)))))
                          (cdr f5286253015 lst)))))
                 (car f5286353013 lst))))))
      (null? f5286453011 lst)))
  (define (append kont52865 lst1 lst2)
    (let ((f5286953019
           (lambda (a5276453020)
             (if a5276453020
               (kont52865 lst2)
               (let ((f5286853021
                      (lambda (a5276553022)
                        (let ((f5286753023
                               (lambda (a5276653024)
                                 (let ((f5286653025
                                        (lambda (a5276753026)
                                          (cons
                                           kont52865
                                           a5276553022
                                           a5276753026))))
                                   (append f5286653025 a5276653024 lst2)))))
                          (cdr f5286753023 lst1)))))
                 (car f5286853021 lst1))))))
      (null? f5286953019 lst1)))
  (define (hash . lst)
    (let ((kont5287053027 (prim car lst)))
      (let ((lst53028 (prim cdr lst)))
        (let ((x5276853029 (apply-prim hash lst53028)))
          (kont5287053027 x5276853029)))))
  (define (hash-ref kont52872 h k)
    (let ((x5276953030 (prim hash-ref h k))) (kont52872 x5276953030)))
  (define (hash-set kont52873 h k v)
    (let ((x5277053031 (prim hash-set h k v))) (kont52873 x5277053031)))
  (define (hash-has-key? kont52874 h k)
    (let ((x5277153032 (prim hash-has-key? h k))) (kont52874 x5277153032)))
  (define (hash-count kont52875 h)
    (let ((x5277253033 (prim hash-count h))) (kont52875 x5277253033)))
  (define (call kont52876)
    (let ((a5277353034 '100))
      (let ((a5277453035 '100))
        (let ((a5277553036 '100))
          (let ((a5277653037 '100))
            (let ((a5277753038 '100))
              (=
               kont52876
               a5277353034
               a5277453035
               a5277553036
               a5277653037
               a5277753038)))))))
  (define (brouhaha_main kont52877)
    (let ((f5287853039 (lambda (x5277853040) (kont52877 x5277853040))))
      (call f5287853039))))
