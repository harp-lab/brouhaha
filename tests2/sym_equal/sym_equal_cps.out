'((define (+ . lst)
    (let ((kont5379653900 (prim car lst)))
      (let ((lst53901 (prim cdr lst)))
        (let ((x5370553902 (apply-prim + lst53901)))
          (kont5379653900 x5370553902)))))
  (define (- . lst)
    (let ((kont5379853903 (prim car lst)))
      (let ((lst53904 (prim cdr lst)))
        (let ((x5370653905 (apply-prim - lst53904)))
          (kont5379853903 x5370653905)))))
  (define (* . lst)
    (let ((kont5380053906 (prim car lst)))
      (let ((lst53907 (prim cdr lst)))
        (let ((x5370753908 (apply-prim * lst53907)))
          (kont5380053906 x5370753908)))))
  (define (modulo kont53802 a b)
    (let ((x5370853909 (prim modulo a b))) (kont53802 x5370853909)))
  (define (/ . lst)
    (let ((kont5380353910 (prim car lst)))
      (let ((lst53911 (prim cdr lst)))
        (let ((x5370953912 (apply-prim / lst53911)))
          (kont5380353910 x5370953912)))))
  (define (= . lst)
    (let ((kont5380553913 (prim car lst)))
      (let ((lst53914 (prim cdr lst)))
        (let ((x5371053915 (apply-prim = lst53914)))
          (kont5380553913 x5371053915)))))
  (define (> . lst)
    (let ((kont5380753916 (prim car lst)))
      (let ((lst53917 (prim cdr lst)))
        (let ((x5371153918 (apply-prim > lst53917)))
          (kont5380753916 x5371153918)))))
  (define (< . lst)
    (let ((kont5380953919 (prim car lst)))
      (let ((lst53920 (prim cdr lst)))
        (let ((x5371253921 (apply-prim < lst53920)))
          (kont5380953919 x5371253921)))))
  (define (<= . lst)
    (let ((kont5381153922 (prim car lst)))
      (let ((lst53923 (prim cdr lst)))
        (let ((x5371353924 (apply-prim <= lst53923)))
          (kont5381153922 x5371353924)))))
  (define (>= . lst)
    (let ((kont5381353925 (prim car lst)))
      (let ((lst53926 (prim cdr lst)))
        (let ((x5371453927 (apply-prim >= lst53926)))
          (kont5381353925 x5371453927)))))
  (define (null? kont53815 x)
    (let ((x5371553928 (prim null? x))) (kont53815 x5371553928)))
  (define (equal? kont53816 x y)
    (let ((x5371653929 (prim equal? x y))) (kont53816 x5371653929)))
  (define (eq? kont53817 x y)
    (let ((x5371753930 (prim eq? x y))) (kont53817 x5371753930)))
  (define (cons kont53818 a b)
    (let ((x5371853931 (prim cons a b))) (kont53818 x5371853931)))
  (define (car kont53819 lst)
    (let ((x5371953932 (prim car lst))) (kont53819 x5371953932)))
  (define (cdr kont53820 lst)
    (let ((x5372053933 (prim cdr lst))) (kont53820 x5372053933)))
  (define (even? kont53821 x)
    (let ((a5372153934 '0))
      (let ((a5372253935 '2))
        (let ((f5382253936
               (lambda (a5372353937)
                 (equal? kont53821 a5372153934 a5372353937))))
          (modulo f5382253936 x a5372253935)))))
  (define (odd? kont53823 x)
    (let ((a5372453938 '1))
      (let ((a5372553939 '2))
        (let ((f5382453940
               (lambda (a5372653941)
                 (equal? kont53823 a5372453938 a5372653941))))
          (modulo f5382453940 x a5372553939)))))
  (define (list . x)
    (let ((kont5382553942 (prim car x)))
      (let ((x53943 (prim cdr x))) (kont5382553942 x53943))))
  (define (and . lst)
    (let ((kont5382753944 (prim car lst)))
      (let ((lst53945 (prim cdr lst)))
        (let ((x5372753946 (apply-prim and lst53945)))
          (kont5382753944 x5372753946)))))
  (define (or . lst)
    (let ((kont5382953947 (prim car lst)))
      (let ((lst53948 (prim cdr lst)))
        (let ((x5372853949 (apply-prim or lst53948)))
          (kont5382953947 x5372853949)))))
  (define (member? kont53831 x lst)
    (let ((f5383553950
           (lambda (a5372953951)
             (if a5372953951
               (let ((x5373053952 '#f)) (kont53831 x5373053952))
               (let ((f5383453953
                      (lambda (a5373153954)
                        (let ((f5383353955
                               (lambda (a5373253956)
                                 (if a5373253956
                                   (let ((x5373353957 '#t))
                                     (kont53831 x5373353957))
                                   (let ((f5383253958
                                          (lambda (a5373453959)
                                            (member?
                                             kont53831
                                             x
                                             a5373453959))))
                                     (cdr f5383253958 lst))))))
                          (equal? f5383353955 a5373153954 x)))))
                 (car f5383453953 lst))))))
      (null? f5383553950 lst)))
  (define (foldl kont53836 fun acc lst)
    (let ((f5384053960
           (lambda (a5373553961)
             (if a5373553961
               (kont53836 acc)
               (let ((f5383953962
                      (lambda (a5373653963)
                        (let ((f5383853964
                               (lambda (a5373753965)
                                 (let ((f5383753966
                                        (lambda (a5373853967)
                                          (foldl
                                           kont53836
                                           fun
                                           a5373753965
                                           a5373853967))))
                                   (cdr f5383753966 lst)))))
                          (fun f5383853964 a5373653963 acc)))))
                 (car f5383953962 lst))))))
      (null? f5384053960 lst)))
  (define (reverse-helper kont53841 lst lst2)
    (let ((f5384553968
           (lambda (a5373953969)
             (if a5373953969
               (kont53841 lst2)
               (let ((f5384453970
                      (lambda (a5374053971)
                        (let ((f5384353972
                               (lambda (a5374153973)
                                 (let ((f5384253974
                                        (lambda (a5374253975)
                                          (reverse-helper
                                           kont53841
                                           a5374053971
                                           a5374253975))))
                                   (cons f5384253974 a5374153973 lst2)))))
                          (car f5384353972 lst)))))
                 (cdr f5384453970 lst))))))
      (null? f5384553968 lst)))
  (define (reverse kont53846 lst)
    (let ((f5384753976
           (lambda (a5374353977) (reverse-helper kont53846 lst a5374353977))))
      (list f5384753976)))
  (define (take-helper kont53848 lst n lst2)
    (let ((a5374453978 '0))
      (let ((f5385453979
             (lambda (a5374553980)
               (if a5374553980
                 (let ((f5384953981
                        (lambda (x5374653982) (kont53848 x5374653982))))
                   (reverse f5384953981 lst2))
                 (let ((f5385353983
                        (lambda (a5374753984)
                          (let ((a5374853985 '1))
                            (let ((f5385253986
                                   (lambda (a5374953987)
                                     (let ((f5385153988
                                            (lambda (a5375053989)
                                              (let ((f5385053990
                                                     (lambda (a5375153991)
                                                       (take-helper
                                                        kont53848
                                                        a5374753984
                                                        a5374953987
                                                        a5375153991))))
                                                (cons
                                                 f5385053990
                                                 a5375053989
                                                 lst2)))))
                                       (car f5385153988 lst)))))
                              (- f5385253986 n a5374853985))))))
                   (cdr f5385353983 lst))))))
        (= f5385453979 n a5374453978))))
  (define (take kont53855 lst n)
    (let ((f5385653992
           (lambda (a5375253993) (take-helper kont53855 lst n a5375253993))))
      (list f5385653992)))
  (define (length kont53857 lst)
    (let ((f5386053994
           (lambda (a5375353995)
             (if a5375353995
               (let ((x5375453996 '0)) (kont53857 x5375453996))
               (let ((a5375553997 '1))
                 (let ((f5385953998
                        (lambda (a5375653999)
                          (let ((f5385854000
                                 (lambda (a5375754001)
                                   (+ kont53857 a5375553997 a5375754001))))
                            (length f5385854000 a5375653999)))))
                   (cdr f5385953998 lst)))))))
      (null? f5386053994 lst)))
  (define (map kont53861 proc lst)
    (let ((f5386754002
           (lambda (a5375854003)
             (if a5375854003
               (let ((f5386254004
                      (lambda (x5375954005) (kont53861 x5375954005))))
                 (list f5386254004))
               (let ((f5386654006
                      (lambda (a5376054007)
                        (let ((f5386554008
                               (lambda (a5376154009)
                                 (let ((f5386454010
                                        (lambda (a5376254011)
                                          (let ((f5386354012
                                                 (lambda (a5376354013)
                                                   (cons
                                                    kont53861
                                                    a5376154009
                                                    a5376354013))))
                                            (map
                                             f5386354012
                                             proc
                                             a5376254011)))))
                                   (cdr f5386454010 lst)))))
                          (proc f5386554008 a5376054007)))))
                 (car f5386654006 lst))))))
      (null? f5386754002 lst)))
  (define (filter kont53868 op lst)
    (let ((f5387654014
           (lambda (a5376454015)
             (if a5376454015
               (let ((f5386954016
                      (lambda (x5376554017) (kont53868 x5376554017))))
                 (list f5386954016))
               (let ((f5387554018
                      (lambda (a5376654019)
                        (let ((f5387454020
                               (lambda (a5376754021)
                                 (if a5376754021
                                   (let ((f5387254022
                                          (lambda (a5376854023)
                                            (let ((f5387154024
                                                   (lambda (a5376954025)
                                                     (let ((f5387054026
                                                            (lambda (a5377054027)
                                                              (cons
                                                               kont53868
                                                               a5376854023
                                                               a5377054027))))
                                                       (filter
                                                        f5387054026
                                                        op
                                                        a5376954025)))))
                                              (cdr f5387154024 lst)))))
                                     (car f5387254022 lst))
                                   (let ((f5387354028
                                          (lambda (a5377154029)
                                            (filter
                                             kont53868
                                             op
                                             a5377154029))))
                                     (cdr f5387354028 lst))))))
                          (op f5387454020 a5376654019)))))
                 (car f5387554018 lst))))))
      (null? f5387654014 lst)))
  (define (drop kont53877 lst n)
    (let ((a5377254030 '0))
      (let ((f5388054031
             (lambda (a5377354032)
               (if a5377354032
                 (kont53877 lst)
                 (let ((f5387954033
                        (lambda (a5377454034)
                          (let ((a5377554035 '1))
                            (let ((f5387854036
                                   (lambda (a5377654037)
                                     (drop
                                      kont53877
                                      a5377454034
                                      a5377654037))))
                              (- f5387854036 n a5377554035))))))
                   (cdr f5387954033 lst))))))
        (= f5388054031 n a5377254030))))
  (define (foldr kont53881 proc acc lst)
    (let ((f5388554038
           (lambda (a5377754039)
             (if a5377754039
               (kont53881 acc)
               (let ((f5388454040
                      (lambda (a5377854041)
                        (let ((f5388354042
                               (lambda (a5377954043)
                                 (let ((f5388254044
                                        (lambda (a5378054045)
                                          (proc
                                           kont53881
                                           a5377854041
                                           a5378054045))))
                                   (foldr f5388254044 proc acc a5377954043)))))
                          (cdr f5388354042 lst)))))
                 (car f5388454040 lst))))))
      (null? f5388554038 lst)))
  (define (append kont53886 lst1 lst2)
    (let ((f5389054046
           (lambda (a5378154047)
             (if a5378154047
               (kont53886 lst2)
               (let ((f5388954048
                      (lambda (a5378254049)
                        (let ((f5388854050
                               (lambda (a5378354051)
                                 (let ((f5388754052
                                        (lambda (a5378454053)
                                          (cons
                                           kont53886
                                           a5378254049
                                           a5378454053))))
                                   (append f5388754052 a5378354051 lst2)))))
                          (cdr f5388854050 lst1)))))
                 (car f5388954048 lst1))))))
      (null? f5389054046 lst1)))
  (define (hash . lst)
    (let ((kont5389154054 (prim car lst)))
      (let ((lst54055 (prim cdr lst)))
        (let ((x5378554056 (apply-prim hash lst54055)))
          (kont5389154054 x5378554056)))))
  (define (hash-ref kont53893 h k)
    (let ((x5378654057 (prim hash-ref h k))) (kont53893 x5378654057)))
  (define (hash-set kont53894 h k v)
    (let ((x5378754058 (prim hash-set h k v))) (kont53894 x5378754058)))
  (define (hash-has-key? kont53895 h k)
    (let ((x5378854059 (prim hash-has-key? h k))) (kont53895 x5378854059)))
  (define (hash-count kont53896 h)
    (let ((x5378954060 (prim hash-count h))) (kont53896 x5378954060)))
  (define (call kont53897)
    (let ((a5379054061 '100))
      (let ((a5379154062 '100))
        (let ((a5379254063 '100))
          (let ((a5379354064 '100))
            (let ((a5379454065 '100))
              (=
               kont53897
               a5379054061
               a5379154062
               a5379254063
               a5379354064
               a5379454065)))))))
  (define (brouhaha_main kont53898)
    (let ((f5389954066 (lambda (x5379554067) (kont53898 x5379554067))))
      (call f5389954066))))
