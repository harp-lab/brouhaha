'((define (+ . lst)
    (let ((kont5114751247 (prim car lst)))
      (let ((lst51248 (prim cdr lst)))
        (let ((x5105851249 (apply-prim + lst51248)))
          (kont5114751247 x5105851249)))))
  (define (- . lst)
    (let ((kont5114951250 (prim car lst)))
      (let ((lst51251 (prim cdr lst)))
        (let ((x5105951252 (apply-prim - lst51251)))
          (kont5114951250 x5105951252)))))
  (define (* . lst)
    (let ((kont5115151253 (prim car lst)))
      (let ((lst51254 (prim cdr lst)))
        (let ((x5106051255 (apply-prim * lst51254)))
          (kont5115151253 x5106051255)))))
  (define (modulo kont51153 a b)
    (let ((x5106151256 (prim modulo a b))) (kont51153 x5106151256)))
  (define (/ . lst)
    (let ((kont5115451257 (prim car lst)))
      (let ((lst51258 (prim cdr lst)))
        (let ((x5106251259 (apply-prim / lst51258)))
          (kont5115451257 x5106251259)))))
  (define (= . lst)
    (let ((kont5115651260 (prim car lst)))
      (let ((lst51261 (prim cdr lst)))
        (let ((x5106351262 (apply-prim = lst51261)))
          (kont5115651260 x5106351262)))))
  (define (> . lst)
    (let ((kont5115851263 (prim car lst)))
      (let ((lst51264 (prim cdr lst)))
        (let ((x5106451265 (apply-prim > lst51264)))
          (kont5115851263 x5106451265)))))
  (define (< . lst)
    (let ((kont5116051266 (prim car lst)))
      (let ((lst51267 (prim cdr lst)))
        (let ((x5106551268 (apply-prim < lst51267)))
          (kont5116051266 x5106551268)))))
  (define (<= . lst)
    (let ((kont5116251269 (prim car lst)))
      (let ((lst51270 (prim cdr lst)))
        (let ((x5106651271 (apply-prim <= lst51270)))
          (kont5116251269 x5106651271)))))
  (define (>= . lst)
    (let ((kont5116451272 (prim car lst)))
      (let ((lst51273 (prim cdr lst)))
        (let ((x5106751274 (apply-prim >= lst51273)))
          (kont5116451272 x5106751274)))))
  (define (null? kont51166 x)
    (let ((x5106851275 (prim null? x))) (kont51166 x5106851275)))
  (define (equal? kont51167 x y)
    (let ((x5106951276 (prim equal? x y))) (kont51167 x5106951276)))
  (define (eq? kont51168 x y)
    (let ((x5107051277 (prim eq? x y))) (kont51168 x5107051277)))
  (define (cons kont51169 a b)
    (let ((x5107151278 (prim cons a b))) (kont51169 x5107151278)))
  (define (car kont51170 lst)
    (let ((x5107251279 (prim car lst))) (kont51170 x5107251279)))
  (define (cdr kont51171 lst)
    (let ((x5107351280 (prim cdr lst))) (kont51171 x5107351280)))
  (define (even? kont51172 x)
    (let ((a5107451281 '0))
      (let ((a5107551282 '2))
        (let ((f5117351283
               (lambda (a5107651284)
                 (equal? kont51172 a5107451281 a5107651284))))
          (modulo f5117351283 x a5107551282)))))
  (define (odd? kont51174 x)
    (let ((a5107751285 '1))
      (let ((a5107851286 '2))
        (let ((f5117551287
               (lambda (a5107951288)
                 (equal? kont51174 a5107751285 a5107951288))))
          (modulo f5117551287 x a5107851286)))))
  (define (list . x)
    (let ((kont5117651289 (prim car x)))
      (let ((x51290 (prim cdr x))) (kont5117651289 x51290))))
  (define (member? kont51178 x lst)
    (let ((f5118251291
           (lambda (a5108051292)
             (if a5108051292
               (let ((x5108151293 '#f)) (kont51178 x5108151293))
               (let ((f5118151294
                      (lambda (a5108251295)
                        (let ((f5118051296
                               (lambda (a5108351297)
                                 (if a5108351297
                                   (let ((x5108451298 '#t))
                                     (kont51178 x5108451298))
                                   (let ((f5117951299
                                          (lambda (a5108551300)
                                            (member?
                                             kont51178
                                             x
                                             a5108551300))))
                                     (cdr f5117951299 lst))))))
                          (equal? f5118051296 a5108251295 x)))))
                 (car f5118151294 lst))))))
      (null? f5118251291 lst)))
  (define (foldl kont51183 fun acc lst)
    (let ((f5118751301
           (lambda (a5108651302)
             (if a5108651302
               (kont51183 acc)
               (let ((f5118651303
                      (lambda (a5108751304)
                        (let ((f5118551305
                               (lambda (a5108851306)
                                 (let ((f5118451307
                                        (lambda (a5108951308)
                                          (foldl
                                           kont51183
                                           fun
                                           a5108851306
                                           a5108951308))))
                                   (cdr f5118451307 lst)))))
                          (fun f5118551305 a5108751304 acc)))))
                 (car f5118651303 lst))))))
      (null? f5118751301 lst)))
  (define (reverse-helper kont51188 lst lst2)
    (let ((f5119251309
           (lambda (a5109051310)
             (if a5109051310
               (kont51188 lst2)
               (let ((f5119151311
                      (lambda (a5109151312)
                        (let ((f5119051313
                               (lambda (a5109251314)
                                 (let ((f5118951315
                                        (lambda (a5109351316)
                                          (reverse-helper
                                           kont51188
                                           a5109151312
                                           a5109351316))))
                                   (cons f5118951315 a5109251314 lst2)))))
                          (car f5119051313 lst)))))
                 (cdr f5119151311 lst))))))
      (null? f5119251309 lst)))
  (define (reverse kont51193 lst)
    (let ((f5119451317
           (lambda (a5109451318) (reverse-helper kont51193 lst a5109451318))))
      (list f5119451317)))
  (define (take-helper kont51195 lst n lst2)
    (let ((a5109551319 '0))
      (let ((f5120151320
             (lambda (a5109651321)
               (if a5109651321
                 (let ((f5119651322
                        (lambda (x5109751323) (kont51195 x5109751323))))
                   (reverse f5119651322 lst2))
                 (let ((f5120051324
                        (lambda (a5109851325)
                          (let ((a5109951326 '1))
                            (let ((f5119951327
                                   (lambda (a5110051328)
                                     (let ((f5119851329
                                            (lambda (a5110151330)
                                              (let ((f5119751331
                                                     (lambda (a5110251332)
                                                       (take-helper
                                                        kont51195
                                                        a5109851325
                                                        a5110051328
                                                        a5110251332))))
                                                (cons
                                                 f5119751331
                                                 a5110151330
                                                 lst2)))))
                                       (car f5119851329 lst)))))
                              (- f5119951327 n a5109951326))))))
                   (cdr f5120051324 lst))))))
        (= f5120151320 n a5109551319))))
  (define (take kont51202 lst n)
    (let ((f5120351333
           (lambda (a5110351334) (take-helper kont51202 lst n a5110351334))))
      (list f5120351333)))
  (define (length kont51204 lst)
    (let ((f5120751335
           (lambda (a5110451336)
             (if a5110451336
               (let ((x5110551337 '0)) (kont51204 x5110551337))
               (let ((a5110651338 '1))
                 (let ((f5120651339
                        (lambda (a5110751340)
                          (let ((f5120551341
                                 (lambda (a5110851342)
                                   (+ kont51204 a5110651338 a5110851342))))
                            (length f5120551341 a5110751340)))))
                   (cdr f5120651339 lst)))))))
      (null? f5120751335 lst)))
  (define (map kont51208 proc lst)
    (let ((f5121451343
           (lambda (a5110951344)
             (if a5110951344
               (let ((f5120951345
                      (lambda (x5111051346) (kont51208 x5111051346))))
                 (list f5120951345))
               (let ((f5121351347
                      (lambda (a5111151348)
                        (let ((f5121251349
                               (lambda (a5111251350)
                                 (let ((f5121151351
                                        (lambda (a5111351352)
                                          (let ((f5121051353
                                                 (lambda (a5111451354)
                                                   (cons
                                                    kont51208
                                                    a5111251350
                                                    a5111451354))))
                                            (map
                                             f5121051353
                                             proc
                                             a5111351352)))))
                                   (cdr f5121151351 lst)))))
                          (proc f5121251349 a5111151348)))))
                 (car f5121351347 lst))))))
      (null? f5121451343 lst)))
  (define (filter kont51215 op lst)
    (let ((f5122351355
           (lambda (a5111551356)
             (if a5111551356
               (let ((f5121651357
                      (lambda (x5111651358) (kont51215 x5111651358))))
                 (list f5121651357))
               (let ((f5122251359
                      (lambda (a5111751360)
                        (let ((f5122151361
                               (lambda (a5111851362)
                                 (if a5111851362
                                   (let ((f5121951363
                                          (lambda (a5111951364)
                                            (let ((f5121851365
                                                   (lambda (a5112051366)
                                                     (let ((f5121751367
                                                            (lambda (a5112151368)
                                                              (cons
                                                               kont51215
                                                               a5111951364
                                                               a5112151368))))
                                                       (filter
                                                        f5121751367
                                                        op
                                                        a5112051366)))))
                                              (cdr f5121851365 lst)))))
                                     (car f5121951363 lst))
                                   (let ((f5122051369
                                          (lambda (a5112251370)
                                            (filter
                                             kont51215
                                             op
                                             a5112251370))))
                                     (cdr f5122051369 lst))))))
                          (op f5122151361 a5111751360)))))
                 (car f5122251359 lst))))))
      (null? f5122351355 lst)))
  (define (drop kont51224 lst n)
    (let ((a5112351371 '0))
      (let ((f5122751372
             (lambda (a5112451373)
               (if a5112451373
                 (kont51224 lst)
                 (let ((f5122651374
                        (lambda (a5112551375)
                          (let ((a5112651376 '1))
                            (let ((f5122551377
                                   (lambda (a5112751378)
                                     (drop
                                      kont51224
                                      a5112551375
                                      a5112751378))))
                              (- f5122551377 n a5112651376))))))
                   (cdr f5122651374 lst))))))
        (= f5122751372 n a5112351371))))
  (define (foldr kont51228 proc acc lst)
    (let ((f5123251379
           (lambda (a5112851380)
             (if a5112851380
               (kont51228 acc)
               (let ((f5123151381
                      (lambda (a5112951382)
                        (let ((f5123051383
                               (lambda (a5113051384)
                                 (let ((f5122951385
                                        (lambda (a5113151386)
                                          (proc
                                           kont51228
                                           a5112951382
                                           a5113151386))))
                                   (foldr f5122951385 proc acc a5113051384)))))
                          (cdr f5123051383 lst)))))
                 (car f5123151381 lst))))))
      (null? f5123251379 lst)))
  (define (append kont51233 lst1 lst2)
    (let ((f5123751387
           (lambda (a5113251388)
             (if a5113251388
               (kont51233 lst2)
               (let ((f5123651389
                      (lambda (a5113351390)
                        (let ((f5123551391
                               (lambda (a5113451392)
                                 (let ((f5123451393
                                        (lambda (a5113551394)
                                          (cons
                                           kont51233
                                           a5113351390
                                           a5113551394))))
                                   (append f5123451393 a5113451392 lst2)))))
                          (cdr f5123551391 lst1)))))
                 (car f5123651389 lst1))))))
      (null? f5123751387 lst1)))
  (define (hash . lst)
    (let ((kont5123851395 (prim car lst)))
      (let ((lst51396 (prim cdr lst)))
        (let ((x5113651397 (apply-prim hash lst51396)))
          (kont5123851395 x5113651397)))))
  (define (hash-ref kont51240 h k)
    (let ((x5113751398 (prim hash-ref h k))) (kont51240 x5113751398)))
  (define (hash-set kont51241 h k v)
    (let ((x5113851399 (prim hash-set h k v))) (kont51241 x5113851399)))
  (define (hash-has-key? kont51242 h k)
    (let ((x5113951400 (prim hash-has-key? h k))) (kont51242 x5113951400)))
  (define (hash-count kont51243 h)
    (let ((x5114051401 (prim hash-count h))) (kont51243 x5114051401)))
  (define (call kont51244)
    (let ((a5114151402 '100))
      (let ((a5114251403 '100))
        (let ((a5114351404 '100))
          (let ((a5114451405 '100))
            (let ((a5114551406 '100))
              (=
               kont51244
               a5114151402
               a5114251403
               a5114351404
               a5114451405
               a5114551406)))))))
  (define (brouhaha_main kont51245)
    (let ((f5124651407 (lambda (x5114651408) (kont51245 x5114651408))))
      (call f5124651407))))
