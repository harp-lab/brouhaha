'((define (+ . lst)
    (let ((kont4371543815 (prim car lst)))
      (let ((lst43816 (prim cdr lst)))
        (let ((x4362743817 (apply-prim + lst43816)))
          (kont4371543815 x4362743817)))))
  (define (- . lst)
    (let ((kont4371743818 (prim car lst)))
      (let ((lst43819 (prim cdr lst)))
        (let ((x4362843820 (apply-prim - lst43819)))
          (kont4371743818 x4362843820)))))
  (define (* . lst)
    (let ((kont4371943821 (prim car lst)))
      (let ((lst43822 (prim cdr lst)))
        (let ((x4362943823 (apply-prim * lst43822)))
          (kont4371943821 x4362943823)))))
  (define (modulo kont43721 a b)
    (let ((x4363043824 (prim modulo a b))) (kont43721 x4363043824)))
  (define (/ . lst)
    (let ((kont4372243825 (prim car lst)))
      (let ((lst43826 (prim cdr lst)))
        (let ((x4363143827 (apply-prim / lst43826)))
          (kont4372243825 x4363143827)))))
  (define (= . lst)
    (let ((kont4372443828 (prim car lst)))
      (let ((lst43829 (prim cdr lst)))
        (let ((x4363243830 (apply-prim = lst43829)))
          (kont4372443828 x4363243830)))))
  (define (> . lst)
    (let ((kont4372643831 (prim car lst)))
      (let ((lst43832 (prim cdr lst)))
        (let ((x4363343833 (apply-prim > lst43832)))
          (kont4372643831 x4363343833)))))
  (define (< . lst)
    (let ((kont4372843834 (prim car lst)))
      (let ((lst43835 (prim cdr lst)))
        (let ((x4363443836 (apply-prim < lst43835)))
          (kont4372843834 x4363443836)))))
  (define (<= . lst)
    (let ((kont4373043837 (prim car lst)))
      (let ((lst43838 (prim cdr lst)))
        (let ((x4363543839 (apply-prim <= lst43838)))
          (kont4373043837 x4363543839)))))
  (define (>= . lst)
    (let ((kont4373243840 (prim car lst)))
      (let ((lst43841 (prim cdr lst)))
        (let ((x4363643842 (apply-prim >= lst43841)))
          (kont4373243840 x4363643842)))))
  (define (null? kont43734 x)
    (let ((x4363743843 (prim null? x))) (kont43734 x4363743843)))
  (define (equal? kont43735 x y)
    (let ((x4363843844 (prim equal? x y))) (kont43735 x4363843844)))
  (define (eq? kont43736 x y)
    (let ((x4363943845 (prim eq? x y))) (kont43736 x4363943845)))
  (define (cons kont43737 a b)
    (let ((x4364043846 (prim cons a b))) (kont43737 x4364043846)))
  (define (car kont43738 lst)
    (let ((x4364143847 (prim car lst))) (kont43738 x4364143847)))
  (define (cdr kont43739 lst)
    (let ((x4364243848 (prim cdr lst))) (kont43739 x4364243848)))
  (define (even? kont43740 x)
    (let ((a4364343849 '0))
      (let ((a4364443850 '2))
        (let ((f4374143851
               (lambda (a4364543852)
                 (equal? kont43740 a4364343849 a4364543852))))
          (modulo f4374143851 x a4364443850)))))
  (define (odd? kont43742 x)
    (let ((a4364643853 '1))
      (let ((a4364743854 '2))
        (let ((f4374343855
               (lambda (a4364843856)
                 (equal? kont43742 a4364643853 a4364843856))))
          (modulo f4374343855 x a4364743854)))))
  (define (list . x)
    (let ((kont4374443857 (prim car x)))
      (let ((x43858 (prim cdr x))) (kont4374443857 x43858))))
  (define (member? kont43746 x lst)
    (let ((f4375043859
           (lambda (a4364943860)
             (if a4364943860
               (let ((x4365043861 '#f)) (kont43746 x4365043861))
               (let ((f4374943862
                      (lambda (a4365143863)
                        (let ((f4374843864
                               (lambda (a4365243865)
                                 (if a4365243865
                                   (let ((x4365343866 '#t))
                                     (kont43746 x4365343866))
                                   (let ((f4374743867
                                          (lambda (a4365443868)
                                            (member?
                                             kont43746
                                             x
                                             a4365443868))))
                                     (cdr f4374743867 lst))))))
                          (equal? f4374843864 a4365143863 x)))))
                 (car f4374943862 lst))))))
      (null? f4375043859 lst)))
  (define (foldl kont43751 fun acc lst)
    (let ((f4375543869
           (lambda (a4365543870)
             (if a4365543870
               (kont43751 acc)
               (let ((f4375443871
                      (lambda (a4365643872)
                        (let ((f4375343873
                               (lambda (a4365743874)
                                 (let ((f4375243875
                                        (lambda (a4365843876)
                                          (foldl
                                           kont43751
                                           fun
                                           a4365743874
                                           a4365843876))))
                                   (cdr f4375243875 lst)))))
                          (fun f4375343873 a4365643872 acc)))))
                 (car f4375443871 lst))))))
      (null? f4375543869 lst)))
  (define (reverse-helper kont43756 lst lst2)
    (let ((f4376043877
           (lambda (a4365943878)
             (if a4365943878
               (kont43756 lst2)
               (let ((f4375943879
                      (lambda (a4366043880)
                        (let ((f4375843881
                               (lambda (a4366143882)
                                 (let ((f4375743883
                                        (lambda (a4366243884)
                                          (reverse-helper
                                           kont43756
                                           a4366043880
                                           a4366243884))))
                                   (cons f4375743883 a4366143882 lst2)))))
                          (car f4375843881 lst)))))
                 (cdr f4375943879 lst))))))
      (null? f4376043877 lst)))
  (define (reverse kont43761 lst)
    (let ((f4376243885
           (lambda (a4366343886) (reverse-helper kont43761 lst a4366343886))))
      (list f4376243885)))
  (define (take-helper kont43763 lst n lst2)
    (let ((a4366443887 '0))
      (let ((f4376943888
             (lambda (a4366543889)
               (if a4366543889
                 (let ((f4376443890
                        (lambda (x4366643891) (kont43763 x4366643891))))
                   (reverse f4376443890 lst2))
                 (let ((f4376843892
                        (lambda (a4366743893)
                          (let ((a4366843894 '1))
                            (let ((f4376743895
                                   (lambda (a4366943896)
                                     (let ((f4376643897
                                            (lambda (a4367043898)
                                              (let ((f4376543899
                                                     (lambda (a4367143900)
                                                       (take-helper
                                                        kont43763
                                                        a4366743893
                                                        a4366943896
                                                        a4367143900))))
                                                (cons
                                                 f4376543899
                                                 a4367043898
                                                 lst2)))))
                                       (car f4376643897 lst)))))
                              (- f4376743895 n a4366843894))))))
                   (cdr f4376843892 lst))))))
        (= f4376943888 n a4366443887))))
  (define (take kont43770 lst n)
    (let ((f4377143901
           (lambda (a4367243902) (take-helper kont43770 lst n a4367243902))))
      (list f4377143901)))
  (define (length kont43772 lst)
    (let ((f4377543903
           (lambda (a4367343904)
             (if a4367343904
               (let ((x4367443905 '0)) (kont43772 x4367443905))
               (let ((a4367543906 '1))
                 (let ((f4377443907
                        (lambda (a4367643908)
                          (let ((f4377343909
                                 (lambda (a4367743910)
                                   (+ kont43772 a4367543906 a4367743910))))
                            (length f4377343909 a4367643908)))))
                   (cdr f4377443907 lst)))))))
      (null? f4377543903 lst)))
  (define (map kont43776 proc lst)
    (let ((f4378243911
           (lambda (a4367843912)
             (if a4367843912
               (let ((f4377743913
                      (lambda (x4367943914) (kont43776 x4367943914))))
                 (list f4377743913))
               (let ((f4378143915
                      (lambda (a4368043916)
                        (let ((f4378043917
                               (lambda (a4368143918)
                                 (let ((f4377943919
                                        (lambda (a4368243920)
                                          (let ((f4377843921
                                                 (lambda (a4368343922)
                                                   (cons
                                                    kont43776
                                                    a4368143918
                                                    a4368343922))))
                                            (map
                                             f4377843921
                                             proc
                                             a4368243920)))))
                                   (cdr f4377943919 lst)))))
                          (proc f4378043917 a4368043916)))))
                 (car f4378143915 lst))))))
      (null? f4378243911 lst)))
  (define (filter kont43783 op lst)
    (let ((f4379143923
           (lambda (a4368443924)
             (if a4368443924
               (let ((f4378443925
                      (lambda (x4368543926) (kont43783 x4368543926))))
                 (list f4378443925))
               (let ((f4379043927
                      (lambda (a4368643928)
                        (let ((f4378943929
                               (lambda (a4368743930)
                                 (if a4368743930
                                   (let ((f4378743931
                                          (lambda (a4368843932)
                                            (let ((f4378643933
                                                   (lambda (a4368943934)
                                                     (let ((f4378543935
                                                            (lambda (a4369043936)
                                                              (cons
                                                               kont43783
                                                               a4368843932
                                                               a4369043936))))
                                                       (filter
                                                        f4378543935
                                                        op
                                                        a4368943934)))))
                                              (cdr f4378643933 lst)))))
                                     (car f4378743931 lst))
                                   (let ((f4378843937
                                          (lambda (a4369143938)
                                            (filter
                                             kont43783
                                             op
                                             a4369143938))))
                                     (cdr f4378843937 lst))))))
                          (op f4378943929 a4368643928)))))
                 (car f4379043927 lst))))))
      (null? f4379143923 lst)))
  (define (drop kont43792 lst n)
    (let ((a4369243939 '0))
      (let ((f4379543940
             (lambda (a4369343941)
               (if a4369343941
                 (kont43792 lst)
                 (let ((f4379443942
                        (lambda (a4369443943)
                          (let ((a4369543944 '1))
                            (let ((f4379343945
                                   (lambda (a4369643946)
                                     (drop
                                      kont43792
                                      a4369443943
                                      a4369643946))))
                              (- f4379343945 n a4369543944))))))
                   (cdr f4379443942 lst))))))
        (= f4379543940 n a4369243939))))
  (define (foldr kont43796 proc acc lst)
    (let ((f4380043947
           (lambda (a4369743948)
             (if a4369743948
               (kont43796 acc)
               (let ((f4379943949
                      (lambda (a4369843950)
                        (let ((f4379843951
                               (lambda (a4369943952)
                                 (let ((f4379743953
                                        (lambda (a4370043954)
                                          (proc
                                           kont43796
                                           a4369843950
                                           a4370043954))))
                                   (foldr f4379743953 proc acc a4369943952)))))
                          (cdr f4379843951 lst)))))
                 (car f4379943949 lst))))))
      (null? f4380043947 lst)))
  (define (append kont43801 lst1 lst2)
    (let ((f4380543955
           (lambda (a4370143956)
             (if a4370143956
               (kont43801 lst2)
               (let ((f4380443957
                      (lambda (a4370243958)
                        (let ((f4380343959
                               (lambda (a4370343960)
                                 (let ((f4380243961
                                        (lambda (a4370443962)
                                          (cons
                                           kont43801
                                           a4370243958
                                           a4370443962))))
                                   (append f4380243961 a4370343960 lst2)))))
                          (cdr f4380343959 lst1)))))
                 (car f4380443957 lst1))))))
      (null? f4380543955 lst1)))
  (define (hash . lst)
    (let ((kont4380643963 (prim car lst)))
      (let ((lst43964 (prim cdr lst)))
        (let ((x4370543965 (apply-prim hash lst43964)))
          (kont4380643963 x4370543965)))))
  (define (hash-ref kont43808 h k)
    (let ((x4370643966 (prim hash-ref h k))) (kont43808 x4370643966)))
  (define (hash-set kont43809 h k v)
    (let ((x4370743967 (prim hash-set h k v))) (kont43809 x4370743967)))
  (define (hash-has-key? kont43810 h k)
    (let ((x4370843968 (prim hash-has-key? h k))) (kont43810 x4370843968)))
  (define (hash-count kont43811 h)
    (let ((x4370943969 (prim hash-count h))) (kont43811 x4370943969)))
  (define (call kont43812)
    (let ((a4371043970 '100))
      (let ((a4371143971 '80))
        (let ((a4371243972 '10))
          (let ((a4371343973 '2))
            (hash
             kont43812
             a4371043970
             a4371143971
             a4371243972
             a4371343973))))))
  (define (brouhaha_main kont43813)
    (let ((f4381443974 (lambda (x4371443975) (kont43813 x4371443975))))
      (call f4381443974))))
