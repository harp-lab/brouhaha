'((define (+ . lst)
    (let ((kont4588745987 (prim car lst)))
      (let ((lst45988 (prim cdr lst)))
        (let ((x4579945989 (apply-prim + lst45988)))
          (kont4588745987 x4579945989)))))
  (define (- . lst)
    (let ((kont4588945990 (prim car lst)))
      (let ((lst45991 (prim cdr lst)))
        (let ((x4580045992 (apply-prim - lst45991)))
          (kont4588945990 x4580045992)))))
  (define (* . lst)
    (let ((kont4589145993 (prim car lst)))
      (let ((lst45994 (prim cdr lst)))
        (let ((x4580145995 (apply-prim * lst45994)))
          (kont4589145993 x4580145995)))))
  (define (modulo kont45893 a b)
    (let ((x4580245996 (prim modulo a b))) (kont45893 x4580245996)))
  (define (/ . lst)
    (let ((kont4589445997 (prim car lst)))
      (let ((lst45998 (prim cdr lst)))
        (let ((x4580345999 (apply-prim / lst45998)))
          (kont4589445997 x4580345999)))))
  (define (= . lst)
    (let ((kont4589646000 (prim car lst)))
      (let ((lst46001 (prim cdr lst)))
        (let ((x4580446002 (apply-prim = lst46001)))
          (kont4589646000 x4580446002)))))
  (define (> . lst)
    (let ((kont4589846003 (prim car lst)))
      (let ((lst46004 (prim cdr lst)))
        (let ((x4580546005 (apply-prim > lst46004)))
          (kont4589846003 x4580546005)))))
  (define (< . lst)
    (let ((kont4590046006 (prim car lst)))
      (let ((lst46007 (prim cdr lst)))
        (let ((x4580646008 (apply-prim < lst46007)))
          (kont4590046006 x4580646008)))))
  (define (<= . lst)
    (let ((kont4590246009 (prim car lst)))
      (let ((lst46010 (prim cdr lst)))
        (let ((x4580746011 (apply-prim <= lst46010)))
          (kont4590246009 x4580746011)))))
  (define (>= . lst)
    (let ((kont4590446012 (prim car lst)))
      (let ((lst46013 (prim cdr lst)))
        (let ((x4580846014 (apply-prim >= lst46013)))
          (kont4590446012 x4580846014)))))
  (define (null? kont45906 x)
    (let ((x4580946015 (prim null? x))) (kont45906 x4580946015)))
  (define (equal? kont45907 x y)
    (let ((x4581046016 (prim equal? x y))) (kont45907 x4581046016)))
  (define (eq? kont45908 x y)
    (let ((x4581146017 (prim eq? x y))) (kont45908 x4581146017)))
  (define (cons kont45909 a b)
    (let ((x4581246018 (prim cons a b))) (kont45909 x4581246018)))
  (define (car kont45910 lst)
    (let ((x4581346019 (prim car lst))) (kont45910 x4581346019)))
  (define (cdr kont45911 lst)
    (let ((x4581446020 (prim cdr lst))) (kont45911 x4581446020)))
  (define (even? kont45912 x)
    (let ((a4581546021 '0))
      (let ((a4581646022 '2))
        (let ((f4591346023
               (lambda (a4581746024)
                 (equal? kont45912 a4581546021 a4581746024))))
          (modulo f4591346023 x a4581646022)))))
  (define (odd? kont45914 x)
    (let ((a4581846025 '1))
      (let ((a4581946026 '2))
        (let ((f4591546027
               (lambda (a4582046028)
                 (equal? kont45914 a4581846025 a4582046028))))
          (modulo f4591546027 x a4581946026)))))
  (define (list . x)
    (let ((kont4591646029 (prim car x)))
      (let ((x46030 (prim cdr x))) (kont4591646029 x46030))))
  (define (member? kont45918 x lst)
    (let ((f4592246031
           (lambda (a4582146032)
             (if a4582146032
               (let ((x4582246033 '#f)) (kont45918 x4582246033))
               (let ((f4592146034
                      (lambda (a4582346035)
                        (let ((f4592046036
                               (lambda (a4582446037)
                                 (if a4582446037
                                   (let ((x4582546038 '#t))
                                     (kont45918 x4582546038))
                                   (let ((f4591946039
                                          (lambda (a4582646040)
                                            (member?
                                             kont45918
                                             x
                                             a4582646040))))
                                     (cdr f4591946039 lst))))))
                          (equal? f4592046036 a4582346035 x)))))
                 (car f4592146034 lst))))))
      (null? f4592246031 lst)))
  (define (foldl kont45923 fun acc lst)
    (let ((f4592746041
           (lambda (a4582746042)
             (if a4582746042
               (kont45923 acc)
               (let ((f4592646043
                      (lambda (a4582846044)
                        (let ((f4592546045
                               (lambda (a4582946046)
                                 (let ((f4592446047
                                        (lambda (a4583046048)
                                          (foldl
                                           kont45923
                                           fun
                                           a4582946046
                                           a4583046048))))
                                   (cdr f4592446047 lst)))))
                          (fun f4592546045 a4582846044 acc)))))
                 (car f4592646043 lst))))))
      (null? f4592746041 lst)))
  (define (reverse-helper kont45928 lst lst2)
    (let ((f4593246049
           (lambda (a4583146050)
             (if a4583146050
               (kont45928 lst2)
               (let ((f4593146051
                      (lambda (a4583246052)
                        (let ((f4593046053
                               (lambda (a4583346054)
                                 (let ((f4592946055
                                        (lambda (a4583446056)
                                          (reverse-helper
                                           kont45928
                                           a4583246052
                                           a4583446056))))
                                   (cons f4592946055 a4583346054 lst2)))))
                          (car f4593046053 lst)))))
                 (cdr f4593146051 lst))))))
      (null? f4593246049 lst)))
  (define (reverse kont45933 lst)
    (let ((f4593446057
           (lambda (a4583546058) (reverse-helper kont45933 lst a4583546058))))
      (list f4593446057)))
  (define (take-helper kont45935 lst n lst2)
    (let ((a4583646059 '0))
      (let ((f4594146060
             (lambda (a4583746061)
               (if a4583746061
                 (let ((f4593646062
                        (lambda (x4583846063) (kont45935 x4583846063))))
                   (reverse f4593646062 lst2))
                 (let ((f4594046064
                        (lambda (a4583946065)
                          (let ((a4584046066 '1))
                            (let ((f4593946067
                                   (lambda (a4584146068)
                                     (let ((f4593846069
                                            (lambda (a4584246070)
                                              (let ((f4593746071
                                                     (lambda (a4584346072)
                                                       (take-helper
                                                        kont45935
                                                        a4583946065
                                                        a4584146068
                                                        a4584346072))))
                                                (cons
                                                 f4593746071
                                                 a4584246070
                                                 lst2)))))
                                       (car f4593846069 lst)))))
                              (- f4593946067 n a4584046066))))))
                   (cdr f4594046064 lst))))))
        (= f4594146060 n a4583646059))))
  (define (take kont45942 lst n)
    (let ((f4594346073
           (lambda (a4584446074) (take-helper kont45942 lst n a4584446074))))
      (list f4594346073)))
  (define (length kont45944 lst)
    (let ((f4594746075
           (lambda (a4584546076)
             (if a4584546076
               (let ((x4584646077 '0)) (kont45944 x4584646077))
               (let ((a4584746078 '1))
                 (let ((f4594646079
                        (lambda (a4584846080)
                          (let ((f4594546081
                                 (lambda (a4584946082)
                                   (+ kont45944 a4584746078 a4584946082))))
                            (length f4594546081 a4584846080)))))
                   (cdr f4594646079 lst)))))))
      (null? f4594746075 lst)))
  (define (map kont45948 proc lst)
    (let ((f4595446083
           (lambda (a4585046084)
             (if a4585046084
               (let ((f4594946085
                      (lambda (x4585146086) (kont45948 x4585146086))))
                 (list f4594946085))
               (let ((f4595346087
                      (lambda (a4585246088)
                        (let ((f4595246089
                               (lambda (a4585346090)
                                 (let ((f4595146091
                                        (lambda (a4585446092)
                                          (let ((f4595046093
                                                 (lambda (a4585546094)
                                                   (cons
                                                    kont45948
                                                    a4585346090
                                                    a4585546094))))
                                            (map
                                             f4595046093
                                             proc
                                             a4585446092)))))
                                   (cdr f4595146091 lst)))))
                          (proc f4595246089 a4585246088)))))
                 (car f4595346087 lst))))))
      (null? f4595446083 lst)))
  (define (filter kont45955 op lst)
    (let ((f4596346095
           (lambda (a4585646096)
             (if a4585646096
               (let ((f4595646097
                      (lambda (x4585746098) (kont45955 x4585746098))))
                 (list f4595646097))
               (let ((f4596246099
                      (lambda (a4585846100)
                        (let ((f4596146101
                               (lambda (a4585946102)
                                 (if a4585946102
                                   (let ((f4595946103
                                          (lambda (a4586046104)
                                            (let ((f4595846105
                                                   (lambda (a4586146106)
                                                     (let ((f4595746107
                                                            (lambda (a4586246108)
                                                              (cons
                                                               kont45955
                                                               a4586046104
                                                               a4586246108))))
                                                       (filter
                                                        f4595746107
                                                        op
                                                        a4586146106)))))
                                              (cdr f4595846105 lst)))))
                                     (car f4595946103 lst))
                                   (let ((f4596046109
                                          (lambda (a4586346110)
                                            (filter
                                             kont45955
                                             op
                                             a4586346110))))
                                     (cdr f4596046109 lst))))))
                          (op f4596146101 a4585846100)))))
                 (car f4596246099 lst))))))
      (null? f4596346095 lst)))
  (define (drop kont45964 lst n)
    (let ((a4586446111 '0))
      (let ((f4596746112
             (lambda (a4586546113)
               (if a4586546113
                 (kont45964 lst)
                 (let ((f4596646114
                        (lambda (a4586646115)
                          (let ((a4586746116 '1))
                            (let ((f4596546117
                                   (lambda (a4586846118)
                                     (drop
                                      kont45964
                                      a4586646115
                                      a4586846118))))
                              (- f4596546117 n a4586746116))))))
                   (cdr f4596646114 lst))))))
        (= f4596746112 n a4586446111))))
  (define (foldr kont45968 proc acc lst)
    (let ((f4597246119
           (lambda (a4586946120)
             (if a4586946120
               (kont45968 acc)
               (let ((f4597146121
                      (lambda (a4587046122)
                        (let ((f4597046123
                               (lambda (a4587146124)
                                 (let ((f4596946125
                                        (lambda (a4587246126)
                                          (proc
                                           kont45968
                                           a4587046122
                                           a4587246126))))
                                   (foldr f4596946125 proc acc a4587146124)))))
                          (cdr f4597046123 lst)))))
                 (car f4597146121 lst))))))
      (null? f4597246119 lst)))
  (define (append kont45973 lst1 lst2)
    (let ((f4597746127
           (lambda (a4587346128)
             (if a4587346128
               (kont45973 lst2)
               (let ((f4597646129
                      (lambda (a4587446130)
                        (let ((f4597546131
                               (lambda (a4587546132)
                                 (let ((f4597446133
                                        (lambda (a4587646134)
                                          (cons
                                           kont45973
                                           a4587446130
                                           a4587646134))))
                                   (append f4597446133 a4587546132 lst2)))))
                          (cdr f4597546131 lst1)))))
                 (car f4597646129 lst1))))))
      (null? f4597746127 lst1)))
  (define (hash . lst)
    (let ((kont4597846135 (prim car lst)))
      (let ((lst46136 (prim cdr lst)))
        (let ((x4587746137 (apply-prim hash lst46136)))
          (kont4597846135 x4587746137)))))
  (define (hash-ref kont45980 h k)
    (let ((x4587846138 (prim hash-ref h k))) (kont45980 x4587846138)))
  (define (hash-set kont45981 h k v)
    (let ((x4587946139 (prim hash-set h k v))) (kont45981 x4587946139)))
  (define (hash-has-key? kont45982 h k)
    (let ((x4588046140 (prim hash-has-key? h k))) (kont45982 x4588046140)))
  (define (hash-count kont45983 h)
    (let ((x4588146141 (prim hash-count h))) (kont45983 x4588146141)))
  (define (call kont45984)
    (let ((a4588246142 '100))
      (let ((a4588346143 '80))
        (let ((a4588446144 '10))
          (let ((a4588546145 '2))
            (hash
             kont45984
             a4588246142
             a4588346143
             a4588446144
             a4588546145))))))
  (define (brouhaha_main kont45985)
    (let ((f4598646146 (lambda (x4588646147) (kont45985 x4588646147))))
      (call f4598646146))))
