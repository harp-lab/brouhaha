'((define (+ . lst)
    (let ((kont4469944799 (prim car lst)))
      (let ((lst44800 (prim cdr lst)))
        (let ((x4461144801 (apply-prim + lst44800)))
          (kont4469944799 x4461144801)))))
  (define (- . lst)
    (let ((kont4470144802 (prim car lst)))
      (let ((lst44803 (prim cdr lst)))
        (let ((x4461244804 (apply-prim - lst44803)))
          (kont4470144802 x4461244804)))))
  (define (* . lst)
    (let ((kont4470344805 (prim car lst)))
      (let ((lst44806 (prim cdr lst)))
        (let ((x4461344807 (apply-prim * lst44806)))
          (kont4470344805 x4461344807)))))
  (define (modulo kont44705 a b)
    (let ((x4461444808 (prim modulo a b))) (kont44705 x4461444808)))
  (define (/ . lst)
    (let ((kont4470644809 (prim car lst)))
      (let ((lst44810 (prim cdr lst)))
        (let ((x4461544811 (apply-prim / lst44810)))
          (kont4470644809 x4461544811)))))
  (define (= . lst)
    (let ((kont4470844812 (prim car lst)))
      (let ((lst44813 (prim cdr lst)))
        (let ((x4461644814 (apply-prim = lst44813)))
          (kont4470844812 x4461644814)))))
  (define (> . lst)
    (let ((kont4471044815 (prim car lst)))
      (let ((lst44816 (prim cdr lst)))
        (let ((x4461744817 (apply-prim > lst44816)))
          (kont4471044815 x4461744817)))))
  (define (< . lst)
    (let ((kont4471244818 (prim car lst)))
      (let ((lst44819 (prim cdr lst)))
        (let ((x4461844820 (apply-prim < lst44819)))
          (kont4471244818 x4461844820)))))
  (define (<= . lst)
    (let ((kont4471444821 (prim car lst)))
      (let ((lst44822 (prim cdr lst)))
        (let ((x4461944823 (apply-prim <= lst44822)))
          (kont4471444821 x4461944823)))))
  (define (>= . lst)
    (let ((kont4471644824 (prim car lst)))
      (let ((lst44825 (prim cdr lst)))
        (let ((x4462044826 (apply-prim >= lst44825)))
          (kont4471644824 x4462044826)))))
  (define (null? kont44718 x)
    (let ((x4462144827 (prim null? x))) (kont44718 x4462144827)))
  (define (equal? kont44719 x y)
    (let ((x4462244828 (prim equal? x y))) (kont44719 x4462244828)))
  (define (eq? kont44720 x y)
    (let ((x4462344829 (prim eq? x y))) (kont44720 x4462344829)))
  (define (cons kont44721 a b)
    (let ((x4462444830 (prim cons a b))) (kont44721 x4462444830)))
  (define (car kont44722 lst)
    (let ((x4462544831 (prim car lst))) (kont44722 x4462544831)))
  (define (cdr kont44723 lst)
    (let ((x4462644832 (prim cdr lst))) (kont44723 x4462644832)))
  (define (even? kont44724 x)
    (let ((a4462744833 '0))
      (let ((a4462844834 '2))
        (let ((f4472544835
               (lambda (a4462944836)
                 (equal? kont44724 a4462744833 a4462944836))))
          (modulo f4472544835 x a4462844834)))))
  (define (odd? kont44726 x)
    (let ((a4463044837 '1))
      (let ((a4463144838 '2))
        (let ((f4472744839
               (lambda (a4463244840)
                 (equal? kont44726 a4463044837 a4463244840))))
          (modulo f4472744839 x a4463144838)))))
  (define (list . x)
    (let ((kont4472844841 (prim car x)))
      (let ((x44842 (prim cdr x))) (kont4472844841 x44842))))
  (define (member? kont44730 x lst)
    (let ((f4473444843
           (lambda (a4463344844)
             (if a4463344844
               (let ((x4463444845 '#f)) (kont44730 x4463444845))
               (let ((f4473344846
                      (lambda (a4463544847)
                        (let ((f4473244848
                               (lambda (a4463644849)
                                 (if a4463644849
                                   (let ((x4463744850 '#t))
                                     (kont44730 x4463744850))
                                   (let ((f4473144851
                                          (lambda (a4463844852)
                                            (member?
                                             kont44730
                                             x
                                             a4463844852))))
                                     (cdr f4473144851 lst))))))
                          (equal? f4473244848 a4463544847 x)))))
                 (car f4473344846 lst))))))
      (null? f4473444843 lst)))
  (define (foldl kont44735 fun acc lst)
    (let ((f4473944853
           (lambda (a4463944854)
             (if a4463944854
               (kont44735 acc)
               (let ((f4473844855
                      (lambda (a4464044856)
                        (let ((f4473744857
                               (lambda (a4464144858)
                                 (let ((f4473644859
                                        (lambda (a4464244860)
                                          (foldl
                                           kont44735
                                           fun
                                           a4464144858
                                           a4464244860))))
                                   (cdr f4473644859 lst)))))
                          (fun f4473744857 a4464044856 acc)))))
                 (car f4473844855 lst))))))
      (null? f4473944853 lst)))
  (define (reverse-helper kont44740 lst lst2)
    (let ((f4474444861
           (lambda (a4464344862)
             (if a4464344862
               (kont44740 lst2)
               (let ((f4474344863
                      (lambda (a4464444864)
                        (let ((f4474244865
                               (lambda (a4464544866)
                                 (let ((f4474144867
                                        (lambda (a4464644868)
                                          (reverse-helper
                                           kont44740
                                           a4464444864
                                           a4464644868))))
                                   (cons f4474144867 a4464544866 lst2)))))
                          (car f4474244865 lst)))))
                 (cdr f4474344863 lst))))))
      (null? f4474444861 lst)))
  (define (reverse kont44745 lst)
    (let ((f4474644869
           (lambda (a4464744870) (reverse-helper kont44745 lst a4464744870))))
      (list f4474644869)))
  (define (take-helper kont44747 lst n lst2)
    (let ((a4464844871 '0))
      (let ((f4475344872
             (lambda (a4464944873)
               (if a4464944873
                 (let ((f4474844874
                        (lambda (x4465044875) (kont44747 x4465044875))))
                   (reverse f4474844874 lst2))
                 (let ((f4475244876
                        (lambda (a4465144877)
                          (let ((a4465244878 '1))
                            (let ((f4475144879
                                   (lambda (a4465344880)
                                     (let ((f4475044881
                                            (lambda (a4465444882)
                                              (let ((f4474944883
                                                     (lambda (a4465544884)
                                                       (take-helper
                                                        kont44747
                                                        a4465144877
                                                        a4465344880
                                                        a4465544884))))
                                                (cons
                                                 f4474944883
                                                 a4465444882
                                                 lst2)))))
                                       (car f4475044881 lst)))))
                              (- f4475144879 n a4465244878))))))
                   (cdr f4475244876 lst))))))
        (= f4475344872 n a4464844871))))
  (define (take kont44754 lst n)
    (let ((f4475544885
           (lambda (a4465644886) (take-helper kont44754 lst n a4465644886))))
      (list f4475544885)))
  (define (length kont44756 lst)
    (let ((f4475944887
           (lambda (a4465744888)
             (if a4465744888
               (let ((x4465844889 '0)) (kont44756 x4465844889))
               (let ((a4465944890 '1))
                 (let ((f4475844891
                        (lambda (a4466044892)
                          (let ((f4475744893
                                 (lambda (a4466144894)
                                   (+ kont44756 a4465944890 a4466144894))))
                            (length f4475744893 a4466044892)))))
                   (cdr f4475844891 lst)))))))
      (null? f4475944887 lst)))
  (define (map kont44760 proc lst)
    (let ((f4476644895
           (lambda (a4466244896)
             (if a4466244896
               (let ((f4476144897
                      (lambda (x4466344898) (kont44760 x4466344898))))
                 (list f4476144897))
               (let ((f4476544899
                      (lambda (a4466444900)
                        (let ((f4476444901
                               (lambda (a4466544902)
                                 (let ((f4476344903
                                        (lambda (a4466644904)
                                          (let ((f4476244905
                                                 (lambda (a4466744906)
                                                   (cons
                                                    kont44760
                                                    a4466544902
                                                    a4466744906))))
                                            (map
                                             f4476244905
                                             proc
                                             a4466644904)))))
                                   (cdr f4476344903 lst)))))
                          (proc f4476444901 a4466444900)))))
                 (car f4476544899 lst))))))
      (null? f4476644895 lst)))
  (define (filter kont44767 op lst)
    (let ((f4477544907
           (lambda (a4466844908)
             (if a4466844908
               (let ((f4476844909
                      (lambda (x4466944910) (kont44767 x4466944910))))
                 (list f4476844909))
               (let ((f4477444911
                      (lambda (a4467044912)
                        (let ((f4477344913
                               (lambda (a4467144914)
                                 (if a4467144914
                                   (let ((f4477144915
                                          (lambda (a4467244916)
                                            (let ((f4477044917
                                                   (lambda (a4467344918)
                                                     (let ((f4476944919
                                                            (lambda (a4467444920)
                                                              (cons
                                                               kont44767
                                                               a4467244916
                                                               a4467444920))))
                                                       (filter
                                                        f4476944919
                                                        op
                                                        a4467344918)))))
                                              (cdr f4477044917 lst)))))
                                     (car f4477144915 lst))
                                   (let ((f4477244921
                                          (lambda (a4467544922)
                                            (filter
                                             kont44767
                                             op
                                             a4467544922))))
                                     (cdr f4477244921 lst))))))
                          (op f4477344913 a4467044912)))))
                 (car f4477444911 lst))))))
      (null? f4477544907 lst)))
  (define (drop kont44776 lst n)
    (let ((a4467644923 '0))
      (let ((f4477944924
             (lambda (a4467744925)
               (if a4467744925
                 (kont44776 lst)
                 (let ((f4477844926
                        (lambda (a4467844927)
                          (let ((a4467944928 '1))
                            (let ((f4477744929
                                   (lambda (a4468044930)
                                     (drop
                                      kont44776
                                      a4467844927
                                      a4468044930))))
                              (- f4477744929 n a4467944928))))))
                   (cdr f4477844926 lst))))))
        (= f4477944924 n a4467644923))))
  (define (foldr kont44780 proc acc lst)
    (let ((f4478444931
           (lambda (a4468144932)
             (if a4468144932
               (kont44780 acc)
               (let ((f4478344933
                      (lambda (a4468244934)
                        (let ((f4478244935
                               (lambda (a4468344936)
                                 (let ((f4478144937
                                        (lambda (a4468444938)
                                          (proc
                                           kont44780
                                           a4468244934
                                           a4468444938))))
                                   (foldr f4478144937 proc acc a4468344936)))))
                          (cdr f4478244935 lst)))))
                 (car f4478344933 lst))))))
      (null? f4478444931 lst)))
  (define (append kont44785 lst1 lst2)
    (let ((f4478944939
           (lambda (a4468544940)
             (if a4468544940
               (kont44785 lst2)
               (let ((f4478844941
                      (lambda (a4468644942)
                        (let ((f4478744943
                               (lambda (a4468744944)
                                 (let ((f4478644945
                                        (lambda (a4468844946)
                                          (cons
                                           kont44785
                                           a4468644942
                                           a4468844946))))
                                   (append f4478644945 a4468744944 lst2)))))
                          (cdr f4478744943 lst1)))))
                 (car f4478844941 lst1))))))
      (null? f4478944939 lst1)))
  (define (hash . lst)
    (let ((kont4479044947 (prim car lst)))
      (let ((lst44948 (prim cdr lst)))
        (let ((x4468944949 (apply-prim hash lst44948)))
          (kont4479044947 x4468944949)))))
  (define (hash-ref kont44792 h k)
    (let ((x4469044950 (prim hash-ref h k))) (kont44792 x4469044950)))
  (define (hash-set kont44793 h k v)
    (let ((x4469144951 (prim hash-set h k v))) (kont44793 x4469144951)))
  (define (hash-has-key? kont44794 h k)
    (let ((x4469244952 (prim hash-has-key? h k))) (kont44794 x4469244952)))
  (define (hash-count kont44795 h)
    (let ((x4469344953 (prim hash-count h))) (kont44795 x4469344953)))
  (define (call kont44796)
    (let ((a4469444954 '100))
      (let ((a4469544955 '80))
        (let ((a4469644956 '10))
          (let ((a4469744957 '2))
            (hash
             kont44796
             a4469444954
             a4469544955
             a4469644956
             a4469744957))))))
  (define (brouhaha_main kont44797)
    (let ((f4479844958 (lambda (x4469844959) (kont44797 x4469844959))))
      (call f4479844958))))
