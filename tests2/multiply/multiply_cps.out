'((define (+ . lst)
    (let ((kont4765647761 (prim car lst)))
      (let ((lst47762 (prim cdr lst)))
        (let ((x4756447763 (apply-prim + lst47762)))
          (kont4765647761 x4756447763)))))
  (define (- . lst)
    (let ((kont4765847764 (prim car lst)))
      (let ((lst47765 (prim cdr lst)))
        (let ((x4756547766 (apply-prim - lst47765)))
          (kont4765847764 x4756547766)))))
  (define (* . lst)
    (let ((kont4766047767 (prim car lst)))
      (let ((lst47768 (prim cdr lst)))
        (let ((x4756647769 (apply-prim * lst47768)))
          (kont4766047767 x4756647769)))))
  (define (modulo kont47662 a b)
    (let ((x4756747770 (prim modulo a b))) (kont47662 x4756747770)))
  (define (/ . lst)
    (let ((kont4766347771 (prim car lst)))
      (let ((lst47772 (prim cdr lst)))
        (let ((x4756847773 (apply-prim / lst47772)))
          (kont4766347771 x4756847773)))))
  (define (= . lst)
    (let ((kont4766547774 (prim car lst)))
      (let ((lst47775 (prim cdr lst)))
        (let ((x4756947776 (apply-prim = lst47775)))
          (kont4766547774 x4756947776)))))
  (define (> . lst)
    (let ((kont4766747777 (prim car lst)))
      (let ((lst47778 (prim cdr lst)))
        (let ((x4757047779 (apply-prim > lst47778)))
          (kont4766747777 x4757047779)))))
  (define (< . lst)
    (let ((kont4766947780 (prim car lst)))
      (let ((lst47781 (prim cdr lst)))
        (let ((x4757147782 (apply-prim < lst47781)))
          (kont4766947780 x4757147782)))))
  (define (<= . lst)
    (let ((kont4767147783 (prim car lst)))
      (let ((lst47784 (prim cdr lst)))
        (let ((x4757247785 (apply-prim <= lst47784)))
          (kont4767147783 x4757247785)))))
  (define (>= . lst)
    (let ((kont4767347786 (prim car lst)))
      (let ((lst47787 (prim cdr lst)))
        (let ((x4757347788 (apply-prim >= lst47787)))
          (kont4767347786 x4757347788)))))
  (define (null? kont47675 x)
    (let ((x4757447789 (prim null? x))) (kont47675 x4757447789)))
  (define (equal? kont47676 x y)
    (let ((x4757547790 (prim equal? x y))) (kont47676 x4757547790)))
  (define (eq? kont47677 x y)
    (let ((x4757647791 (prim eq? x y))) (kont47677 x4757647791)))
  (define (cons kont47678 a b)
    (let ((x4757747792 (prim cons a b))) (kont47678 x4757747792)))
  (define (car kont47679 lst)
    (let ((x4757847793 (prim car lst))) (kont47679 x4757847793)))
  (define (cdr kont47680 lst)
    (let ((x4757947794 (prim cdr lst))) (kont47680 x4757947794)))
  (define (even? kont47681 x)
    (let ((a4758047795 '0))
      (let ((a4758147796 '2))
        (let ((f4768247797
               (lambda (a4758247798)
                 (equal? kont47681 a4758047795 a4758247798))))
          (modulo f4768247797 x a4758147796)))))
  (define (odd? kont47683 x)
    (let ((a4758347799 '1))
      (let ((a4758447800 '2))
        (let ((f4768447801
               (lambda (a4758547802)
                 (equal? kont47683 a4758347799 a4758547802))))
          (modulo f4768447801 x a4758447800)))))
  (define (list . x)
    (let ((kont4768547803 (prim car x)))
      (let ((x47804 (prim cdr x))) (kont4768547803 x47804))))
  (define (and . lst)
    (let ((kont4768747805 (prim car lst)))
      (let ((lst47806 (prim cdr lst)))
        (let ((x4758647807 (apply-prim and lst47806)))
          (kont4768747805 x4758647807)))))
  (define (or . lst)
    (let ((kont4768947808 (prim car lst)))
      (let ((lst47809 (prim cdr lst)))
        (let ((x4758747810 (apply-prim or lst47809)))
          (kont4768947808 x4758747810)))))
  (define (member? kont47691 x lst)
    (let ((f4769547811
           (lambda (a4758847812)
             (if a4758847812
               (let ((x4758947813 '#f)) (kont47691 x4758947813))
               (let ((f4769447814
                      (lambda (a4759047815)
                        (let ((f4769347816
                               (lambda (a4759147817)
                                 (if a4759147817
                                   (let ((x4759247818 '#t))
                                     (kont47691 x4759247818))
                                   (let ((f4769247819
                                          (lambda (a4759347820)
                                            (member?
                                             kont47691
                                             x
                                             a4759347820))))
                                     (cdr f4769247819 lst))))))
                          (equal? f4769347816 a4759047815 x)))))
                 (car f4769447814 lst))))))
      (null? f4769547811 lst)))
  (define (foldl kont47696 fun acc lst)
    (let ((f4770047821
           (lambda (a4759447822)
             (if a4759447822
               (kont47696 acc)
               (let ((f4769947823
                      (lambda (a4759547824)
                        (let ((f4769847825
                               (lambda (a4759647826)
                                 (let ((f4769747827
                                        (lambda (a4759747828)
                                          (foldl
                                           kont47696
                                           fun
                                           a4759647826
                                           a4759747828))))
                                   (cdr f4769747827 lst)))))
                          (fun f4769847825 a4759547824 acc)))))
                 (car f4769947823 lst))))))
      (null? f4770047821 lst)))
  (define (reverse-helper kont47701 lst lst2)
    (let ((f4770547829
           (lambda (a4759847830)
             (if a4759847830
               (kont47701 lst2)
               (let ((f4770447831
                      (lambda (a4759947832)
                        (let ((f4770347833
                               (lambda (a4760047834)
                                 (let ((f4770247835
                                        (lambda (a4760147836)
                                          (reverse-helper
                                           kont47701
                                           a4759947832
                                           a4760147836))))
                                   (cons f4770247835 a4760047834 lst2)))))
                          (car f4770347833 lst)))))
                 (cdr f4770447831 lst))))))
      (null? f4770547829 lst)))
  (define (reverse kont47706 lst)
    (let ((f4770747837
           (lambda (a4760247838) (reverse-helper kont47706 lst a4760247838))))
      (list f4770747837)))
  (define (take-helper kont47708 lst n lst2)
    (let ((a4760347839 '0))
      (let ((f4771447840
             (lambda (a4760447841)
               (if a4760447841
                 (let ((f4770947842
                        (lambda (x4760547843) (kont47708 x4760547843))))
                   (reverse f4770947842 lst2))
                 (let ((f4771347844
                        (lambda (a4760647845)
                          (let ((a4760747846 '1))
                            (let ((f4771247847
                                   (lambda (a4760847848)
                                     (let ((f4771147849
                                            (lambda (a4760947850)
                                              (let ((f4771047851
                                                     (lambda (a4761047852)
                                                       (take-helper
                                                        kont47708
                                                        a4760647845
                                                        a4760847848
                                                        a4761047852))))
                                                (cons
                                                 f4771047851
                                                 a4760947850
                                                 lst2)))))
                                       (car f4771147849 lst)))))
                              (- f4771247847 n a4760747846))))))
                   (cdr f4771347844 lst))))))
        (= f4771447840 n a4760347839))))
  (define (take kont47715 lst n)
    (let ((f4771647853
           (lambda (a4761147854) (take-helper kont47715 lst n a4761147854))))
      (list f4771647853)))
  (define (length kont47717 lst)
    (let ((f4772047855
           (lambda (a4761247856)
             (if a4761247856
               (let ((x4761347857 '0)) (kont47717 x4761347857))
               (let ((a4761447858 '1))
                 (let ((f4771947859
                        (lambda (a4761547860)
                          (let ((f4771847861
                                 (lambda (a4761647862)
                                   (+ kont47717 a4761447858 a4761647862))))
                            (length f4771847861 a4761547860)))))
                   (cdr f4771947859 lst)))))))
      (null? f4772047855 lst)))
  (define (map kont47721 proc lst)
    (let ((f4772747863
           (lambda (a4761747864)
             (if a4761747864
               (let ((f4772247865
                      (lambda (x4761847866) (kont47721 x4761847866))))
                 (list f4772247865))
               (let ((f4772647867
                      (lambda (a4761947868)
                        (let ((f4772547869
                               (lambda (a4762047870)
                                 (let ((f4772447871
                                        (lambda (a4762147872)
                                          (let ((f4772347873
                                                 (lambda (a4762247874)
                                                   (cons
                                                    kont47721
                                                    a4762047870
                                                    a4762247874))))
                                            (map
                                             f4772347873
                                             proc
                                             a4762147872)))))
                                   (cdr f4772447871 lst)))))
                          (proc f4772547869 a4761947868)))))
                 (car f4772647867 lst))))))
      (null? f4772747863 lst)))
  (define (filter kont47728 op lst)
    (let ((f4773647875
           (lambda (a4762347876)
             (if a4762347876
               (let ((f4772947877
                      (lambda (x4762447878) (kont47728 x4762447878))))
                 (list f4772947877))
               (let ((f4773547879
                      (lambda (a4762547880)
                        (let ((f4773447881
                               (lambda (a4762647882)
                                 (if a4762647882
                                   (let ((f4773247883
                                          (lambda (a4762747884)
                                            (let ((f4773147885
                                                   (lambda (a4762847886)
                                                     (let ((f4773047887
                                                            (lambda (a4762947888)
                                                              (cons
                                                               kont47728
                                                               a4762747884
                                                               a4762947888))))
                                                       (filter
                                                        f4773047887
                                                        op
                                                        a4762847886)))))
                                              (cdr f4773147885 lst)))))
                                     (car f4773247883 lst))
                                   (let ((f4773347889
                                          (lambda (a4763047890)
                                            (filter
                                             kont47728
                                             op
                                             a4763047890))))
                                     (cdr f4773347889 lst))))))
                          (op f4773447881 a4762547880)))))
                 (car f4773547879 lst))))))
      (null? f4773647875 lst)))
  (define (drop kont47737 lst n)
    (let ((a4763147891 '0))
      (let ((f4774047892
             (lambda (a4763247893)
               (if a4763247893
                 (kont47737 lst)
                 (let ((f4773947894
                        (lambda (a4763347895)
                          (let ((a4763447896 '1))
                            (let ((f4773847897
                                   (lambda (a4763547898)
                                     (drop
                                      kont47737
                                      a4763347895
                                      a4763547898))))
                              (- f4773847897 n a4763447896))))))
                   (cdr f4773947894 lst))))))
        (= f4774047892 n a4763147891))))
  (define (foldr kont47741 proc acc lst)
    (let ((f4774547899
           (lambda (a4763647900)
             (if a4763647900
               (kont47741 acc)
               (let ((f4774447901
                      (lambda (a4763747902)
                        (let ((f4774347903
                               (lambda (a4763847904)
                                 (let ((f4774247905
                                        (lambda (a4763947906)
                                          (proc
                                           kont47741
                                           a4763747902
                                           a4763947906))))
                                   (foldr f4774247905 proc acc a4763847904)))))
                          (cdr f4774347903 lst)))))
                 (car f4774447901 lst))))))
      (null? f4774547899 lst)))
  (define (append kont47746 lst1 lst2)
    (let ((f4775047907
           (lambda (a4764047908)
             (if a4764047908
               (kont47746 lst2)
               (let ((f4774947909
                      (lambda (a4764147910)
                        (let ((f4774847911
                               (lambda (a4764247912)
                                 (let ((f4774747913
                                        (lambda (a4764347914)
                                          (cons
                                           kont47746
                                           a4764147910
                                           a4764347914))))
                                   (append f4774747913 a4764247912 lst2)))))
                          (cdr f4774847911 lst1)))))
                 (car f4774947909 lst1))))))
      (null? f4775047907 lst1)))
  (define (hash . lst)
    (let ((kont4775147915 (prim car lst)))
      (let ((lst47916 (prim cdr lst)))
        (let ((x4764447917 (apply-prim hash lst47916)))
          (kont4775147915 x4764447917)))))
  (define (hash-ref kont47753 h k)
    (let ((x4764547918 (prim hash-ref h k))) (kont47753 x4764547918)))
  (define (hash-set kont47754 h k v)
    (let ((x4764647919 (prim hash-set h k v))) (kont47754 x4764647919)))
  (define (hash-has-key? kont47755 h k)
    (let ((x4764747920 (prim hash-has-key? h k))) (kont47755 x4764747920)))
  (define (hash-count kont47756 h)
    (let ((x4764847921 (prim hash-count h))) (kont47756 x4764847921)))
  (define (call kont47757)
    (let ((a4764947922 '1))
      (let ((a4765047923 '2))
        (let ((a4765147924 '3))
          (let ((a4765247925 '4))
            (let ((a4765347926 '5))
              (let ((f4775847927
                     (lambda (a4765447928)
                       (* kont47757 a4764947922 a4765047923 a4765447928))))
                (* f4775847927 a4765147924 a4765247925 a4765347926))))))))
  (define (brouhaha_main kont47759)
    (let ((f4776047929 (lambda (x4765547930) (kont47759 x4765547930))))
      (call f4776047929))))
