'((define (+ . lst)
    (let ((kont5736057460 (prim car lst)))
      (let ((lst57461 (prim cdr lst)))
        (let ((x5727057462 (apply-prim + lst57461)))
          (kont5736057460 x5727057462)))))
  (define (- . lst)
    (let ((kont5736257463 (prim car lst)))
      (let ((lst57464 (prim cdr lst)))
        (let ((x5727157465 (apply-prim - lst57464)))
          (kont5736257463 x5727157465)))))
  (define (* . lst)
    (let ((kont5736457466 (prim car lst)))
      (let ((lst57467 (prim cdr lst)))
        (let ((x5727257468 (apply-prim * lst57467)))
          (kont5736457466 x5727257468)))))
  (define (modulo kont57366 a b)
    (let ((x5727357469 (prim modulo a b))) (kont57366 x5727357469)))
  (define (/ . lst)
    (let ((kont5736757470 (prim car lst)))
      (let ((lst57471 (prim cdr lst)))
        (let ((x5727457472 (apply-prim / lst57471)))
          (kont5736757470 x5727457472)))))
  (define (= . lst)
    (let ((kont5736957473 (prim car lst)))
      (let ((lst57474 (prim cdr lst)))
        (let ((x5727557475 (apply-prim = lst57474)))
          (kont5736957473 x5727557475)))))
  (define (> . lst)
    (let ((kont5737157476 (prim car lst)))
      (let ((lst57477 (prim cdr lst)))
        (let ((x5727657478 (apply-prim > lst57477)))
          (kont5737157476 x5727657478)))))
  (define (< . lst)
    (let ((kont5737357479 (prim car lst)))
      (let ((lst57480 (prim cdr lst)))
        (let ((x5727757481 (apply-prim < lst57480)))
          (kont5737357479 x5727757481)))))
  (define (<= . lst)
    (let ((kont5737557482 (prim car lst)))
      (let ((lst57483 (prim cdr lst)))
        (let ((x5727857484 (apply-prim <= lst57483)))
          (kont5737557482 x5727857484)))))
  (define (>= . lst)
    (let ((kont5737757485 (prim car lst)))
      (let ((lst57486 (prim cdr lst)))
        (let ((x5727957487 (apply-prim >= lst57486)))
          (kont5737757485 x5727957487)))))
  (define (null? kont57379 x)
    (let ((x5728057488 (prim null? x))) (kont57379 x5728057488)))
  (define (equal? kont57380 x y)
    (let ((x5728157489 (prim equal? x y))) (kont57380 x5728157489)))
  (define (eq? kont57381 x y)
    (let ((x5728257490 (prim eq? x y))) (kont57381 x5728257490)))
  (define (cons kont57382 a b)
    (let ((x5728357491 (prim cons a b))) (kont57382 x5728357491)))
  (define (car kont57383 lst)
    (let ((x5728457492 (prim car lst))) (kont57383 x5728457492)))
  (define (cdr kont57384 lst)
    (let ((x5728557493 (prim cdr lst))) (kont57384 x5728557493)))
  (define (even? kont57385 x)
    (let ((a5728657494 '0))
      (let ((a5728757495 '2))
        (let ((f5738657496
               (lambda (a5728857497)
                 (equal? kont57385 a5728657494 a5728857497))))
          (modulo f5738657496 x a5728757495)))))
  (define (odd? kont57387 x)
    (let ((a5728957498 '1))
      (let ((a5729057499 '2))
        (let ((f5738857500
               (lambda (a5729157501)
                 (equal? kont57387 a5728957498 a5729157501))))
          (modulo f5738857500 x a5729057499)))))
  (define (list . x)
    (let ((kont5738957502 (prim car x)))
      (let ((x57503 (prim cdr x))) (kont5738957502 x57503))))
  (define (member? kont57391 x lst)
    (let ((f5739557504
           (lambda (a5729257505)
             (if a5729257505
               (let ((x5729357506 '#f)) (kont57391 x5729357506))
               (let ((f5739457507
                      (lambda (a5729457508)
                        (let ((f5739357509
                               (lambda (a5729557510)
                                 (if a5729557510
                                   (let ((x5729657511 '#t))
                                     (kont57391 x5729657511))
                                   (let ((f5739257512
                                          (lambda (a5729757513)
                                            (member?
                                             kont57391
                                             x
                                             a5729757513))))
                                     (cdr f5739257512 lst))))))
                          (equal? f5739357509 a5729457508 x)))))
                 (car f5739457507 lst))))))
      (null? f5739557504 lst)))
  (define (foldl kont57396 fun acc lst)
    (let ((f5740057514
           (lambda (a5729857515)
             (if a5729857515
               (kont57396 acc)
               (let ((f5739957516
                      (lambda (a5729957517)
                        (let ((f5739857518
                               (lambda (a5730057519)
                                 (let ((f5739757520
                                        (lambda (a5730157521)
                                          (foldl
                                           kont57396
                                           fun
                                           a5730057519
                                           a5730157521))))
                                   (cdr f5739757520 lst)))))
                          (fun f5739857518 a5729957517 acc)))))
                 (car f5739957516 lst))))))
      (null? f5740057514 lst)))
  (define (reverse-helper kont57401 lst lst2)
    (let ((f5740557522
           (lambda (a5730257523)
             (if a5730257523
               (kont57401 lst2)
               (let ((f5740457524
                      (lambda (a5730357525)
                        (let ((f5740357526
                               (lambda (a5730457527)
                                 (let ((f5740257528
                                        (lambda (a5730557529)
                                          (reverse-helper
                                           kont57401
                                           a5730357525
                                           a5730557529))))
                                   (cons f5740257528 a5730457527 lst2)))))
                          (car f5740357526 lst)))))
                 (cdr f5740457524 lst))))))
      (null? f5740557522 lst)))
  (define (reverse kont57406 lst)
    (let ((f5740757530
           (lambda (a5730657531) (reverse-helper kont57406 lst a5730657531))))
      (list f5740757530)))
  (define (take-helper kont57408 lst n lst2)
    (let ((a5730757532 '0))
      (let ((f5741457533
             (lambda (a5730857534)
               (if a5730857534
                 (let ((f5740957535
                        (lambda (x5730957536) (kont57408 x5730957536))))
                   (reverse f5740957535 lst2))
                 (let ((f5741357537
                        (lambda (a5731057538)
                          (let ((a5731157539 '1))
                            (let ((f5741257540
                                   (lambda (a5731257541)
                                     (let ((f5741157542
                                            (lambda (a5731357543)
                                              (let ((f5741057544
                                                     (lambda (a5731457545)
                                                       (take-helper
                                                        kont57408
                                                        a5731057538
                                                        a5731257541
                                                        a5731457545))))
                                                (cons
                                                 f5741057544
                                                 a5731357543
                                                 lst2)))))
                                       (car f5741157542 lst)))))
                              (- f5741257540 n a5731157539))))))
                   (cdr f5741357537 lst))))))
        (= f5741457533 n a5730757532))))
  (define (take kont57415 lst n)
    (let ((f5741657546
           (lambda (a5731557547) (take-helper kont57415 lst n a5731557547))))
      (list f5741657546)))
  (define (length kont57417 lst)
    (let ((f5742057548
           (lambda (a5731657549)
             (if a5731657549
               (let ((x5731757550 '0)) (kont57417 x5731757550))
               (let ((a5731857551 '1))
                 (let ((f5741957552
                        (lambda (a5731957553)
                          (let ((f5741857554
                                 (lambda (a5732057555)
                                   (+ kont57417 a5731857551 a5732057555))))
                            (length f5741857554 a5731957553)))))
                   (cdr f5741957552 lst)))))))
      (null? f5742057548 lst)))
  (define (map kont57421 proc lst)
    (let ((f5742757556
           (lambda (a5732157557)
             (if a5732157557
               (let ((f5742257558
                      (lambda (x5732257559) (kont57421 x5732257559))))
                 (list f5742257558))
               (let ((f5742657560
                      (lambda (a5732357561)
                        (let ((f5742557562
                               (lambda (a5732457563)
                                 (let ((f5742457564
                                        (lambda (a5732557565)
                                          (let ((f5742357566
                                                 (lambda (a5732657567)
                                                   (cons
                                                    kont57421
                                                    a5732457563
                                                    a5732657567))))
                                            (map
                                             f5742357566
                                             proc
                                             a5732557565)))))
                                   (cdr f5742457564 lst)))))
                          (proc f5742557562 a5732357561)))))
                 (car f5742657560 lst))))))
      (null? f5742757556 lst)))
  (define (filter kont57428 op lst)
    (let ((f5743657568
           (lambda (a5732757569)
             (if a5732757569
               (let ((f5742957570
                      (lambda (x5732857571) (kont57428 x5732857571))))
                 (list f5742957570))
               (let ((f5743557572
                      (lambda (a5732957573)
                        (let ((f5743457574
                               (lambda (a5733057575)
                                 (if a5733057575
                                   (let ((f5743257576
                                          (lambda (a5733157577)
                                            (let ((f5743157578
                                                   (lambda (a5733257579)
                                                     (let ((f5743057580
                                                            (lambda (a5733357581)
                                                              (cons
                                                               kont57428
                                                               a5733157577
                                                               a5733357581))))
                                                       (filter
                                                        f5743057580
                                                        op
                                                        a5733257579)))))
                                              (cdr f5743157578 lst)))))
                                     (car f5743257576 lst))
                                   (let ((f5743357582
                                          (lambda (a5733457583)
                                            (filter
                                             kont57428
                                             op
                                             a5733457583))))
                                     (cdr f5743357582 lst))))))
                          (op f5743457574 a5732957573)))))
                 (car f5743557572 lst))))))
      (null? f5743657568 lst)))
  (define (drop kont57437 lst n)
    (let ((a5733557584 '0))
      (let ((f5744057585
             (lambda (a5733657586)
               (if a5733657586
                 (kont57437 lst)
                 (let ((f5743957587
                        (lambda (a5733757588)
                          (let ((a5733857589 '1))
                            (let ((f5743857590
                                   (lambda (a5733957591)
                                     (drop
                                      kont57437
                                      a5733757588
                                      a5733957591))))
                              (- f5743857590 n a5733857589))))))
                   (cdr f5743957587 lst))))))
        (= f5744057585 n a5733557584))))
  (define (foldr kont57441 proc acc lst)
    (let ((f5744557592
           (lambda (a5734057593)
             (if a5734057593
               (kont57441 acc)
               (let ((f5744457594
                      (lambda (a5734157595)
                        (let ((f5744357596
                               (lambda (a5734257597)
                                 (let ((f5744257598
                                        (lambda (a5734357599)
                                          (proc
                                           kont57441
                                           a5734157595
                                           a5734357599))))
                                   (foldr f5744257598 proc acc a5734257597)))))
                          (cdr f5744357596 lst)))))
                 (car f5744457594 lst))))))
      (null? f5744557592 lst)))
  (define (append kont57446 lst1 lst2)
    (let ((f5745057600
           (lambda (a5734457601)
             (if a5734457601
               (kont57446 lst2)
               (let ((f5744957602
                      (lambda (a5734557603)
                        (let ((f5744857604
                               (lambda (a5734657605)
                                 (let ((f5744757606
                                        (lambda (a5734757607)
                                          (cons
                                           kont57446
                                           a5734557603
                                           a5734757607))))
                                   (append f5744757606 a5734657605 lst2)))))
                          (cdr f5744857604 lst1)))))
                 (car f5744957602 lst1))))))
      (null? f5745057600 lst1)))
  (define (hash . lst)
    (let ((kont5745157608 (prim car lst)))
      (let ((lst57609 (prim cdr lst)))
        (let ((x5734857610 (apply-prim hash lst57609)))
          (kont5745157608 x5734857610)))))
  (define (hash-ref kont57453 h k)
    (let ((x5734957611 (prim hash-ref h k))) (kont57453 x5734957611)))
  (define (hash-set kont57454 h k v)
    (let ((x5735057612 (prim hash-set h k v))) (kont57454 x5735057612)))
  (define (hash-has-key? kont57455 h k)
    (let ((x5735157613 (prim hash-has-key? h k))) (kont57455 x5735157613)))
  (define (hash-count kont57456 h)
    (let ((x5735257614 (prim hash-count h))) (kont57456 x5735257614)))
  (define (call kont57457)
    (let ((a5735357615 '1))
      (let ((a5735457616 '2))
        (let ((a5735557617 '3))
          (let ((a5735657618 '4))
            (let ((a5735757619 '5))
              (let ((a5735857620 '100))
                (<=
                 kont57457
                 a5735357615
                 a5735457616
                 a5735557617
                 a5735657618
                 a5735757619
                 a5735857620))))))))
  (define (brouhaha_main kont57458)
    (let ((f5745957621 (lambda (x5735957622) (kont57458 x5735957622))))
      (call f5745957621))))
