'((proc
   (+ _57623 . lst)
   (let ((kont5736057460 (prim car lst)))
     (let ((lst57461 (prim cdr lst)))
       (let ((x5727057462 (apply-prim + lst57461)))
         (clo-app kont5736057460 x5727057462)))))
  (proc
   (- _57624 . lst)
   (let ((kont5736257463 (prim car lst)))
     (let ((lst57464 (prim cdr lst)))
       (let ((x5727157465 (apply-prim - lst57464)))
         (clo-app kont5736257463 x5727157465)))))
  (proc
   (* _57625 . lst)
   (let ((kont5736457466 (prim car lst)))
     (let ((lst57467 (prim cdr lst)))
       (let ((x5727257468 (apply-prim * lst57467)))
         (clo-app kont5736457466 x5727257468)))))
  (proc
   (modulo _57626 kont57366 a b)
   (let ((x5727357469 (prim modulo a b))) (clo-app kont57366 x5727357469)))
  (proc
   (/ _57627 . lst)
   (let ((kont5736757470 (prim car lst)))
     (let ((lst57471 (prim cdr lst)))
       (let ((x5727457472 (apply-prim / lst57471)))
         (clo-app kont5736757470 x5727457472)))))
  (proc
   (= _57628 . lst)
   (let ((kont5736957473 (prim car lst)))
     (let ((lst57474 (prim cdr lst)))
       (let ((x5727557475 (apply-prim = lst57474)))
         (clo-app kont5736957473 x5727557475)))))
  (proc
   (> _57629 . lst)
   (let ((kont5737157476 (prim car lst)))
     (let ((lst57477 (prim cdr lst)))
       (let ((x5727657478 (apply-prim > lst57477)))
         (clo-app kont5737157476 x5727657478)))))
  (proc
   (< _57630 . lst)
   (let ((kont5737357479 (prim car lst)))
     (let ((lst57480 (prim cdr lst)))
       (let ((x5727757481 (apply-prim < lst57480)))
         (clo-app kont5737357479 x5727757481)))))
  (proc
   (<= _57631 . lst)
   (let ((kont5737557482 (prim car lst)))
     (let ((lst57483 (prim cdr lst)))
       (let ((x5727857484 (apply-prim <= lst57483)))
         (clo-app kont5737557482 x5727857484)))))
  (proc
   (>= _57632 . lst)
   (let ((kont5737757485 (prim car lst)))
     (let ((lst57486 (prim cdr lst)))
       (let ((x5727957487 (apply-prim >= lst57486)))
         (clo-app kont5737757485 x5727957487)))))
  (proc
   (null? _57633 kont57379 x)
   (let ((x5728057488 (prim null? x))) (clo-app kont57379 x5728057488)))
  (proc
   (equal? _57634 kont57380 x y)
   (let ((x5728157489 (prim equal? x y))) (clo-app kont57380 x5728157489)))
  (proc
   (eq? _57635 kont57381 x y)
   (let ((x5728257490 (prim eq? x y))) (clo-app kont57381 x5728257490)))
  (proc
   (cons _57636 kont57382 a b)
   (let ((x5728357491 (prim cons a b))) (clo-app kont57382 x5728357491)))
  (proc
   (car _57637 kont57383 lst)
   (let ((x5728457492 (prim car lst))) (clo-app kont57383 x5728457492)))
  (proc
   (cdr _57638 kont57384 lst)
   (let ((x5728557493 (prim cdr lst))) (clo-app kont57384 x5728557493)))
  (proc
   (lam57639 env57640 a5728857497)
   (let ((a5728657494 (env-ref env57640 3)))
     (let ((kont57385 (env-ref env57640 2)))
       (let ((equal? (env-ref env57640 1)))
         (clo-app equal? kont57385 a5728657494 a5728857497)))))
  (proc
   (even? _57643 kont57385 x)
   (let ((a5728657494 '0))
     (let ((a5728757495 '2))
       (let ((f5738657496
              (make-closure lam57639 equal? kont57385 a5728657494)))
         (clo-app modulo f5738657496 x a5728757495)))))
  (proc
   (lam57644 env57645 a5729157501)
   (let ((a5728957498 (env-ref env57645 3)))
     (let ((kont57387 (env-ref env57645 2)))
       (let ((equal? (env-ref env57645 1)))
         (clo-app equal? kont57387 a5728957498 a5729157501)))))
  (proc
   (odd? _57648 kont57387 x)
   (let ((a5728957498 '1))
     (let ((a5729057499 '2))
       (let ((f5738857500
              (make-closure lam57644 equal? kont57387 a5728957498)))
         (clo-app modulo f5738857500 x a5729057499)))))
  (proc
   (list _57649 . x)
   (let ((kont5738957502 (prim car x)))
     (let ((x57503 (prim cdr x))) (clo-app kont5738957502 x57503))))
  (proc
   (lam57652 env57653 a5729757513)
   (let ((member? (env-ref env57653 3)))
     (let ((x (env-ref env57653 2)))
       (let ((kont57391 (env-ref env57653 1)))
         (clo-app member? kont57391 x a5729757513)))))
  (proc
   (lam57654 env57655 a5729557510)
   (let ((cdr (env-ref env57655 5)))
     (let ((lst (env-ref env57655 4)))
       (let ((member? (env-ref env57655 3)))
         (let ((x (env-ref env57655 2)))
           (let ((kont57391 (env-ref env57655 1)))
             (if a5729557510
               (let ((x5729657511 '#t)) (clo-app kont57391 x5729657511))
               (let ((f5739257512 (make-closure lam57652 kont57391 x member?)))
                 (clo-app cdr f5739257512 lst)))))))))
  (proc
   (lam57656 env57657 a5729457508)
   (let ((cdr (env-ref env57657 6)))
     (let ((lst (env-ref env57657 5)))
       (let ((equal? (env-ref env57657 4)))
         (let ((member? (env-ref env57657 3)))
           (let ((x (env-ref env57657 2)))
             (let ((kont57391 (env-ref env57657 1)))
               (let ((f5739357509
                      (make-closure lam57654 kont57391 x member? lst cdr)))
                 (clo-app equal? f5739357509 a5729457508 x)))))))))
  (proc
   (lam57658 env57659 a5729257505)
   (let ((cdr (env-ref env57659 7)))
     (let ((lst (env-ref env57659 6)))
       (let ((equal? (env-ref env57659 5)))
         (let ((car (env-ref env57659 4)))
           (let ((member? (env-ref env57659 3)))
             (let ((x (env-ref env57659 2)))
               (let ((kont57391 (env-ref env57659 1)))
                 (if a5729257505
                   (let ((x5729357506 '#f)) (clo-app kont57391 x5729357506))
                   (let ((f5739457507
                          (make-closure
                           lam57656
                           kont57391
                           x
                           member?
                           equal?
                           lst
                           cdr)))
                     (clo-app car f5739457507 lst)))))))))))
  (proc
   (member? _57660 kont57391 x lst)
   (let ((f5739557504
          (make-closure lam57658 kont57391 x member? car equal? lst cdr)))
     (clo-app null? f5739557504 lst)))
  (proc
   (lam57661 env57662 a5730157521)
   (let ((kont57396 (env-ref env57662 4)))
     (let ((fun (env-ref env57662 3)))
       (let ((a5730057519 (env-ref env57662 2)))
         (let ((foldl (env-ref env57662 1)))
           (clo-app foldl kont57396 fun a5730057519 a5730157521))))))
  (proc
   (lam57663 env57664 a5730057519)
   (let ((lst (env-ref env57664 5)))
     (let ((fun (env-ref env57664 4)))
       (let ((foldl (env-ref env57664 3)))
         (let ((kont57396 (env-ref env57664 2)))
           (let ((cdr (env-ref env57664 1)))
             (let ((f5739757520
                    (make-closure lam57661 foldl a5730057519 fun kont57396)))
               (clo-app cdr f5739757520 lst))))))))
  (proc
   (lam57665 env57666 a5729957517)
   (let ((lst (env-ref env57666 6)))
     (let ((fun (env-ref env57666 5)))
       (let ((acc (env-ref env57666 4)))
         (let ((foldl (env-ref env57666 3)))
           (let ((kont57396 (env-ref env57666 2)))
             (let ((cdr (env-ref env57666 1)))
               (let ((f5739857518
                      (make-closure lam57663 cdr kont57396 foldl fun lst)))
                 (clo-app fun f5739857518 a5729957517 acc)))))))))
  (proc
   (lam57667 env57668 a5729857515)
   (let ((lst (env-ref env57668 7)))
     (let ((fun (env-ref env57668 6)))
       (let ((acc (env-ref env57668 5)))
         (let ((car (env-ref env57668 4)))
           (let ((foldl (env-ref env57668 3)))
             (let ((kont57396 (env-ref env57668 2)))
               (let ((cdr (env-ref env57668 1)))
                 (if a5729857515
                   (clo-app kont57396 acc)
                   (let ((f5739957516
                          (make-closure
                           lam57665
                           cdr
                           kont57396
                           foldl
                           acc
                           fun
                           lst)))
                     (clo-app car f5739957516 lst)))))))))))
  (proc
   (foldl _57669 kont57396 fun acc lst)
   (let ((f5740057514
          (make-closure lam57667 cdr kont57396 foldl car acc fun lst)))
     (clo-app null? f5740057514 lst)))
  (proc
   (lam57670 env57671 a5730557529)
   (let ((a5730357525 (env-ref env57671 3)))
     (let ((kont57401 (env-ref env57671 2)))
       (let ((reverse-helper (env-ref env57671 1)))
         (clo-app reverse-helper kont57401 a5730357525 a5730557529)))))
  (proc
   (lam57672 env57673 a5730457527)
   (let ((a5730357525 (env-ref env57673 5)))
     (let ((kont57401 (env-ref env57673 4)))
       (let ((reverse-helper (env-ref env57673 3)))
         (let ((lst2 (env-ref env57673 2)))
           (let ((cons (env-ref env57673 1)))
             (let ((f5740257528
                    (make-closure
                     lam57670
                     reverse-helper
                     kont57401
                     a5730357525)))
               (clo-app cons f5740257528 a5730457527 lst2))))))))
  (proc
   (lam57674 env57675 a5730357525)
   (let ((lst (env-ref env57675 6)))
     (let ((kont57401 (env-ref env57675 5)))
       (let ((reverse-helper (env-ref env57675 4)))
         (let ((lst2 (env-ref env57675 3)))
           (let ((car (env-ref env57675 2)))
             (let ((cons (env-ref env57675 1)))
               (let ((f5740357526
                      (make-closure
                       lam57672
                       cons
                       lst2
                       reverse-helper
                       kont57401
                       a5730357525)))
                 (clo-app car f5740357526 lst)))))))))
  (proc
   (lam57676 env57677 a5730257523)
   (let ((cdr (env-ref env57677 7)))
     (let ((lst (env-ref env57677 6)))
       (let ((kont57401 (env-ref env57677 5)))
         (let ((reverse-helper (env-ref env57677 4)))
           (let ((lst2 (env-ref env57677 3)))
             (let ((car (env-ref env57677 2)))
               (let ((cons (env-ref env57677 1)))
                 (if a5730257523
                   (clo-app kont57401 lst2)
                   (let ((f5740457524
                          (make-closure
                           lam57674
                           cons
                           car
                           lst2
                           reverse-helper
                           kont57401
                           lst)))
                     (clo-app cdr f5740457524 lst)))))))))))
  (proc
   (reverse-helper _57678 kont57401 lst lst2)
   (let ((f5740557522
          (make-closure
           lam57676
           cons
           car
           lst2
           reverse-helper
           kont57401
           lst
           cdr)))
     (clo-app null? f5740557522 lst)))
  (proc
   (lam57679 env57680 a5730657531)
   (let ((lst (env-ref env57680 3)))
     (let ((reverse-helper (env-ref env57680 2)))
       (let ((kont57406 (env-ref env57680 1)))
         (clo-app reverse-helper kont57406 lst a5730657531)))))
  (proc
   (reverse _57681 kont57406 lst)
   (let ((f5740757530 (make-closure lam57679 kont57406 reverse-helper lst)))
     (clo-app list f5740757530)))
  (proc
   (lam57682 env57683 x5730957536)
   (let ((kont57408 (env-ref env57683 1))) (clo-app kont57408 x5730957536)))
  (proc
   (lam57684 env57685 a5731457545)
   (let ((a5731257541 (env-ref env57685 4)))
     (let ((a5731057538 (env-ref env57685 3)))
       (let ((take-helper (env-ref env57685 2)))
         (let ((kont57408 (env-ref env57685 1)))
           (clo-app
            take-helper
            kont57408
            a5731057538
            a5731257541
            a5731457545))))))
  (proc
   (lam57686 env57687 a5731357543)
   (let ((a5731257541 (env-ref env57687 6)))
     (let ((take-helper (env-ref env57687 5)))
       (let ((kont57408 (env-ref env57687 4)))
         (let ((lst2 (env-ref env57687 3)))
           (let ((cons (env-ref env57687 2)))
             (let ((a5731057538 (env-ref env57687 1)))
               (let ((f5741057544
                      (make-closure
                       lam57684
                       kont57408
                       take-helper
                       a5731057538
                       a5731257541)))
                 (clo-app cons f5741057544 a5731357543 lst2)))))))))
  (proc
   (lam57688 env57689 a5731257541)
   (let ((lst (env-ref env57689 7)))
     (let ((car (env-ref env57689 6)))
       (let ((take-helper (env-ref env57689 5)))
         (let ((kont57408 (env-ref env57689 4)))
           (let ((lst2 (env-ref env57689 3)))
             (let ((cons (env-ref env57689 2)))
               (let ((a5731057538 (env-ref env57689 1)))
                 (let ((f5741157542
                        (make-closure
                         lam57686
                         a5731057538
                         cons
                         lst2
                         kont57408
                         take-helper
                         a5731257541)))
                   (clo-app car f5741157542 lst))))))))))
  (proc
   (lam57691 env57692 a5731057538)
   (let ((lst (env-ref env57692 8)))
     (let ((cons (env-ref env57692 7)))
       (let ((- (env-ref env57692 6)))
         (let ((take-helper (env-ref env57692 5)))
           (let ((kont57408 (env-ref env57692 4)))
             (let ((lst2 (env-ref env57692 3)))
               (let ((n (env-ref env57692 2)))
                 (let ((car (env-ref env57692 1)))
                   (let ((a5731157539 '1))
                     (let ((f5741257540
                            (make-closure
                             lam57688
                             a5731057538
                             cons
                             lst2
                             kont57408
                             take-helper
                             car
                             lst)))
                       (clo-app - f5741257540 n a5731157539))))))))))))
  (proc
   (lam57693 env57694 a5730857534)
   (let ((cdr (env-ref env57694 10)))
     (let ((lst (env-ref env57694 9)))
       (let ((reverse (env-ref env57694 8)))
         (let ((cons (env-ref env57694 7)))
           (let ((- (env-ref env57694 6)))
             (let ((take-helper (env-ref env57694 5)))
               (let ((kont57408 (env-ref env57694 4)))
                 (let ((lst2 (env-ref env57694 3)))
                   (let ((n (env-ref env57694 2)))
                     (let ((car (env-ref env57694 1)))
                       (if a5730857534
                         (let ((f5740957535 (make-closure lam57682 kont57408)))
                           (clo-app reverse f5740957535 lst2))
                         (let ((f5741357537
                                (make-closure
                                 lam57691
                                 car
                                 n
                                 lst2
                                 kont57408
                                 take-helper
                                 -
                                 cons
                                 lst)))
                           (clo-app cdr f5741357537 lst))))))))))))))
  (proc
   (take-helper _57696 kont57408 lst n lst2)
   (let ((a5730757532 '0))
     (let ((f5741457533
            (make-closure
             lam57693
             car
             n
             lst2
             kont57408
             take-helper
             -
             cons
             reverse
             lst
             cdr)))
       (clo-app = f5741457533 n a5730757532))))
  (proc
   (lam57697 env57698 a5731557547)
   (let ((kont57415 (env-ref env57698 4)))
     (let ((lst (env-ref env57698 3)))
       (let ((take-helper (env-ref env57698 2)))
         (let ((n (env-ref env57698 1)))
           (clo-app take-helper kont57415 lst n a5731557547))))))
  (proc
   (take _57699 kont57415 lst n)
   (let ((f5741657546 (make-closure lam57697 n take-helper lst kont57415)))
     (clo-app list f5741657546)))
  (proc
   (lam57701 env57702 a5732057555)
   (let ((kont57417 (env-ref env57702 3)))
     (let ((+ (env-ref env57702 2)))
       (let ((a5731857551 (env-ref env57702 1)))
         (clo-app + kont57417 a5731857551 a5732057555)))))
  (proc
   (lam57703 env57704 a5731957553)
   (let ((+ (env-ref env57704 4)))
     (let ((a5731857551 (env-ref env57704 3)))
       (let ((kont57417 (env-ref env57704 2)))
         (let ((length (env-ref env57704 1)))
           (let ((f5741857554 (make-closure lam57701 a5731857551 + kont57417)))
             (clo-app length f5741857554 a5731957553)))))))
  (proc
   (lam57706 env57707 a5731657549)
   (let ((cdr (env-ref env57707 5)))
     (let ((lst (env-ref env57707 4)))
       (let ((+ (env-ref env57707 3)))
         (let ((kont57417 (env-ref env57707 2)))
           (let ((length (env-ref env57707 1)))
             (if a5731657549
               (let ((x5731757550 '0)) (clo-app kont57417 x5731757550))
               (let ((a5731857551 '1))
                 (let ((f5741957552
                        (make-closure
                         lam57703
                         length
                         kont57417
                         a5731857551
                         +)))
                   (clo-app cdr f5741957552 lst))))))))))
  (proc
   (length _57708 kont57417 lst)
   (let ((f5742057548 (make-closure lam57706 length kont57417 + lst cdr)))
     (clo-app null? f5742057548 lst)))
  (proc
   (lam57709 env57710 x5732257559)
   (let ((kont57421 (env-ref env57710 1))) (clo-app kont57421 x5732257559)))
  (proc
   (lam57711 env57712 a5732657567)
   (let ((a5732457563 (env-ref env57712 3)))
     (let ((kont57421 (env-ref env57712 2)))
       (let ((cons (env-ref env57712 1)))
         (clo-app cons kont57421 a5732457563 a5732657567)))))
  (proc
   (lam57713 env57714 a5732557565)
   (let ((map (env-ref env57714 5)))
     (let ((a5732457563 (env-ref env57714 4)))
       (let ((kont57421 (env-ref env57714 3)))
         (let ((proc (env-ref env57714 2)))
           (let ((cons (env-ref env57714 1)))
             (let ((f5742357566
                    (make-closure lam57711 cons kont57421 a5732457563)))
               (clo-app map f5742357566 proc a5732557565))))))))
  (proc
   (lam57715 env57716 a5732457563)
   (let ((cdr (env-ref env57716 6)))
     (let ((lst (env-ref env57716 5)))
       (let ((map (env-ref env57716 4)))
         (let ((kont57421 (env-ref env57716 3)))
           (let ((proc (env-ref env57716 2)))
             (let ((cons (env-ref env57716 1)))
               (let ((f5742457564
                      (make-closure
                       lam57713
                       cons
                       proc
                       kont57421
                       a5732457563
                       map)))
                 (clo-app cdr f5742457564 lst)))))))))
  (proc
   (lam57717 env57718 a5732357561)
   (let ((cdr (env-ref env57718 6)))
     (let ((lst (env-ref env57718 5)))
       (let ((map (env-ref env57718 4)))
         (let ((kont57421 (env-ref env57718 3)))
           (let ((proc (env-ref env57718 2)))
             (let ((cons (env-ref env57718 1)))
               (let ((f5742557562
                      (make-closure lam57715 cons proc kont57421 map lst cdr)))
                 (clo-app proc f5742557562 a5732357561)))))))))
  (proc
   (lam57719 env57720 a5732157557)
   (let ((lst (env-ref env57720 8)))
     (let ((map (env-ref env57720 7)))
       (let ((kont57421 (env-ref env57720 6)))
         (let ((proc (env-ref env57720 5)))
           (let ((car (env-ref env57720 4)))
             (let ((cons (env-ref env57720 3)))
               (let ((list (env-ref env57720 2)))
                 (let ((cdr (env-ref env57720 1)))
                   (if a5732157557
                     (let ((f5742257558 (make-closure lam57709 kont57421)))
                       (clo-app list f5742257558))
                     (let ((f5742657560
                            (make-closure
                             lam57717
                             cons
                             proc
                             kont57421
                             map
                             lst
                             cdr)))
                       (clo-app car f5742657560 lst))))))))))))
  (proc
   (map _57721 kont57421 proc lst)
   (let ((f5742757556
          (make-closure lam57719 cdr list cons car proc kont57421 map lst)))
     (clo-app null? f5742757556 lst)))
  (proc
   (lam57722 env57723 x5732857571)
   (let ((kont57428 (env-ref env57723 1))) (clo-app kont57428 x5732857571)))
  (proc
   (lam57724 env57725 a5733357581)
   (let ((kont57428 (env-ref env57725 3)))
     (let ((a5733157577 (env-ref env57725 2)))
       (let ((cons (env-ref env57725 1)))
         (clo-app cons kont57428 a5733157577 a5733357581)))))
  (proc
   (lam57726 env57727 a5733257579)
   (let ((kont57428 (env-ref env57727 5)))
     (let ((a5733157577 (env-ref env57727 4)))
       (let ((op (env-ref env57727 3)))
         (let ((filter (env-ref env57727 2)))
           (let ((cons (env-ref env57727 1)))
             (let ((f5743057580
                    (make-closure lam57724 cons a5733157577 kont57428)))
               (clo-app filter f5743057580 op a5733257579))))))))
  (proc
   (lam57728 env57729 a5733157577)
   (let ((lst (env-ref env57729 6)))
     (let ((op (env-ref env57729 5)))
       (let ((filter (env-ref env57729 4)))
         (let ((cons (env-ref env57729 3)))
           (let ((kont57428 (env-ref env57729 2)))
             (let ((cdr (env-ref env57729 1)))
               (let ((f5743157578
                      (make-closure
                       lam57726
                       cons
                       filter
                       op
                       a5733157577
                       kont57428)))
                 (clo-app cdr f5743157578 lst)))))))))
  (proc
   (lam57730 env57731 a5733457583)
   (let ((kont57428 (env-ref env57731 3)))
     (let ((op (env-ref env57731 2)))
       (let ((filter (env-ref env57731 1)))
         (clo-app filter kont57428 op a5733457583)))))
  (proc
   (lam57732 env57733 a5733057575)
   (let ((lst (env-ref env57733 7)))
     (let ((op (env-ref env57733 6)))
       (let ((cons (env-ref env57733 5)))
         (let ((kont57428 (env-ref env57733 4)))
           (let ((cdr (env-ref env57733 3)))
             (let ((filter (env-ref env57733 2)))
               (let ((car (env-ref env57733 1)))
                 (if a5733057575
                   (let ((f5743257576
                          (make-closure
                           lam57728
                           cdr
                           kont57428
                           cons
                           filter
                           op
                           lst)))
                     (clo-app car f5743257576 lst))
                   (let ((f5743357582
                          (make-closure lam57730 filter op kont57428)))
                     (clo-app cdr f5743357582 lst)))))))))))
  (proc
   (lam57734 env57735 a5732957573)
   (let ((lst (env-ref env57735 7)))
     (let ((op (env-ref env57735 6)))
       (let ((cons (env-ref env57735 5)))
         (let ((kont57428 (env-ref env57735 4)))
           (let ((cdr (env-ref env57735 3)))
             (let ((filter (env-ref env57735 2)))
               (let ((car (env-ref env57735 1)))
                 (let ((f5743457574
                        (make-closure
                         lam57732
                         car
                         filter
                         cdr
                         kont57428
                         cons
                         op
                         lst)))
                   (clo-app op f5743457574 a5732957573))))))))))
  (proc
   (lam57736 env57737 a5732757569)
   (let ((lst (env-ref env57737 8)))
     (let ((op (env-ref env57737 7)))
       (let ((cons (env-ref env57737 6)))
         (let ((list (env-ref env57737 5)))
           (let ((kont57428 (env-ref env57737 4)))
             (let ((cdr (env-ref env57737 3)))
               (let ((filter (env-ref env57737 2)))
                 (let ((car (env-ref env57737 1)))
                   (if a5732757569
                     (let ((f5742957570 (make-closure lam57722 kont57428)))
                       (clo-app list f5742957570))
                     (let ((f5743557572
                            (make-closure
                             lam57734
                             car
                             filter
                             cdr
                             kont57428
                             cons
                             op
                             lst)))
                       (clo-app car f5743557572 lst))))))))))))
  (proc
   (filter _57738 kont57428 op lst)
   (let ((f5743657568
          (make-closure lam57736 car filter cdr kont57428 list cons op lst)))
     (clo-app null? f5743657568 lst)))
  (proc
   (lam57739 env57740 a5733957591)
   (let ((a5733757588 (env-ref env57740 3)))
     (let ((drop (env-ref env57740 2)))
       (let ((kont57437 (env-ref env57740 1)))
         (clo-app drop kont57437 a5733757588 a5733957591)))))
  (proc
   (lam57742 env57743 a5733757588)
   (let ((drop (env-ref env57743 4)))
     (let ((kont57437 (env-ref env57743 3)))
       (let ((n (env-ref env57743 2)))
         (let ((- (env-ref env57743 1)))
           (let ((a5733857589 '1))
             (let ((f5743857590
                    (make-closure lam57739 kont57437 drop a5733757588)))
               (clo-app - f5743857590 n a5733857589))))))))
  (proc
   (lam57744 env57745 a5733657586)
   (let ((cdr (env-ref env57745 6)))
     (let ((kont57437 (env-ref env57745 5)))
       (let ((n (env-ref env57745 4)))
         (let ((- (env-ref env57745 3)))
           (let ((lst (env-ref env57745 2)))
             (let ((drop (env-ref env57745 1)))
               (if a5733657586
                 (clo-app kont57437 lst)
                 (let ((f5743957587
                        (make-closure lam57742 - n kont57437 drop)))
                   (clo-app cdr f5743957587 lst))))))))))
  (proc
   (drop _57747 kont57437 lst n)
   (let ((a5733557584 '0))
     (let ((f5744057585 (make-closure lam57744 drop lst - n kont57437 cdr)))
       (clo-app = f5744057585 n a5733557584))))
  (proc
   (lam57748 env57749 a5734357599)
   (let ((a5734157595 (env-ref env57749 3)))
     (let ((proc (env-ref env57749 2)))
       (let ((kont57441 (env-ref env57749 1)))
         (clo-app proc kont57441 a5734157595 a5734357599)))))
  (proc
   (lam57750 env57751 a5734257597)
   (let ((foldr (env-ref env57751 5)))
     (let ((a5734157595 (env-ref env57751 4)))
       (let ((kont57441 (env-ref env57751 3)))
         (let ((proc (env-ref env57751 2)))
           (let ((acc (env-ref env57751 1)))
             (let ((f5744257598
                    (make-closure lam57748 kont57441 proc a5734157595)))
               (clo-app foldr f5744257598 proc acc a5734257597))))))))
  (proc
   (lam57752 env57753 a5734157595)
   (let ((cdr (env-ref env57753 6)))
     (let ((kont57441 (env-ref env57753 5)))
       (let ((foldr (env-ref env57753 4)))
         (let ((lst (env-ref env57753 3)))
           (let ((proc (env-ref env57753 2)))
             (let ((acc (env-ref env57753 1)))
               (let ((f5744357596
                      (make-closure
                       lam57750
                       acc
                       proc
                       kont57441
                       a5734157595
                       foldr)))
                 (clo-app cdr f5744357596 lst)))))))))
  (proc
   (lam57754 env57755 a5734057593)
   (let ((cdr (env-ref env57755 7)))
     (let ((foldr (env-ref env57755 6)))
       (let ((lst (env-ref env57755 5)))
         (let ((proc (env-ref env57755 4)))
           (let ((acc (env-ref env57755 3)))
             (let ((kont57441 (env-ref env57755 2)))
               (let ((car (env-ref env57755 1)))
                 (if a5734057593
                   (clo-app kont57441 acc)
                   (let ((f5744457594
                          (make-closure
                           lam57752
                           acc
                           proc
                           lst
                           foldr
                           kont57441
                           cdr)))
                     (clo-app car f5744457594 lst)))))))))))
  (proc
   (foldr _57756 kont57441 proc acc lst)
   (let ((f5744557592
          (make-closure lam57754 car kont57441 acc proc lst foldr cdr)))
     (clo-app null? f5744557592 lst)))
  (proc
   (lam57757 env57758 a5734757607)
   (let ((kont57446 (env-ref env57758 3)))
     (let ((cons (env-ref env57758 2)))
       (let ((a5734557603 (env-ref env57758 1)))
         (clo-app cons kont57446 a5734557603 a5734757607)))))
  (proc
   (lam57759 env57760 a5734657605)
   (let ((kont57446 (env-ref env57760 5)))
     (let ((append (env-ref env57760 4)))
       (let ((lst2 (env-ref env57760 3)))
         (let ((cons (env-ref env57760 2)))
           (let ((a5734557603 (env-ref env57760 1)))
             (let ((f5744757606
                    (make-closure lam57757 a5734557603 cons kont57446)))
               (clo-app append f5744757606 a5734657605 lst2))))))))
  (proc
   (lam57761 env57762 a5734557603)
   (let ((cdr (env-ref env57762 6)))
     (let ((kont57446 (env-ref env57762 5)))
       (let ((append (env-ref env57762 4)))
         (let ((lst2 (env-ref env57762 3)))
           (let ((lst1 (env-ref env57762 2)))
             (let ((cons (env-ref env57762 1)))
               (let ((f5744857604
                      (make-closure
                       lam57759
                       a5734557603
                       cons
                       lst2
                       append
                       kont57446)))
                 (clo-app cdr f5744857604 lst1)))))))))
  (proc
   (lam57763 env57764 a5734457601)
   (let ((cdr (env-ref env57764 7)))
     (let ((kont57446 (env-ref env57764 6)))
       (let ((append (env-ref env57764 5)))
         (let ((lst2 (env-ref env57764 4)))
           (let ((cons (env-ref env57764 3)))
             (let ((lst1 (env-ref env57764 2)))
               (let ((car (env-ref env57764 1)))
                 (if a5734457601
                   (clo-app kont57446 lst2)
                   (let ((f5744957602
                          (make-closure
                           lam57761
                           cons
                           lst1
                           lst2
                           append
                           kont57446
                           cdr)))
                     (clo-app car f5744957602 lst1)))))))))))
  (proc
   (append _57765 kont57446 lst1 lst2)
   (let ((f5745057600
          (make-closure lam57763 car lst1 cons lst2 append kont57446 cdr)))
     (clo-app null? f5745057600 lst1)))
  (proc
   (hash _57766 . lst)
   (let ((kont5745157608 (prim car lst)))
     (let ((lst57609 (prim cdr lst)))
       (let ((x5734857610 (apply-prim hash lst57609)))
         (clo-app kont5745157608 x5734857610)))))
  (proc
   (hash-ref _57767 kont57453 h k)
   (let ((x5734957611 (prim hash-ref h k))) (clo-app kont57453 x5734957611)))
  (proc
   (hash-set _57768 kont57454 h k v)
   (let ((x5735057612 (prim hash-set h k v))) (clo-app kont57454 x5735057612)))
  (proc
   (hash-has-key? _57769 kont57455 h k)
   (let ((x5735157613 (prim hash-has-key? h k)))
     (clo-app kont57455 x5735157613)))
  (proc
   (hash-count _57770 kont57456 h)
   (let ((x5735257614 (prim hash-count h))) (clo-app kont57456 x5735257614)))
  (proc
   (call _57777 kont57457)
   (let ((a5735357615 '1))
     (let ((a5735457616 '2))
       (let ((a5735557617 '3))
         (let ((a5735657618 '4))
           (let ((a5735757619 '5))
             (let ((a5735857620 '100))
               (clo-app
                <=
                kont57457
                a5735357615
                a5735457616
                a5735557617
                a5735657618
                a5735757619
                a5735857620))))))))
  (proc
   (lam57778 env57779 x5735957622)
   (let ((kont57458 (env-ref env57779 1))) (clo-app kont57458 x5735957622)))
  (proc
   (brouhaha_main _57780 kont57458)
   (let ((f5745957621 (make-closure lam57778 kont57458)))
     (clo-app call f5745957621))))
