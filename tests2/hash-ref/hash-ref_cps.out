'((define (+ . lst)
    (let ((kont4141541516 (prim car lst)))
      (let ((lst41517 (prim cdr lst)))
        (let ((x4132541518 (apply-prim + lst41517)))
          (kont4141541516 x4132541518)))))
  (define (- . lst)
    (let ((kont4141741519 (prim car lst)))
      (let ((lst41520 (prim cdr lst)))
        (let ((x4132641521 (apply-prim - lst41520)))
          (kont4141741519 x4132641521)))))
  (define (* . lst)
    (let ((kont4141941522 (prim car lst)))
      (let ((lst41523 (prim cdr lst)))
        (let ((x4132741524 (apply-prim * lst41523)))
          (kont4141941522 x4132741524)))))
  (define (modulo kont41421 a b)
    (let ((x4132841525 (prim modulo a b))) (kont41421 x4132841525)))
  (define (/ . lst)
    (let ((kont4142241526 (prim car lst)))
      (let ((lst41527 (prim cdr lst)))
        (let ((x4132941528 (apply-prim / lst41527)))
          (kont4142241526 x4132941528)))))
  (define (= . lst)
    (let ((kont4142441529 (prim car lst)))
      (let ((lst41530 (prim cdr lst)))
        (let ((x4133041531 (apply-prim = lst41530)))
          (kont4142441529 x4133041531)))))
  (define (> . lst)
    (let ((kont4142641532 (prim car lst)))
      (let ((lst41533 (prim cdr lst)))
        (let ((x4133141534 (apply-prim > lst41533)))
          (kont4142641532 x4133141534)))))
  (define (< . lst)
    (let ((kont4142841535 (prim car lst)))
      (let ((lst41536 (prim cdr lst)))
        (let ((x4133241537 (apply-prim < lst41536)))
          (kont4142841535 x4133241537)))))
  (define (<= . lst)
    (let ((kont4143041538 (prim car lst)))
      (let ((lst41539 (prim cdr lst)))
        (let ((x4133341540 (apply-prim <= lst41539)))
          (kont4143041538 x4133341540)))))
  (define (>= . lst)
    (let ((kont4143241541 (prim car lst)))
      (let ((lst41542 (prim cdr lst)))
        (let ((x4133441543 (apply-prim >= lst41542)))
          (kont4143241541 x4133441543)))))
  (define (null? kont41434 x)
    (let ((x4133541544 (prim null? x))) (kont41434 x4133541544)))
  (define (equal? kont41435 x y)
    (let ((x4133641545 (prim equal? x y))) (kont41435 x4133641545)))
  (define (eq? kont41436 x y)
    (let ((x4133741546 (prim eq? x y))) (kont41436 x4133741546)))
  (define (cons kont41437 a b)
    (let ((x4133841547 (prim cons a b))) (kont41437 x4133841547)))
  (define (car kont41438 lst)
    (let ((x4133941548 (prim car lst))) (kont41438 x4133941548)))
  (define (cdr kont41439 lst)
    (let ((x4134041549 (prim cdr lst))) (kont41439 x4134041549)))
  (define (even? kont41440 x)
    (let ((a4134141550 '0))
      (let ((a4134241551 '2))
        (let ((f4144141552
               (lambda (a4134341553)
                 (equal? kont41440 a4134141550 a4134341553))))
          (modulo f4144141552 x a4134241551)))))
  (define (odd? kont41442 x)
    (let ((a4134441554 '1))
      (let ((a4134541555 '2))
        (let ((f4144341556
               (lambda (a4134641557)
                 (equal? kont41442 a4134441554 a4134641557))))
          (modulo f4144341556 x a4134541555)))))
  (define (list . x)
    (let ((kont4144441558 (prim car x)))
      (let ((x41559 (prim cdr x))) (kont4144441558 x41559))))
  (define (member? kont41446 x lst)
    (let ((f4145041560
           (lambda (a4134741561)
             (if a4134741561
               (let ((x4134841562 '#f)) (kont41446 x4134841562))
               (let ((f4144941563
                      (lambda (a4134941564)
                        (let ((f4144841565
                               (lambda (a4135041566)
                                 (if a4135041566
                                   (let ((x4135141567 '#t))
                                     (kont41446 x4135141567))
                                   (let ((f4144741568
                                          (lambda (a4135241569)
                                            (member?
                                             kont41446
                                             x
                                             a4135241569))))
                                     (cdr f4144741568 lst))))))
                          (equal? f4144841565 a4134941564 x)))))
                 (car f4144941563 lst))))))
      (null? f4145041560 lst)))
  (define (foldl kont41451 fun acc lst)
    (let ((f4145541570
           (lambda (a4135341571)
             (if a4135341571
               (kont41451 acc)
               (let ((f4145441572
                      (lambda (a4135441573)
                        (let ((f4145341574
                               (lambda (a4135541575)
                                 (let ((f4145241576
                                        (lambda (a4135641577)
                                          (foldl
                                           kont41451
                                           fun
                                           a4135541575
                                           a4135641577))))
                                   (cdr f4145241576 lst)))))
                          (fun f4145341574 a4135441573 acc)))))
                 (car f4145441572 lst))))))
      (null? f4145541570 lst)))
  (define (reverse-helper kont41456 lst lst2)
    (let ((f4146041578
           (lambda (a4135741579)
             (if a4135741579
               (kont41456 lst2)
               (let ((f4145941580
                      (lambda (a4135841581)
                        (let ((f4145841582
                               (lambda (a4135941583)
                                 (let ((f4145741584
                                        (lambda (a4136041585)
                                          (reverse-helper
                                           kont41456
                                           a4135841581
                                           a4136041585))))
                                   (cons f4145741584 a4135941583 lst2)))))
                          (car f4145841582 lst)))))
                 (cdr f4145941580 lst))))))
      (null? f4146041578 lst)))
  (define (reverse kont41461 lst)
    (let ((f4146241586
           (lambda (a4136141587) (reverse-helper kont41461 lst a4136141587))))
      (list f4146241586)))
  (define (take-helper kont41463 lst n lst2)
    (let ((a4136241588 '0))
      (let ((f4146941589
             (lambda (a4136341590)
               (if a4136341590
                 (let ((f4146441591
                        (lambda (x4136441592) (kont41463 x4136441592))))
                   (reverse f4146441591 lst2))
                 (let ((f4146841593
                        (lambda (a4136541594)
                          (let ((a4136641595 '1))
                            (let ((f4146741596
                                   (lambda (a4136741597)
                                     (let ((f4146641598
                                            (lambda (a4136841599)
                                              (let ((f4146541600
                                                     (lambda (a4136941601)
                                                       (take-helper
                                                        kont41463
                                                        a4136541594
                                                        a4136741597
                                                        a4136941601))))
                                                (cons
                                                 f4146541600
                                                 a4136841599
                                                 lst2)))))
                                       (car f4146641598 lst)))))
                              (- f4146741596 n a4136641595))))))
                   (cdr f4146841593 lst))))))
        (= f4146941589 n a4136241588))))
  (define (take kont41470 lst n)
    (let ((f4147141602
           (lambda (a4137041603) (take-helper kont41470 lst n a4137041603))))
      (list f4147141602)))
  (define (length kont41472 lst)
    (let ((f4147541604
           (lambda (a4137141605)
             (if a4137141605
               (let ((x4137241606 '0)) (kont41472 x4137241606))
               (let ((a4137341607 '1))
                 (let ((f4147441608
                        (lambda (a4137441609)
                          (let ((f4147341610
                                 (lambda (a4137541611)
                                   (+ kont41472 a4137341607 a4137541611))))
                            (length f4147341610 a4137441609)))))
                   (cdr f4147441608 lst)))))))
      (null? f4147541604 lst)))
  (define (map kont41476 proc lst)
    (let ((f4148241612
           (lambda (a4137641613)
             (if a4137641613
               (let ((f4147741614
                      (lambda (x4137741615) (kont41476 x4137741615))))
                 (list f4147741614))
               (let ((f4148141616
                      (lambda (a4137841617)
                        (let ((f4148041618
                               (lambda (a4137941619)
                                 (let ((f4147941620
                                        (lambda (a4138041621)
                                          (let ((f4147841622
                                                 (lambda (a4138141623)
                                                   (cons
                                                    kont41476
                                                    a4137941619
                                                    a4138141623))))
                                            (map
                                             f4147841622
                                             proc
                                             a4138041621)))))
                                   (cdr f4147941620 lst)))))
                          (proc f4148041618 a4137841617)))))
                 (car f4148141616 lst))))))
      (null? f4148241612 lst)))
  (define (filter kont41483 op lst)
    (let ((f4149141624
           (lambda (a4138241625)
             (if a4138241625
               (let ((f4148441626
                      (lambda (x4138341627) (kont41483 x4138341627))))
                 (list f4148441626))
               (let ((f4149041628
                      (lambda (a4138441629)
                        (let ((f4148941630
                               (lambda (a4138541631)
                                 (if a4138541631
                                   (let ((f4148741632
                                          (lambda (a4138641633)
                                            (let ((f4148641634
                                                   (lambda (a4138741635)
                                                     (let ((f4148541636
                                                            (lambda (a4138841637)
                                                              (cons
                                                               kont41483
                                                               a4138641633
                                                               a4138841637))))
                                                       (filter
                                                        f4148541636
                                                        op
                                                        a4138741635)))))
                                              (cdr f4148641634 lst)))))
                                     (car f4148741632 lst))
                                   (let ((f4148841638
                                          (lambda (a4138941639)
                                            (filter
                                             kont41483
                                             op
                                             a4138941639))))
                                     (cdr f4148841638 lst))))))
                          (op f4148941630 a4138441629)))))
                 (car f4149041628 lst))))))
      (null? f4149141624 lst)))
  (define (drop kont41492 lst n)
    (let ((a4139041640 '0))
      (let ((f4149541641
             (lambda (a4139141642)
               (if a4139141642
                 (kont41492 lst)
                 (let ((f4149441643
                        (lambda (a4139241644)
                          (let ((a4139341645 '1))
                            (let ((f4149341646
                                   (lambda (a4139441647)
                                     (drop
                                      kont41492
                                      a4139241644
                                      a4139441647))))
                              (- f4149341646 n a4139341645))))))
                   (cdr f4149441643 lst))))))
        (= f4149541641 n a4139041640))))
  (define (foldr kont41496 proc acc lst)
    (let ((f4150041648
           (lambda (a4139541649)
             (if a4139541649
               (kont41496 acc)
               (let ((f4149941650
                      (lambda (a4139641651)
                        (let ((f4149841652
                               (lambda (a4139741653)
                                 (let ((f4149741654
                                        (lambda (a4139841655)
                                          (proc
                                           kont41496
                                           a4139641651
                                           a4139841655))))
                                   (foldr f4149741654 proc acc a4139741653)))))
                          (cdr f4149841652 lst)))))
                 (car f4149941650 lst))))))
      (null? f4150041648 lst)))
  (define (append kont41501 lst1 lst2)
    (let ((f4150541656
           (lambda (a4139941657)
             (if a4139941657
               (kont41501 lst2)
               (let ((f4150441658
                      (lambda (a4140041659)
                        (let ((f4150341660
                               (lambda (a4140141661)
                                 (let ((f4150241662
                                        (lambda (a4140241663)
                                          (cons
                                           kont41501
                                           a4140041659
                                           a4140241663))))
                                   (append f4150241662 a4140141661 lst2)))))
                          (cdr f4150341660 lst1)))))
                 (car f4150441658 lst1))))))
      (null? f4150541656 lst1)))
  (define (hash . lst)
    (let ((kont4150641664 (prim car lst)))
      (let ((lst41665 (prim cdr lst)))
        (let ((x4140341666 (apply-prim hash lst41665)))
          (kont4150641664 x4140341666)))))
  (define (hash-ref kont41508 h k)
    (let ((x4140441667 (prim hash-ref h k))) (kont41508 x4140441667)))
  (define (hash-set kont41509 h k v)
    (let ((x4140541668 (prim hash-set h k v))) (kont41509 x4140541668)))
  (define (hash-has-key? kont41510 h k)
    (let ((x4140641669 (prim hash-has-key? h k))) (kont41510 x4140641669)))
  (define (hash-count kont41511 h)
    (let ((x4140741670 (prim hash-count h))) (kont41511 x4140741670)))
  (define (call kont41512)
    (let ((a4140841671 "work"))
      (let ((a4140941672 '80))
        (let ((a4141041673 '10))
          (let ((a4141141674 "lmao"))
            (let ((f4151341675
                   (lambda (a4141241676)
                     (let ((a4141341677 '10))
                       (hash-ref kont41512 a4141241676 a4141341677)))))
              (hash
               f4151341675
               a4140841671
               a4140941672
               a4141041673
               a4141141674)))))))
  (define (brouhaha_main kont41514)
    (let ((f4151541678 (lambda (x4141441679) (kont41514 x4141441679))))
      (call f4151541678))))
