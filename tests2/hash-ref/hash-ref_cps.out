'((define (+ . lst)
    (let ((kont4056340664 (prim car lst)))
      (let ((lst40665 (prim cdr lst)))
        (let ((x4047340666 (apply-prim + lst40665)))
          (kont4056340664 x4047340666)))))
  (define (- . lst)
    (let ((kont4056540667 (prim car lst)))
      (let ((lst40668 (prim cdr lst)))
        (let ((x4047440669 (apply-prim - lst40668)))
          (kont4056540667 x4047440669)))))
  (define (* . lst)
    (let ((kont4056740670 (prim car lst)))
      (let ((lst40671 (prim cdr lst)))
        (let ((x4047540672 (apply-prim * lst40671)))
          (kont4056740670 x4047540672)))))
  (define (modulo kont40569 a b)
    (let ((x4047640673 (prim modulo a b))) (kont40569 x4047640673)))
  (define (/ . lst)
    (let ((kont4057040674 (prim car lst)))
      (let ((lst40675 (prim cdr lst)))
        (let ((x4047740676 (apply-prim / lst40675)))
          (kont4057040674 x4047740676)))))
  (define (= . lst)
    (let ((kont4057240677 (prim car lst)))
      (let ((lst40678 (prim cdr lst)))
        (let ((x4047840679 (apply-prim = lst40678)))
          (kont4057240677 x4047840679)))))
  (define (> . lst)
    (let ((kont4057440680 (prim car lst)))
      (let ((lst40681 (prim cdr lst)))
        (let ((x4047940682 (apply-prim > lst40681)))
          (kont4057440680 x4047940682)))))
  (define (< . lst)
    (let ((kont4057640683 (prim car lst)))
      (let ((lst40684 (prim cdr lst)))
        (let ((x4048040685 (apply-prim < lst40684)))
          (kont4057640683 x4048040685)))))
  (define (<= . lst)
    (let ((kont4057840686 (prim car lst)))
      (let ((lst40687 (prim cdr lst)))
        (let ((x4048140688 (apply-prim <= lst40687)))
          (kont4057840686 x4048140688)))))
  (define (>= . lst)
    (let ((kont4058040689 (prim car lst)))
      (let ((lst40690 (prim cdr lst)))
        (let ((x4048240691 (apply-prim >= lst40690)))
          (kont4058040689 x4048240691)))))
  (define (null? kont40582 x)
    (let ((x4048340692 (prim null? x))) (kont40582 x4048340692)))
  (define (equal? kont40583 x y)
    (let ((x4048440693 (prim equal? x y))) (kont40583 x4048440693)))
  (define (eq? kont40584 x y)
    (let ((x4048540694 (prim eq? x y))) (kont40584 x4048540694)))
  (define (cons kont40585 a b)
    (let ((x4048640695 (prim cons a b))) (kont40585 x4048640695)))
  (define (car kont40586 lst)
    (let ((x4048740696 (prim car lst))) (kont40586 x4048740696)))
  (define (cdr kont40587 lst)
    (let ((x4048840697 (prim cdr lst))) (kont40587 x4048840697)))
  (define (even? kont40588 x)
    (let ((a4048940698 '0))
      (let ((a4049040699 '2))
        (let ((f4058940700
               (lambda (a4049140701)
                 (equal? kont40588 a4048940698 a4049140701))))
          (modulo f4058940700 x a4049040699)))))
  (define (odd? kont40590 x)
    (let ((a4049240702 '1))
      (let ((a4049340703 '2))
        (let ((f4059140704
               (lambda (a4049440705)
                 (equal? kont40590 a4049240702 a4049440705))))
          (modulo f4059140704 x a4049340703)))))
  (define (list . x)
    (let ((kont4059240706 (prim car x)))
      (let ((x40707 (prim cdr x))) (kont4059240706 x40707))))
  (define (member? kont40594 x lst)
    (let ((f4059840708
           (lambda (a4049540709)
             (if a4049540709
               (let ((x4049640710 '#f)) (kont40594 x4049640710))
               (let ((f4059740711
                      (lambda (a4049740712)
                        (let ((f4059640713
                               (lambda (a4049840714)
                                 (if a4049840714
                                   (let ((x4049940715 '#t))
                                     (kont40594 x4049940715))
                                   (let ((f4059540716
                                          (lambda (a4050040717)
                                            (member?
                                             kont40594
                                             x
                                             a4050040717))))
                                     (cdr f4059540716 lst))))))
                          (equal? f4059640713 a4049740712 x)))))
                 (car f4059740711 lst))))))
      (null? f4059840708 lst)))
  (define (foldl kont40599 fun acc lst)
    (let ((f4060340718
           (lambda (a4050140719)
             (if a4050140719
               (kont40599 acc)
               (let ((f4060240720
                      (lambda (a4050240721)
                        (let ((f4060140722
                               (lambda (a4050340723)
                                 (let ((f4060040724
                                        (lambda (a4050440725)
                                          (foldl
                                           kont40599
                                           fun
                                           a4050340723
                                           a4050440725))))
                                   (cdr f4060040724 lst)))))
                          (fun f4060140722 a4050240721 acc)))))
                 (car f4060240720 lst))))))
      (null? f4060340718 lst)))
  (define (reverse-helper kont40604 lst lst2)
    (let ((f4060840726
           (lambda (a4050540727)
             (if a4050540727
               (kont40604 lst2)
               (let ((f4060740728
                      (lambda (a4050640729)
                        (let ((f4060640730
                               (lambda (a4050740731)
                                 (let ((f4060540732
                                        (lambda (a4050840733)
                                          (reverse-helper
                                           kont40604
                                           a4050640729
                                           a4050840733))))
                                   (cons f4060540732 a4050740731 lst2)))))
                          (car f4060640730 lst)))))
                 (cdr f4060740728 lst))))))
      (null? f4060840726 lst)))
  (define (reverse kont40609 lst)
    (let ((f4061040734
           (lambda (a4050940735) (reverse-helper kont40609 lst a4050940735))))
      (list f4061040734)))
  (define (take-helper kont40611 lst n lst2)
    (let ((a4051040736 '0))
      (let ((f4061740737
             (lambda (a4051140738)
               (if a4051140738
                 (let ((f4061240739
                        (lambda (x4051240740) (kont40611 x4051240740))))
                   (reverse f4061240739 lst2))
                 (let ((f4061640741
                        (lambda (a4051340742)
                          (let ((a4051440743 '1))
                            (let ((f4061540744
                                   (lambda (a4051540745)
                                     (let ((f4061440746
                                            (lambda (a4051640747)
                                              (let ((f4061340748
                                                     (lambda (a4051740749)
                                                       (take-helper
                                                        kont40611
                                                        a4051340742
                                                        a4051540745
                                                        a4051740749))))
                                                (cons
                                                 f4061340748
                                                 a4051640747
                                                 lst2)))))
                                       (car f4061440746 lst)))))
                              (- f4061540744 n a4051440743))))))
                   (cdr f4061640741 lst))))))
        (= f4061740737 n a4051040736))))
  (define (take kont40618 lst n)
    (let ((f4061940750
           (lambda (a4051840751) (take-helper kont40618 lst n a4051840751))))
      (list f4061940750)))
  (define (length kont40620 lst)
    (let ((f4062340752
           (lambda (a4051940753)
             (if a4051940753
               (let ((x4052040754 '0)) (kont40620 x4052040754))
               (let ((a4052140755 '1))
                 (let ((f4062240756
                        (lambda (a4052240757)
                          (let ((f4062140758
                                 (lambda (a4052340759)
                                   (+ kont40620 a4052140755 a4052340759))))
                            (length f4062140758 a4052240757)))))
                   (cdr f4062240756 lst)))))))
      (null? f4062340752 lst)))
  (define (map kont40624 proc lst)
    (let ((f4063040760
           (lambda (a4052440761)
             (if a4052440761
               (let ((f4062540762
                      (lambda (x4052540763) (kont40624 x4052540763))))
                 (list f4062540762))
               (let ((f4062940764
                      (lambda (a4052640765)
                        (let ((f4062840766
                               (lambda (a4052740767)
                                 (let ((f4062740768
                                        (lambda (a4052840769)
                                          (let ((f4062640770
                                                 (lambda (a4052940771)
                                                   (cons
                                                    kont40624
                                                    a4052740767
                                                    a4052940771))))
                                            (map
                                             f4062640770
                                             proc
                                             a4052840769)))))
                                   (cdr f4062740768 lst)))))
                          (proc f4062840766 a4052640765)))))
                 (car f4062940764 lst))))))
      (null? f4063040760 lst)))
  (define (filter kont40631 op lst)
    (let ((f4063940772
           (lambda (a4053040773)
             (if a4053040773
               (let ((f4063240774
                      (lambda (x4053140775) (kont40631 x4053140775))))
                 (list f4063240774))
               (let ((f4063840776
                      (lambda (a4053240777)
                        (let ((f4063740778
                               (lambda (a4053340779)
                                 (if a4053340779
                                   (let ((f4063540780
                                          (lambda (a4053440781)
                                            (let ((f4063440782
                                                   (lambda (a4053540783)
                                                     (let ((f4063340784
                                                            (lambda (a4053640785)
                                                              (cons
                                                               kont40631
                                                               a4053440781
                                                               a4053640785))))
                                                       (filter
                                                        f4063340784
                                                        op
                                                        a4053540783)))))
                                              (cdr f4063440782 lst)))))
                                     (car f4063540780 lst))
                                   (let ((f4063640786
                                          (lambda (a4053740787)
                                            (filter
                                             kont40631
                                             op
                                             a4053740787))))
                                     (cdr f4063640786 lst))))))
                          (op f4063740778 a4053240777)))))
                 (car f4063840776 lst))))))
      (null? f4063940772 lst)))
  (define (drop kont40640 lst n)
    (let ((a4053840788 '0))
      (let ((f4064340789
             (lambda (a4053940790)
               (if a4053940790
                 (kont40640 lst)
                 (let ((f4064240791
                        (lambda (a4054040792)
                          (let ((a4054140793 '1))
                            (let ((f4064140794
                                   (lambda (a4054240795)
                                     (drop
                                      kont40640
                                      a4054040792
                                      a4054240795))))
                              (- f4064140794 n a4054140793))))))
                   (cdr f4064240791 lst))))))
        (= f4064340789 n a4053840788))))
  (define (foldr kont40644 proc acc lst)
    (let ((f4064840796
           (lambda (a4054340797)
             (if a4054340797
               (kont40644 acc)
               (let ((f4064740798
                      (lambda (a4054440799)
                        (let ((f4064640800
                               (lambda (a4054540801)
                                 (let ((f4064540802
                                        (lambda (a4054640803)
                                          (proc
                                           kont40644
                                           a4054440799
                                           a4054640803))))
                                   (foldr f4064540802 proc acc a4054540801)))))
                          (cdr f4064640800 lst)))))
                 (car f4064740798 lst))))))
      (null? f4064840796 lst)))
  (define (append kont40649 lst1 lst2)
    (let ((f4065340804
           (lambda (a4054740805)
             (if a4054740805
               (kont40649 lst2)
               (let ((f4065240806
                      (lambda (a4054840807)
                        (let ((f4065140808
                               (lambda (a4054940809)
                                 (let ((f4065040810
                                        (lambda (a4055040811)
                                          (cons
                                           kont40649
                                           a4054840807
                                           a4055040811))))
                                   (append f4065040810 a4054940809 lst2)))))
                          (cdr f4065140808 lst1)))))
                 (car f4065240806 lst1))))))
      (null? f4065340804 lst1)))
  (define (hash . lst)
    (let ((kont4065440812 (prim car lst)))
      (let ((lst40813 (prim cdr lst)))
        (let ((x4055140814 (apply-prim hash lst40813)))
          (kont4065440812 x4055140814)))))
  (define (hash-ref kont40656 h k)
    (let ((x4055240815 (prim hash-ref h k))) (kont40656 x4055240815)))
  (define (hash-set kont40657 h k v)
    (let ((x4055340816 (prim hash-set h k v))) (kont40657 x4055340816)))
  (define (hash-has-key? kont40658 h k)
    (let ((x4055440817 (prim hash-has-key? h k))) (kont40658 x4055440817)))
  (define (hash-count kont40659 h)
    (let ((x4055540818 (prim hash-count h))) (kont40659 x4055540818)))
  (define (call kont40660)
    (let ((a4055640819 "work"))
      (let ((a4055740820 '80))
        (let ((a4055840821 '10))
          (let ((a4055940822 "lmao"))
            (let ((f4066140823
                   (lambda (a4056040824)
                     (let ((a4056140825 '10))
                       (hash-ref kont40660 a4056040824 a4056140825)))))
              (hash
               f4066140823
               a4055640819
               a4055740820
               a4055840821
               a4055940822)))))))
  (define (brouhaha_main kont40662)
    (let ((f4066340826 (lambda (x4056240827) (kont40662 x4056240827))))
      (call f4066340826))))
