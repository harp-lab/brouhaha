'((define (+ . lst)
    (let ((kont1327413376 (prim car lst)))
      (let ((lst13377 (prim cdr lst)))
        (let ((x1318413378 (apply-prim + lst13377)))
          (kont1327413376 x1318413378)))))
  (define (- . lst)
    (let ((kont1327613379 (prim car lst)))
      (let ((lst13380 (prim cdr lst)))
        (let ((x1318513381 (apply-prim - lst13380)))
          (kont1327613379 x1318513381)))))
  (define (* . lst)
    (let ((kont1327813382 (prim car lst)))
      (let ((lst13383 (prim cdr lst)))
        (let ((x1318613384 (apply-prim * lst13383)))
          (kont1327813382 x1318613384)))))
  (define (modulo kont13280 a b)
    (let ((x1318713385 (prim modulo a b))) (kont13280 x1318713385)))
  (define (/ . lst)
    (let ((kont1328113386 (prim car lst)))
      (let ((lst13387 (prim cdr lst)))
        (let ((x1318813388 (apply-prim / lst13387)))
          (kont1328113386 x1318813388)))))
  (define (= . lst)
    (let ((kont1328313389 (prim car lst)))
      (let ((lst13390 (prim cdr lst)))
        (let ((x1318913391 (apply-prim = lst13390)))
          (kont1328313389 x1318913391)))))
  (define (> . lst)
    (let ((kont1328513392 (prim car lst)))
      (let ((lst13393 (prim cdr lst)))
        (let ((x1319013394 (apply-prim > lst13393)))
          (kont1328513392 x1319013394)))))
  (define (< . lst)
    (let ((kont1328713395 (prim car lst)))
      (let ((lst13396 (prim cdr lst)))
        (let ((x1319113397 (apply-prim < lst13396)))
          (kont1328713395 x1319113397)))))
  (define (<= . lst)
    (let ((kont1328913398 (prim car lst)))
      (let ((lst13399 (prim cdr lst)))
        (let ((x1319213400 (apply-prim <= lst13399)))
          (kont1328913398 x1319213400)))))
  (define (>= . lst)
    (let ((kont1329113401 (prim car lst)))
      (let ((lst13402 (prim cdr lst)))
        (let ((x1319313403 (apply-prim >= lst13402)))
          (kont1329113401 x1319313403)))))
  (define (null? kont13293 x)
    (let ((x1319413404 (prim null? x))) (kont13293 x1319413404)))
  (define (equal? kont13294 x y)
    (let ((x1319513405 (prim equal? x y))) (kont13294 x1319513405)))
  (define (eq? kont13295 x y)
    (let ((x1319613406 (prim eq? x y))) (kont13295 x1319613406)))
  (define (cons kont13296 a b)
    (let ((x1319713407 (prim cons a b))) (kont13296 x1319713407)))
  (define (car kont13297 lst)
    (let ((x1319813408 (prim car lst))) (kont13297 x1319813408)))
  (define (cdr kont13298 lst)
    (let ((x1319913409 (prim cdr lst))) (kont13298 x1319913409)))
  (define (even? kont13299 x)
    (let ((a1320013410 '0))
      (let ((a1320113411 '2))
        (let ((f1330013412
               (lambda (a1320213413)
                 (equal? kont13299 a1320013410 a1320213413))))
          (modulo f1330013412 x a1320113411)))))
  (define (odd? kont13301 x)
    (let ((a1320313414 '1))
      (let ((a1320413415 '2))
        (let ((f1330213416
               (lambda (a1320513417)
                 (equal? kont13301 a1320313414 a1320513417))))
          (modulo f1330213416 x a1320413415)))))
  (define (list . x)
    (let ((kont1330313418 (prim car x)))
      (let ((x13419 (prim cdr x))) (kont1330313418 x13419))))
  (define (member? kont13305 x lst)
    (let ((f1330913420
           (lambda (a1320613421)
             (if a1320613421
               (let ((x1320713422 '#f)) (kont13305 x1320713422))
               (let ((f1330813423
                      (lambda (a1320813424)
                        (let ((f1330713425
                               (lambda (a1320913426)
                                 (if a1320913426
                                   (let ((x1321013427 '#t))
                                     (kont13305 x1321013427))
                                   (let ((f1330613428
                                          (lambda (a1321113429)
                                            (member?
                                             kont13305
                                             x
                                             a1321113429))))
                                     (cdr f1330613428 lst))))))
                          (equal? f1330713425 a1320813424 x)))))
                 (car f1330813423 lst))))))
      (null? f1330913420 lst)))
  (define (foldl kont13310 fun acc lst)
    (let ((f1331413430
           (lambda (a1321213431)
             (if a1321213431
               (kont13310 acc)
               (let ((f1331313432
                      (lambda (a1321313433)
                        (let ((f1331213434
                               (lambda (a1321413435)
                                 (let ((f1331113436
                                        (lambda (a1321513437)
                                          (foldl
                                           kont13310
                                           fun
                                           a1321413435
                                           a1321513437))))
                                   (cdr f1331113436 lst)))))
                          (fun f1331213434 a1321313433 acc)))))
                 (car f1331313432 lst))))))
      (null? f1331413430 lst)))
  (define (reverse-helper kont13315 lst lst2)
    (let ((f1331913438
           (lambda (a1321613439)
             (if a1321613439
               (kont13315 lst2)
               (let ((f1331813440
                      (lambda (a1321713441)
                        (let ((f1331713442
                               (lambda (a1321813443)
                                 (let ((f1331613444
                                        (lambda (a1321913445)
                                          (reverse-helper
                                           kont13315
                                           a1321713441
                                           a1321913445))))
                                   (cons f1331613444 a1321813443 lst2)))))
                          (car f1331713442 lst)))))
                 (cdr f1331813440 lst))))))
      (null? f1331913438 lst)))
  (define (reverse kont13320 lst)
    (let ((f1332113446
           (lambda (a1322013447) (reverse-helper kont13320 lst a1322013447))))
      (list f1332113446)))
  (define (take-helper kont13322 lst n lst2)
    (let ((a1322113448 '0))
      (let ((f1332813449
             (lambda (a1322213450)
               (if a1322213450
                 (let ((f1332313451
                        (lambda (x1322313452) (kont13322 x1322313452))))
                   (reverse f1332313451 lst2))
                 (let ((f1332713453
                        (lambda (a1322413454)
                          (let ((a1322513455 '1))
                            (let ((f1332613456
                                   (lambda (a1322613457)
                                     (let ((f1332513458
                                            (lambda (a1322713459)
                                              (let ((f1332413460
                                                     (lambda (a1322813461)
                                                       (take-helper
                                                        kont13322
                                                        a1322413454
                                                        a1322613457
                                                        a1322813461))))
                                                (cons
                                                 f1332413460
                                                 a1322713459
                                                 lst2)))))
                                       (car f1332513458 lst)))))
                              (- f1332613456 n a1322513455))))))
                   (cdr f1332713453 lst))))))
        (= f1332813449 n a1322113448))))
  (define (take kont13329 lst n)
    (let ((f1333013462
           (lambda (a1322913463) (take-helper kont13329 lst n a1322913463))))
      (list f1333013462)))
  (define (length kont13331 lst)
    (let ((f1333413464
           (lambda (a1323013465)
             (if a1323013465
               (let ((x1323113466 '0)) (kont13331 x1323113466))
               (let ((a1323213467 '1))
                 (let ((f1333313468
                        (lambda (a1323313469)
                          (let ((f1333213470
                                 (lambda (a1323413471)
                                   (+ kont13331 a1323213467 a1323413471))))
                            (length f1333213470 a1323313469)))))
                   (cdr f1333313468 lst)))))))
      (null? f1333413464 lst)))
  (define (map kont13335 proc lst)
    (let ((f1334113472
           (lambda (a1323513473)
             (if a1323513473
               (let ((f1333613474
                      (lambda (x1323613475) (kont13335 x1323613475))))
                 (list f1333613474))
               (let ((f1334013476
                      (lambda (a1323713477)
                        (let ((f1333913478
                               (lambda (a1323813479)
                                 (let ((f1333813480
                                        (lambda (a1323913481)
                                          (let ((f1333713482
                                                 (lambda (a1324013483)
                                                   (cons
                                                    kont13335
                                                    a1323813479
                                                    a1324013483))))
                                            (map
                                             f1333713482
                                             proc
                                             a1323913481)))))
                                   (cdr f1333813480 lst)))))
                          (proc f1333913478 a1323713477)))))
                 (car f1334013476 lst))))))
      (null? f1334113472 lst)))
  (define (filter kont13342 op lst)
    (let ((f1335013484
           (lambda (a1324113485)
             (if a1324113485
               (let ((f1334313486
                      (lambda (x1324213487) (kont13342 x1324213487))))
                 (list f1334313486))
               (let ((f1334913488
                      (lambda (a1324313489)
                        (let ((f1334813490
                               (lambda (a1324413491)
                                 (if a1324413491
                                   (let ((f1334613492
                                          (lambda (a1324513493)
                                            (let ((f1334513494
                                                   (lambda (a1324613495)
                                                     (let ((f1334413496
                                                            (lambda (a1324713497)
                                                              (cons
                                                               kont13342
                                                               a1324513493
                                                               a1324713497))))
                                                       (filter
                                                        f1334413496
                                                        op
                                                        a1324613495)))))
                                              (cdr f1334513494 lst)))))
                                     (car f1334613492 lst))
                                   (let ((f1334713498
                                          (lambda (a1324813499)
                                            (filter
                                             kont13342
                                             op
                                             a1324813499))))
                                     (cdr f1334713498 lst))))))
                          (op f1334813490 a1324313489)))))
                 (car f1334913488 lst))))))
      (null? f1335013484 lst)))
  (define (drop kont13351 lst n)
    (let ((a1324913500 '0))
      (let ((f1335413501
             (lambda (a1325013502)
               (if a1325013502
                 (kont13351 lst)
                 (let ((f1335313503
                        (lambda (a1325113504)
                          (let ((a1325213505 '1))
                            (let ((f1335213506
                                   (lambda (a1325313507)
                                     (drop
                                      kont13351
                                      a1325113504
                                      a1325313507))))
                              (- f1335213506 n a1325213505))))))
                   (cdr f1335313503 lst))))))
        (= f1335413501 n a1324913500))))
  (define (foldr kont13355 proc acc lst)
    (let ((f1335913508
           (lambda (a1325413509)
             (if a1325413509
               (kont13355 acc)
               (let ((f1335813510
                      (lambda (a1325513511)
                        (let ((f1335713512
                               (lambda (a1325613513)
                                 (let ((f1335613514
                                        (lambda (a1325713515)
                                          (proc
                                           kont13355
                                           a1325513511
                                           a1325713515))))
                                   (foldr f1335613514 proc acc a1325613513)))))
                          (cdr f1335713512 lst)))))
                 (car f1335813510 lst))))))
      (null? f1335913508 lst)))
  (define (append kont13360 lst1 lst2)
    (let ((f1336413516
           (lambda (a1325813517)
             (if a1325813517
               (kont13360 lst2)
               (let ((f1336313518
                      (lambda (a1325913519)
                        (let ((f1336213520
                               (lambda (a1326013521)
                                 (let ((f1336113522
                                        (lambda (a1326113523)
                                          (cons
                                           kont13360
                                           a1325913519
                                           a1326113523))))
                                   (append f1336113522 a1326013521 lst2)))))
                          (cdr f1336213520 lst1)))))
                 (car f1336313518 lst1))))))
      (null? f1336413516 lst1)))
  (define (hash . lst)
    (let ((kont1336513524 (prim car lst)))
      (let ((lst13525 (prim cdr lst)))
        (let ((x1326213526 (apply-prim hash lst13525)))
          (kont1336513524 x1326213526)))))
  (define (hash-ref kont13367 h k)
    (let ((x1326313527 (prim hash-ref h k))) (kont13367 x1326313527)))
  (define (hash-set kont13368 h k v)
    (let ((x1326413528 (prim hash-set h k v))) (kont13368 x1326413528)))
  (define (hash-has-key? kont13369 h k)
    (let ((x1326513529 (prim hash-has-key? h k))) (kont13369 x1326513529)))
  (define (hash-count kont13370 h)
    (let ((x1326613530 (prim hash-count h))) (kont13370 x1326613530)))
  (define (fact kont13371 n)
    (let ((a1326713531 '0))
      (let ((f1337413532
             (lambda (a1326813533)
               (if a1326813533
                 (let ((x1326913534 '1)) (kont13371 x1326913534))
                 (let ((a1327013535 '1))
                   (let ((f1337313536
                          (lambda (a1327113537)
                            (let ((f1337213538
                                   (lambda (a1327213539)
                                     (* kont13371 n a1327213539))))
                              (fact f1337213538 a1327113537)))))
                     (- f1337313536 n a1327013535)))))))
        (= f1337413532 a1326713531 n))))
  (define (brouhaha_main kont13375)
    (let ((a1327313540 '5)) (fact kont13375 a1327313540))))
