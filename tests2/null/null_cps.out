'((define (+ . lst)
    (let ((kont4743047530 (prim car lst)))
      (let ((lst47531 (prim cdr lst)))
        (let ((x4734547532 (apply-prim + lst47531)))
          (kont4743047530 x4734547532)))))
  (define (- . lst)
    (let ((kont4743247533 (prim car lst)))
      (let ((lst47534 (prim cdr lst)))
        (let ((x4734647535 (apply-prim - lst47534)))
          (kont4743247533 x4734647535)))))
  (define (* . lst)
    (let ((kont4743447536 (prim car lst)))
      (let ((lst47537 (prim cdr lst)))
        (let ((x4734747538 (apply-prim * lst47537)))
          (kont4743447536 x4734747538)))))
  (define (modulo kont47436 a b)
    (let ((x4734847539 (prim modulo a b))) (kont47436 x4734847539)))
  (define (/ . lst)
    (let ((kont4743747540 (prim car lst)))
      (let ((lst47541 (prim cdr lst)))
        (let ((x4734947542 (apply-prim / lst47541)))
          (kont4743747540 x4734947542)))))
  (define (= . lst)
    (let ((kont4743947543 (prim car lst)))
      (let ((lst47544 (prim cdr lst)))
        (let ((x4735047545 (apply-prim = lst47544)))
          (kont4743947543 x4735047545)))))
  (define (> . lst)
    (let ((kont4744147546 (prim car lst)))
      (let ((lst47547 (prim cdr lst)))
        (let ((x4735147548 (apply-prim > lst47547)))
          (kont4744147546 x4735147548)))))
  (define (< . lst)
    (let ((kont4744347549 (prim car lst)))
      (let ((lst47550 (prim cdr lst)))
        (let ((x4735247551 (apply-prim < lst47550)))
          (kont4744347549 x4735247551)))))
  (define (<= . lst)
    (let ((kont4744547552 (prim car lst)))
      (let ((lst47553 (prim cdr lst)))
        (let ((x4735347554 (apply-prim <= lst47553)))
          (kont4744547552 x4735347554)))))
  (define (>= . lst)
    (let ((kont4744747555 (prim car lst)))
      (let ((lst47556 (prim cdr lst)))
        (let ((x4735447557 (apply-prim >= lst47556)))
          (kont4744747555 x4735447557)))))
  (define (null? kont47449 x)
    (let ((x4735547558 (prim null? x))) (kont47449 x4735547558)))
  (define (equal? kont47450 x y)
    (let ((x4735647559 (prim equal? x y))) (kont47450 x4735647559)))
  (define (eq? kont47451 x y)
    (let ((x4735747560 (prim eq? x y))) (kont47451 x4735747560)))
  (define (cons kont47452 a b)
    (let ((x4735847561 (prim cons a b))) (kont47452 x4735847561)))
  (define (car kont47453 lst)
    (let ((x4735947562 (prim car lst))) (kont47453 x4735947562)))
  (define (cdr kont47454 lst)
    (let ((x4736047563 (prim cdr lst))) (kont47454 x4736047563)))
  (define (even? kont47455 x)
    (let ((a4736147564 '0))
      (let ((a4736247565 '2))
        (let ((f4745647566
               (lambda (a4736347567)
                 (equal? kont47455 a4736147564 a4736347567))))
          (modulo f4745647566 x a4736247565)))))
  (define (odd? kont47457 x)
    (let ((a4736447568 '1))
      (let ((a4736547569 '2))
        (let ((f4745847570
               (lambda (a4736647571)
                 (equal? kont47457 a4736447568 a4736647571))))
          (modulo f4745847570 x a4736547569)))))
  (define (list . x)
    (let ((kont4745947572 (prim car x)))
      (let ((x47573 (prim cdr x))) (kont4745947572 x47573))))
  (define (member? kont47461 x lst)
    (let ((f4746547574
           (lambda (a4736747575)
             (if a4736747575
               (let ((x4736847576 '#f)) (kont47461 x4736847576))
               (let ((f4746447577
                      (lambda (a4736947578)
                        (let ((f4746347579
                               (lambda (a4737047580)
                                 (if a4737047580
                                   (let ((x4737147581 '#t))
                                     (kont47461 x4737147581))
                                   (let ((f4746247582
                                          (lambda (a4737247583)
                                            (member?
                                             kont47461
                                             x
                                             a4737247583))))
                                     (cdr f4746247582 lst))))))
                          (equal? f4746347579 a4736947578 x)))))
                 (car f4746447577 lst))))))
      (null? f4746547574 lst)))
  (define (foldl kont47466 fun acc lst)
    (let ((f4747047584
           (lambda (a4737347585)
             (if a4737347585
               (kont47466 acc)
               (let ((f4746947586
                      (lambda (a4737447587)
                        (let ((f4746847588
                               (lambda (a4737547589)
                                 (let ((f4746747590
                                        (lambda (a4737647591)
                                          (foldl
                                           kont47466
                                           fun
                                           a4737547589
                                           a4737647591))))
                                   (cdr f4746747590 lst)))))
                          (fun f4746847588 a4737447587 acc)))))
                 (car f4746947586 lst))))))
      (null? f4747047584 lst)))
  (define (reverse-helper kont47471 lst lst2)
    (let ((f4747547592
           (lambda (a4737747593)
             (if a4737747593
               (kont47471 lst2)
               (let ((f4747447594
                      (lambda (a4737847595)
                        (let ((f4747347596
                               (lambda (a4737947597)
                                 (let ((f4747247598
                                        (lambda (a4738047599)
                                          (reverse-helper
                                           kont47471
                                           a4737847595
                                           a4738047599))))
                                   (cons f4747247598 a4737947597 lst2)))))
                          (car f4747347596 lst)))))
                 (cdr f4747447594 lst))))))
      (null? f4747547592 lst)))
  (define (reverse kont47476 lst)
    (let ((f4747747600
           (lambda (a4738147601) (reverse-helper kont47476 lst a4738147601))))
      (list f4747747600)))
  (define (take-helper kont47478 lst n lst2)
    (let ((a4738247602 '0))
      (let ((f4748447603
             (lambda (a4738347604)
               (if a4738347604
                 (let ((f4747947605
                        (lambda (x4738447606) (kont47478 x4738447606))))
                   (reverse f4747947605 lst2))
                 (let ((f4748347607
                        (lambda (a4738547608)
                          (let ((a4738647609 '1))
                            (let ((f4748247610
                                   (lambda (a4738747611)
                                     (let ((f4748147612
                                            (lambda (a4738847613)
                                              (let ((f4748047614
                                                     (lambda (a4738947615)
                                                       (take-helper
                                                        kont47478
                                                        a4738547608
                                                        a4738747611
                                                        a4738947615))))
                                                (cons
                                                 f4748047614
                                                 a4738847613
                                                 lst2)))))
                                       (car f4748147612 lst)))))
                              (- f4748247610 n a4738647609))))))
                   (cdr f4748347607 lst))))))
        (= f4748447603 n a4738247602))))
  (define (take kont47485 lst n)
    (let ((f4748647616
           (lambda (a4739047617) (take-helper kont47485 lst n a4739047617))))
      (list f4748647616)))
  (define (length kont47487 lst)
    (let ((f4749047618
           (lambda (a4739147619)
             (if a4739147619
               (let ((x4739247620 '0)) (kont47487 x4739247620))
               (let ((a4739347621 '1))
                 (let ((f4748947622
                        (lambda (a4739447623)
                          (let ((f4748847624
                                 (lambda (a4739547625)
                                   (+ kont47487 a4739347621 a4739547625))))
                            (length f4748847624 a4739447623)))))
                   (cdr f4748947622 lst)))))))
      (null? f4749047618 lst)))
  (define (map kont47491 proc lst)
    (let ((f4749747626
           (lambda (a4739647627)
             (if a4739647627
               (let ((f4749247628
                      (lambda (x4739747629) (kont47491 x4739747629))))
                 (list f4749247628))
               (let ((f4749647630
                      (lambda (a4739847631)
                        (let ((f4749547632
                               (lambda (a4739947633)
                                 (let ((f4749447634
                                        (lambda (a4740047635)
                                          (let ((f4749347636
                                                 (lambda (a4740147637)
                                                   (cons
                                                    kont47491
                                                    a4739947633
                                                    a4740147637))))
                                            (map
                                             f4749347636
                                             proc
                                             a4740047635)))))
                                   (cdr f4749447634 lst)))))
                          (proc f4749547632 a4739847631)))))
                 (car f4749647630 lst))))))
      (null? f4749747626 lst)))
  (define (filter kont47498 op lst)
    (let ((f4750647638
           (lambda (a4740247639)
             (if a4740247639
               (let ((f4749947640
                      (lambda (x4740347641) (kont47498 x4740347641))))
                 (list f4749947640))
               (let ((f4750547642
                      (lambda (a4740447643)
                        (let ((f4750447644
                               (lambda (a4740547645)
                                 (if a4740547645
                                   (let ((f4750247646
                                          (lambda (a4740647647)
                                            (let ((f4750147648
                                                   (lambda (a4740747649)
                                                     (let ((f4750047650
                                                            (lambda (a4740847651)
                                                              (cons
                                                               kont47498
                                                               a4740647647
                                                               a4740847651))))
                                                       (filter
                                                        f4750047650
                                                        op
                                                        a4740747649)))))
                                              (cdr f4750147648 lst)))))
                                     (car f4750247646 lst))
                                   (let ((f4750347652
                                          (lambda (a4740947653)
                                            (filter
                                             kont47498
                                             op
                                             a4740947653))))
                                     (cdr f4750347652 lst))))))
                          (op f4750447644 a4740447643)))))
                 (car f4750547642 lst))))))
      (null? f4750647638 lst)))
  (define (drop kont47507 lst n)
    (let ((a4741047654 '0))
      (let ((f4751047655
             (lambda (a4741147656)
               (if a4741147656
                 (kont47507 lst)
                 (let ((f4750947657
                        (lambda (a4741247658)
                          (let ((a4741347659 '1))
                            (let ((f4750847660
                                   (lambda (a4741447661)
                                     (drop
                                      kont47507
                                      a4741247658
                                      a4741447661))))
                              (- f4750847660 n a4741347659))))))
                   (cdr f4750947657 lst))))))
        (= f4751047655 n a4741047654))))
  (define (foldr kont47511 proc acc lst)
    (let ((f4751547662
           (lambda (a4741547663)
             (if a4741547663
               (kont47511 acc)
               (let ((f4751447664
                      (lambda (a4741647665)
                        (let ((f4751347666
                               (lambda (a4741747667)
                                 (let ((f4751247668
                                        (lambda (a4741847669)
                                          (proc
                                           kont47511
                                           a4741647665
                                           a4741847669))))
                                   (foldr f4751247668 proc acc a4741747667)))))
                          (cdr f4751347666 lst)))))
                 (car f4751447664 lst))))))
      (null? f4751547662 lst)))
  (define (append kont47516 lst1 lst2)
    (let ((f4752047670
           (lambda (a4741947671)
             (if a4741947671
               (kont47516 lst2)
               (let ((f4751947672
                      (lambda (a4742047673)
                        (let ((f4751847674
                               (lambda (a4742147675)
                                 (let ((f4751747676
                                        (lambda (a4742247677)
                                          (cons
                                           kont47516
                                           a4742047673
                                           a4742247677))))
                                   (append f4751747676 a4742147675 lst2)))))
                          (cdr f4751847674 lst1)))))
                 (car f4751947672 lst1))))))
      (null? f4752047670 lst1)))
  (define (hash . lst)
    (let ((kont4752147678 (prim car lst)))
      (let ((lst47679 (prim cdr lst)))
        (let ((x4742347680 (apply-prim hash lst47679)))
          (kont4752147678 x4742347680)))))
  (define (hash-ref kont47523 h k)
    (let ((x4742447681 (prim hash-ref h k))) (kont47523 x4742447681)))
  (define (hash-set kont47524 h k v)
    (let ((x4742547682 (prim hash-set h k v))) (kont47524 x4742547682)))
  (define (hash-has-key? kont47525 h k)
    (let ((x4742647683 (prim hash-has-key? h k))) (kont47525 x4742647683)))
  (define (hash-count kont47526 h)
    (let ((x4742747684 (prim hash-count h))) (kont47526 x4742747684)))
  (define (call kont47527)
    (let ((a4742847685 '1)) (null? kont47527 a4742847685)))
  (define (brouhaha_main kont47528)
    (let ((f4752947686 (lambda (x4742947687) (kont47528 x4742947687))))
      (call f4752947686))))
