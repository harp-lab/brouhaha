'((define (+ . lst)
    (let ((kont5096651066 (prim car lst)))
      (let ((lst51067 (prim cdr lst)))
        (let ((x5088151068 (apply-prim + lst51067)))
          (kont5096651066 x5088151068)))))
  (define (- . lst)
    (let ((kont5096851069 (prim car lst)))
      (let ((lst51070 (prim cdr lst)))
        (let ((x5088251071 (apply-prim - lst51070)))
          (kont5096851069 x5088251071)))))
  (define (* . lst)
    (let ((kont5097051072 (prim car lst)))
      (let ((lst51073 (prim cdr lst)))
        (let ((x5088351074 (apply-prim * lst51073)))
          (kont5097051072 x5088351074)))))
  (define (modulo kont50972 a b)
    (let ((x5088451075 (prim modulo a b))) (kont50972 x5088451075)))
  (define (/ . lst)
    (let ((kont5097351076 (prim car lst)))
      (let ((lst51077 (prim cdr lst)))
        (let ((x5088551078 (apply-prim / lst51077)))
          (kont5097351076 x5088551078)))))
  (define (= . lst)
    (let ((kont5097551079 (prim car lst)))
      (let ((lst51080 (prim cdr lst)))
        (let ((x5088651081 (apply-prim = lst51080)))
          (kont5097551079 x5088651081)))))
  (define (> . lst)
    (let ((kont5097751082 (prim car lst)))
      (let ((lst51083 (prim cdr lst)))
        (let ((x5088751084 (apply-prim > lst51083)))
          (kont5097751082 x5088751084)))))
  (define (< . lst)
    (let ((kont5097951085 (prim car lst)))
      (let ((lst51086 (prim cdr lst)))
        (let ((x5088851087 (apply-prim < lst51086)))
          (kont5097951085 x5088851087)))))
  (define (<= . lst)
    (let ((kont5098151088 (prim car lst)))
      (let ((lst51089 (prim cdr lst)))
        (let ((x5088951090 (apply-prim <= lst51089)))
          (kont5098151088 x5088951090)))))
  (define (>= . lst)
    (let ((kont5098351091 (prim car lst)))
      (let ((lst51092 (prim cdr lst)))
        (let ((x5089051093 (apply-prim >= lst51092)))
          (kont5098351091 x5089051093)))))
  (define (null? kont50985 x)
    (let ((x5089151094 (prim null? x))) (kont50985 x5089151094)))
  (define (equal? kont50986 x y)
    (let ((x5089251095 (prim equal? x y))) (kont50986 x5089251095)))
  (define (eq? kont50987 x y)
    (let ((x5089351096 (prim eq? x y))) (kont50987 x5089351096)))
  (define (cons kont50988 a b)
    (let ((x5089451097 (prim cons a b))) (kont50988 x5089451097)))
  (define (car kont50989 lst)
    (let ((x5089551098 (prim car lst))) (kont50989 x5089551098)))
  (define (cdr kont50990 lst)
    (let ((x5089651099 (prim cdr lst))) (kont50990 x5089651099)))
  (define (even? kont50991 x)
    (let ((a5089751100 '0))
      (let ((a5089851101 '2))
        (let ((f5099251102
               (lambda (a5089951103)
                 (equal? kont50991 a5089751100 a5089951103))))
          (modulo f5099251102 x a5089851101)))))
  (define (odd? kont50993 x)
    (let ((a5090051104 '1))
      (let ((a5090151105 '2))
        (let ((f5099451106
               (lambda (a5090251107)
                 (equal? kont50993 a5090051104 a5090251107))))
          (modulo f5099451106 x a5090151105)))))
  (define (list . x)
    (let ((kont5099551108 (prim car x)))
      (let ((x51109 (prim cdr x))) (kont5099551108 x51109))))
  (define (member? kont50997 x lst)
    (let ((f5100151110
           (lambda (a5090351111)
             (if a5090351111
               (let ((x5090451112 '#f)) (kont50997 x5090451112))
               (let ((f5100051113
                      (lambda (a5090551114)
                        (let ((f5099951115
                               (lambda (a5090651116)
                                 (if a5090651116
                                   (let ((x5090751117 '#t))
                                     (kont50997 x5090751117))
                                   (let ((f5099851118
                                          (lambda (a5090851119)
                                            (member?
                                             kont50997
                                             x
                                             a5090851119))))
                                     (cdr f5099851118 lst))))))
                          (equal? f5099951115 a5090551114 x)))))
                 (car f5100051113 lst))))))
      (null? f5100151110 lst)))
  (define (foldl kont51002 fun acc lst)
    (let ((f5100651120
           (lambda (a5090951121)
             (if a5090951121
               (kont51002 acc)
               (let ((f5100551122
                      (lambda (a5091051123)
                        (let ((f5100451124
                               (lambda (a5091151125)
                                 (let ((f5100351126
                                        (lambda (a5091251127)
                                          (foldl
                                           kont51002
                                           fun
                                           a5091151125
                                           a5091251127))))
                                   (cdr f5100351126 lst)))))
                          (fun f5100451124 a5091051123 acc)))))
                 (car f5100551122 lst))))))
      (null? f5100651120 lst)))
  (define (reverse-helper kont51007 lst lst2)
    (let ((f5101151128
           (lambda (a5091351129)
             (if a5091351129
               (kont51007 lst2)
               (let ((f5101051130
                      (lambda (a5091451131)
                        (let ((f5100951132
                               (lambda (a5091551133)
                                 (let ((f5100851134
                                        (lambda (a5091651135)
                                          (reverse-helper
                                           kont51007
                                           a5091451131
                                           a5091651135))))
                                   (cons f5100851134 a5091551133 lst2)))))
                          (car f5100951132 lst)))))
                 (cdr f5101051130 lst))))))
      (null? f5101151128 lst)))
  (define (reverse kont51012 lst)
    (let ((f5101351136
           (lambda (a5091751137) (reverse-helper kont51012 lst a5091751137))))
      (list f5101351136)))
  (define (take-helper kont51014 lst n lst2)
    (let ((a5091851138 '0))
      (let ((f5102051139
             (lambda (a5091951140)
               (if a5091951140
                 (let ((f5101551141
                        (lambda (x5092051142) (kont51014 x5092051142))))
                   (reverse f5101551141 lst2))
                 (let ((f5101951143
                        (lambda (a5092151144)
                          (let ((a5092251145 '1))
                            (let ((f5101851146
                                   (lambda (a5092351147)
                                     (let ((f5101751148
                                            (lambda (a5092451149)
                                              (let ((f5101651150
                                                     (lambda (a5092551151)
                                                       (take-helper
                                                        kont51014
                                                        a5092151144
                                                        a5092351147
                                                        a5092551151))))
                                                (cons
                                                 f5101651150
                                                 a5092451149
                                                 lst2)))))
                                       (car f5101751148 lst)))))
                              (- f5101851146 n a5092251145))))))
                   (cdr f5101951143 lst))))))
        (= f5102051139 n a5091851138))))
  (define (take kont51021 lst n)
    (let ((f5102251152
           (lambda (a5092651153) (take-helper kont51021 lst n a5092651153))))
      (list f5102251152)))
  (define (length kont51023 lst)
    (let ((f5102651154
           (lambda (a5092751155)
             (if a5092751155
               (let ((x5092851156 '0)) (kont51023 x5092851156))
               (let ((a5092951157 '1))
                 (let ((f5102551158
                        (lambda (a5093051159)
                          (let ((f5102451160
                                 (lambda (a5093151161)
                                   (+ kont51023 a5092951157 a5093151161))))
                            (length f5102451160 a5093051159)))))
                   (cdr f5102551158 lst)))))))
      (null? f5102651154 lst)))
  (define (map kont51027 proc lst)
    (let ((f5103351162
           (lambda (a5093251163)
             (if a5093251163
               (let ((f5102851164
                      (lambda (x5093351165) (kont51027 x5093351165))))
                 (list f5102851164))
               (let ((f5103251166
                      (lambda (a5093451167)
                        (let ((f5103151168
                               (lambda (a5093551169)
                                 (let ((f5103051170
                                        (lambda (a5093651171)
                                          (let ((f5102951172
                                                 (lambda (a5093751173)
                                                   (cons
                                                    kont51027
                                                    a5093551169
                                                    a5093751173))))
                                            (map
                                             f5102951172
                                             proc
                                             a5093651171)))))
                                   (cdr f5103051170 lst)))))
                          (proc f5103151168 a5093451167)))))
                 (car f5103251166 lst))))))
      (null? f5103351162 lst)))
  (define (filter kont51034 op lst)
    (let ((f5104251174
           (lambda (a5093851175)
             (if a5093851175
               (let ((f5103551176
                      (lambda (x5093951177) (kont51034 x5093951177))))
                 (list f5103551176))
               (let ((f5104151178
                      (lambda (a5094051179)
                        (let ((f5104051180
                               (lambda (a5094151181)
                                 (if a5094151181
                                   (let ((f5103851182
                                          (lambda (a5094251183)
                                            (let ((f5103751184
                                                   (lambda (a5094351185)
                                                     (let ((f5103651186
                                                            (lambda (a5094451187)
                                                              (cons
                                                               kont51034
                                                               a5094251183
                                                               a5094451187))))
                                                       (filter
                                                        f5103651186
                                                        op
                                                        a5094351185)))))
                                              (cdr f5103751184 lst)))))
                                     (car f5103851182 lst))
                                   (let ((f5103951188
                                          (lambda (a5094551189)
                                            (filter
                                             kont51034
                                             op
                                             a5094551189))))
                                     (cdr f5103951188 lst))))))
                          (op f5104051180 a5094051179)))))
                 (car f5104151178 lst))))))
      (null? f5104251174 lst)))
  (define (drop kont51043 lst n)
    (let ((a5094651190 '0))
      (let ((f5104651191
             (lambda (a5094751192)
               (if a5094751192
                 (kont51043 lst)
                 (let ((f5104551193
                        (lambda (a5094851194)
                          (let ((a5094951195 '1))
                            (let ((f5104451196
                                   (lambda (a5095051197)
                                     (drop
                                      kont51043
                                      a5094851194
                                      a5095051197))))
                              (- f5104451196 n a5094951195))))))
                   (cdr f5104551193 lst))))))
        (= f5104651191 n a5094651190))))
  (define (foldr kont51047 proc acc lst)
    (let ((f5105151198
           (lambda (a5095151199)
             (if a5095151199
               (kont51047 acc)
               (let ((f5105051200
                      (lambda (a5095251201)
                        (let ((f5104951202
                               (lambda (a5095351203)
                                 (let ((f5104851204
                                        (lambda (a5095451205)
                                          (proc
                                           kont51047
                                           a5095251201
                                           a5095451205))))
                                   (foldr f5104851204 proc acc a5095351203)))))
                          (cdr f5104951202 lst)))))
                 (car f5105051200 lst))))))
      (null? f5105151198 lst)))
  (define (append kont51052 lst1 lst2)
    (let ((f5105651206
           (lambda (a5095551207)
             (if a5095551207
               (kont51052 lst2)
               (let ((f5105551208
                      (lambda (a5095651209)
                        (let ((f5105451210
                               (lambda (a5095751211)
                                 (let ((f5105351212
                                        (lambda (a5095851213)
                                          (cons
                                           kont51052
                                           a5095651209
                                           a5095851213))))
                                   (append f5105351212 a5095751211 lst2)))))
                          (cdr f5105451210 lst1)))))
                 (car f5105551208 lst1))))))
      (null? f5105651206 lst1)))
  (define (hash . lst)
    (let ((kont5105751214 (prim car lst)))
      (let ((lst51215 (prim cdr lst)))
        (let ((x5095951216 (apply-prim hash lst51215)))
          (kont5105751214 x5095951216)))))
  (define (hash-ref kont51059 h k)
    (let ((x5096051217 (prim hash-ref h k))) (kont51059 x5096051217)))
  (define (hash-set kont51060 h k v)
    (let ((x5096151218 (prim hash-set h k v))) (kont51060 x5096151218)))
  (define (hash-has-key? kont51061 h k)
    (let ((x5096251219 (prim hash-has-key? h k))) (kont51061 x5096251219)))
  (define (hash-count kont51062 h)
    (let ((x5096351220 (prim hash-count h))) (kont51062 x5096351220)))
  (define (call kont51063)
    (let ((a5096451221 '1)) (null? kont51063 a5096451221)))
  (define (brouhaha_main kont51064)
    (let ((f5106551222 (lambda (x5096551223) (kont51064 x5096551223))))
      (call f5106551222))))
