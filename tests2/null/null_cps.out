'((define (+ . lst)
    (let ((kont4918249282 (prim car lst)))
      (let ((lst49283 (prim cdr lst)))
        (let ((x4909749284 (apply-prim + lst49283)))
          (kont4918249282 x4909749284)))))
  (define (- . lst)
    (let ((kont4918449285 (prim car lst)))
      (let ((lst49286 (prim cdr lst)))
        (let ((x4909849287 (apply-prim - lst49286)))
          (kont4918449285 x4909849287)))))
  (define (* . lst)
    (let ((kont4918649288 (prim car lst)))
      (let ((lst49289 (prim cdr lst)))
        (let ((x4909949290 (apply-prim * lst49289)))
          (kont4918649288 x4909949290)))))
  (define (modulo kont49188 a b)
    (let ((x4910049291 (prim modulo a b))) (kont49188 x4910049291)))
  (define (/ . lst)
    (let ((kont4918949292 (prim car lst)))
      (let ((lst49293 (prim cdr lst)))
        (let ((x4910149294 (apply-prim / lst49293)))
          (kont4918949292 x4910149294)))))
  (define (= . lst)
    (let ((kont4919149295 (prim car lst)))
      (let ((lst49296 (prim cdr lst)))
        (let ((x4910249297 (apply-prim = lst49296)))
          (kont4919149295 x4910249297)))))
  (define (> . lst)
    (let ((kont4919349298 (prim car lst)))
      (let ((lst49299 (prim cdr lst)))
        (let ((x4910349300 (apply-prim > lst49299)))
          (kont4919349298 x4910349300)))))
  (define (< . lst)
    (let ((kont4919549301 (prim car lst)))
      (let ((lst49302 (prim cdr lst)))
        (let ((x4910449303 (apply-prim < lst49302)))
          (kont4919549301 x4910449303)))))
  (define (<= . lst)
    (let ((kont4919749304 (prim car lst)))
      (let ((lst49305 (prim cdr lst)))
        (let ((x4910549306 (apply-prim <= lst49305)))
          (kont4919749304 x4910549306)))))
  (define (>= . lst)
    (let ((kont4919949307 (prim car lst)))
      (let ((lst49308 (prim cdr lst)))
        (let ((x4910649309 (apply-prim >= lst49308)))
          (kont4919949307 x4910649309)))))
  (define (null? kont49201 x)
    (let ((x4910749310 (prim null? x))) (kont49201 x4910749310)))
  (define (equal? kont49202 x y)
    (let ((x4910849311 (prim equal? x y))) (kont49202 x4910849311)))
  (define (eq? kont49203 x y)
    (let ((x4910949312 (prim eq? x y))) (kont49203 x4910949312)))
  (define (cons kont49204 a b)
    (let ((x4911049313 (prim cons a b))) (kont49204 x4911049313)))
  (define (car kont49205 lst)
    (let ((x4911149314 (prim car lst))) (kont49205 x4911149314)))
  (define (cdr kont49206 lst)
    (let ((x4911249315 (prim cdr lst))) (kont49206 x4911249315)))
  (define (even? kont49207 x)
    (let ((a4911349316 '0))
      (let ((a4911449317 '2))
        (let ((f4920849318
               (lambda (a4911549319)
                 (equal? kont49207 a4911349316 a4911549319))))
          (modulo f4920849318 x a4911449317)))))
  (define (odd? kont49209 x)
    (let ((a4911649320 '1))
      (let ((a4911749321 '2))
        (let ((f4921049322
               (lambda (a4911849323)
                 (equal? kont49209 a4911649320 a4911849323))))
          (modulo f4921049322 x a4911749321)))))
  (define (list . x)
    (let ((kont4921149324 (prim car x)))
      (let ((x49325 (prim cdr x))) (kont4921149324 x49325))))
  (define (member? kont49213 x lst)
    (let ((f4921749326
           (lambda (a4911949327)
             (if a4911949327
               (let ((x4912049328 '#f)) (kont49213 x4912049328))
               (let ((f4921649329
                      (lambda (a4912149330)
                        (let ((f4921549331
                               (lambda (a4912249332)
                                 (if a4912249332
                                   (let ((x4912349333 '#t))
                                     (kont49213 x4912349333))
                                   (let ((f4921449334
                                          (lambda (a4912449335)
                                            (member?
                                             kont49213
                                             x
                                             a4912449335))))
                                     (cdr f4921449334 lst))))))
                          (equal? f4921549331 a4912149330 x)))))
                 (car f4921649329 lst))))))
      (null? f4921749326 lst)))
  (define (foldl kont49218 fun acc lst)
    (let ((f4922249336
           (lambda (a4912549337)
             (if a4912549337
               (kont49218 acc)
               (let ((f4922149338
                      (lambda (a4912649339)
                        (let ((f4922049340
                               (lambda (a4912749341)
                                 (let ((f4921949342
                                        (lambda (a4912849343)
                                          (foldl
                                           kont49218
                                           fun
                                           a4912749341
                                           a4912849343))))
                                   (cdr f4921949342 lst)))))
                          (fun f4922049340 a4912649339 acc)))))
                 (car f4922149338 lst))))))
      (null? f4922249336 lst)))
  (define (reverse-helper kont49223 lst lst2)
    (let ((f4922749344
           (lambda (a4912949345)
             (if a4912949345
               (kont49223 lst2)
               (let ((f4922649346
                      (lambda (a4913049347)
                        (let ((f4922549348
                               (lambda (a4913149349)
                                 (let ((f4922449350
                                        (lambda (a4913249351)
                                          (reverse-helper
                                           kont49223
                                           a4913049347
                                           a4913249351))))
                                   (cons f4922449350 a4913149349 lst2)))))
                          (car f4922549348 lst)))))
                 (cdr f4922649346 lst))))))
      (null? f4922749344 lst)))
  (define (reverse kont49228 lst)
    (let ((f4922949352
           (lambda (a4913349353) (reverse-helper kont49228 lst a4913349353))))
      (list f4922949352)))
  (define (take-helper kont49230 lst n lst2)
    (let ((a4913449354 '0))
      (let ((f4923649355
             (lambda (a4913549356)
               (if a4913549356
                 (let ((f4923149357
                        (lambda (x4913649358) (kont49230 x4913649358))))
                   (reverse f4923149357 lst2))
                 (let ((f4923549359
                        (lambda (a4913749360)
                          (let ((a4913849361 '1))
                            (let ((f4923449362
                                   (lambda (a4913949363)
                                     (let ((f4923349364
                                            (lambda (a4914049365)
                                              (let ((f4923249366
                                                     (lambda (a4914149367)
                                                       (take-helper
                                                        kont49230
                                                        a4913749360
                                                        a4913949363
                                                        a4914149367))))
                                                (cons
                                                 f4923249366
                                                 a4914049365
                                                 lst2)))))
                                       (car f4923349364 lst)))))
                              (- f4923449362 n a4913849361))))))
                   (cdr f4923549359 lst))))))
        (= f4923649355 n a4913449354))))
  (define (take kont49237 lst n)
    (let ((f4923849368
           (lambda (a4914249369) (take-helper kont49237 lst n a4914249369))))
      (list f4923849368)))
  (define (length kont49239 lst)
    (let ((f4924249370
           (lambda (a4914349371)
             (if a4914349371
               (let ((x4914449372 '0)) (kont49239 x4914449372))
               (let ((a4914549373 '1))
                 (let ((f4924149374
                        (lambda (a4914649375)
                          (let ((f4924049376
                                 (lambda (a4914749377)
                                   (+ kont49239 a4914549373 a4914749377))))
                            (length f4924049376 a4914649375)))))
                   (cdr f4924149374 lst)))))))
      (null? f4924249370 lst)))
  (define (map kont49243 proc lst)
    (let ((f4924949378
           (lambda (a4914849379)
             (if a4914849379
               (let ((f4924449380
                      (lambda (x4914949381) (kont49243 x4914949381))))
                 (list f4924449380))
               (let ((f4924849382
                      (lambda (a4915049383)
                        (let ((f4924749384
                               (lambda (a4915149385)
                                 (let ((f4924649386
                                        (lambda (a4915249387)
                                          (let ((f4924549388
                                                 (lambda (a4915349389)
                                                   (cons
                                                    kont49243
                                                    a4915149385
                                                    a4915349389))))
                                            (map
                                             f4924549388
                                             proc
                                             a4915249387)))))
                                   (cdr f4924649386 lst)))))
                          (proc f4924749384 a4915049383)))))
                 (car f4924849382 lst))))))
      (null? f4924949378 lst)))
  (define (filter kont49250 op lst)
    (let ((f4925849390
           (lambda (a4915449391)
             (if a4915449391
               (let ((f4925149392
                      (lambda (x4915549393) (kont49250 x4915549393))))
                 (list f4925149392))
               (let ((f4925749394
                      (lambda (a4915649395)
                        (let ((f4925649396
                               (lambda (a4915749397)
                                 (if a4915749397
                                   (let ((f4925449398
                                          (lambda (a4915849399)
                                            (let ((f4925349400
                                                   (lambda (a4915949401)
                                                     (let ((f4925249402
                                                            (lambda (a4916049403)
                                                              (cons
                                                               kont49250
                                                               a4915849399
                                                               a4916049403))))
                                                       (filter
                                                        f4925249402
                                                        op
                                                        a4915949401)))))
                                              (cdr f4925349400 lst)))))
                                     (car f4925449398 lst))
                                   (let ((f4925549404
                                          (lambda (a4916149405)
                                            (filter
                                             kont49250
                                             op
                                             a4916149405))))
                                     (cdr f4925549404 lst))))))
                          (op f4925649396 a4915649395)))))
                 (car f4925749394 lst))))))
      (null? f4925849390 lst)))
  (define (drop kont49259 lst n)
    (let ((a4916249406 '0))
      (let ((f4926249407
             (lambda (a4916349408)
               (if a4916349408
                 (kont49259 lst)
                 (let ((f4926149409
                        (lambda (a4916449410)
                          (let ((a4916549411 '1))
                            (let ((f4926049412
                                   (lambda (a4916649413)
                                     (drop
                                      kont49259
                                      a4916449410
                                      a4916649413))))
                              (- f4926049412 n a4916549411))))))
                   (cdr f4926149409 lst))))))
        (= f4926249407 n a4916249406))))
  (define (foldr kont49263 proc acc lst)
    (let ((f4926749414
           (lambda (a4916749415)
             (if a4916749415
               (kont49263 acc)
               (let ((f4926649416
                      (lambda (a4916849417)
                        (let ((f4926549418
                               (lambda (a4916949419)
                                 (let ((f4926449420
                                        (lambda (a4917049421)
                                          (proc
                                           kont49263
                                           a4916849417
                                           a4917049421))))
                                   (foldr f4926449420 proc acc a4916949419)))))
                          (cdr f4926549418 lst)))))
                 (car f4926649416 lst))))))
      (null? f4926749414 lst)))
  (define (append kont49268 lst1 lst2)
    (let ((f4927249422
           (lambda (a4917149423)
             (if a4917149423
               (kont49268 lst2)
               (let ((f4927149424
                      (lambda (a4917249425)
                        (let ((f4927049426
                               (lambda (a4917349427)
                                 (let ((f4926949428
                                        (lambda (a4917449429)
                                          (cons
                                           kont49268
                                           a4917249425
                                           a4917449429))))
                                   (append f4926949428 a4917349427 lst2)))))
                          (cdr f4927049426 lst1)))))
                 (car f4927149424 lst1))))))
      (null? f4927249422 lst1)))
  (define (hash . lst)
    (let ((kont4927349430 (prim car lst)))
      (let ((lst49431 (prim cdr lst)))
        (let ((x4917549432 (apply-prim hash lst49431)))
          (kont4927349430 x4917549432)))))
  (define (hash-ref kont49275 h k)
    (let ((x4917649433 (prim hash-ref h k))) (kont49275 x4917649433)))
  (define (hash-set kont49276 h k v)
    (let ((x4917749434 (prim hash-set h k v))) (kont49276 x4917749434)))
  (define (hash-has-key? kont49277 h k)
    (let ((x4917849435 (prim hash-has-key? h k))) (kont49277 x4917849435)))
  (define (hash-count kont49278 h)
    (let ((x4917949436 (prim hash-count h))) (kont49278 x4917949436)))
  (define (call kont49279)
    (let ((a4918049437 '1)) (null? kont49279 a4918049437)))
  (define (brouhaha_main kont49280)
    (let ((f4928149438 (lambda (x4918149439) (kont49280 x4918149439))))
      (call f4928149438))))
