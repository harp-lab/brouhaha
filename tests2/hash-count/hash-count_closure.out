'((proc
   (+ _38702 . lst)
   (let ((kont3843638537 (prim car lst)))
     (let ((lst38538 (prim cdr lst)))
       (let ((x3834538539 (apply-prim + lst38538)))
         (clo-app kont3843638537 x3834538539)))))
  (proc
   (- _38703 . lst)
   (let ((kont3843838540 (prim car lst)))
     (let ((lst38541 (prim cdr lst)))
       (let ((x3834638542 (apply-prim - lst38541)))
         (clo-app kont3843838540 x3834638542)))))
  (proc
   (* _38704 . lst)
   (let ((kont3844038543 (prim car lst)))
     (let ((lst38544 (prim cdr lst)))
       (let ((x3834738545 (apply-prim * lst38544)))
         (clo-app kont3844038543 x3834738545)))))
  (proc
   (modulo _38705 kont38442 a b)
   (let ((x3834838546 (prim modulo a b))) (clo-app kont38442 x3834838546)))
  (proc
   (/ _38706 . lst)
   (let ((kont3844338547 (prim car lst)))
     (let ((lst38548 (prim cdr lst)))
       (let ((x3834938549 (apply-prim / lst38548)))
         (clo-app kont3844338547 x3834938549)))))
  (proc
   (= _38707 . lst)
   (let ((kont3844538550 (prim car lst)))
     (let ((lst38551 (prim cdr lst)))
       (let ((x3835038552 (apply-prim = lst38551)))
         (clo-app kont3844538550 x3835038552)))))
  (proc
   (> _38708 . lst)
   (let ((kont3844738553 (prim car lst)))
     (let ((lst38554 (prim cdr lst)))
       (let ((x3835138555 (apply-prim > lst38554)))
         (clo-app kont3844738553 x3835138555)))))
  (proc
   (< _38709 . lst)
   (let ((kont3844938556 (prim car lst)))
     (let ((lst38557 (prim cdr lst)))
       (let ((x3835238558 (apply-prim < lst38557)))
         (clo-app kont3844938556 x3835238558)))))
  (proc
   (<= _38710 . lst)
   (let ((kont3845138559 (prim car lst)))
     (let ((lst38560 (prim cdr lst)))
       (let ((x3835338561 (apply-prim <= lst38560)))
         (clo-app kont3845138559 x3835338561)))))
  (proc
   (>= _38711 . lst)
   (let ((kont3845338562 (prim car lst)))
     (let ((lst38563 (prim cdr lst)))
       (let ((x3835438564 (apply-prim >= lst38563)))
         (clo-app kont3845338562 x3835438564)))))
  (proc
   (null? _38712 kont38455 x)
   (let ((x3835538565 (prim null? x))) (clo-app kont38455 x3835538565)))
  (proc
   (equal? _38713 kont38456 x y)
   (let ((x3835638566 (prim equal? x y))) (clo-app kont38456 x3835638566)))
  (proc
   (eq? _38714 kont38457 x y)
   (let ((x3835738567 (prim eq? x y))) (clo-app kont38457 x3835738567)))
  (proc
   (cons _38715 kont38458 a b)
   (let ((x3835838568 (prim cons a b))) (clo-app kont38458 x3835838568)))
  (proc
   (car _38716 kont38459 lst)
   (let ((x3835938569 (prim car lst))) (clo-app kont38459 x3835938569)))
  (proc
   (cdr _38717 kont38460 lst)
   (let ((x3836038570 (prim cdr lst))) (clo-app kont38460 x3836038570)))
  (proc
   (lam38718 env38719 a3836338574)
   (let ((a3836138571 (env-ref env38719 3)))
     (let ((kont38461 (env-ref env38719 2)))
       (let ((equal? (env-ref env38719 1)))
         (clo-app equal? kont38461 a3836138571 a3836338574)))))
  (proc
   (even? _38722 kont38461 x)
   (let ((a3836138571 '0))
     (let ((a3836238572 '2))
       (let ((f3846238573
              (make-closure lam38718 equal? kont38461 a3836138571)))
         (clo-app modulo f3846238573 x a3836238572)))))
  (proc
   (lam38723 env38724 a3836638578)
   (let ((equal? (env-ref env38724 3)))
     (let ((kont38463 (env-ref env38724 2)))
       (let ((a3836438575 (env-ref env38724 1)))
         (clo-app equal? kont38463 a3836438575 a3836638578)))))
  (proc
   (odd? _38727 kont38463 x)
   (let ((a3836438575 '1))
     (let ((a3836538576 '2))
       (let ((f3846438577
              (make-closure lam38723 a3836438575 kont38463 equal?)))
         (clo-app modulo f3846438577 x a3836538576)))))
  (proc
   (list _38728 . x)
   (let ((kont3846538579 (prim car x)))
     (let ((x38580 (prim cdr x))) (clo-app kont3846538579 x38580))))
  (proc
   (lam38731 env38732 a3837238590)
   (let ((kont38467 (env-ref env38732 3)))
     (let ((x (env-ref env38732 2)))
       (let ((member? (env-ref env38732 1)))
         (clo-app member? kont38467 x a3837238590)))))
  (proc
   (lam38733 env38734 a3837038587)
   (let ((cdr (env-ref env38734 5)))
     (let ((lst (env-ref env38734 4)))
       (let ((kont38467 (env-ref env38734 3)))
         (let ((x (env-ref env38734 2)))
           (let ((member? (env-ref env38734 1)))
             (if a3837038587
               (let ((x3837138588 '#t)) (clo-app kont38467 x3837138588))
               (let ((f3846838589 (make-closure lam38731 member? x kont38467)))
                 (clo-app cdr f3846838589 lst)))))))))
  (proc
   (lam38735 env38736 a3836938585)
   (let ((cdr (env-ref env38736 6)))
     (let ((lst (env-ref env38736 5)))
       (let ((equal? (env-ref env38736 4)))
         (let ((kont38467 (env-ref env38736 3)))
           (let ((x (env-ref env38736 2)))
             (let ((member? (env-ref env38736 1)))
               (let ((f3846938586
                      (make-closure lam38733 member? x kont38467 lst cdr)))
                 (clo-app equal? f3846938586 a3836938585 x)))))))))
  (proc
   (lam38737 env38738 a3836738582)
   (let ((cdr (env-ref env38738 7)))
     (let ((lst (env-ref env38738 6)))
       (let ((equal? (env-ref env38738 5)))
         (let ((kont38467 (env-ref env38738 4)))
           (let ((x (env-ref env38738 3)))
             (let ((car (env-ref env38738 2)))
               (let ((member? (env-ref env38738 1)))
                 (if a3836738582
                   (let ((x3836838583 '#f)) (clo-app kont38467 x3836838583))
                   (let ((f3847038584
                          (make-closure
                           lam38735
                           member?
                           x
                           kont38467
                           equal?
                           lst
                           cdr)))
                     (clo-app car f3847038584 lst)))))))))))
  (proc
   (member? _38739 kont38467 x lst)
   (let ((f3847138581
          (make-closure lam38737 member? car x kont38467 equal? lst cdr)))
     (clo-app null? f3847138581 lst)))
  (proc
   (lam38740 env38741 a3837638598)
   (let ((a3837538596 (env-ref env38741 4)))
     (let ((fun (env-ref env38741 3)))
       (let ((kont38472 (env-ref env38741 2)))
         (let ((foldl (env-ref env38741 1)))
           (clo-app foldl kont38472 fun a3837538596 a3837638598))))))
  (proc
   (lam38742 env38743 a3837538596)
   (let ((cdr (env-ref env38743 5)))
     (let ((lst (env-ref env38743 4)))
       (let ((fun (env-ref env38743 3)))
         (let ((kont38472 (env-ref env38743 2)))
           (let ((foldl (env-ref env38743 1)))
             (let ((f3847338597
                    (make-closure lam38740 foldl kont38472 fun a3837538596)))
               (clo-app cdr f3847338597 lst))))))))
  (proc
   (lam38744 env38745 a3837438594)
   (let ((cdr (env-ref env38745 6)))
     (let ((lst (env-ref env38745 5)))
       (let ((fun (env-ref env38745 4)))
         (let ((acc (env-ref env38745 3)))
           (let ((kont38472 (env-ref env38745 2)))
             (let ((foldl (env-ref env38745 1)))
               (let ((f3847438595
                      (make-closure lam38742 foldl kont38472 fun lst cdr)))
                 (clo-app fun f3847438595 a3837438594 acc)))))))))
  (proc
   (lam38746 env38747 a3837338592)
   (let ((cdr (env-ref env38747 7)))
     (let ((lst (env-ref env38747 6)))
       (let ((fun (env-ref env38747 5)))
         (let ((acc (env-ref env38747 4)))
           (let ((car (env-ref env38747 3)))
             (let ((kont38472 (env-ref env38747 2)))
               (let ((foldl (env-ref env38747 1)))
                 (if a3837338592
                   (clo-app kont38472 acc)
                   (let ((f3847538593
                          (make-closure
                           lam38744
                           foldl
                           kont38472
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f3847538593 lst)))))))))))
  (proc
   (foldl _38748 kont38472 fun acc lst)
   (let ((f3847638591
          (make-closure lam38746 foldl kont38472 car acc fun lst cdr)))
     (clo-app null? f3847638591 lst)))
  (proc
   (lam38749 env38750 a3838038606)
   (let ((a3837838602 (env-ref env38750 3)))
     (let ((kont38477 (env-ref env38750 2)))
       (let ((reverse-helper (env-ref env38750 1)))
         (clo-app reverse-helper kont38477 a3837838602 a3838038606)))))
  (proc
   (lam38751 env38752 a3837938604)
   (let ((a3837838602 (env-ref env38752 5)))
     (let ((kont38477 (env-ref env38752 4)))
       (let ((reverse-helper (env-ref env38752 3)))
         (let ((lst2 (env-ref env38752 2)))
           (let ((cons (env-ref env38752 1)))
             (let ((f3847838605
                    (make-closure
                     lam38749
                     reverse-helper
                     kont38477
                     a3837838602)))
               (clo-app cons f3847838605 a3837938604 lst2))))))))
  (proc
   (lam38753 env38754 a3837838602)
   (let ((kont38477 (env-ref env38754 6)))
     (let ((lst (env-ref env38754 5)))
       (let ((reverse-helper (env-ref env38754 4)))
         (let ((lst2 (env-ref env38754 3)))
           (let ((car (env-ref env38754 2)))
             (let ((cons (env-ref env38754 1)))
               (let ((f3847938603
                      (make-closure
                       lam38751
                       cons
                       lst2
                       reverse-helper
                       kont38477
                       a3837838602)))
                 (clo-app car f3847938603 lst)))))))))
  (proc
   (lam38755 env38756 a3837738600)
   (let ((cdr (env-ref env38756 7)))
     (let ((kont38477 (env-ref env38756 6)))
       (let ((lst (env-ref env38756 5)))
         (let ((reverse-helper (env-ref env38756 4)))
           (let ((lst2 (env-ref env38756 3)))
             (let ((car (env-ref env38756 2)))
               (let ((cons (env-ref env38756 1)))
                 (if a3837738600
                   (clo-app kont38477 lst2)
                   (let ((f3848038601
                          (make-closure
                           lam38753
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont38477)))
                     (clo-app cdr f3848038601 lst)))))))))))
  (proc
   (reverse-helper _38757 kont38477 lst lst2)
   (let ((f3848138599
          (make-closure
           lam38755
           cons
           car
           lst2
           reverse-helper
           lst
           kont38477
           cdr)))
     (clo-app null? f3848138599 lst)))
  (proc
   (lam38758 env38759 a3838138608)
   (let ((lst (env-ref env38759 3)))
     (let ((reverse-helper (env-ref env38759 2)))
       (let ((kont38482 (env-ref env38759 1)))
         (clo-app reverse-helper kont38482 lst a3838138608)))))
  (proc
   (reverse _38760 kont38482 lst)
   (let ((f3848338607 (make-closure lam38758 kont38482 reverse-helper lst)))
     (clo-app list f3848338607)))
  (proc
   (lam38761 env38762 x3838438613)
   (let ((kont38484 (env-ref env38762 1))) (clo-app kont38484 x3838438613)))
  (proc
   (lam38763 env38764 a3838938622)
   (let ((a3838738618 (env-ref env38764 4)))
     (let ((kont38484 (env-ref env38764 3)))
       (let ((take-helper (env-ref env38764 2)))
         (let ((a3838538615 (env-ref env38764 1)))
           (clo-app
            take-helper
            kont38484
            a3838538615
            a3838738618
            a3838938622))))))
  (proc
   (lam38765 env38766 a3838838620)
   (let ((a3838738618 (env-ref env38766 6)))
     (let ((kont38484 (env-ref env38766 5)))
       (let ((a3838538615 (env-ref env38766 4)))
         (let ((cons (env-ref env38766 3)))
           (let ((take-helper (env-ref env38766 2)))
             (let ((lst2 (env-ref env38766 1)))
               (let ((f3848638621
                      (make-closure
                       lam38763
                       a3838538615
                       take-helper
                       kont38484
                       a3838738618)))
                 (clo-app cons f3848638621 a3838838620 lst2)))))))))
  (proc
   (lam38767 env38768 a3838738618)
   (let ((lst (env-ref env38768 7)))
     (let ((kont38484 (env-ref env38768 6)))
       (let ((cons (env-ref env38768 5)))
         (let ((take-helper (env-ref env38768 4)))
           (let ((lst2 (env-ref env38768 3)))
             (let ((a3838538615 (env-ref env38768 2)))
               (let ((car (env-ref env38768 1)))
                 (let ((f3848738619
                        (make-closure
                         lam38765
                         lst2
                         take-helper
                         cons
                         a3838538615
                         kont38484
                         a3838738618)))
                   (clo-app car f3848738619 lst))))))))))
  (proc
   (lam38770 env38771 a3838538615)
   (let ((lst (env-ref env38771 8)))
     (let ((kont38484 (env-ref env38771 7)))
       (let ((cons (env-ref env38771 6)))
         (let ((- (env-ref env38771 5)))
           (let ((take-helper (env-ref env38771 4)))
             (let ((lst2 (env-ref env38771 3)))
               (let ((n (env-ref env38771 2)))
                 (let ((car (env-ref env38771 1)))
                   (let ((a3838638616 '1))
                     (let ((f3848838617
                            (make-closure
                             lam38767
                             car
                             a3838538615
                             lst2
                             take-helper
                             cons
                             kont38484
                             lst)))
                       (clo-app - f3848838617 n a3838638616))))))))))))
  (proc
   (lam38772 env38773 a3838338611)
   (let ((cdr (env-ref env38773 10)))
     (let ((lst (env-ref env38773 9)))
       (let ((reverse (env-ref env38773 8)))
         (let ((kont38484 (env-ref env38773 7)))
           (let ((cons (env-ref env38773 6)))
             (let ((- (env-ref env38773 5)))
               (let ((take-helper (env-ref env38773 4)))
                 (let ((lst2 (env-ref env38773 3)))
                   (let ((n (env-ref env38773 2)))
                     (let ((car (env-ref env38773 1)))
                       (if a3838338611
                         (let ((f3848538612 (make-closure lam38761 kont38484)))
                           (clo-app reverse f3848538612 lst2))
                         (let ((f3848938614
                                (make-closure
                                 lam38770
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont38484
                                 lst)))
                           (clo-app cdr f3848938614 lst))))))))))))))
  (proc
   (take-helper _38775 kont38484 lst n lst2)
   (let ((a3838238609 '0))
     (let ((f3849038610
            (make-closure
             lam38772
             car
             n
             lst2
             take-helper
             -
             cons
             kont38484
             reverse
             lst
             cdr)))
       (clo-app = f3849038610 n a3838238609))))
  (proc
   (lam38776 env38777 a3839038624)
   (let ((kont38491 (env-ref env38777 4)))
     (let ((lst (env-ref env38777 3)))
       (let ((take-helper (env-ref env38777 2)))
         (let ((n (env-ref env38777 1)))
           (clo-app take-helper kont38491 lst n a3839038624))))))
  (proc
   (take _38778 kont38491 lst n)
   (let ((f3849238623 (make-closure lam38776 n take-helper lst kont38491)))
     (clo-app list f3849238623)))
  (proc
   (lam38780 env38781 a3839538632)
   (let ((kont38493 (env-ref env38781 3)))
     (let ((+ (env-ref env38781 2)))
       (let ((a3839338628 (env-ref env38781 1)))
         (clo-app + kont38493 a3839338628 a3839538632)))))
  (proc
   (lam38782 env38783 a3839438630)
   (let ((kont38493 (env-ref env38783 4)))
     (let ((length (env-ref env38783 3)))
       (let ((+ (env-ref env38783 2)))
         (let ((a3839338628 (env-ref env38783 1)))
           (let ((f3849438631 (make-closure lam38780 a3839338628 + kont38493)))
             (clo-app length f3849438631 a3839438630)))))))
  (proc
   (lam38785 env38786 a3839138626)
   (let ((cdr (env-ref env38786 5)))
     (let ((kont38493 (env-ref env38786 4)))
       (let ((lst (env-ref env38786 3)))
         (let ((length (env-ref env38786 2)))
           (let ((+ (env-ref env38786 1)))
             (if a3839138626
               (let ((x3839238627 '0)) (clo-app kont38493 x3839238627))
               (let ((a3839338628 '1))
                 (let ((f3849538629
                        (make-closure
                         lam38782
                         a3839338628
                         +
                         length
                         kont38493)))
                   (clo-app cdr f3849538629 lst))))))))))
  (proc
   (length _38787 kont38493 lst)
   (let ((f3849638625 (make-closure lam38785 + length lst kont38493 cdr)))
     (clo-app null? f3849638625 lst)))
  (proc
   (lam38788 env38789 x3839738636)
   (let ((kont38497 (env-ref env38789 1))) (clo-app kont38497 x3839738636)))
  (proc
   (lam38790 env38791 a3840138644)
   (let ((a3839938640 (env-ref env38791 3)))
     (let ((kont38497 (env-ref env38791 2)))
       (let ((cons (env-ref env38791 1)))
         (clo-app cons kont38497 a3839938640 a3840138644)))))
  (proc
   (lam38792 env38793 a3840038642)
   (let ((map (env-ref env38793 5)))
     (let ((a3839938640 (env-ref env38793 4)))
       (let ((kont38497 (env-ref env38793 3)))
         (let ((proc (env-ref env38793 2)))
           (let ((cons (env-ref env38793 1)))
             (let ((f3849938643
                    (make-closure lam38790 cons kont38497 a3839938640)))
               (clo-app map f3849938643 proc a3840038642))))))))
  (proc
   (lam38794 env38795 a3839938640)
   (let ((cdr (env-ref env38795 6)))
     (let ((lst (env-ref env38795 5)))
       (let ((map (env-ref env38795 4)))
         (let ((kont38497 (env-ref env38795 3)))
           (let ((proc (env-ref env38795 2)))
             (let ((cons (env-ref env38795 1)))
               (let ((f3850038641
                      (make-closure
                       lam38792
                       cons
                       proc
                       kont38497
                       a3839938640
                       map)))
                 (clo-app cdr f3850038641 lst)))))))))
  (proc
   (lam38796 env38797 a3839838638)
   (let ((cdr (env-ref env38797 6)))
     (let ((lst (env-ref env38797 5)))
       (let ((map (env-ref env38797 4)))
         (let ((kont38497 (env-ref env38797 3)))
           (let ((proc (env-ref env38797 2)))
             (let ((cons (env-ref env38797 1)))
               (let ((f3850138639
                      (make-closure lam38794 cons proc kont38497 map lst cdr)))
                 (clo-app proc f3850138639 a3839838638)))))))))
  (proc
   (lam38798 env38799 a3839638634)
   (let ((lst (env-ref env38799 8)))
     (let ((map (env-ref env38799 7)))
       (let ((kont38497 (env-ref env38799 6)))
         (let ((proc (env-ref env38799 5)))
           (let ((car (env-ref env38799 4)))
             (let ((cons (env-ref env38799 3)))
               (let ((list (env-ref env38799 2)))
                 (let ((cdr (env-ref env38799 1)))
                   (if a3839638634
                     (let ((f3849838635 (make-closure lam38788 kont38497)))
                       (clo-app list f3849838635))
                     (let ((f3850238637
                            (make-closure
                             lam38796
                             cons
                             proc
                             kont38497
                             map
                             lst
                             cdr)))
                       (clo-app car f3850238637 lst))))))))))))
  (proc
   (map _38800 kont38497 proc lst)
   (let ((f3850338633
          (make-closure lam38798 cdr list cons car proc kont38497 map lst)))
     (clo-app null? f3850338633 lst)))
  (proc
   (lam38801 env38802 x3840338648)
   (let ((kont38504 (env-ref env38802 1))) (clo-app kont38504 x3840338648)))
  (proc
   (lam38803 env38804 a3840838658)
   (let ((a3840638654 (env-ref env38804 3)))
     (let ((cons (env-ref env38804 2)))
       (let ((kont38504 (env-ref env38804 1)))
         (clo-app cons kont38504 a3840638654 a3840838658)))))
  (proc
   (lam38805 env38806 a3840738656)
   (let ((a3840638654 (env-ref env38806 5)))
     (let ((op (env-ref env38806 4)))
       (let ((filter (env-ref env38806 3)))
         (let ((cons (env-ref env38806 2)))
           (let ((kont38504 (env-ref env38806 1)))
             (let ((f3850638657
                    (make-closure lam38803 kont38504 cons a3840638654)))
               (clo-app filter f3850638657 op a3840738656))))))))
  (proc
   (lam38807 env38808 a3840638654)
   (let ((cdr (env-ref env38808 6)))
     (let ((lst (env-ref env38808 5)))
       (let ((op (env-ref env38808 4)))
         (let ((filter (env-ref env38808 3)))
           (let ((cons (env-ref env38808 2)))
             (let ((kont38504 (env-ref env38808 1)))
               (let ((f3850738655
                      (make-closure
                       lam38805
                       kont38504
                       cons
                       filter
                       op
                       a3840638654)))
                 (clo-app cdr f3850738655 lst)))))))))
  (proc
   (lam38809 env38810 a3840938660)
   (let ((op (env-ref env38810 3)))
     (let ((filter (env-ref env38810 2)))
       (let ((kont38504 (env-ref env38810 1)))
         (clo-app filter kont38504 op a3840938660)))))
  (proc
   (lam38811 env38812 a3840538652)
   (let ((cdr (env-ref env38812 7)))
     (let ((lst (env-ref env38812 6)))
       (let ((op (env-ref env38812 5)))
         (let ((filter (env-ref env38812 4)))
           (let ((car (env-ref env38812 3)))
             (let ((cons (env-ref env38812 2)))
               (let ((kont38504 (env-ref env38812 1)))
                 (if a3840538652
                   (let ((f3850838653
                          (make-closure
                           lam38807
                           kont38504
                           cons
                           filter
                           op
                           lst
                           cdr)))
                     (clo-app car f3850838653 lst))
                   (let ((f3850938659
                          (make-closure lam38809 kont38504 filter op)))
                     (clo-app cdr f3850938659 lst)))))))))))
  (proc
   (lam38813 env38814 a3840438650)
   (let ((cdr (env-ref env38814 7)))
     (let ((lst (env-ref env38814 6)))
       (let ((op (env-ref env38814 5)))
         (let ((filter (env-ref env38814 4)))
           (let ((car (env-ref env38814 3)))
             (let ((cons (env-ref env38814 2)))
               (let ((kont38504 (env-ref env38814 1)))
                 (let ((f3851038651
                        (make-closure
                         lam38811
                         kont38504
                         cons
                         car
                         filter
                         op
                         lst
                         cdr)))
                   (clo-app op f3851038651 a3840438650))))))))))
  (proc
   (lam38815 env38816 a3840238646)
   (let ((lst (env-ref env38816 8)))
     (let ((op (env-ref env38816 7)))
       (let ((list (env-ref env38816 6)))
         (let ((cdr (env-ref env38816 5)))
           (let ((filter (env-ref env38816 4)))
             (let ((car (env-ref env38816 3)))
               (let ((cons (env-ref env38816 2)))
                 (let ((kont38504 (env-ref env38816 1)))
                   (if a3840238646
                     (let ((f3850538647 (make-closure lam38801 kont38504)))
                       (clo-app list f3850538647))
                     (let ((f3851138649
                            (make-closure
                             lam38813
                             kont38504
                             cons
                             car
                             filter
                             op
                             lst
                             cdr)))
                       (clo-app car f3851138649 lst))))))))))))
  (proc
   (filter _38817 kont38504 op lst)
   (let ((f3851238645
          (make-closure lam38815 kont38504 cons car filter cdr list op lst)))
     (clo-app null? f3851238645 lst)))
  (proc
   (lam38818 env38819 a3841438668)
   (let ((drop (env-ref env38819 3)))
     (let ((kont38513 (env-ref env38819 2)))
       (let ((a3841238665 (env-ref env38819 1)))
         (clo-app drop kont38513 a3841238665 a3841438668)))))
  (proc
   (lam38821 env38822 a3841238665)
   (let ((drop (env-ref env38822 4)))
     (let ((kont38513 (env-ref env38822 3)))
       (let ((n (env-ref env38822 2)))
         (let ((- (env-ref env38822 1)))
           (let ((a3841338666 '1))
             (let ((f3851438667
                    (make-closure lam38818 a3841238665 kont38513 drop)))
               (clo-app - f3851438667 n a3841338666))))))))
  (proc
   (lam38823 env38824 a3841138663)
   (let ((cdr (env-ref env38824 6)))
     (let ((kont38513 (env-ref env38824 5)))
       (let ((n (env-ref env38824 4)))
         (let ((- (env-ref env38824 3)))
           (let ((lst (env-ref env38824 2)))
             (let ((drop (env-ref env38824 1)))
               (if a3841138663
                 (clo-app kont38513 lst)
                 (let ((f3851538664
                        (make-closure lam38821 - n kont38513 drop)))
                   (clo-app cdr f3851538664 lst))))))))))
  (proc
   (drop _38826 kont38513 lst n)
   (let ((a3841038661 '0))
     (let ((f3851638662 (make-closure lam38823 drop lst - n kont38513 cdr)))
       (clo-app = f3851638662 n a3841038661))))
  (proc
   (lam38827 env38828 a3841838676)
   (let ((a3841638672 (env-ref env38828 3)))
     (let ((proc (env-ref env38828 2)))
       (let ((kont38517 (env-ref env38828 1)))
         (clo-app proc kont38517 a3841638672 a3841838676)))))
  (proc
   (lam38829 env38830 a3841738674)
   (let ((foldr (env-ref env38830 5)))
     (let ((a3841638672 (env-ref env38830 4)))
       (let ((proc (env-ref env38830 3)))
         (let ((acc (env-ref env38830 2)))
           (let ((kont38517 (env-ref env38830 1)))
             (let ((f3851838675
                    (make-closure lam38827 kont38517 proc a3841638672)))
               (clo-app foldr f3851838675 proc acc a3841738674))))))))
  (proc
   (lam38831 env38832 a3841638672)
   (let ((cdr (env-ref env38832 6)))
     (let ((foldr (env-ref env38832 5)))
       (let ((lst (env-ref env38832 4)))
         (let ((proc (env-ref env38832 3)))
           (let ((acc (env-ref env38832 2)))
             (let ((kont38517 (env-ref env38832 1)))
               (let ((f3851938673
                      (make-closure
                       lam38829
                       kont38517
                       acc
                       proc
                       a3841638672
                       foldr)))
                 (clo-app cdr f3851938673 lst)))))))))
  (proc
   (lam38833 env38834 a3841538670)
   (let ((cdr (env-ref env38834 7)))
     (let ((car (env-ref env38834 6)))
       (let ((foldr (env-ref env38834 5)))
         (let ((lst (env-ref env38834 4)))
           (let ((proc (env-ref env38834 3)))
             (let ((acc (env-ref env38834 2)))
               (let ((kont38517 (env-ref env38834 1)))
                 (if a3841538670
                   (clo-app kont38517 acc)
                   (let ((f3852038671
                          (make-closure
                           lam38831
                           kont38517
                           acc
                           proc
                           lst
                           foldr
                           cdr)))
                     (clo-app car f3852038671 lst)))))))))))
  (proc
   (foldr _38835 kont38517 proc acc lst)
   (let ((f3852138669
          (make-closure lam38833 kont38517 acc proc lst foldr car cdr)))
     (clo-app null? f3852138669 lst)))
  (proc
   (lam38836 env38837 a3842238684)
   (let ((kont38522 (env-ref env38837 3)))
     (let ((cons (env-ref env38837 2)))
       (let ((a3842038680 (env-ref env38837 1)))
         (clo-app cons kont38522 a3842038680 a3842238684)))))
  (proc
   (lam38838 env38839 a3842138682)
   (let ((kont38522 (env-ref env38839 5)))
     (let ((append (env-ref env38839 4)))
       (let ((lst2 (env-ref env38839 3)))
         (let ((cons (env-ref env38839 2)))
           (let ((a3842038680 (env-ref env38839 1)))
             (let ((f3852338683
                    (make-closure lam38836 a3842038680 cons kont38522)))
               (clo-app append f3852338683 a3842138682 lst2))))))))
  (proc
   (lam38840 env38841 a3842038680)
   (let ((append (env-ref env38841 6)))
     (let ((lst2 (env-ref env38841 5)))
       (let ((lst1 (env-ref env38841 4)))
         (let ((cons (env-ref env38841 3)))
           (let ((kont38522 (env-ref env38841 2)))
             (let ((cdr (env-ref env38841 1)))
               (let ((f3852438681
                      (make-closure
                       lam38838
                       a3842038680
                       cons
                       lst2
                       append
                       kont38522)))
                 (clo-app cdr f3852438681 lst1)))))))))
  (proc
   (lam38842 env38843 a3841938678)
   (let ((append (env-ref env38843 7)))
     (let ((lst2 (env-ref env38843 6)))
       (let ((cons (env-ref env38843 5)))
         (let ((kont38522 (env-ref env38843 4)))
           (let ((cdr (env-ref env38843 3)))
             (let ((lst1 (env-ref env38843 2)))
               (let ((car (env-ref env38843 1)))
                 (if a3841938678
                   (clo-app kont38522 lst2)
                   (let ((f3852538679
                          (make-closure
                           lam38840
                           cdr
                           kont38522
                           cons
                           lst1
                           lst2
                           append)))
                     (clo-app car f3852538679 lst1)))))))))))
  (proc
   (append _38844 kont38522 lst1 lst2)
   (let ((f3852638677
          (make-closure lam38842 car lst1 cdr kont38522 cons lst2 append)))
     (clo-app null? f3852638677 lst1)))
  (proc
   (hash _38845 . lst)
   (let ((kont3852738685 (prim car lst)))
     (let ((lst38686 (prim cdr lst)))
       (let ((x3842338687 (apply-prim hash lst38686)))
         (clo-app kont3852738685 x3842338687)))))
  (proc
   (hash-ref _38846 kont38529 h k)
   (let ((x3842438688 (prim hash-ref h k))) (clo-app kont38529 x3842438688)))
  (proc
   (hash-set _38847 kont38530 h k v)
   (let ((x3842538689 (prim hash-set h k v))) (clo-app kont38530 x3842538689)))
  (proc
   (hash-has-key? _38848 kont38531 h k)
   (let ((x3842638690 (prim hash-has-key? h k)))
     (clo-app kont38531 x3842638690)))
  (proc
   (hash-count _38849 kont38532 h)
   (let ((x3842738691 (prim hash-count h))) (clo-app kont38532 x3842738691)))
  (proc
   (lam38850 env38851 a3843438699)
   (let ((hash-count (env-ref env38851 2)))
     (let ((kont38533 (env-ref env38851 1)))
       (clo-app hash-count kont38533 a3843438699))))
  (proc
   (call _38858 kont38533)
   (let ((a3842838692 '100))
     (let ((a3842938693 '80))
       (let ((a3843038694 '10))
         (let ((a3843138695 '2))
           (let ((a3843238696 '25))
             (let ((a3843338697 '30))
               (let ((f3853438698
                      (make-closure lam38850 kont38533 hash-count)))
                 (clo-app
                  hash
                  f3853438698
                  a3842838692
                  a3842938693
                  a3843038694
                  a3843138695
                  a3843238696
                  a3843338697)))))))))
  (proc
   (lam38859 env38860 x3843538701)
   (let ((kont38535 (env-ref env38860 1))) (clo-app kont38535 x3843538701)))
  (proc
   (brouhaha_main _38861 kont38535)
   (let ((f3853638700 (make-closure lam38859 kont38535)))
     (clo-app call f3853638700))))
