'((define (+ . lst)
    (let ((kont3962439725 (prim car lst)))
      (let ((lst39726 (prim cdr lst)))
        (let ((x3953339727 (apply-prim + lst39726)))
          (kont3962439725 x3953339727)))))
  (define (- . lst)
    (let ((kont3962639728 (prim car lst)))
      (let ((lst39729 (prim cdr lst)))
        (let ((x3953439730 (apply-prim - lst39729)))
          (kont3962639728 x3953439730)))))
  (define (* . lst)
    (let ((kont3962839731 (prim car lst)))
      (let ((lst39732 (prim cdr lst)))
        (let ((x3953539733 (apply-prim * lst39732)))
          (kont3962839731 x3953539733)))))
  (define (modulo kont39630 a b)
    (let ((x3953639734 (prim modulo a b))) (kont39630 x3953639734)))
  (define (/ . lst)
    (let ((kont3963139735 (prim car lst)))
      (let ((lst39736 (prim cdr lst)))
        (let ((x3953739737 (apply-prim / lst39736)))
          (kont3963139735 x3953739737)))))
  (define (= . lst)
    (let ((kont3963339738 (prim car lst)))
      (let ((lst39739 (prim cdr lst)))
        (let ((x3953839740 (apply-prim = lst39739)))
          (kont3963339738 x3953839740)))))
  (define (> . lst)
    (let ((kont3963539741 (prim car lst)))
      (let ((lst39742 (prim cdr lst)))
        (let ((x3953939743 (apply-prim > lst39742)))
          (kont3963539741 x3953939743)))))
  (define (< . lst)
    (let ((kont3963739744 (prim car lst)))
      (let ((lst39745 (prim cdr lst)))
        (let ((x3954039746 (apply-prim < lst39745)))
          (kont3963739744 x3954039746)))))
  (define (<= . lst)
    (let ((kont3963939747 (prim car lst)))
      (let ((lst39748 (prim cdr lst)))
        (let ((x3954139749 (apply-prim <= lst39748)))
          (kont3963939747 x3954139749)))))
  (define (>= . lst)
    (let ((kont3964139750 (prim car lst)))
      (let ((lst39751 (prim cdr lst)))
        (let ((x3954239752 (apply-prim >= lst39751)))
          (kont3964139750 x3954239752)))))
  (define (null? kont39643 x)
    (let ((x3954339753 (prim null? x))) (kont39643 x3954339753)))
  (define (equal? kont39644 x y)
    (let ((x3954439754 (prim equal? x y))) (kont39644 x3954439754)))
  (define (eq? kont39645 x y)
    (let ((x3954539755 (prim eq? x y))) (kont39645 x3954539755)))
  (define (cons kont39646 a b)
    (let ((x3954639756 (prim cons a b))) (kont39646 x3954639756)))
  (define (car kont39647 lst)
    (let ((x3954739757 (prim car lst))) (kont39647 x3954739757)))
  (define (cdr kont39648 lst)
    (let ((x3954839758 (prim cdr lst))) (kont39648 x3954839758)))
  (define (even? kont39649 x)
    (let ((a3954939759 '0))
      (let ((a3955039760 '2))
        (let ((f3965039761
               (lambda (a3955139762)
                 (equal? kont39649 a3954939759 a3955139762))))
          (modulo f3965039761 x a3955039760)))))
  (define (odd? kont39651 x)
    (let ((a3955239763 '1))
      (let ((a3955339764 '2))
        (let ((f3965239765
               (lambda (a3955439766)
                 (equal? kont39651 a3955239763 a3955439766))))
          (modulo f3965239765 x a3955339764)))))
  (define (list . x)
    (let ((kont3965339767 (prim car x)))
      (let ((x39768 (prim cdr x))) (kont3965339767 x39768))))
  (define (member? kont39655 x lst)
    (let ((f3965939769
           (lambda (a3955539770)
             (if a3955539770
               (let ((x3955639771 '#f)) (kont39655 x3955639771))
               (let ((f3965839772
                      (lambda (a3955739773)
                        (let ((f3965739774
                               (lambda (a3955839775)
                                 (if a3955839775
                                   (let ((x3955939776 '#t))
                                     (kont39655 x3955939776))
                                   (let ((f3965639777
                                          (lambda (a3956039778)
                                            (member?
                                             kont39655
                                             x
                                             a3956039778))))
                                     (cdr f3965639777 lst))))))
                          (equal? f3965739774 a3955739773 x)))))
                 (car f3965839772 lst))))))
      (null? f3965939769 lst)))
  (define (foldl kont39660 fun acc lst)
    (let ((f3966439779
           (lambda (a3956139780)
             (if a3956139780
               (kont39660 acc)
               (let ((f3966339781
                      (lambda (a3956239782)
                        (let ((f3966239783
                               (lambda (a3956339784)
                                 (let ((f3966139785
                                        (lambda (a3956439786)
                                          (foldl
                                           kont39660
                                           fun
                                           a3956339784
                                           a3956439786))))
                                   (cdr f3966139785 lst)))))
                          (fun f3966239783 a3956239782 acc)))))
                 (car f3966339781 lst))))))
      (null? f3966439779 lst)))
  (define (reverse-helper kont39665 lst lst2)
    (let ((f3966939787
           (lambda (a3956539788)
             (if a3956539788
               (kont39665 lst2)
               (let ((f3966839789
                      (lambda (a3956639790)
                        (let ((f3966739791
                               (lambda (a3956739792)
                                 (let ((f3966639793
                                        (lambda (a3956839794)
                                          (reverse-helper
                                           kont39665
                                           a3956639790
                                           a3956839794))))
                                   (cons f3966639793 a3956739792 lst2)))))
                          (car f3966739791 lst)))))
                 (cdr f3966839789 lst))))))
      (null? f3966939787 lst)))
  (define (reverse kont39670 lst)
    (let ((f3967139795
           (lambda (a3956939796) (reverse-helper kont39670 lst a3956939796))))
      (list f3967139795)))
  (define (take-helper kont39672 lst n lst2)
    (let ((a3957039797 '0))
      (let ((f3967839798
             (lambda (a3957139799)
               (if a3957139799
                 (let ((f3967339800
                        (lambda (x3957239801) (kont39672 x3957239801))))
                   (reverse f3967339800 lst2))
                 (let ((f3967739802
                        (lambda (a3957339803)
                          (let ((a3957439804 '1))
                            (let ((f3967639805
                                   (lambda (a3957539806)
                                     (let ((f3967539807
                                            (lambda (a3957639808)
                                              (let ((f3967439809
                                                     (lambda (a3957739810)
                                                       (take-helper
                                                        kont39672
                                                        a3957339803
                                                        a3957539806
                                                        a3957739810))))
                                                (cons
                                                 f3967439809
                                                 a3957639808
                                                 lst2)))))
                                       (car f3967539807 lst)))))
                              (- f3967639805 n a3957439804))))))
                   (cdr f3967739802 lst))))))
        (= f3967839798 n a3957039797))))
  (define (take kont39679 lst n)
    (let ((f3968039811
           (lambda (a3957839812) (take-helper kont39679 lst n a3957839812))))
      (list f3968039811)))
  (define (length kont39681 lst)
    (let ((f3968439813
           (lambda (a3957939814)
             (if a3957939814
               (let ((x3958039815 '0)) (kont39681 x3958039815))
               (let ((a3958139816 '1))
                 (let ((f3968339817
                        (lambda (a3958239818)
                          (let ((f3968239819
                                 (lambda (a3958339820)
                                   (+ kont39681 a3958139816 a3958339820))))
                            (length f3968239819 a3958239818)))))
                   (cdr f3968339817 lst)))))))
      (null? f3968439813 lst)))
  (define (map kont39685 proc lst)
    (let ((f3969139821
           (lambda (a3958439822)
             (if a3958439822
               (let ((f3968639823
                      (lambda (x3958539824) (kont39685 x3958539824))))
                 (list f3968639823))
               (let ((f3969039825
                      (lambda (a3958639826)
                        (let ((f3968939827
                               (lambda (a3958739828)
                                 (let ((f3968839829
                                        (lambda (a3958839830)
                                          (let ((f3968739831
                                                 (lambda (a3958939832)
                                                   (cons
                                                    kont39685
                                                    a3958739828
                                                    a3958939832))))
                                            (map
                                             f3968739831
                                             proc
                                             a3958839830)))))
                                   (cdr f3968839829 lst)))))
                          (proc f3968939827 a3958639826)))))
                 (car f3969039825 lst))))))
      (null? f3969139821 lst)))
  (define (filter kont39692 op lst)
    (let ((f3970039833
           (lambda (a3959039834)
             (if a3959039834
               (let ((f3969339835
                      (lambda (x3959139836) (kont39692 x3959139836))))
                 (list f3969339835))
               (let ((f3969939837
                      (lambda (a3959239838)
                        (let ((f3969839839
                               (lambda (a3959339840)
                                 (if a3959339840
                                   (let ((f3969639841
                                          (lambda (a3959439842)
                                            (let ((f3969539843
                                                   (lambda (a3959539844)
                                                     (let ((f3969439845
                                                            (lambda (a3959639846)
                                                              (cons
                                                               kont39692
                                                               a3959439842
                                                               a3959639846))))
                                                       (filter
                                                        f3969439845
                                                        op
                                                        a3959539844)))))
                                              (cdr f3969539843 lst)))))
                                     (car f3969639841 lst))
                                   (let ((f3969739847
                                          (lambda (a3959739848)
                                            (filter
                                             kont39692
                                             op
                                             a3959739848))))
                                     (cdr f3969739847 lst))))))
                          (op f3969839839 a3959239838)))))
                 (car f3969939837 lst))))))
      (null? f3970039833 lst)))
  (define (drop kont39701 lst n)
    (let ((a3959839849 '0))
      (let ((f3970439850
             (lambda (a3959939851)
               (if a3959939851
                 (kont39701 lst)
                 (let ((f3970339852
                        (lambda (a3960039853)
                          (let ((a3960139854 '1))
                            (let ((f3970239855
                                   (lambda (a3960239856)
                                     (drop
                                      kont39701
                                      a3960039853
                                      a3960239856))))
                              (- f3970239855 n a3960139854))))))
                   (cdr f3970339852 lst))))))
        (= f3970439850 n a3959839849))))
  (define (foldr kont39705 proc acc lst)
    (let ((f3970939857
           (lambda (a3960339858)
             (if a3960339858
               (kont39705 acc)
               (let ((f3970839859
                      (lambda (a3960439860)
                        (let ((f3970739861
                               (lambda (a3960539862)
                                 (let ((f3970639863
                                        (lambda (a3960639864)
                                          (proc
                                           kont39705
                                           a3960439860
                                           a3960639864))))
                                   (foldr f3970639863 proc acc a3960539862)))))
                          (cdr f3970739861 lst)))))
                 (car f3970839859 lst))))))
      (null? f3970939857 lst)))
  (define (append kont39710 lst1 lst2)
    (let ((f3971439865
           (lambda (a3960739866)
             (if a3960739866
               (kont39710 lst2)
               (let ((f3971339867
                      (lambda (a3960839868)
                        (let ((f3971239869
                               (lambda (a3960939870)
                                 (let ((f3971139871
                                        (lambda (a3961039872)
                                          (cons
                                           kont39710
                                           a3960839868
                                           a3961039872))))
                                   (append f3971139871 a3960939870 lst2)))))
                          (cdr f3971239869 lst1)))))
                 (car f3971339867 lst1))))))
      (null? f3971439865 lst1)))
  (define (hash . lst)
    (let ((kont3971539873 (prim car lst)))
      (let ((lst39874 (prim cdr lst)))
        (let ((x3961139875 (apply-prim hash lst39874)))
          (kont3971539873 x3961139875)))))
  (define (hash-ref kont39717 h k)
    (let ((x3961239876 (prim hash-ref h k))) (kont39717 x3961239876)))
  (define (hash-set kont39718 h k v)
    (let ((x3961339877 (prim hash-set h k v))) (kont39718 x3961339877)))
  (define (hash-has-key? kont39719 h k)
    (let ((x3961439878 (prim hash-has-key? h k))) (kont39719 x3961439878)))
  (define (hash-count kont39720 h)
    (let ((x3961539879 (prim hash-count h))) (kont39720 x3961539879)))
  (define (call kont39721)
    (let ((a3961639880 '100))
      (let ((a3961739881 '80))
        (let ((a3961839882 '10))
          (let ((a3961939883 '2))
            (let ((a3962039884 '25))
              (let ((a3962139885 '30))
                (let ((f3972239886
                       (lambda (a3962239887)
                         (hash-count kont39721 a3962239887))))
                  (hash
                   f3972239886
                   a3961639880
                   a3961739881
                   a3961839882
                   a3961939883
                   a3962039884
                   a3962139885)))))))))
  (define (brouhaha_main kont39723)
    (let ((f3972439888 (lambda (x3962339889) (kont39723 x3962339889))))
      (call f3972439888))))
