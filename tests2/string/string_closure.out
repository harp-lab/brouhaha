'((proc
   (+ _50778 . lst)
   (let ((kont5052050620 (prim car lst)))
     (let ((lst50621 (prim cdr lst)))
       (let ((x5043550622 (apply-prim + lst50621)))
         (clo-app kont5052050620 x5043550622)))))
  (proc
   (- _50779 . lst)
   (let ((kont5052250623 (prim car lst)))
     (let ((lst50624 (prim cdr lst)))
       (let ((x5043650625 (apply-prim - lst50624)))
         (clo-app kont5052250623 x5043650625)))))
  (proc
   (* _50780 . lst)
   (let ((kont5052450626 (prim car lst)))
     (let ((lst50627 (prim cdr lst)))
       (let ((x5043750628 (apply-prim * lst50627)))
         (clo-app kont5052450626 x5043750628)))))
  (proc
   (modulo _50781 kont50526 a b)
   (let ((x5043850629 (prim modulo a b))) (clo-app kont50526 x5043850629)))
  (proc
   (/ _50782 . lst)
   (let ((kont5052750630 (prim car lst)))
     (let ((lst50631 (prim cdr lst)))
       (let ((x5043950632 (apply-prim / lst50631)))
         (clo-app kont5052750630 x5043950632)))))
  (proc
   (= _50783 . lst)
   (let ((kont5052950633 (prim car lst)))
     (let ((lst50634 (prim cdr lst)))
       (let ((x5044050635 (apply-prim = lst50634)))
         (clo-app kont5052950633 x5044050635)))))
  (proc
   (> _50784 . lst)
   (let ((kont5053150636 (prim car lst)))
     (let ((lst50637 (prim cdr lst)))
       (let ((x5044150638 (apply-prim > lst50637)))
         (clo-app kont5053150636 x5044150638)))))
  (proc
   (< _50785 . lst)
   (let ((kont5053350639 (prim car lst)))
     (let ((lst50640 (prim cdr lst)))
       (let ((x5044250641 (apply-prim < lst50640)))
         (clo-app kont5053350639 x5044250641)))))
  (proc
   (<= _50786 . lst)
   (let ((kont5053550642 (prim car lst)))
     (let ((lst50643 (prim cdr lst)))
       (let ((x5044350644 (apply-prim <= lst50643)))
         (clo-app kont5053550642 x5044350644)))))
  (proc
   (>= _50787 . lst)
   (let ((kont5053750645 (prim car lst)))
     (let ((lst50646 (prim cdr lst)))
       (let ((x5044450647 (apply-prim >= lst50646)))
         (clo-app kont5053750645 x5044450647)))))
  (proc
   (null? _50788 kont50539 x)
   (let ((x5044550648 (prim null? x))) (clo-app kont50539 x5044550648)))
  (proc
   (equal? _50789 kont50540 x y)
   (let ((x5044650649 (prim equal? x y))) (clo-app kont50540 x5044650649)))
  (proc
   (eq? _50790 kont50541 x y)
   (let ((x5044750650 (prim eq? x y))) (clo-app kont50541 x5044750650)))
  (proc
   (cons _50791 kont50542 a b)
   (let ((x5044850651 (prim cons a b))) (clo-app kont50542 x5044850651)))
  (proc
   (car _50792 kont50543 lst)
   (let ((x5044950652 (prim car lst))) (clo-app kont50543 x5044950652)))
  (proc
   (cdr _50793 kont50544 lst)
   (let ((x5045050653 (prim cdr lst))) (clo-app kont50544 x5045050653)))
  (proc
   (lam50794 env50795 a5045350657)
   (let ((a5045150654 (env-ref env50795 3)))
     (let ((kont50545 (env-ref env50795 2)))
       (let ((equal? (env-ref env50795 1)))
         (clo-app equal? kont50545 a5045150654 a5045350657)))))
  (proc
   (even? _50798 kont50545 x)
   (let ((a5045150654 '0))
     (let ((a5045250655 '2))
       (let ((f5054650656
              (make-closure lam50794 equal? kont50545 a5045150654)))
         (clo-app modulo f5054650656 x a5045250655)))))
  (proc
   (lam50799 env50800 a5045650661)
   (let ((equal? (env-ref env50800 3)))
     (let ((a5045450658 (env-ref env50800 2)))
       (let ((kont50547 (env-ref env50800 1)))
         (clo-app equal? kont50547 a5045450658 a5045650661)))))
  (proc
   (odd? _50803 kont50547 x)
   (let ((a5045450658 '1))
     (let ((a5045550659 '2))
       (let ((f5054850660
              (make-closure lam50799 kont50547 a5045450658 equal?)))
         (clo-app modulo f5054850660 x a5045550659)))))
  (proc
   (list _50804 . x)
   (let ((kont5054950662 (prim car x)))
     (let ((x50663 (prim cdr x))) (clo-app kont5054950662 x50663))))
  (proc
   (lam50807 env50808 a5046250673)
   (let ((x (env-ref env50808 3)))
     (let ((kont50551 (env-ref env50808 2)))
       (let ((member? (env-ref env50808 1)))
         (clo-app member? kont50551 x a5046250673)))))
  (proc
   (lam50809 env50810 a5046050670)
   (let ((cdr (env-ref env50810 5)))
     (let ((lst (env-ref env50810 4)))
       (let ((x (env-ref env50810 3)))
         (let ((kont50551 (env-ref env50810 2)))
           (let ((member? (env-ref env50810 1)))
             (if a5046050670
               (let ((x5046150671 '#t)) (clo-app kont50551 x5046150671))
               (let ((f5055250672 (make-closure lam50807 member? kont50551 x)))
                 (clo-app cdr f5055250672 lst)))))))))
  (proc
   (lam50811 env50812 a5045950668)
   (let ((cdr (env-ref env50812 6)))
     (let ((lst (env-ref env50812 5)))
       (let ((equal? (env-ref env50812 4)))
         (let ((x (env-ref env50812 3)))
           (let ((kont50551 (env-ref env50812 2)))
             (let ((member? (env-ref env50812 1)))
               (let ((f5055350669
                      (make-closure lam50809 member? kont50551 x lst cdr)))
                 (clo-app equal? f5055350669 a5045950668 x)))))))))
  (proc
   (lam50813 env50814 a5045750665)
   (let ((cdr (env-ref env50814 7)))
     (let ((lst (env-ref env50814 6)))
       (let ((equal? (env-ref env50814 5)))
         (let ((x (env-ref env50814 4)))
           (let ((car (env-ref env50814 3)))
             (let ((kont50551 (env-ref env50814 2)))
               (let ((member? (env-ref env50814 1)))
                 (if a5045750665
                   (let ((x5045850666 '#f)) (clo-app kont50551 x5045850666))
                   (let ((f5055450667
                          (make-closure
                           lam50811
                           member?
                           kont50551
                           x
                           equal?
                           lst
                           cdr)))
                     (clo-app car f5055450667 lst)))))))))))
  (proc
   (member? _50815 kont50551 x lst)
   (let ((f5055550664
          (make-closure lam50813 member? kont50551 car x equal? lst cdr)))
     (clo-app null? f5055550664 lst)))
  (proc
   (lam50816 env50817 a5046650681)
   (let ((kont50556 (env-ref env50817 4)))
     (let ((fun (env-ref env50817 3)))
       (let ((a5046550679 (env-ref env50817 2)))
         (let ((foldl (env-ref env50817 1)))
           (clo-app foldl kont50556 fun a5046550679 a5046650681))))))
  (proc
   (lam50818 env50819 a5046550679)
   (let ((cdr (env-ref env50819 5)))
     (let ((kont50556 (env-ref env50819 4)))
       (let ((lst (env-ref env50819 3)))
         (let ((fun (env-ref env50819 2)))
           (let ((foldl (env-ref env50819 1)))
             (let ((f5055750680
                    (make-closure lam50816 foldl a5046550679 fun kont50556)))
               (clo-app cdr f5055750680 lst))))))))
  (proc
   (lam50820 env50821 a5046450677)
   (let ((cdr (env-ref env50821 6)))
     (let ((kont50556 (env-ref env50821 5)))
       (let ((lst (env-ref env50821 4)))
         (let ((fun (env-ref env50821 3)))
           (let ((acc (env-ref env50821 2)))
             (let ((foldl (env-ref env50821 1)))
               (let ((f5055850678
                      (make-closure lam50818 foldl fun lst kont50556 cdr)))
                 (clo-app fun f5055850678 a5046450677 acc)))))))))
  (proc
   (lam50822 env50823 a5046350675)
   (let ((cdr (env-ref env50823 7)))
     (let ((kont50556 (env-ref env50823 6)))
       (let ((lst (env-ref env50823 5)))
         (let ((fun (env-ref env50823 4)))
           (let ((acc (env-ref env50823 3)))
             (let ((car (env-ref env50823 2)))
               (let ((foldl (env-ref env50823 1)))
                 (if a5046350675
                   (clo-app kont50556 acc)
                   (let ((f5055950676
                          (make-closure
                           lam50820
                           foldl
                           acc
                           fun
                           lst
                           kont50556
                           cdr)))
                     (clo-app car f5055950676 lst)))))))))))
  (proc
   (foldl _50824 kont50556 fun acc lst)
   (let ((f5056050674
          (make-closure lam50822 foldl car acc fun lst kont50556 cdr)))
     (clo-app null? f5056050674 lst)))
  (proc
   (lam50825 env50826 a5047050689)
   (let ((a5046850685 (env-ref env50826 3)))
     (let ((reverse-helper (env-ref env50826 2)))
       (let ((kont50561 (env-ref env50826 1)))
         (clo-app reverse-helper kont50561 a5046850685 a5047050689)))))
  (proc
   (lam50827 env50828 a5046950687)
   (let ((a5046850685 (env-ref env50828 5)))
     (let ((reverse-helper (env-ref env50828 4)))
       (let ((kont50561 (env-ref env50828 3)))
         (let ((lst2 (env-ref env50828 2)))
           (let ((cons (env-ref env50828 1)))
             (let ((f5056250688
                    (make-closure
                     lam50825
                     kont50561
                     reverse-helper
                     a5046850685)))
               (clo-app cons f5056250688 a5046950687 lst2))))))))
  (proc
   (lam50829 env50830 a5046850685)
   (let ((lst (env-ref env50830 6)))
     (let ((reverse-helper (env-ref env50830 5)))
       (let ((kont50561 (env-ref env50830 4)))
         (let ((lst2 (env-ref env50830 3)))
           (let ((car (env-ref env50830 2)))
             (let ((cons (env-ref env50830 1)))
               (let ((f5056350686
                      (make-closure
                       lam50827
                       cons
                       lst2
                       kont50561
                       reverse-helper
                       a5046850685)))
                 (clo-app car f5056350686 lst)))))))))
  (proc
   (lam50831 env50832 a5046750683)
   (let ((cdr (env-ref env50832 7)))
     (let ((lst (env-ref env50832 6)))
       (let ((reverse-helper (env-ref env50832 5)))
         (let ((kont50561 (env-ref env50832 4)))
           (let ((lst2 (env-ref env50832 3)))
             (let ((car (env-ref env50832 2)))
               (let ((cons (env-ref env50832 1)))
                 (if a5046750683
                   (clo-app kont50561 lst2)
                   (let ((f5056450684
                          (make-closure
                           lam50829
                           cons
                           car
                           lst2
                           kont50561
                           reverse-helper
                           lst)))
                     (clo-app cdr f5056450684 lst)))))))))))
  (proc
   (reverse-helper _50833 kont50561 lst lst2)
   (let ((f5056550682
          (make-closure
           lam50831
           cons
           car
           lst2
           kont50561
           reverse-helper
           lst
           cdr)))
     (clo-app null? f5056550682 lst)))
  (proc
   (lam50834 env50835 a5047150691)
   (let ((lst (env-ref env50835 3)))
     (let ((reverse-helper (env-ref env50835 2)))
       (let ((kont50566 (env-ref env50835 1)))
         (clo-app reverse-helper kont50566 lst a5047150691)))))
  (proc
   (reverse _50836 kont50566 lst)
   (let ((f5056750690 (make-closure lam50834 kont50566 reverse-helper lst)))
     (clo-app list f5056750690)))
  (proc
   (lam50837 env50838 x5047450696)
   (let ((kont50568 (env-ref env50838 1))) (clo-app kont50568 x5047450696)))
  (proc
   (lam50839 env50840 a5047950705)
   (let ((a5047550698 (env-ref env50840 4)))
     (let ((a5047750701 (env-ref env50840 3)))
       (let ((take-helper (env-ref env50840 2)))
         (let ((kont50568 (env-ref env50840 1)))
           (clo-app
            take-helper
            kont50568
            a5047550698
            a5047750701
            a5047950705))))))
  (proc
   (lam50841 env50842 a5047850703)
   (let ((a5047550698 (env-ref env50842 6)))
     (let ((a5047750701 (env-ref env50842 5)))
       (let ((cons (env-ref env50842 4)))
         (let ((kont50568 (env-ref env50842 3)))
           (let ((take-helper (env-ref env50842 2)))
             (let ((lst2 (env-ref env50842 1)))
               (let ((f5057050704
                      (make-closure
                       lam50839
                       kont50568
                       take-helper
                       a5047750701
                       a5047550698)))
                 (clo-app cons f5057050704 a5047850703 lst2)))))))))
  (proc
   (lam50843 env50844 a5047750701)
   (let ((a5047550698 (env-ref env50844 7)))
     (let ((lst (env-ref env50844 6)))
       (let ((car (env-ref env50844 5)))
         (let ((cons (env-ref env50844 4)))
           (let ((kont50568 (env-ref env50844 3)))
             (let ((take-helper (env-ref env50844 2)))
               (let ((lst2 (env-ref env50844 1)))
                 (let ((f5057150702
                        (make-closure
                         lam50841
                         lst2
                         take-helper
                         kont50568
                         cons
                         a5047750701
                         a5047550698)))
                   (clo-app car f5057150702 lst))))))))))
  (proc
   (lam50846 env50847 a5047550698)
   (let ((lst (env-ref env50847 8)))
     (let ((cons (env-ref env50847 7)))
       (let ((take-helper (env-ref env50847 6)))
         (let ((lst2 (env-ref env50847 5)))
           (let ((n (env-ref env50847 4)))
             (let ((car (env-ref env50847 3)))
               (let ((kont50568 (env-ref env50847 2)))
                 (let ((- (env-ref env50847 1)))
                   (let ((a5047650699 '1))
                     (let ((f5057250700
                            (make-closure
                             lam50843
                             lst2
                             take-helper
                             kont50568
                             cons
                             car
                             lst
                             a5047550698)))
                       (clo-app - f5057250700 n a5047650699))))))))))))
  (proc
   (lam50848 env50849 a5047350694)
   (let ((cdr (env-ref env50849 10)))
     (let ((lst (env-ref env50849 9)))
       (let ((reverse (env-ref env50849 8)))
         (let ((cons (env-ref env50849 7)))
           (let ((take-helper (env-ref env50849 6)))
             (let ((lst2 (env-ref env50849 5)))
               (let ((n (env-ref env50849 4)))
                 (let ((car (env-ref env50849 3)))
                   (let ((kont50568 (env-ref env50849 2)))
                     (let ((- (env-ref env50849 1)))
                       (if a5047350694
                         (let ((f5056950695 (make-closure lam50837 kont50568)))
                           (clo-app reverse f5056950695 lst2))
                         (let ((f5057350697
                                (make-closure
                                 lam50846
                                 -
                                 kont50568
                                 car
                                 n
                                 lst2
                                 take-helper
                                 cons
                                 lst)))
                           (clo-app cdr f5057350697 lst))))))))))))))
  (proc
   (take-helper _50851 kont50568 lst n lst2)
   (let ((a5047250692 '0))
     (let ((f5057450693
            (make-closure
             lam50848
             -
             kont50568
             car
             n
             lst2
             take-helper
             cons
             reverse
             lst
             cdr)))
       (clo-app = f5057450693 n a5047250692))))
  (proc
   (lam50852 env50853 a5048050707)
   (let ((lst (env-ref env50853 4)))
     (let ((kont50575 (env-ref env50853 3)))
       (let ((take-helper (env-ref env50853 2)))
         (let ((n (env-ref env50853 1)))
           (clo-app take-helper kont50575 lst n a5048050707))))))
  (proc
   (take _50854 kont50575 lst n)
   (let ((f5057650706 (make-closure lam50852 n take-helper kont50575 lst)))
     (clo-app list f5057650706)))
  (proc
   (lam50856 env50857 a5048550715)
   (let ((kont50577 (env-ref env50857 3)))
     (let ((+ (env-ref env50857 2)))
       (let ((a5048350711 (env-ref env50857 1)))
         (clo-app + kont50577 a5048350711 a5048550715)))))
  (proc
   (lam50858 env50859 a5048450713)
   (let ((length (env-ref env50859 4)))
     (let ((kont50577 (env-ref env50859 3)))
       (let ((+ (env-ref env50859 2)))
         (let ((a5048350711 (env-ref env50859 1)))
           (let ((f5057850714 (make-closure lam50856 a5048350711 + kont50577)))
             (clo-app length f5057850714 a5048450713)))))))
  (proc
   (lam50861 env50862 a5048150709)
   (let ((cdr (env-ref env50862 5)))
     (let ((lst (env-ref env50862 4)))
       (let ((length (env-ref env50862 3)))
         (let ((kont50577 (env-ref env50862 2)))
           (let ((+ (env-ref env50862 1)))
             (if a5048150709
               (let ((x5048250710 '0)) (clo-app kont50577 x5048250710))
               (let ((a5048350711 '1))
                 (let ((f5057950712
                        (make-closure
                         lam50858
                         a5048350711
                         +
                         kont50577
                         length)))
                   (clo-app cdr f5057950712 lst))))))))))
  (proc
   (length _50863 kont50577 lst)
   (let ((f5058050708 (make-closure lam50861 + kont50577 length lst cdr)))
     (clo-app null? f5058050708 lst)))
  (proc
   (lam50864 env50865 x5048750719)
   (let ((kont50581 (env-ref env50865 1))) (clo-app kont50581 x5048750719)))
  (proc
   (lam50866 env50867 a5049150727)
   (let ((a5048950723 (env-ref env50867 3)))
     (let ((kont50581 (env-ref env50867 2)))
       (let ((cons (env-ref env50867 1)))
         (clo-app cons kont50581 a5048950723 a5049150727)))))
  (proc
   (lam50868 env50869 a5049050725)
   (let ((map (env-ref env50869 5)))
     (let ((a5048950723 (env-ref env50869 4)))
       (let ((proc (env-ref env50869 3)))
         (let ((kont50581 (env-ref env50869 2)))
           (let ((cons (env-ref env50869 1)))
             (let ((f5058350726
                    (make-closure lam50866 cons kont50581 a5048950723)))
               (clo-app map f5058350726 proc a5049050725))))))))
  (proc
   (lam50870 env50871 a5048950723)
   (let ((cdr (env-ref env50871 6)))
     (let ((lst (env-ref env50871 5)))
       (let ((map (env-ref env50871 4)))
         (let ((proc (env-ref env50871 3)))
           (let ((kont50581 (env-ref env50871 2)))
             (let ((cons (env-ref env50871 1)))
               (let ((f5058450724
                      (make-closure
                       lam50868
                       cons
                       kont50581
                       proc
                       a5048950723
                       map)))
                 (clo-app cdr f5058450724 lst)))))))))
  (proc
   (lam50872 env50873 a5048850721)
   (let ((cdr (env-ref env50873 6)))
     (let ((lst (env-ref env50873 5)))
       (let ((map (env-ref env50873 4)))
         (let ((proc (env-ref env50873 3)))
           (let ((kont50581 (env-ref env50873 2)))
             (let ((cons (env-ref env50873 1)))
               (let ((f5058550722
                      (make-closure lam50870 cons kont50581 proc map lst cdr)))
                 (clo-app proc f5058550722 a5048850721)))))))))
  (proc
   (lam50874 env50875 a5048650717)
   (let ((lst (env-ref env50875 8)))
     (let ((map (env-ref env50875 7)))
       (let ((proc (env-ref env50875 6)))
         (let ((kont50581 (env-ref env50875 5)))
           (let ((car (env-ref env50875 4)))
             (let ((cons (env-ref env50875 3)))
               (let ((list (env-ref env50875 2)))
                 (let ((cdr (env-ref env50875 1)))
                   (if a5048650717
                     (let ((f5058250718 (make-closure lam50864 kont50581)))
                       (clo-app list f5058250718))
                     (let ((f5058650720
                            (make-closure
                             lam50872
                             cons
                             kont50581
                             proc
                             map
                             lst
                             cdr)))
                       (clo-app car f5058650720 lst))))))))))))
  (proc
   (map _50876 kont50581 proc lst)
   (let ((f5058750716
          (make-closure lam50874 cdr list cons car kont50581 proc map lst)))
     (clo-app null? f5058750716 lst)))
  (proc
   (lam50877 env50878 x5049350731)
   (let ((kont50588 (env-ref env50878 1))) (clo-app kont50588 x5049350731)))
  (proc
   (lam50879 env50880 a5049850741)
   (let ((kont50588 (env-ref env50880 3)))
     (let ((a5049650737 (env-ref env50880 2)))
       (let ((cons (env-ref env50880 1)))
         (clo-app cons kont50588 a5049650737 a5049850741)))))
  (proc
   (lam50881 env50882 a5049750739)
   (let ((kont50588 (env-ref env50882 5)))
     (let ((op (env-ref env50882 4)))
       (let ((a5049650737 (env-ref env50882 3)))
         (let ((filter (env-ref env50882 2)))
           (let ((cons (env-ref env50882 1)))
             (let ((f5059050740
                    (make-closure lam50879 cons a5049650737 kont50588)))
               (clo-app filter f5059050740 op a5049750739))))))))
  (proc
   (lam50883 env50884 a5049650737)
   (let ((cdr (env-ref env50884 6)))
     (let ((kont50588 (env-ref env50884 5)))
       (let ((lst (env-ref env50884 4)))
         (let ((op (env-ref env50884 3)))
           (let ((filter (env-ref env50884 2)))
             (let ((cons (env-ref env50884 1)))
               (let ((f5059150738
                      (make-closure
                       lam50881
                       cons
                       filter
                       a5049650737
                       op
                       kont50588)))
                 (clo-app cdr f5059150738 lst)))))))))
  (proc
   (lam50885 env50886 a5049950743)
   (let ((kont50588 (env-ref env50886 3)))
     (let ((op (env-ref env50886 2)))
       (let ((filter (env-ref env50886 1)))
         (clo-app filter kont50588 op a5049950743)))))
  (proc
   (lam50887 env50888 a5049550735)
   (let ((cdr (env-ref env50888 7)))
     (let ((kont50588 (env-ref env50888 6)))
       (let ((lst (env-ref env50888 5)))
         (let ((op (env-ref env50888 4)))
           (let ((cons (env-ref env50888 3)))
             (let ((filter (env-ref env50888 2)))
               (let ((car (env-ref env50888 1)))
                 (if a5049550735
                   (let ((f5059250736
                          (make-closure
                           lam50883
                           cons
                           filter
                           op
                           lst
                           kont50588
                           cdr)))
                     (clo-app car f5059250736 lst))
                   (let ((f5059350742
                          (make-closure lam50885 filter op kont50588)))
                     (clo-app cdr f5059350742 lst)))))))))))
  (proc
   (lam50889 env50890 a5049450733)
   (let ((cdr (env-ref env50890 7)))
     (let ((kont50588 (env-ref env50890 6)))
       (let ((lst (env-ref env50890 5)))
         (let ((op (env-ref env50890 4)))
           (let ((cons (env-ref env50890 3)))
             (let ((filter (env-ref env50890 2)))
               (let ((car (env-ref env50890 1)))
                 (let ((f5059450734
                        (make-closure
                         lam50887
                         car
                         filter
                         cons
                         op
                         lst
                         kont50588
                         cdr)))
                   (clo-app op f5059450734 a5049450733))))))))))
  (proc
   (lam50891 env50892 a5049250729)
   (let ((kont50588 (env-ref env50892 8)))
     (let ((lst (env-ref env50892 7)))
       (let ((op (env-ref env50892 6)))
         (let ((cons (env-ref env50892 5)))
           (let ((list (env-ref env50892 4)))
             (let ((cdr (env-ref env50892 3)))
               (let ((filter (env-ref env50892 2)))
                 (let ((car (env-ref env50892 1)))
                   (if a5049250729
                     (let ((f5058950730 (make-closure lam50877 kont50588)))
                       (clo-app list f5058950730))
                     (let ((f5059550732
                            (make-closure
                             lam50889
                             car
                             filter
                             cons
                             op
                             lst
                             kont50588
                             cdr)))
                       (clo-app car f5059550732 lst))))))))))))
  (proc
   (filter _50893 kont50588 op lst)
   (let ((f5059650728
          (make-closure lam50891 car filter cdr list cons op lst kont50588)))
     (clo-app null? f5059650728 lst)))
  (proc
   (lam50894 env50895 a5050450751)
   (let ((a5050250748 (env-ref env50895 3)))
     (let ((drop (env-ref env50895 2)))
       (let ((kont50597 (env-ref env50895 1)))
         (clo-app drop kont50597 a5050250748 a5050450751)))))
  (proc
   (lam50897 env50898 a5050250748)
   (let ((drop (env-ref env50898 4)))
     (let ((kont50597 (env-ref env50898 3)))
       (let ((n (env-ref env50898 2)))
         (let ((- (env-ref env50898 1)))
           (let ((a5050350749 '1))
             (let ((f5059850750
                    (make-closure lam50894 kont50597 drop a5050250748)))
               (clo-app - f5059850750 n a5050350749))))))))
  (proc
   (lam50899 env50900 a5050150746)
   (let ((cdr (env-ref env50900 6)))
     (let ((kont50597 (env-ref env50900 5)))
       (let ((n (env-ref env50900 4)))
         (let ((- (env-ref env50900 3)))
           (let ((lst (env-ref env50900 2)))
             (let ((drop (env-ref env50900 1)))
               (if a5050150746
                 (clo-app kont50597 lst)
                 (let ((f5059950747
                        (make-closure lam50897 - n kont50597 drop)))
                   (clo-app cdr f5059950747 lst))))))))))
  (proc
   (drop _50902 kont50597 lst n)
   (let ((a5050050744 '0))
     (let ((f5060050745 (make-closure lam50899 drop lst - n kont50597 cdr)))
       (clo-app = f5060050745 n a5050050744))))
  (proc
   (lam50903 env50904 a5050850759)
   (let ((kont50601 (env-ref env50904 3)))
     (let ((a5050650755 (env-ref env50904 2)))
       (let ((proc (env-ref env50904 1)))
         (clo-app proc kont50601 a5050650755 a5050850759)))))
  (proc
   (lam50905 env50906 a5050750757)
   (let ((kont50601 (env-ref env50906 5)))
     (let ((foldr (env-ref env50906 4)))
       (let ((a5050650755 (env-ref env50906 3)))
         (let ((proc (env-ref env50906 2)))
           (let ((acc (env-ref env50906 1)))
             (let ((f5060250758
                    (make-closure lam50903 proc a5050650755 kont50601)))
               (clo-app foldr f5060250758 proc acc a5050750757))))))))
  (proc
   (lam50907 env50908 a5050650755)
   (let ((kont50601 (env-ref env50908 6)))
     (let ((cdr (env-ref env50908 5)))
       (let ((foldr (env-ref env50908 4)))
         (let ((lst (env-ref env50908 3)))
           (let ((proc (env-ref env50908 2)))
             (let ((acc (env-ref env50908 1)))
               (let ((f5060350756
                      (make-closure
                       lam50905
                       acc
                       proc
                       a5050650755
                       foldr
                       kont50601)))
                 (clo-app cdr f5060350756 lst)))))))))
  (proc
   (lam50909 env50910 a5050550753)
   (let ((car (env-ref env50910 7)))
     (let ((kont50601 (env-ref env50910 6)))
       (let ((cdr (env-ref env50910 5)))
         (let ((foldr (env-ref env50910 4)))
           (let ((lst (env-ref env50910 3)))
             (let ((proc (env-ref env50910 2)))
               (let ((acc (env-ref env50910 1)))
                 (if a5050550753
                   (clo-app kont50601 acc)
                   (let ((f5060450754
                          (make-closure
                           lam50907
                           acc
                           proc
                           lst
                           foldr
                           cdr
                           kont50601)))
                     (clo-app car f5060450754 lst)))))))))))
  (proc
   (foldr _50911 kont50601 proc acc lst)
   (let ((f5060550752
          (make-closure lam50909 acc proc lst foldr cdr kont50601 car)))
     (clo-app null? f5060550752 lst)))
  (proc
   (lam50912 env50913 a5051250767)
   (let ((a5051050763 (env-ref env50913 3)))
     (let ((kont50606 (env-ref env50913 2)))
       (let ((cons (env-ref env50913 1)))
         (clo-app cons kont50606 a5051050763 a5051250767)))))
  (proc
   (lam50914 env50915 a5051150765)
   (let ((a5051050763 (env-ref env50915 5)))
     (let ((kont50606 (env-ref env50915 4)))
       (let ((append (env-ref env50915 3)))
         (let ((lst2 (env-ref env50915 2)))
           (let ((cons (env-ref env50915 1)))
             (let ((f5060750766
                    (make-closure lam50912 cons kont50606 a5051050763)))
               (clo-app append f5060750766 a5051150765 lst2))))))))
  (proc
   (lam50916 env50917 a5051050763)
   (let ((cdr (env-ref env50917 6)))
     (let ((kont50606 (env-ref env50917 5)))
       (let ((append (env-ref env50917 4)))
         (let ((lst2 (env-ref env50917 3)))
           (let ((lst1 (env-ref env50917 2)))
             (let ((cons (env-ref env50917 1)))
               (let ((f5060850764
                      (make-closure
                       lam50914
                       cons
                       lst2
                       append
                       kont50606
                       a5051050763)))
                 (clo-app cdr f5060850764 lst1)))))))))
  (proc
   (lam50918 env50919 a5050950761)
   (let ((cdr (env-ref env50919 7)))
     (let ((kont50606 (env-ref env50919 6)))
       (let ((append (env-ref env50919 5)))
         (let ((lst2 (env-ref env50919 4)))
           (let ((cons (env-ref env50919 3)))
             (let ((lst1 (env-ref env50919 2)))
               (let ((car (env-ref env50919 1)))
                 (if a5050950761
                   (clo-app kont50606 lst2)
                   (let ((f5060950762
                          (make-closure
                           lam50916
                           cons
                           lst1
                           lst2
                           append
                           kont50606
                           cdr)))
                     (clo-app car f5060950762 lst1)))))))))))
  (proc
   (append _50920 kont50606 lst1 lst2)
   (let ((f5061050760
          (make-closure lam50918 car lst1 cons lst2 append kont50606 cdr)))
     (clo-app null? f5061050760 lst1)))
  (proc
   (hash _50921 . lst)
   (let ((kont5061150768 (prim car lst)))
     (let ((lst50769 (prim cdr lst)))
       (let ((x5051350770 (apply-prim hash lst50769)))
         (clo-app kont5061150768 x5051350770)))))
  (proc
   (hash-ref _50922 kont50613 h k)
   (let ((x5051450771 (prim hash-ref h k))) (clo-app kont50613 x5051450771)))
  (proc
   (hash-set _50923 kont50614 h k v)
   (let ((x5051550772 (prim hash-set h k v))) (clo-app kont50614 x5051550772)))
  (proc
   (hash-has-key? _50924 kont50615 h k)
   (let ((x5051650773 (prim hash-has-key? h k)))
     (clo-app kont50615 x5051650773)))
  (proc
   (hash-count _50925 kont50616 h)
   (let ((x5051750774 (prim hash-count h))) (clo-app kont50616 x5051750774)))
  (proc
   (call _50927 kont50617)
   (let ((x5051850775 "random")) (clo-app kont50617 x5051850775)))
  (proc
   (lam50928 env50929 x5051950777)
   (let ((kont50618 (env-ref env50929 1))) (clo-app kont50618 x5051950777)))
  (proc
   (brouhaha_main _50930 kont50618)
   (let ((f5061950776 (make-closure lam50928 kont50618)))
     (clo-app call f5061950776))))
