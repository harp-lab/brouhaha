'((define (+ . lst)
    (let ((kont5215252252 (prim car lst)))
      (let ((lst52253 (prim cdr lst)))
        (let ((x5206752254 (apply-prim + lst52253)))
          (kont5215252252 x5206752254)))))
  (define (- . lst)
    (let ((kont5215452255 (prim car lst)))
      (let ((lst52256 (prim cdr lst)))
        (let ((x5206852257 (apply-prim - lst52256)))
          (kont5215452255 x5206852257)))))
  (define (* . lst)
    (let ((kont5215652258 (prim car lst)))
      (let ((lst52259 (prim cdr lst)))
        (let ((x5206952260 (apply-prim * lst52259)))
          (kont5215652258 x5206952260)))))
  (define (modulo kont52158 a b)
    (let ((x5207052261 (prim modulo a b))) (kont52158 x5207052261)))
  (define (/ . lst)
    (let ((kont5215952262 (prim car lst)))
      (let ((lst52263 (prim cdr lst)))
        (let ((x5207152264 (apply-prim / lst52263)))
          (kont5215952262 x5207152264)))))
  (define (= . lst)
    (let ((kont5216152265 (prim car lst)))
      (let ((lst52266 (prim cdr lst)))
        (let ((x5207252267 (apply-prim = lst52266)))
          (kont5216152265 x5207252267)))))
  (define (> . lst)
    (let ((kont5216352268 (prim car lst)))
      (let ((lst52269 (prim cdr lst)))
        (let ((x5207352270 (apply-prim > lst52269)))
          (kont5216352268 x5207352270)))))
  (define (< . lst)
    (let ((kont5216552271 (prim car lst)))
      (let ((lst52272 (prim cdr lst)))
        (let ((x5207452273 (apply-prim < lst52272)))
          (kont5216552271 x5207452273)))))
  (define (<= . lst)
    (let ((kont5216752274 (prim car lst)))
      (let ((lst52275 (prim cdr lst)))
        (let ((x5207552276 (apply-prim <= lst52275)))
          (kont5216752274 x5207552276)))))
  (define (>= . lst)
    (let ((kont5216952277 (prim car lst)))
      (let ((lst52278 (prim cdr lst)))
        (let ((x5207652279 (apply-prim >= lst52278)))
          (kont5216952277 x5207652279)))))
  (define (null? kont52171 x)
    (let ((x5207752280 (prim null? x))) (kont52171 x5207752280)))
  (define (equal? kont52172 x y)
    (let ((x5207852281 (prim equal? x y))) (kont52172 x5207852281)))
  (define (eq? kont52173 x y)
    (let ((x5207952282 (prim eq? x y))) (kont52173 x5207952282)))
  (define (cons kont52174 a b)
    (let ((x5208052283 (prim cons a b))) (kont52174 x5208052283)))
  (define (car kont52175 lst)
    (let ((x5208152284 (prim car lst))) (kont52175 x5208152284)))
  (define (cdr kont52176 lst)
    (let ((x5208252285 (prim cdr lst))) (kont52176 x5208252285)))
  (define (even? kont52177 x)
    (let ((a5208352286 '0))
      (let ((a5208452287 '2))
        (let ((f5217852288
               (lambda (a5208552289)
                 (equal? kont52177 a5208352286 a5208552289))))
          (modulo f5217852288 x a5208452287)))))
  (define (odd? kont52179 x)
    (let ((a5208652290 '1))
      (let ((a5208752291 '2))
        (let ((f5218052292
               (lambda (a5208852293)
                 (equal? kont52179 a5208652290 a5208852293))))
          (modulo f5218052292 x a5208752291)))))
  (define (list . x)
    (let ((kont5218152294 (prim car x)))
      (let ((x52295 (prim cdr x))) (kont5218152294 x52295))))
  (define (member? kont52183 x lst)
    (let ((f5218752296
           (lambda (a5208952297)
             (if a5208952297
               (let ((x5209052298 '#f)) (kont52183 x5209052298))
               (let ((f5218652299
                      (lambda (a5209152300)
                        (let ((f5218552301
                               (lambda (a5209252302)
                                 (if a5209252302
                                   (let ((x5209352303 '#t))
                                     (kont52183 x5209352303))
                                   (let ((f5218452304
                                          (lambda (a5209452305)
                                            (member?
                                             kont52183
                                             x
                                             a5209452305))))
                                     (cdr f5218452304 lst))))))
                          (equal? f5218552301 a5209152300 x)))))
                 (car f5218652299 lst))))))
      (null? f5218752296 lst)))
  (define (foldl kont52188 fun acc lst)
    (let ((f5219252306
           (lambda (a5209552307)
             (if a5209552307
               (kont52188 acc)
               (let ((f5219152308
                      (lambda (a5209652309)
                        (let ((f5219052310
                               (lambda (a5209752311)
                                 (let ((f5218952312
                                        (lambda (a5209852313)
                                          (foldl
                                           kont52188
                                           fun
                                           a5209752311
                                           a5209852313))))
                                   (cdr f5218952312 lst)))))
                          (fun f5219052310 a5209652309 acc)))))
                 (car f5219152308 lst))))))
      (null? f5219252306 lst)))
  (define (reverse-helper kont52193 lst lst2)
    (let ((f5219752314
           (lambda (a5209952315)
             (if a5209952315
               (kont52193 lst2)
               (let ((f5219652316
                      (lambda (a5210052317)
                        (let ((f5219552318
                               (lambda (a5210152319)
                                 (let ((f5219452320
                                        (lambda (a5210252321)
                                          (reverse-helper
                                           kont52193
                                           a5210052317
                                           a5210252321))))
                                   (cons f5219452320 a5210152319 lst2)))))
                          (car f5219552318 lst)))))
                 (cdr f5219652316 lst))))))
      (null? f5219752314 lst)))
  (define (reverse kont52198 lst)
    (let ((f5219952322
           (lambda (a5210352323) (reverse-helper kont52198 lst a5210352323))))
      (list f5219952322)))
  (define (take-helper kont52200 lst n lst2)
    (let ((a5210452324 '0))
      (let ((f5220652325
             (lambda (a5210552326)
               (if a5210552326
                 (let ((f5220152327
                        (lambda (x5210652328) (kont52200 x5210652328))))
                   (reverse f5220152327 lst2))
                 (let ((f5220552329
                        (lambda (a5210752330)
                          (let ((a5210852331 '1))
                            (let ((f5220452332
                                   (lambda (a5210952333)
                                     (let ((f5220352334
                                            (lambda (a5211052335)
                                              (let ((f5220252336
                                                     (lambda (a5211152337)
                                                       (take-helper
                                                        kont52200
                                                        a5210752330
                                                        a5210952333
                                                        a5211152337))))
                                                (cons
                                                 f5220252336
                                                 a5211052335
                                                 lst2)))))
                                       (car f5220352334 lst)))))
                              (- f5220452332 n a5210852331))))))
                   (cdr f5220552329 lst))))))
        (= f5220652325 n a5210452324))))
  (define (take kont52207 lst n)
    (let ((f5220852338
           (lambda (a5211252339) (take-helper kont52207 lst n a5211252339))))
      (list f5220852338)))
  (define (length kont52209 lst)
    (let ((f5221252340
           (lambda (a5211352341)
             (if a5211352341
               (let ((x5211452342 '0)) (kont52209 x5211452342))
               (let ((a5211552343 '1))
                 (let ((f5221152344
                        (lambda (a5211652345)
                          (let ((f5221052346
                                 (lambda (a5211752347)
                                   (+ kont52209 a5211552343 a5211752347))))
                            (length f5221052346 a5211652345)))))
                   (cdr f5221152344 lst)))))))
      (null? f5221252340 lst)))
  (define (map kont52213 proc lst)
    (let ((f5221952348
           (lambda (a5211852349)
             (if a5211852349
               (let ((f5221452350
                      (lambda (x5211952351) (kont52213 x5211952351))))
                 (list f5221452350))
               (let ((f5221852352
                      (lambda (a5212052353)
                        (let ((f5221752354
                               (lambda (a5212152355)
                                 (let ((f5221652356
                                        (lambda (a5212252357)
                                          (let ((f5221552358
                                                 (lambda (a5212352359)
                                                   (cons
                                                    kont52213
                                                    a5212152355
                                                    a5212352359))))
                                            (map
                                             f5221552358
                                             proc
                                             a5212252357)))))
                                   (cdr f5221652356 lst)))))
                          (proc f5221752354 a5212052353)))))
                 (car f5221852352 lst))))))
      (null? f5221952348 lst)))
  (define (filter kont52220 op lst)
    (let ((f5222852360
           (lambda (a5212452361)
             (if a5212452361
               (let ((f5222152362
                      (lambda (x5212552363) (kont52220 x5212552363))))
                 (list f5222152362))
               (let ((f5222752364
                      (lambda (a5212652365)
                        (let ((f5222652366
                               (lambda (a5212752367)
                                 (if a5212752367
                                   (let ((f5222452368
                                          (lambda (a5212852369)
                                            (let ((f5222352370
                                                   (lambda (a5212952371)
                                                     (let ((f5222252372
                                                            (lambda (a5213052373)
                                                              (cons
                                                               kont52220
                                                               a5212852369
                                                               a5213052373))))
                                                       (filter
                                                        f5222252372
                                                        op
                                                        a5212952371)))))
                                              (cdr f5222352370 lst)))))
                                     (car f5222452368 lst))
                                   (let ((f5222552374
                                          (lambda (a5213152375)
                                            (filter
                                             kont52220
                                             op
                                             a5213152375))))
                                     (cdr f5222552374 lst))))))
                          (op f5222652366 a5212652365)))))
                 (car f5222752364 lst))))))
      (null? f5222852360 lst)))
  (define (drop kont52229 lst n)
    (let ((a5213252376 '0))
      (let ((f5223252377
             (lambda (a5213352378)
               (if a5213352378
                 (kont52229 lst)
                 (let ((f5223152379
                        (lambda (a5213452380)
                          (let ((a5213552381 '1))
                            (let ((f5223052382
                                   (lambda (a5213652383)
                                     (drop
                                      kont52229
                                      a5213452380
                                      a5213652383))))
                              (- f5223052382 n a5213552381))))))
                   (cdr f5223152379 lst))))))
        (= f5223252377 n a5213252376))))
  (define (foldr kont52233 proc acc lst)
    (let ((f5223752384
           (lambda (a5213752385)
             (if a5213752385
               (kont52233 acc)
               (let ((f5223652386
                      (lambda (a5213852387)
                        (let ((f5223552388
                               (lambda (a5213952389)
                                 (let ((f5223452390
                                        (lambda (a5214052391)
                                          (proc
                                           kont52233
                                           a5213852387
                                           a5214052391))))
                                   (foldr f5223452390 proc acc a5213952389)))))
                          (cdr f5223552388 lst)))))
                 (car f5223652386 lst))))))
      (null? f5223752384 lst)))
  (define (append kont52238 lst1 lst2)
    (let ((f5224252392
           (lambda (a5214152393)
             (if a5214152393
               (kont52238 lst2)
               (let ((f5224152394
                      (lambda (a5214252395)
                        (let ((f5224052396
                               (lambda (a5214352397)
                                 (let ((f5223952398
                                        (lambda (a5214452399)
                                          (cons
                                           kont52238
                                           a5214252395
                                           a5214452399))))
                                   (append f5223952398 a5214352397 lst2)))))
                          (cdr f5224052396 lst1)))))
                 (car f5224152394 lst1))))))
      (null? f5224252392 lst1)))
  (define (hash . lst)
    (let ((kont5224352400 (prim car lst)))
      (let ((lst52401 (prim cdr lst)))
        (let ((x5214552402 (apply-prim hash lst52401)))
          (kont5224352400 x5214552402)))))
  (define (hash-ref kont52245 h k)
    (let ((x5214652403 (prim hash-ref h k))) (kont52245 x5214652403)))
  (define (hash-set kont52246 h k v)
    (let ((x5214752404 (prim hash-set h k v))) (kont52246 x5214752404)))
  (define (hash-has-key? kont52247 h k)
    (let ((x5214852405 (prim hash-has-key? h k))) (kont52247 x5214852405)))
  (define (hash-count kont52248 h)
    (let ((x5214952406 (prim hash-count h))) (kont52248 x5214952406)))
  (define (call kont52249)
    (let ((x5215052407 "random")) (kont52249 x5215052407)))
  (define (brouhaha_main kont52250)
    (let ((f5225152408 (lambda (x5215152409) (kont52250 x5215152409))))
      (call f5225152408))))
