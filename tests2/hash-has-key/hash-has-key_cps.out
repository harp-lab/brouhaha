'((define (+ . lst)
    (let ((kont3992740028 (prim car lst)))
      (let ((lst40029 (prim cdr lst)))
        (let ((x3983740030 (apply-prim + lst40029)))
          (kont3992740028 x3983740030)))))
  (define (- . lst)
    (let ((kont3992940031 (prim car lst)))
      (let ((lst40032 (prim cdr lst)))
        (let ((x3983840033 (apply-prim - lst40032)))
          (kont3992940031 x3983840033)))))
  (define (* . lst)
    (let ((kont3993140034 (prim car lst)))
      (let ((lst40035 (prim cdr lst)))
        (let ((x3983940036 (apply-prim * lst40035)))
          (kont3993140034 x3983940036)))))
  (define (modulo kont39933 a b)
    (let ((x3984040037 (prim modulo a b))) (kont39933 x3984040037)))
  (define (/ . lst)
    (let ((kont3993440038 (prim car lst)))
      (let ((lst40039 (prim cdr lst)))
        (let ((x3984140040 (apply-prim / lst40039)))
          (kont3993440038 x3984140040)))))
  (define (= . lst)
    (let ((kont3993640041 (prim car lst)))
      (let ((lst40042 (prim cdr lst)))
        (let ((x3984240043 (apply-prim = lst40042)))
          (kont3993640041 x3984240043)))))
  (define (> . lst)
    (let ((kont3993840044 (prim car lst)))
      (let ((lst40045 (prim cdr lst)))
        (let ((x3984340046 (apply-prim > lst40045)))
          (kont3993840044 x3984340046)))))
  (define (< . lst)
    (let ((kont3994040047 (prim car lst)))
      (let ((lst40048 (prim cdr lst)))
        (let ((x3984440049 (apply-prim < lst40048)))
          (kont3994040047 x3984440049)))))
  (define (<= . lst)
    (let ((kont3994240050 (prim car lst)))
      (let ((lst40051 (prim cdr lst)))
        (let ((x3984540052 (apply-prim <= lst40051)))
          (kont3994240050 x3984540052)))))
  (define (>= . lst)
    (let ((kont3994440053 (prim car lst)))
      (let ((lst40054 (prim cdr lst)))
        (let ((x3984640055 (apply-prim >= lst40054)))
          (kont3994440053 x3984640055)))))
  (define (null? kont39946 x)
    (let ((x3984740056 (prim null? x))) (kont39946 x3984740056)))
  (define (equal? kont39947 x y)
    (let ((x3984840057 (prim equal? x y))) (kont39947 x3984840057)))
  (define (eq? kont39948 x y)
    (let ((x3984940058 (prim eq? x y))) (kont39948 x3984940058)))
  (define (cons kont39949 a b)
    (let ((x3985040059 (prim cons a b))) (kont39949 x3985040059)))
  (define (car kont39950 lst)
    (let ((x3985140060 (prim car lst))) (kont39950 x3985140060)))
  (define (cdr kont39951 lst)
    (let ((x3985240061 (prim cdr lst))) (kont39951 x3985240061)))
  (define (even? kont39952 x)
    (let ((a3985340062 '0))
      (let ((a3985440063 '2))
        (let ((f3995340064
               (lambda (a3985540065)
                 (equal? kont39952 a3985340062 a3985540065))))
          (modulo f3995340064 x a3985440063)))))
  (define (odd? kont39954 x)
    (let ((a3985640066 '1))
      (let ((a3985740067 '2))
        (let ((f3995540068
               (lambda (a3985840069)
                 (equal? kont39954 a3985640066 a3985840069))))
          (modulo f3995540068 x a3985740067)))))
  (define (list . x)
    (let ((kont3995640070 (prim car x)))
      (let ((x40071 (prim cdr x))) (kont3995640070 x40071))))
  (define (member? kont39958 x lst)
    (let ((f3996240072
           (lambda (a3985940073)
             (if a3985940073
               (let ((x3986040074 '#f)) (kont39958 x3986040074))
               (let ((f3996140075
                      (lambda (a3986140076)
                        (let ((f3996040077
                               (lambda (a3986240078)
                                 (if a3986240078
                                   (let ((x3986340079 '#t))
                                     (kont39958 x3986340079))
                                   (let ((f3995940080
                                          (lambda (a3986440081)
                                            (member?
                                             kont39958
                                             x
                                             a3986440081))))
                                     (cdr f3995940080 lst))))))
                          (equal? f3996040077 a3986140076 x)))))
                 (car f3996140075 lst))))))
      (null? f3996240072 lst)))
  (define (foldl kont39963 fun acc lst)
    (let ((f3996740082
           (lambda (a3986540083)
             (if a3986540083
               (kont39963 acc)
               (let ((f3996640084
                      (lambda (a3986640085)
                        (let ((f3996540086
                               (lambda (a3986740087)
                                 (let ((f3996440088
                                        (lambda (a3986840089)
                                          (foldl
                                           kont39963
                                           fun
                                           a3986740087
                                           a3986840089))))
                                   (cdr f3996440088 lst)))))
                          (fun f3996540086 a3986640085 acc)))))
                 (car f3996640084 lst))))))
      (null? f3996740082 lst)))
  (define (reverse-helper kont39968 lst lst2)
    (let ((f3997240090
           (lambda (a3986940091)
             (if a3986940091
               (kont39968 lst2)
               (let ((f3997140092
                      (lambda (a3987040093)
                        (let ((f3997040094
                               (lambda (a3987140095)
                                 (let ((f3996940096
                                        (lambda (a3987240097)
                                          (reverse-helper
                                           kont39968
                                           a3987040093
                                           a3987240097))))
                                   (cons f3996940096 a3987140095 lst2)))))
                          (car f3997040094 lst)))))
                 (cdr f3997140092 lst))))))
      (null? f3997240090 lst)))
  (define (reverse kont39973 lst)
    (let ((f3997440098
           (lambda (a3987340099) (reverse-helper kont39973 lst a3987340099))))
      (list f3997440098)))
  (define (take-helper kont39975 lst n lst2)
    (let ((a3987440100 '0))
      (let ((f3998140101
             (lambda (a3987540102)
               (if a3987540102
                 (let ((f3997640103
                        (lambda (x3987640104) (kont39975 x3987640104))))
                   (reverse f3997640103 lst2))
                 (let ((f3998040105
                        (lambda (a3987740106)
                          (let ((a3987840107 '1))
                            (let ((f3997940108
                                   (lambda (a3987940109)
                                     (let ((f3997840110
                                            (lambda (a3988040111)
                                              (let ((f3997740112
                                                     (lambda (a3988140113)
                                                       (take-helper
                                                        kont39975
                                                        a3987740106
                                                        a3987940109
                                                        a3988140113))))
                                                (cons
                                                 f3997740112
                                                 a3988040111
                                                 lst2)))))
                                       (car f3997840110 lst)))))
                              (- f3997940108 n a3987840107))))))
                   (cdr f3998040105 lst))))))
        (= f3998140101 n a3987440100))))
  (define (take kont39982 lst n)
    (let ((f3998340114
           (lambda (a3988240115) (take-helper kont39982 lst n a3988240115))))
      (list f3998340114)))
  (define (length kont39984 lst)
    (let ((f3998740116
           (lambda (a3988340117)
             (if a3988340117
               (let ((x3988440118 '0)) (kont39984 x3988440118))
               (let ((a3988540119 '1))
                 (let ((f3998640120
                        (lambda (a3988640121)
                          (let ((f3998540122
                                 (lambda (a3988740123)
                                   (+ kont39984 a3988540119 a3988740123))))
                            (length f3998540122 a3988640121)))))
                   (cdr f3998640120 lst)))))))
      (null? f3998740116 lst)))
  (define (map kont39988 proc lst)
    (let ((f3999440124
           (lambda (a3988840125)
             (if a3988840125
               (let ((f3998940126
                      (lambda (x3988940127) (kont39988 x3988940127))))
                 (list f3998940126))
               (let ((f3999340128
                      (lambda (a3989040129)
                        (let ((f3999240130
                               (lambda (a3989140131)
                                 (let ((f3999140132
                                        (lambda (a3989240133)
                                          (let ((f3999040134
                                                 (lambda (a3989340135)
                                                   (cons
                                                    kont39988
                                                    a3989140131
                                                    a3989340135))))
                                            (map
                                             f3999040134
                                             proc
                                             a3989240133)))))
                                   (cdr f3999140132 lst)))))
                          (proc f3999240130 a3989040129)))))
                 (car f3999340128 lst))))))
      (null? f3999440124 lst)))
  (define (filter kont39995 op lst)
    (let ((f4000340136
           (lambda (a3989440137)
             (if a3989440137
               (let ((f3999640138
                      (lambda (x3989540139) (kont39995 x3989540139))))
                 (list f3999640138))
               (let ((f4000240140
                      (lambda (a3989640141)
                        (let ((f4000140142
                               (lambda (a3989740143)
                                 (if a3989740143
                                   (let ((f3999940144
                                          (lambda (a3989840145)
                                            (let ((f3999840146
                                                   (lambda (a3989940147)
                                                     (let ((f3999740148
                                                            (lambda (a3990040149)
                                                              (cons
                                                               kont39995
                                                               a3989840145
                                                               a3990040149))))
                                                       (filter
                                                        f3999740148
                                                        op
                                                        a3989940147)))))
                                              (cdr f3999840146 lst)))))
                                     (car f3999940144 lst))
                                   (let ((f4000040150
                                          (lambda (a3990140151)
                                            (filter
                                             kont39995
                                             op
                                             a3990140151))))
                                     (cdr f4000040150 lst))))))
                          (op f4000140142 a3989640141)))))
                 (car f4000240140 lst))))))
      (null? f4000340136 lst)))
  (define (drop kont40004 lst n)
    (let ((a3990240152 '0))
      (let ((f4000740153
             (lambda (a3990340154)
               (if a3990340154
                 (kont40004 lst)
                 (let ((f4000640155
                        (lambda (a3990440156)
                          (let ((a3990540157 '1))
                            (let ((f4000540158
                                   (lambda (a3990640159)
                                     (drop
                                      kont40004
                                      a3990440156
                                      a3990640159))))
                              (- f4000540158 n a3990540157))))))
                   (cdr f4000640155 lst))))))
        (= f4000740153 n a3990240152))))
  (define (foldr kont40008 proc acc lst)
    (let ((f4001240160
           (lambda (a3990740161)
             (if a3990740161
               (kont40008 acc)
               (let ((f4001140162
                      (lambda (a3990840163)
                        (let ((f4001040164
                               (lambda (a3990940165)
                                 (let ((f4000940166
                                        (lambda (a3991040167)
                                          (proc
                                           kont40008
                                           a3990840163
                                           a3991040167))))
                                   (foldr f4000940166 proc acc a3990940165)))))
                          (cdr f4001040164 lst)))))
                 (car f4001140162 lst))))))
      (null? f4001240160 lst)))
  (define (append kont40013 lst1 lst2)
    (let ((f4001740168
           (lambda (a3991140169)
             (if a3991140169
               (kont40013 lst2)
               (let ((f4001640170
                      (lambda (a3991240171)
                        (let ((f4001540172
                               (lambda (a3991340173)
                                 (let ((f4001440174
                                        (lambda (a3991440175)
                                          (cons
                                           kont40013
                                           a3991240171
                                           a3991440175))))
                                   (append f4001440174 a3991340173 lst2)))))
                          (cdr f4001540172 lst1)))))
                 (car f4001640170 lst1))))))
      (null? f4001740168 lst1)))
  (define (hash . lst)
    (let ((kont4001840176 (prim car lst)))
      (let ((lst40177 (prim cdr lst)))
        (let ((x3991540178 (apply-prim hash lst40177)))
          (kont4001840176 x3991540178)))))
  (define (hash-ref kont40020 h k)
    (let ((x3991640179 (prim hash-ref h k))) (kont40020 x3991640179)))
  (define (hash-set kont40021 h k v)
    (let ((x3991740180 (prim hash-set h k v))) (kont40021 x3991740180)))
  (define (hash-has-key? kont40022 h k)
    (let ((x3991840181 (prim hash-has-key? h k))) (kont40022 x3991840181)))
  (define (hash-count kont40023 h)
    (let ((x3991940182 (prim hash-count h))) (kont40023 x3991940182)))
  (define (call kont40024)
    (let ((a3992040183 '100))
      (let ((a3992140184 '80))
        (let ((a3992240185 '10))
          (let ((a3992340186 '2))
            (let ((f4002540187
                   (lambda (a3992440188)
                     (let ((a3992540189 '5))
                       (hash-has-key? kont40024 a3992440188 a3992540189)))))
              (hash
               f4002540187
               a3992040183
               a3992140184
               a3992240185
               a3992340186)))))))
  (define (brouhaha_main kont40026)
    (let ((f4002740190 (lambda (x3992640191) (kont40026 x3992640191))))
      (call f4002740190))))
