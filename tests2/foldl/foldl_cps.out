'((define (+ . lst)
    (let ((kont2982729927 (prim car lst)))
      (let ((lst29928 (prim cdr lst)))
        (let ((x2973729929 (apply-prim + lst29928)))
          (kont2982729927 x2973729929)))))
  (define (- . lst)
    (let ((kont2982929930 (prim car lst)))
      (let ((lst29931 (prim cdr lst)))
        (let ((x2973829932 (apply-prim - lst29931)))
          (kont2982929930 x2973829932)))))
  (define (* . lst)
    (let ((kont2983129933 (prim car lst)))
      (let ((lst29934 (prim cdr lst)))
        (let ((x2973929935 (apply-prim * lst29934)))
          (kont2983129933 x2973929935)))))
  (define (modulo kont29833 a b)
    (let ((x2974029936 (prim modulo a b))) (kont29833 x2974029936)))
  (define (/ . lst)
    (let ((kont2983429937 (prim car lst)))
      (let ((lst29938 (prim cdr lst)))
        (let ((x2974129939 (apply-prim / lst29938)))
          (kont2983429937 x2974129939)))))
  (define (= . lst)
    (let ((kont2983629940 (prim car lst)))
      (let ((lst29941 (prim cdr lst)))
        (let ((x2974229942 (apply-prim = lst29941)))
          (kont2983629940 x2974229942)))))
  (define (> . lst)
    (let ((kont2983829943 (prim car lst)))
      (let ((lst29944 (prim cdr lst)))
        (let ((x2974329945 (apply-prim > lst29944)))
          (kont2983829943 x2974329945)))))
  (define (< . lst)
    (let ((kont2984029946 (prim car lst)))
      (let ((lst29947 (prim cdr lst)))
        (let ((x2974429948 (apply-prim < lst29947)))
          (kont2984029946 x2974429948)))))
  (define (<= . lst)
    (let ((kont2984229949 (prim car lst)))
      (let ((lst29950 (prim cdr lst)))
        (let ((x2974529951 (apply-prim <= lst29950)))
          (kont2984229949 x2974529951)))))
  (define (>= . lst)
    (let ((kont2984429952 (prim car lst)))
      (let ((lst29953 (prim cdr lst)))
        (let ((x2974629954 (apply-prim >= lst29953)))
          (kont2984429952 x2974629954)))))
  (define (null? kont29846 x)
    (let ((x2974729955 (prim null? x))) (kont29846 x2974729955)))
  (define (equal? kont29847 x y)
    (let ((x2974829956 (prim equal? x y))) (kont29847 x2974829956)))
  (define (eq? kont29848 x y)
    (let ((x2974929957 (prim eq? x y))) (kont29848 x2974929957)))
  (define (cons kont29849 a b)
    (let ((x2975029958 (prim cons a b))) (kont29849 x2975029958)))
  (define (car kont29850 lst)
    (let ((x2975129959 (prim car lst))) (kont29850 x2975129959)))
  (define (cdr kont29851 lst)
    (let ((x2975229960 (prim cdr lst))) (kont29851 x2975229960)))
  (define (even? kont29852 x)
    (let ((a2975329961 '0))
      (let ((a2975429962 '2))
        (let ((f2985329963
               (lambda (a2975529964)
                 (equal? kont29852 a2975329961 a2975529964))))
          (modulo f2985329963 x a2975429962)))))
  (define (odd? kont29854 x)
    (let ((a2975629965 '1))
      (let ((a2975729966 '2))
        (let ((f2985529967
               (lambda (a2975829968)
                 (equal? kont29854 a2975629965 a2975829968))))
          (modulo f2985529967 x a2975729966)))))
  (define (list . x)
    (let ((kont2985629969 (prim car x)))
      (let ((x29970 (prim cdr x))) (kont2985629969 x29970))))
  (define (member? kont29858 x lst)
    (let ((f2986229971
           (lambda (a2975929972)
             (if a2975929972
               (let ((x2976029973 '#f)) (kont29858 x2976029973))
               (let ((f2986129974
                      (lambda (a2976129975)
                        (let ((f2986029976
                               (lambda (a2976229977)
                                 (if a2976229977
                                   (let ((x2976329978 '#t))
                                     (kont29858 x2976329978))
                                   (let ((f2985929979
                                          (lambda (a2976429980)
                                            (member?
                                             kont29858
                                             x
                                             a2976429980))))
                                     (cdr f2985929979 lst))))))
                          (equal? f2986029976 a2976129975 x)))))
                 (car f2986129974 lst))))))
      (null? f2986229971 lst)))
  (define (foldl kont29863 fun acc lst)
    (let ((f2986729981
           (lambda (a2976529982)
             (if a2976529982
               (kont29863 acc)
               (let ((f2986629983
                      (lambda (a2976629984)
                        (let ((f2986529985
                               (lambda (a2976729986)
                                 (let ((f2986429987
                                        (lambda (a2976829988)
                                          (foldl
                                           kont29863
                                           fun
                                           a2976729986
                                           a2976829988))))
                                   (cdr f2986429987 lst)))))
                          (fun f2986529985 a2976629984 acc)))))
                 (car f2986629983 lst))))))
      (null? f2986729981 lst)))
  (define (reverse-helper kont29868 lst lst2)
    (let ((f2987229989
           (lambda (a2976929990)
             (if a2976929990
               (kont29868 lst2)
               (let ((f2987129991
                      (lambda (a2977029992)
                        (let ((f2987029993
                               (lambda (a2977129994)
                                 (let ((f2986929995
                                        (lambda (a2977229996)
                                          (reverse-helper
                                           kont29868
                                           a2977029992
                                           a2977229996))))
                                   (cons f2986929995 a2977129994 lst2)))))
                          (car f2987029993 lst)))))
                 (cdr f2987129991 lst))))))
      (null? f2987229989 lst)))
  (define (reverse kont29873 lst)
    (let ((f2987429997
           (lambda (a2977329998) (reverse-helper kont29873 lst a2977329998))))
      (list f2987429997)))
  (define (take-helper kont29875 lst n lst2)
    (let ((a2977429999 '0))
      (let ((f2988130000
             (lambda (a2977530001)
               (if a2977530001
                 (let ((f2987630002
                        (lambda (x2977630003) (kont29875 x2977630003))))
                   (reverse f2987630002 lst2))
                 (let ((f2988030004
                        (lambda (a2977730005)
                          (let ((a2977830006 '1))
                            (let ((f2987930007
                                   (lambda (a2977930008)
                                     (let ((f2987830009
                                            (lambda (a2978030010)
                                              (let ((f2987730011
                                                     (lambda (a2978130012)
                                                       (take-helper
                                                        kont29875
                                                        a2977730005
                                                        a2977930008
                                                        a2978130012))))
                                                (cons
                                                 f2987730011
                                                 a2978030010
                                                 lst2)))))
                                       (car f2987830009 lst)))))
                              (- f2987930007 n a2977830006))))))
                   (cdr f2988030004 lst))))))
        (= f2988130000 n a2977429999))))
  (define (take kont29882 lst n)
    (let ((f2988330013
           (lambda (a2978230014) (take-helper kont29882 lst n a2978230014))))
      (list f2988330013)))
  (define (length kont29884 lst)
    (let ((f2988730015
           (lambda (a2978330016)
             (if a2978330016
               (let ((x2978430017 '0)) (kont29884 x2978430017))
               (let ((a2978530018 '1))
                 (let ((f2988630019
                        (lambda (a2978630020)
                          (let ((f2988530021
                                 (lambda (a2978730022)
                                   (+ kont29884 a2978530018 a2978730022))))
                            (length f2988530021 a2978630020)))))
                   (cdr f2988630019 lst)))))))
      (null? f2988730015 lst)))
  (define (map kont29888 proc lst)
    (let ((f2989430023
           (lambda (a2978830024)
             (if a2978830024
               (let ((f2988930025
                      (lambda (x2978930026) (kont29888 x2978930026))))
                 (list f2988930025))
               (let ((f2989330027
                      (lambda (a2979030028)
                        (let ((f2989230029
                               (lambda (a2979130030)
                                 (let ((f2989130031
                                        (lambda (a2979230032)
                                          (let ((f2989030033
                                                 (lambda (a2979330034)
                                                   (cons
                                                    kont29888
                                                    a2979130030
                                                    a2979330034))))
                                            (map
                                             f2989030033
                                             proc
                                             a2979230032)))))
                                   (cdr f2989130031 lst)))))
                          (proc f2989230029 a2979030028)))))
                 (car f2989330027 lst))))))
      (null? f2989430023 lst)))
  (define (filter kont29895 op lst)
    (let ((f2990330035
           (lambda (a2979430036)
             (if a2979430036
               (let ((f2989630037
                      (lambda (x2979530038) (kont29895 x2979530038))))
                 (list f2989630037))
               (let ((f2990230039
                      (lambda (a2979630040)
                        (let ((f2990130041
                               (lambda (a2979730042)
                                 (if a2979730042
                                   (let ((f2989930043
                                          (lambda (a2979830044)
                                            (let ((f2989830045
                                                   (lambda (a2979930046)
                                                     (let ((f2989730047
                                                            (lambda (a2980030048)
                                                              (cons
                                                               kont29895
                                                               a2979830044
                                                               a2980030048))))
                                                       (filter
                                                        f2989730047
                                                        op
                                                        a2979930046)))))
                                              (cdr f2989830045 lst)))))
                                     (car f2989930043 lst))
                                   (let ((f2990030049
                                          (lambda (a2980130050)
                                            (filter
                                             kont29895
                                             op
                                             a2980130050))))
                                     (cdr f2990030049 lst))))))
                          (op f2990130041 a2979630040)))))
                 (car f2990230039 lst))))))
      (null? f2990330035 lst)))
  (define (drop kont29904 lst n)
    (let ((a2980230051 '0))
      (let ((f2990730052
             (lambda (a2980330053)
               (if a2980330053
                 (kont29904 lst)
                 (let ((f2990630054
                        (lambda (a2980430055)
                          (let ((a2980530056 '1))
                            (let ((f2990530057
                                   (lambda (a2980630058)
                                     (drop
                                      kont29904
                                      a2980430055
                                      a2980630058))))
                              (- f2990530057 n a2980530056))))))
                   (cdr f2990630054 lst))))))
        (= f2990730052 n a2980230051))))
  (define (foldr kont29908 proc acc lst)
    (let ((f2991230059
           (lambda (a2980730060)
             (if a2980730060
               (kont29908 acc)
               (let ((f2991130061
                      (lambda (a2980830062)
                        (let ((f2991030063
                               (lambda (a2980930064)
                                 (let ((f2990930065
                                        (lambda (a2981030066)
                                          (proc
                                           kont29908
                                           a2980830062
                                           a2981030066))))
                                   (foldr f2990930065 proc acc a2980930064)))))
                          (cdr f2991030063 lst)))))
                 (car f2991130061 lst))))))
      (null? f2991230059 lst)))
  (define (append kont29913 lst1 lst2)
    (let ((f2991730067
           (lambda (a2981130068)
             (if a2981130068
               (kont29913 lst2)
               (let ((f2991630069
                      (lambda (a2981230070)
                        (let ((f2991530071
                               (lambda (a2981330072)
                                 (let ((f2991430073
                                        (lambda (a2981430074)
                                          (cons
                                           kont29913
                                           a2981230070
                                           a2981430074))))
                                   (append f2991430073 a2981330072 lst2)))))
                          (cdr f2991530071 lst1)))))
                 (car f2991630069 lst1))))))
      (null? f2991730067 lst1)))
  (define (hash . lst)
    (let ((kont2991830075 (prim car lst)))
      (let ((lst30076 (prim cdr lst)))
        (let ((x2981530077 (apply-prim hash lst30076)))
          (kont2991830075 x2981530077)))))
  (define (hash-ref kont29920 h k)
    (let ((x2981630078 (prim hash-ref h k))) (kont29920 x2981630078)))
  (define (hash-set kont29921 h k v)
    (let ((x2981730079 (prim hash-set h k v))) (kont29921 x2981730079)))
  (define (hash-has-key? kont29922 h k)
    (let ((x2981830080 (prim hash-has-key? h k))) (kont29922 x2981830080)))
  (define (hash-count kont29923 h)
    (let ((x2981930081 (prim hash-count h))) (kont29923 x2981930081)))
  (define (call-foldl kont29924 lst)
    (let ((a2982030082 '0)) (foldl kont29924 + a2982030082 lst)))
  (define (brouhaha_main kont29925)
    (let ((a2982130083 '1))
      (let ((a2982230084 '2))
        (let ((a2982330085 '3))
          (let ((a2982430086 '4))
            (let ((a2982530087 '10))
              (let ((f2992630088
                     (lambda (a2982630089)
                       (call-foldl kont29925 a2982630089))))
                (list
                 f2992630088
                 a2982130083
                 a2982230084
                 a2982330085
                 a2982430086
                 a2982530087)))))))))
