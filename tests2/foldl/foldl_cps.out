'((define (+ . lst)
    (let ((kont3005130151 (prim car lst)))
      (let ((lst30152 (prim cdr lst)))
        (let ((x2996130153 (apply-prim + lst30152)))
          (kont3005130151 x2996130153)))))
  (define (- . lst)
    (let ((kont3005330154 (prim car lst)))
      (let ((lst30155 (prim cdr lst)))
        (let ((x2996230156 (apply-prim - lst30155)))
          (kont3005330154 x2996230156)))))
  (define (* . lst)
    (let ((kont3005530157 (prim car lst)))
      (let ((lst30158 (prim cdr lst)))
        (let ((x2996330159 (apply-prim * lst30158)))
          (kont3005530157 x2996330159)))))
  (define (modulo kont30057 a b)
    (let ((x2996430160 (prim modulo a b))) (kont30057 x2996430160)))
  (define (/ . lst)
    (let ((kont3005830161 (prim car lst)))
      (let ((lst30162 (prim cdr lst)))
        (let ((x2996530163 (apply-prim / lst30162)))
          (kont3005830161 x2996530163)))))
  (define (= . lst)
    (let ((kont3006030164 (prim car lst)))
      (let ((lst30165 (prim cdr lst)))
        (let ((x2996630166 (apply-prim = lst30165)))
          (kont3006030164 x2996630166)))))
  (define (> . lst)
    (let ((kont3006230167 (prim car lst)))
      (let ((lst30168 (prim cdr lst)))
        (let ((x2996730169 (apply-prim > lst30168)))
          (kont3006230167 x2996730169)))))
  (define (< . lst)
    (let ((kont3006430170 (prim car lst)))
      (let ((lst30171 (prim cdr lst)))
        (let ((x2996830172 (apply-prim < lst30171)))
          (kont3006430170 x2996830172)))))
  (define (<= . lst)
    (let ((kont3006630173 (prim car lst)))
      (let ((lst30174 (prim cdr lst)))
        (let ((x2996930175 (apply-prim <= lst30174)))
          (kont3006630173 x2996930175)))))
  (define (>= . lst)
    (let ((kont3006830176 (prim car lst)))
      (let ((lst30177 (prim cdr lst)))
        (let ((x2997030178 (apply-prim >= lst30177)))
          (kont3006830176 x2997030178)))))
  (define (null? kont30070 x)
    (let ((x2997130179 (prim null? x))) (kont30070 x2997130179)))
  (define (equal? kont30071 x y)
    (let ((x2997230180 (prim equal? x y))) (kont30071 x2997230180)))
  (define (eq? kont30072 x y)
    (let ((x2997330181 (prim eq? x y))) (kont30072 x2997330181)))
  (define (cons kont30073 a b)
    (let ((x2997430182 (prim cons a b))) (kont30073 x2997430182)))
  (define (car kont30074 lst)
    (let ((x2997530183 (prim car lst))) (kont30074 x2997530183)))
  (define (cdr kont30075 lst)
    (let ((x2997630184 (prim cdr lst))) (kont30075 x2997630184)))
  (define (even? kont30076 x)
    (let ((a2997730185 '0))
      (let ((a2997830186 '2))
        (let ((f3007730187
               (lambda (a2997930188)
                 (equal? kont30076 a2997730185 a2997930188))))
          (modulo f3007730187 x a2997830186)))))
  (define (odd? kont30078 x)
    (let ((a2998030189 '1))
      (let ((a2998130190 '2))
        (let ((f3007930191
               (lambda (a2998230192)
                 (equal? kont30078 a2998030189 a2998230192))))
          (modulo f3007930191 x a2998130190)))))
  (define (list . x)
    (let ((kont3008030193 (prim car x)))
      (let ((x30194 (prim cdr x))) (kont3008030193 x30194))))
  (define (member? kont30082 x lst)
    (let ((f3008630195
           (lambda (a2998330196)
             (if a2998330196
               (let ((x2998430197 '#f)) (kont30082 x2998430197))
               (let ((f3008530198
                      (lambda (a2998530199)
                        (let ((f3008430200
                               (lambda (a2998630201)
                                 (if a2998630201
                                   (let ((x2998730202 '#t))
                                     (kont30082 x2998730202))
                                   (let ((f3008330203
                                          (lambda (a2998830204)
                                            (member?
                                             kont30082
                                             x
                                             a2998830204))))
                                     (cdr f3008330203 lst))))))
                          (equal? f3008430200 a2998530199 x)))))
                 (car f3008530198 lst))))))
      (null? f3008630195 lst)))
  (define (foldl kont30087 fun acc lst)
    (let ((f3009130205
           (lambda (a2998930206)
             (if a2998930206
               (kont30087 acc)
               (let ((f3009030207
                      (lambda (a2999030208)
                        (let ((f3008930209
                               (lambda (a2999130210)
                                 (let ((f3008830211
                                        (lambda (a2999230212)
                                          (foldl
                                           kont30087
                                           fun
                                           a2999130210
                                           a2999230212))))
                                   (cdr f3008830211 lst)))))
                          (fun f3008930209 a2999030208 acc)))))
                 (car f3009030207 lst))))))
      (null? f3009130205 lst)))
  (define (reverse-helper kont30092 lst lst2)
    (let ((f3009630213
           (lambda (a2999330214)
             (if a2999330214
               (kont30092 lst2)
               (let ((f3009530215
                      (lambda (a2999430216)
                        (let ((f3009430217
                               (lambda (a2999530218)
                                 (let ((f3009330219
                                        (lambda (a2999630220)
                                          (reverse-helper
                                           kont30092
                                           a2999430216
                                           a2999630220))))
                                   (cons f3009330219 a2999530218 lst2)))))
                          (car f3009430217 lst)))))
                 (cdr f3009530215 lst))))))
      (null? f3009630213 lst)))
  (define (reverse kont30097 lst)
    (let ((f3009830221
           (lambda (a2999730222) (reverse-helper kont30097 lst a2999730222))))
      (list f3009830221)))
  (define (take-helper kont30099 lst n lst2)
    (let ((a2999830223 '0))
      (let ((f3010530224
             (lambda (a2999930225)
               (if a2999930225
                 (let ((f3010030226
                        (lambda (x3000030227) (kont30099 x3000030227))))
                   (reverse f3010030226 lst2))
                 (let ((f3010430228
                        (lambda (a3000130229)
                          (let ((a3000230230 '1))
                            (let ((f3010330231
                                   (lambda (a3000330232)
                                     (let ((f3010230233
                                            (lambda (a3000430234)
                                              (let ((f3010130235
                                                     (lambda (a3000530236)
                                                       (take-helper
                                                        kont30099
                                                        a3000130229
                                                        a3000330232
                                                        a3000530236))))
                                                (cons
                                                 f3010130235
                                                 a3000430234
                                                 lst2)))))
                                       (car f3010230233 lst)))))
                              (- f3010330231 n a3000230230))))))
                   (cdr f3010430228 lst))))))
        (= f3010530224 n a2999830223))))
  (define (take kont30106 lst n)
    (let ((f3010730237
           (lambda (a3000630238) (take-helper kont30106 lst n a3000630238))))
      (list f3010730237)))
  (define (length kont30108 lst)
    (let ((f3011130239
           (lambda (a3000730240)
             (if a3000730240
               (let ((x3000830241 '0)) (kont30108 x3000830241))
               (let ((a3000930242 '1))
                 (let ((f3011030243
                        (lambda (a3001030244)
                          (let ((f3010930245
                                 (lambda (a3001130246)
                                   (+ kont30108 a3000930242 a3001130246))))
                            (length f3010930245 a3001030244)))))
                   (cdr f3011030243 lst)))))))
      (null? f3011130239 lst)))
  (define (map kont30112 proc lst)
    (let ((f3011830247
           (lambda (a3001230248)
             (if a3001230248
               (let ((f3011330249
                      (lambda (x3001330250) (kont30112 x3001330250))))
                 (list f3011330249))
               (let ((f3011730251
                      (lambda (a3001430252)
                        (let ((f3011630253
                               (lambda (a3001530254)
                                 (let ((f3011530255
                                        (lambda (a3001630256)
                                          (let ((f3011430257
                                                 (lambda (a3001730258)
                                                   (cons
                                                    kont30112
                                                    a3001530254
                                                    a3001730258))))
                                            (map
                                             f3011430257
                                             proc
                                             a3001630256)))))
                                   (cdr f3011530255 lst)))))
                          (proc f3011630253 a3001430252)))))
                 (car f3011730251 lst))))))
      (null? f3011830247 lst)))
  (define (filter kont30119 op lst)
    (let ((f3012730259
           (lambda (a3001830260)
             (if a3001830260
               (let ((f3012030261
                      (lambda (x3001930262) (kont30119 x3001930262))))
                 (list f3012030261))
               (let ((f3012630263
                      (lambda (a3002030264)
                        (let ((f3012530265
                               (lambda (a3002130266)
                                 (if a3002130266
                                   (let ((f3012330267
                                          (lambda (a3002230268)
                                            (let ((f3012230269
                                                   (lambda (a3002330270)
                                                     (let ((f3012130271
                                                            (lambda (a3002430272)
                                                              (cons
                                                               kont30119
                                                               a3002230268
                                                               a3002430272))))
                                                       (filter
                                                        f3012130271
                                                        op
                                                        a3002330270)))))
                                              (cdr f3012230269 lst)))))
                                     (car f3012330267 lst))
                                   (let ((f3012430273
                                          (lambda (a3002530274)
                                            (filter
                                             kont30119
                                             op
                                             a3002530274))))
                                     (cdr f3012430273 lst))))))
                          (op f3012530265 a3002030264)))))
                 (car f3012630263 lst))))))
      (null? f3012730259 lst)))
  (define (drop kont30128 lst n)
    (let ((a3002630275 '0))
      (let ((f3013130276
             (lambda (a3002730277)
               (if a3002730277
                 (kont30128 lst)
                 (let ((f3013030278
                        (lambda (a3002830279)
                          (let ((a3002930280 '1))
                            (let ((f3012930281
                                   (lambda (a3003030282)
                                     (drop
                                      kont30128
                                      a3002830279
                                      a3003030282))))
                              (- f3012930281 n a3002930280))))))
                   (cdr f3013030278 lst))))))
        (= f3013130276 n a3002630275))))
  (define (foldr kont30132 proc acc lst)
    (let ((f3013630283
           (lambda (a3003130284)
             (if a3003130284
               (kont30132 acc)
               (let ((f3013530285
                      (lambda (a3003230286)
                        (let ((f3013430287
                               (lambda (a3003330288)
                                 (let ((f3013330289
                                        (lambda (a3003430290)
                                          (proc
                                           kont30132
                                           a3003230286
                                           a3003430290))))
                                   (foldr f3013330289 proc acc a3003330288)))))
                          (cdr f3013430287 lst)))))
                 (car f3013530285 lst))))))
      (null? f3013630283 lst)))
  (define (append kont30137 lst1 lst2)
    (let ((f3014130291
           (lambda (a3003530292)
             (if a3003530292
               (kont30137 lst2)
               (let ((f3014030293
                      (lambda (a3003630294)
                        (let ((f3013930295
                               (lambda (a3003730296)
                                 (let ((f3013830297
                                        (lambda (a3003830298)
                                          (cons
                                           kont30137
                                           a3003630294
                                           a3003830298))))
                                   (append f3013830297 a3003730296 lst2)))))
                          (cdr f3013930295 lst1)))))
                 (car f3014030293 lst1))))))
      (null? f3014130291 lst1)))
  (define (hash . lst)
    (let ((kont3014230299 (prim car lst)))
      (let ((lst30300 (prim cdr lst)))
        (let ((x3003930301 (apply-prim hash lst30300)))
          (kont3014230299 x3003930301)))))
  (define (hash-ref kont30144 h k)
    (let ((x3004030302 (prim hash-ref h k))) (kont30144 x3004030302)))
  (define (hash-set kont30145 h k v)
    (let ((x3004130303 (prim hash-set h k v))) (kont30145 x3004130303)))
  (define (hash-has-key? kont30146 h k)
    (let ((x3004230304 (prim hash-has-key? h k))) (kont30146 x3004230304)))
  (define (hash-count kont30147 h)
    (let ((x3004330305 (prim hash-count h))) (kont30147 x3004330305)))
  (define (call-foldl kont30148 lst)
    (let ((a3004430306 '0)) (foldl kont30148 + a3004430306 lst)))
  (define (brouhaha_main kont30149)
    (let ((a3004530307 '1))
      (let ((a3004630308 '2))
        (let ((a3004730309 '3))
          (let ((a3004830310 '4))
            (let ((a3004930311 '10))
              (let ((f3015030312
                     (lambda (a3005030313)
                       (call-foldl kont30149 a3005030313))))
                (list
                 f3015030312
                 a3004530307
                 a3004630308
                 a3004730309
                 a3004830310
                 a3004930311)))))))))
