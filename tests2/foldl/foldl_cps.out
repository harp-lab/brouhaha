'((define (+ . lst)
    (let ((kont3123931339 (prim car lst)))
      (let ((lst31340 (prim cdr lst)))
        (let ((x3114931341 (apply-prim + lst31340)))
          (kont3123931339 x3114931341)))))
  (define (- . lst)
    (let ((kont3124131342 (prim car lst)))
      (let ((lst31343 (prim cdr lst)))
        (let ((x3115031344 (apply-prim - lst31343)))
          (kont3124131342 x3115031344)))))
  (define (* . lst)
    (let ((kont3124331345 (prim car lst)))
      (let ((lst31346 (prim cdr lst)))
        (let ((x3115131347 (apply-prim * lst31346)))
          (kont3124331345 x3115131347)))))
  (define (modulo kont31245 a b)
    (let ((x3115231348 (prim modulo a b))) (kont31245 x3115231348)))
  (define (/ . lst)
    (let ((kont3124631349 (prim car lst)))
      (let ((lst31350 (prim cdr lst)))
        (let ((x3115331351 (apply-prim / lst31350)))
          (kont3124631349 x3115331351)))))
  (define (= . lst)
    (let ((kont3124831352 (prim car lst)))
      (let ((lst31353 (prim cdr lst)))
        (let ((x3115431354 (apply-prim = lst31353)))
          (kont3124831352 x3115431354)))))
  (define (> . lst)
    (let ((kont3125031355 (prim car lst)))
      (let ((lst31356 (prim cdr lst)))
        (let ((x3115531357 (apply-prim > lst31356)))
          (kont3125031355 x3115531357)))))
  (define (< . lst)
    (let ((kont3125231358 (prim car lst)))
      (let ((lst31359 (prim cdr lst)))
        (let ((x3115631360 (apply-prim < lst31359)))
          (kont3125231358 x3115631360)))))
  (define (<= . lst)
    (let ((kont3125431361 (prim car lst)))
      (let ((lst31362 (prim cdr lst)))
        (let ((x3115731363 (apply-prim <= lst31362)))
          (kont3125431361 x3115731363)))))
  (define (>= . lst)
    (let ((kont3125631364 (prim car lst)))
      (let ((lst31365 (prim cdr lst)))
        (let ((x3115831366 (apply-prim >= lst31365)))
          (kont3125631364 x3115831366)))))
  (define (null? kont31258 x)
    (let ((x3115931367 (prim null? x))) (kont31258 x3115931367)))
  (define (equal? kont31259 x y)
    (let ((x3116031368 (prim equal? x y))) (kont31259 x3116031368)))
  (define (eq? kont31260 x y)
    (let ((x3116131369 (prim eq? x y))) (kont31260 x3116131369)))
  (define (cons kont31261 a b)
    (let ((x3116231370 (prim cons a b))) (kont31261 x3116231370)))
  (define (car kont31262 lst)
    (let ((x3116331371 (prim car lst))) (kont31262 x3116331371)))
  (define (cdr kont31263 lst)
    (let ((x3116431372 (prim cdr lst))) (kont31263 x3116431372)))
  (define (even? kont31264 x)
    (let ((a3116531373 '0))
      (let ((a3116631374 '2))
        (let ((f3126531375
               (lambda (a3116731376)
                 (equal? kont31264 a3116531373 a3116731376))))
          (modulo f3126531375 x a3116631374)))))
  (define (odd? kont31266 x)
    (let ((a3116831377 '1))
      (let ((a3116931378 '2))
        (let ((f3126731379
               (lambda (a3117031380)
                 (equal? kont31266 a3116831377 a3117031380))))
          (modulo f3126731379 x a3116931378)))))
  (define (list . x)
    (let ((kont3126831381 (prim car x)))
      (let ((x31382 (prim cdr x))) (kont3126831381 x31382))))
  (define (member? kont31270 x lst)
    (let ((f3127431383
           (lambda (a3117131384)
             (if a3117131384
               (let ((x3117231385 '#f)) (kont31270 x3117231385))
               (let ((f3127331386
                      (lambda (a3117331387)
                        (let ((f3127231388
                               (lambda (a3117431389)
                                 (if a3117431389
                                   (let ((x3117531390 '#t))
                                     (kont31270 x3117531390))
                                   (let ((f3127131391
                                          (lambda (a3117631392)
                                            (member?
                                             kont31270
                                             x
                                             a3117631392))))
                                     (cdr f3127131391 lst))))))
                          (equal? f3127231388 a3117331387 x)))))
                 (car f3127331386 lst))))))
      (null? f3127431383 lst)))
  (define (foldl kont31275 fun acc lst)
    (let ((f3127931393
           (lambda (a3117731394)
             (if a3117731394
               (kont31275 acc)
               (let ((f3127831395
                      (lambda (a3117831396)
                        (let ((f3127731397
                               (lambda (a3117931398)
                                 (let ((f3127631399
                                        (lambda (a3118031400)
                                          (foldl
                                           kont31275
                                           fun
                                           a3117931398
                                           a3118031400))))
                                   (cdr f3127631399 lst)))))
                          (fun f3127731397 a3117831396 acc)))))
                 (car f3127831395 lst))))))
      (null? f3127931393 lst)))
  (define (reverse-helper kont31280 lst lst2)
    (let ((f3128431401
           (lambda (a3118131402)
             (if a3118131402
               (kont31280 lst2)
               (let ((f3128331403
                      (lambda (a3118231404)
                        (let ((f3128231405
                               (lambda (a3118331406)
                                 (let ((f3128131407
                                        (lambda (a3118431408)
                                          (reverse-helper
                                           kont31280
                                           a3118231404
                                           a3118431408))))
                                   (cons f3128131407 a3118331406 lst2)))))
                          (car f3128231405 lst)))))
                 (cdr f3128331403 lst))))))
      (null? f3128431401 lst)))
  (define (reverse kont31285 lst)
    (let ((f3128631409
           (lambda (a3118531410) (reverse-helper kont31285 lst a3118531410))))
      (list f3128631409)))
  (define (take-helper kont31287 lst n lst2)
    (let ((a3118631411 '0))
      (let ((f3129331412
             (lambda (a3118731413)
               (if a3118731413
                 (let ((f3128831414
                        (lambda (x3118831415) (kont31287 x3118831415))))
                   (reverse f3128831414 lst2))
                 (let ((f3129231416
                        (lambda (a3118931417)
                          (let ((a3119031418 '1))
                            (let ((f3129131419
                                   (lambda (a3119131420)
                                     (let ((f3129031421
                                            (lambda (a3119231422)
                                              (let ((f3128931423
                                                     (lambda (a3119331424)
                                                       (take-helper
                                                        kont31287
                                                        a3118931417
                                                        a3119131420
                                                        a3119331424))))
                                                (cons
                                                 f3128931423
                                                 a3119231422
                                                 lst2)))))
                                       (car f3129031421 lst)))))
                              (- f3129131419 n a3119031418))))))
                   (cdr f3129231416 lst))))))
        (= f3129331412 n a3118631411))))
  (define (take kont31294 lst n)
    (let ((f3129531425
           (lambda (a3119431426) (take-helper kont31294 lst n a3119431426))))
      (list f3129531425)))
  (define (length kont31296 lst)
    (let ((f3129931427
           (lambda (a3119531428)
             (if a3119531428
               (let ((x3119631429 '0)) (kont31296 x3119631429))
               (let ((a3119731430 '1))
                 (let ((f3129831431
                        (lambda (a3119831432)
                          (let ((f3129731433
                                 (lambda (a3119931434)
                                   (+ kont31296 a3119731430 a3119931434))))
                            (length f3129731433 a3119831432)))))
                   (cdr f3129831431 lst)))))))
      (null? f3129931427 lst)))
  (define (map kont31300 proc lst)
    (let ((f3130631435
           (lambda (a3120031436)
             (if a3120031436
               (let ((f3130131437
                      (lambda (x3120131438) (kont31300 x3120131438))))
                 (list f3130131437))
               (let ((f3130531439
                      (lambda (a3120231440)
                        (let ((f3130431441
                               (lambda (a3120331442)
                                 (let ((f3130331443
                                        (lambda (a3120431444)
                                          (let ((f3130231445
                                                 (lambda (a3120531446)
                                                   (cons
                                                    kont31300
                                                    a3120331442
                                                    a3120531446))))
                                            (map
                                             f3130231445
                                             proc
                                             a3120431444)))))
                                   (cdr f3130331443 lst)))))
                          (proc f3130431441 a3120231440)))))
                 (car f3130531439 lst))))))
      (null? f3130631435 lst)))
  (define (filter kont31307 op lst)
    (let ((f3131531447
           (lambda (a3120631448)
             (if a3120631448
               (let ((f3130831449
                      (lambda (x3120731450) (kont31307 x3120731450))))
                 (list f3130831449))
               (let ((f3131431451
                      (lambda (a3120831452)
                        (let ((f3131331453
                               (lambda (a3120931454)
                                 (if a3120931454
                                   (let ((f3131131455
                                          (lambda (a3121031456)
                                            (let ((f3131031457
                                                   (lambda (a3121131458)
                                                     (let ((f3130931459
                                                            (lambda (a3121231460)
                                                              (cons
                                                               kont31307
                                                               a3121031456
                                                               a3121231460))))
                                                       (filter
                                                        f3130931459
                                                        op
                                                        a3121131458)))))
                                              (cdr f3131031457 lst)))))
                                     (car f3131131455 lst))
                                   (let ((f3131231461
                                          (lambda (a3121331462)
                                            (filter
                                             kont31307
                                             op
                                             a3121331462))))
                                     (cdr f3131231461 lst))))))
                          (op f3131331453 a3120831452)))))
                 (car f3131431451 lst))))))
      (null? f3131531447 lst)))
  (define (drop kont31316 lst n)
    (let ((a3121431463 '0))
      (let ((f3131931464
             (lambda (a3121531465)
               (if a3121531465
                 (kont31316 lst)
                 (let ((f3131831466
                        (lambda (a3121631467)
                          (let ((a3121731468 '1))
                            (let ((f3131731469
                                   (lambda (a3121831470)
                                     (drop
                                      kont31316
                                      a3121631467
                                      a3121831470))))
                              (- f3131731469 n a3121731468))))))
                   (cdr f3131831466 lst))))))
        (= f3131931464 n a3121431463))))
  (define (foldr kont31320 proc acc lst)
    (let ((f3132431471
           (lambda (a3121931472)
             (if a3121931472
               (kont31320 acc)
               (let ((f3132331473
                      (lambda (a3122031474)
                        (let ((f3132231475
                               (lambda (a3122131476)
                                 (let ((f3132131477
                                        (lambda (a3122231478)
                                          (proc
                                           kont31320
                                           a3122031474
                                           a3122231478))))
                                   (foldr f3132131477 proc acc a3122131476)))))
                          (cdr f3132231475 lst)))))
                 (car f3132331473 lst))))))
      (null? f3132431471 lst)))
  (define (append kont31325 lst1 lst2)
    (let ((f3132931479
           (lambda (a3122331480)
             (if a3122331480
               (kont31325 lst2)
               (let ((f3132831481
                      (lambda (a3122431482)
                        (let ((f3132731483
                               (lambda (a3122531484)
                                 (let ((f3132631485
                                        (lambda (a3122631486)
                                          (cons
                                           kont31325
                                           a3122431482
                                           a3122631486))))
                                   (append f3132631485 a3122531484 lst2)))))
                          (cdr f3132731483 lst1)))))
                 (car f3132831481 lst1))))))
      (null? f3132931479 lst1)))
  (define (hash . lst)
    (let ((kont3133031487 (prim car lst)))
      (let ((lst31488 (prim cdr lst)))
        (let ((x3122731489 (apply-prim hash lst31488)))
          (kont3133031487 x3122731489)))))
  (define (hash-ref kont31332 h k)
    (let ((x3122831490 (prim hash-ref h k))) (kont31332 x3122831490)))
  (define (hash-set kont31333 h k v)
    (let ((x3122931491 (prim hash-set h k v))) (kont31333 x3122931491)))
  (define (hash-has-key? kont31334 h k)
    (let ((x3123031492 (prim hash-has-key? h k))) (kont31334 x3123031492)))
  (define (hash-count kont31335 h)
    (let ((x3123131493 (prim hash-count h))) (kont31335 x3123131493)))
  (define (call-foldl kont31336 lst)
    (let ((a3123231494 '0)) (foldl kont31336 + a3123231494 lst)))
  (define (brouhaha_main kont31337)
    (let ((a3123331495 '1))
      (let ((a3123431496 '2))
        (let ((a3123531497 '3))
          (let ((a3123631498 '4))
            (let ((a3123731499 '10))
              (let ((f3133831500
                     (lambda (a3123831501)
                       (call-foldl kont31337 a3123831501))))
                (list
                 f3133831500
                 a3123331495
                 a3123431496
                 a3123531497
                 a3123631498
                 a3123731499)))))))))
