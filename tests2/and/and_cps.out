'((define (+ . lst)
    (let ((kont57665868 (prim car lst)))
      (let ((lst5869 (prim cdr lst)))
        (let ((x56745870 (apply-prim + lst5869))) (kont57665868 x56745870)))))
  (define (- . lst)
    (let ((kont57685871 (prim car lst)))
      (let ((lst5872 (prim cdr lst)))
        (let ((x56755873 (apply-prim - lst5872))) (kont57685871 x56755873)))))
  (define (* . lst)
    (let ((kont57705874 (prim car lst)))
      (let ((lst5875 (prim cdr lst)))
        (let ((x56765876 (apply-prim * lst5875))) (kont57705874 x56765876)))))
  (define (modulo kont5772 a b)
    (let ((x56775877 (prim modulo a b))) (kont5772 x56775877)))
  (define (/ . lst)
    (let ((kont57735878 (prim car lst)))
      (let ((lst5879 (prim cdr lst)))
        (let ((x56785880 (apply-prim / lst5879))) (kont57735878 x56785880)))))
  (define (= . lst)
    (let ((kont57755881 (prim car lst)))
      (let ((lst5882 (prim cdr lst)))
        (let ((x56795883 (apply-prim = lst5882))) (kont57755881 x56795883)))))
  (define (> . lst)
    (let ((kont57775884 (prim car lst)))
      (let ((lst5885 (prim cdr lst)))
        (let ((x56805886 (apply-prim > lst5885))) (kont57775884 x56805886)))))
  (define (< . lst)
    (let ((kont57795887 (prim car lst)))
      (let ((lst5888 (prim cdr lst)))
        (let ((x56815889 (apply-prim < lst5888))) (kont57795887 x56815889)))))
  (define (<= . lst)
    (let ((kont57815890 (prim car lst)))
      (let ((lst5891 (prim cdr lst)))
        (let ((x56825892 (apply-prim <= lst5891))) (kont57815890 x56825892)))))
  (define (>= . lst)
    (let ((kont57835893 (prim car lst)))
      (let ((lst5894 (prim cdr lst)))
        (let ((x56835895 (apply-prim >= lst5894))) (kont57835893 x56835895)))))
  (define (null? kont5785 x)
    (let ((x56845896 (prim null? x))) (kont5785 x56845896)))
  (define (equal? kont5786 x y)
    (let ((x56855897 (prim equal? x y))) (kont5786 x56855897)))
  (define (eq? kont5787 x y)
    (let ((x56865898 (prim eq? x y))) (kont5787 x56865898)))
  (define (cons kont5788 a b)
    (let ((x56875899 (prim cons a b))) (kont5788 x56875899)))
  (define (car kont5789 lst)
    (let ((x56885900 (prim car lst))) (kont5789 x56885900)))
  (define (cdr kont5790 lst)
    (let ((x56895901 (prim cdr lst))) (kont5790 x56895901)))
  (define (even? kont5791 x)
    (let ((a56905902 '0))
      (let ((a56915903 '2))
        (let ((f57925904
               (lambda (a56925905) (equal? kont5791 a56905902 a56925905))))
          (modulo f57925904 x a56915903)))))
  (define (odd? kont5793 x)
    (let ((a56935906 '1))
      (let ((a56945907 '2))
        (let ((f57945908
               (lambda (a56955909) (equal? kont5793 a56935906 a56955909))))
          (modulo f57945908 x a56945907)))))
  (define (list . x)
    (let ((kont57955910 (prim car x)))
      (let ((x5911 (prim cdr x))) (kont57955910 x5911))))
  (define (member? kont5797 x lst)
    (let ((f58015912
           (lambda (a56965913)
             (if a56965913
               (let ((x56975914 '#f)) (kont5797 x56975914))
               (let ((f58005915
                      (lambda (a56985916)
                        (let ((f57995917
                               (lambda (a56995918)
                                 (if a56995918
                                   (let ((x57005919 '#t)) (kont5797 x57005919))
                                   (let ((f57985920
                                          (lambda (a57015921)
                                            (member? kont5797 x a57015921))))
                                     (cdr f57985920 lst))))))
                          (equal? f57995917 a56985916 x)))))
                 (car f58005915 lst))))))
      (null? f58015912 lst)))
  (define (foldl kont5802 fun acc lst)
    (let ((f58065922
           (lambda (a57025923)
             (if a57025923
               (kont5802 acc)
               (let ((f58055924
                      (lambda (a57035925)
                        (let ((f58045926
                               (lambda (a57045927)
                                 (let ((f58035928
                                        (lambda (a57055929)
                                          (foldl
                                           kont5802
                                           fun
                                           a57045927
                                           a57055929))))
                                   (cdr f58035928 lst)))))
                          (fun f58045926 a57035925 acc)))))
                 (car f58055924 lst))))))
      (null? f58065922 lst)))
  (define (reverse-helper kont5807 lst lst2)
    (let ((f58115930
           (lambda (a57065931)
             (if a57065931
               (kont5807 lst2)
               (let ((f58105932
                      (lambda (a57075933)
                        (let ((f58095934
                               (lambda (a57085935)
                                 (let ((f58085936
                                        (lambda (a57095937)
                                          (reverse-helper
                                           kont5807
                                           a57075933
                                           a57095937))))
                                   (cons f58085936 a57085935 lst2)))))
                          (car f58095934 lst)))))
                 (cdr f58105932 lst))))))
      (null? f58115930 lst)))
  (define (reverse kont5812 lst)
    (let ((f58135938
           (lambda (a57105939) (reverse-helper kont5812 lst a57105939))))
      (list f58135938)))
  (define (take-helper kont5814 lst n lst2)
    (let ((a57115940 '0))
      (let ((f58205941
             (lambda (a57125942)
               (if a57125942
                 (let ((f58155943 (lambda (x57135944) (kont5814 x57135944))))
                   (reverse f58155943 lst2))
                 (let ((f58195945
                        (lambda (a57145946)
                          (let ((a57155947 '1))
                            (let ((f58185948
                                   (lambda (a57165949)
                                     (let ((f58175950
                                            (lambda (a57175951)
                                              (let ((f58165952
                                                     (lambda (a57185953)
                                                       (take-helper
                                                        kont5814
                                                        a57145946
                                                        a57165949
                                                        a57185953))))
                                                (cons
                                                 f58165952
                                                 a57175951
                                                 lst2)))))
                                       (car f58175950 lst)))))
                              (- f58185948 n a57155947))))))
                   (cdr f58195945 lst))))))
        (= f58205941 n a57115940))))
  (define (take kont5821 lst n)
    (let ((f58225954
           (lambda (a57195955) (take-helper kont5821 lst n a57195955))))
      (list f58225954)))
  (define (length kont5823 lst)
    (let ((f58265956
           (lambda (a57205957)
             (if a57205957
               (let ((x57215958 '0)) (kont5823 x57215958))
               (let ((a57225959 '1))
                 (let ((f58255960
                        (lambda (a57235961)
                          (let ((f58245962
                                 (lambda (a57245963)
                                   (+ kont5823 a57225959 a57245963))))
                            (length f58245962 a57235961)))))
                   (cdr f58255960 lst)))))))
      (null? f58265956 lst)))
  (define (map kont5827 proc lst)
    (let ((f58335964
           (lambda (a57255965)
             (if a57255965
               (let ((f58285966 (lambda (x57265967) (kont5827 x57265967))))
                 (list f58285966))
               (let ((f58325968
                      (lambda (a57275969)
                        (let ((f58315970
                               (lambda (a57285971)
                                 (let ((f58305972
                                        (lambda (a57295973)
                                          (let ((f58295974
                                                 (lambda (a57305975)
                                                   (cons
                                                    kont5827
                                                    a57285971
                                                    a57305975))))
                                            (map f58295974 proc a57295973)))))
                                   (cdr f58305972 lst)))))
                          (proc f58315970 a57275969)))))
                 (car f58325968 lst))))))
      (null? f58335964 lst)))
  (define (filter kont5834 op lst)
    (let ((f58425976
           (lambda (a57315977)
             (if a57315977
               (let ((f58355978 (lambda (x57325979) (kont5834 x57325979))))
                 (list f58355978))
               (let ((f58415980
                      (lambda (a57335981)
                        (let ((f58405982
                               (lambda (a57345983)
                                 (if a57345983
                                   (let ((f58385984
                                          (lambda (a57355985)
                                            (let ((f58375986
                                                   (lambda (a57365987)
                                                     (let ((f58365988
                                                            (lambda (a57375989)
                                                              (cons
                                                               kont5834
                                                               a57355985
                                                               a57375989))))
                                                       (filter
                                                        f58365988
                                                        op
                                                        a57365987)))))
                                              (cdr f58375986 lst)))))
                                     (car f58385984 lst))
                                   (let ((f58395990
                                          (lambda (a57385991)
                                            (filter kont5834 op a57385991))))
                                     (cdr f58395990 lst))))))
                          (op f58405982 a57335981)))))
                 (car f58415980 lst))))))
      (null? f58425976 lst)))
  (define (drop kont5843 lst n)
    (let ((a57395992 '0))
      (let ((f58465993
             (lambda (a57405994)
               (if a57405994
                 (kont5843 lst)
                 (let ((f58455995
                        (lambda (a57415996)
                          (let ((a57425997 '1))
                            (let ((f58445998
                                   (lambda (a57435999)
                                     (drop kont5843 a57415996 a57435999))))
                              (- f58445998 n a57425997))))))
                   (cdr f58455995 lst))))))
        (= f58465993 n a57395992))))
  (define (foldr kont5847 proc acc lst)
    (let ((f58516000
           (lambda (a57446001)
             (if a57446001
               (kont5847 acc)
               (let ((f58506002
                      (lambda (a57456003)
                        (let ((f58496004
                               (lambda (a57466005)
                                 (let ((f58486006
                                        (lambda (a57476007)
                                          (proc
                                           kont5847
                                           a57456003
                                           a57476007))))
                                   (foldr f58486006 proc acc a57466005)))))
                          (cdr f58496004 lst)))))
                 (car f58506002 lst))))))
      (null? f58516000 lst)))
  (define (append kont5852 lst1 lst2)
    (let ((f58566008
           (lambda (a57486009)
             (if a57486009
               (kont5852 lst2)
               (let ((f58556010
                      (lambda (a57496011)
                        (let ((f58546012
                               (lambda (a57506013)
                                 (let ((f58536014
                                        (lambda (a57516015)
                                          (cons
                                           kont5852
                                           a57496011
                                           a57516015))))
                                   (append f58536014 a57506013 lst2)))))
                          (cdr f58546012 lst1)))))
                 (car f58556010 lst1))))))
      (null? f58566008 lst1)))
  (define (hash . lst)
    (let ((kont58576016 (prim car lst)))
      (let ((lst6017 (prim cdr lst)))
        (let ((x57526018 (apply-prim hash lst6017)))
          (kont58576016 x57526018)))))
  (define (hash-ref kont5859 h k)
    (let ((x57536019 (prim hash-ref h k))) (kont5859 x57536019)))
  (define (hash-set kont5860 h k v)
    (let ((x57546020 (prim hash-set h k v))) (kont5860 x57546020)))
  (define (hash-has-key? kont5861 h k)
    (let ((x57556021 (prim hash-has-key? h k))) (kont5861 x57556021)))
  (define (hash-count kont5862 h)
    (let ((x57566022 (prim hash-count h))) (kont5862 x57566022)))
  (define (call kont5863)
    (let ((a57576023 '1))
      (let ((a57586024 '1))
        (let ((f58656025
               (lambda (a57596026)
                 (if a57596026
                   (let ((a57606027 '2))
                     (let ((f58646028
                            (lambda (a57616029)
                              (if a57616029
                                (let ((a57626030 '2))
                                  (odd? kont5863 a57626030))
                                (let ((x57636031 '#f))
                                  (kont5863 x57636031))))))
                       (even? f58646028 a57606027)))
                   (let ((x57646032 '#f)) (kont5863 x57646032))))))
          (equal? f58656025 a57576023 a57586024)))))
  (define (brouhaha_main kont5866)
    (let ((f58676033 (lambda (x57656034) (kont5866 x57656034))))
      (call f58676033))))
