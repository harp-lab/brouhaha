'((define (+ . lst)
    (let ((kont4290443006 (prim car lst)))
      (let ((lst43007 (prim cdr lst)))
        (let ((x4281143008 (apply-prim + lst43007)))
          (kont4290443006 x4281143008)))))
  (define (- . lst)
    (let ((kont4290643009 (prim car lst)))
      (let ((lst43010 (prim cdr lst)))
        (let ((x4281243011 (apply-prim - lst43010)))
          (kont4290643009 x4281243011)))))
  (define (* . lst)
    (let ((kont4290843012 (prim car lst)))
      (let ((lst43013 (prim cdr lst)))
        (let ((x4281343014 (apply-prim * lst43013)))
          (kont4290843012 x4281343014)))))
  (define (modulo kont42910 a b)
    (let ((x4281443015 (prim modulo a b))) (kont42910 x4281443015)))
  (define (/ . lst)
    (let ((kont4291143016 (prim car lst)))
      (let ((lst43017 (prim cdr lst)))
        (let ((x4281543018 (apply-prim / lst43017)))
          (kont4291143016 x4281543018)))))
  (define (= . lst)
    (let ((kont4291343019 (prim car lst)))
      (let ((lst43020 (prim cdr lst)))
        (let ((x4281643021 (apply-prim = lst43020)))
          (kont4291343019 x4281643021)))))
  (define (> . lst)
    (let ((kont4291543022 (prim car lst)))
      (let ((lst43023 (prim cdr lst)))
        (let ((x4281743024 (apply-prim > lst43023)))
          (kont4291543022 x4281743024)))))
  (define (< . lst)
    (let ((kont4291743025 (prim car lst)))
      (let ((lst43026 (prim cdr lst)))
        (let ((x4281843027 (apply-prim < lst43026)))
          (kont4291743025 x4281843027)))))
  (define (<= . lst)
    (let ((kont4291943028 (prim car lst)))
      (let ((lst43029 (prim cdr lst)))
        (let ((x4281943030 (apply-prim <= lst43029)))
          (kont4291943028 x4281943030)))))
  (define (>= . lst)
    (let ((kont4292143031 (prim car lst)))
      (let ((lst43032 (prim cdr lst)))
        (let ((x4282043033 (apply-prim >= lst43032)))
          (kont4292143031 x4282043033)))))
  (define (null? kont42923 x)
    (let ((x4282143034 (prim null? x))) (kont42923 x4282143034)))
  (define (equal? kont42924 x y)
    (let ((x4282243035 (prim equal? x y))) (kont42924 x4282243035)))
  (define (eq? kont42925 x y)
    (let ((x4282343036 (prim eq? x y))) (kont42925 x4282343036)))
  (define (cons kont42926 a b)
    (let ((x4282443037 (prim cons a b))) (kont42926 x4282443037)))
  (define (car kont42927 lst)
    (let ((x4282543038 (prim car lst))) (kont42927 x4282543038)))
  (define (cdr kont42928 lst)
    (let ((x4282643039 (prim cdr lst))) (kont42928 x4282643039)))
  (define (even? kont42929 x)
    (let ((a4282743040 '0))
      (let ((a4282843041 '2))
        (let ((f4293043042
               (lambda (a4282943043)
                 (equal? kont42929 a4282743040 a4282943043))))
          (modulo f4293043042 x a4282843041)))))
  (define (odd? kont42931 x)
    (let ((a4283043044 '1))
      (let ((a4283143045 '2))
        (let ((f4293243046
               (lambda (a4283243047)
                 (equal? kont42931 a4283043044 a4283243047))))
          (modulo f4293243046 x a4283143045)))))
  (define (list . x)
    (let ((kont4293343048 (prim car x)))
      (let ((x43049 (prim cdr x))) (kont4293343048 x43049))))
  (define (member? kont42935 x lst)
    (let ((f4293943050
           (lambda (a4283343051)
             (if a4283343051
               (let ((x4283443052 '#f)) (kont42935 x4283443052))
               (let ((f4293843053
                      (lambda (a4283543054)
                        (let ((f4293743055
                               (lambda (a4283643056)
                                 (if a4283643056
                                   (let ((x4283743057 '#t))
                                     (kont42935 x4283743057))
                                   (let ((f4293643058
                                          (lambda (a4283843059)
                                            (member?
                                             kont42935
                                             x
                                             a4283843059))))
                                     (cdr f4293643058 lst))))))
                          (equal? f4293743055 a4283543054 x)))))
                 (car f4293843053 lst))))))
      (null? f4293943050 lst)))
  (define (foldl kont42940 fun acc lst)
    (let ((f4294443060
           (lambda (a4283943061)
             (if a4283943061
               (kont42940 acc)
               (let ((f4294343062
                      (lambda (a4284043063)
                        (let ((f4294243064
                               (lambda (a4284143065)
                                 (let ((f4294143066
                                        (lambda (a4284243067)
                                          (foldl
                                           kont42940
                                           fun
                                           a4284143065
                                           a4284243067))))
                                   (cdr f4294143066 lst)))))
                          (fun f4294243064 a4284043063 acc)))))
                 (car f4294343062 lst))))))
      (null? f4294443060 lst)))
  (define (reverse-helper kont42945 lst lst2)
    (let ((f4294943068
           (lambda (a4284343069)
             (if a4284343069
               (kont42945 lst2)
               (let ((f4294843070
                      (lambda (a4284443071)
                        (let ((f4294743072
                               (lambda (a4284543073)
                                 (let ((f4294643074
                                        (lambda (a4284643075)
                                          (reverse-helper
                                           kont42945
                                           a4284443071
                                           a4284643075))))
                                   (cons f4294643074 a4284543073 lst2)))))
                          (car f4294743072 lst)))))
                 (cdr f4294843070 lst))))))
      (null? f4294943068 lst)))
  (define (reverse kont42950 lst)
    (let ((f4295143076
           (lambda (a4284743077) (reverse-helper kont42950 lst a4284743077))))
      (list f4295143076)))
  (define (take-helper kont42952 lst n lst2)
    (let ((a4284843078 '0))
      (let ((f4295843079
             (lambda (a4284943080)
               (if a4284943080
                 (let ((f4295343081
                        (lambda (x4285043082) (kont42952 x4285043082))))
                   (reverse f4295343081 lst2))
                 (let ((f4295743083
                        (lambda (a4285143084)
                          (let ((a4285243085 '1))
                            (let ((f4295643086
                                   (lambda (a4285343087)
                                     (let ((f4295543088
                                            (lambda (a4285443089)
                                              (let ((f4295443090
                                                     (lambda (a4285543091)
                                                       (take-helper
                                                        kont42952
                                                        a4285143084
                                                        a4285343087
                                                        a4285543091))))
                                                (cons
                                                 f4295443090
                                                 a4285443089
                                                 lst2)))))
                                       (car f4295543088 lst)))))
                              (- f4295643086 n a4285243085))))))
                   (cdr f4295743083 lst))))))
        (= f4295843079 n a4284843078))))
  (define (take kont42959 lst n)
    (let ((f4296043092
           (lambda (a4285643093) (take-helper kont42959 lst n a4285643093))))
      (list f4296043092)))
  (define (length kont42961 lst)
    (let ((f4296443094
           (lambda (a4285743095)
             (if a4285743095
               (let ((x4285843096 '0)) (kont42961 x4285843096))
               (let ((a4285943097 '1))
                 (let ((f4296343098
                        (lambda (a4286043099)
                          (let ((f4296243100
                                 (lambda (a4286143101)
                                   (+ kont42961 a4285943097 a4286143101))))
                            (length f4296243100 a4286043099)))))
                   (cdr f4296343098 lst)))))))
      (null? f4296443094 lst)))
  (define (map kont42965 proc lst)
    (let ((f4297143102
           (lambda (a4286243103)
             (if a4286243103
               (let ((f4296643104
                      (lambda (x4286343105) (kont42965 x4286343105))))
                 (list f4296643104))
               (let ((f4297043106
                      (lambda (a4286443107)
                        (let ((f4296943108
                               (lambda (a4286543109)
                                 (let ((f4296843110
                                        (lambda (a4286643111)
                                          (let ((f4296743112
                                                 (lambda (a4286743113)
                                                   (cons
                                                    kont42965
                                                    a4286543109
                                                    a4286743113))))
                                            (map
                                             f4296743112
                                             proc
                                             a4286643111)))))
                                   (cdr f4296843110 lst)))))
                          (proc f4296943108 a4286443107)))))
                 (car f4297043106 lst))))))
      (null? f4297143102 lst)))
  (define (filter kont42972 op lst)
    (let ((f4298043114
           (lambda (a4286843115)
             (if a4286843115
               (let ((f4297343116
                      (lambda (x4286943117) (kont42972 x4286943117))))
                 (list f4297343116))
               (let ((f4297943118
                      (lambda (a4287043119)
                        (let ((f4297843120
                               (lambda (a4287143121)
                                 (if a4287143121
                                   (let ((f4297643122
                                          (lambda (a4287243123)
                                            (let ((f4297543124
                                                   (lambda (a4287343125)
                                                     (let ((f4297443126
                                                            (lambda (a4287443127)
                                                              (cons
                                                               kont42972
                                                               a4287243123
                                                               a4287443127))))
                                                       (filter
                                                        f4297443126
                                                        op
                                                        a4287343125)))))
                                              (cdr f4297543124 lst)))))
                                     (car f4297643122 lst))
                                   (let ((f4297743128
                                          (lambda (a4287543129)
                                            (filter
                                             kont42972
                                             op
                                             a4287543129))))
                                     (cdr f4297743128 lst))))))
                          (op f4297843120 a4287043119)))))
                 (car f4297943118 lst))))))
      (null? f4298043114 lst)))
  (define (drop kont42981 lst n)
    (let ((a4287643130 '0))
      (let ((f4298443131
             (lambda (a4287743132)
               (if a4287743132
                 (kont42981 lst)
                 (let ((f4298343133
                        (lambda (a4287843134)
                          (let ((a4287943135 '1))
                            (let ((f4298243136
                                   (lambda (a4288043137)
                                     (drop
                                      kont42981
                                      a4287843134
                                      a4288043137))))
                              (- f4298243136 n a4287943135))))))
                   (cdr f4298343133 lst))))))
        (= f4298443131 n a4287643130))))
  (define (foldr kont42985 proc acc lst)
    (let ((f4298943138
           (lambda (a4288143139)
             (if a4288143139
               (kont42985 acc)
               (let ((f4298843140
                      (lambda (a4288243141)
                        (let ((f4298743142
                               (lambda (a4288343143)
                                 (let ((f4298643144
                                        (lambda (a4288443145)
                                          (proc
                                           kont42985
                                           a4288243141
                                           a4288443145))))
                                   (foldr f4298643144 proc acc a4288343143)))))
                          (cdr f4298743142 lst)))))
                 (car f4298843140 lst))))))
      (null? f4298943138 lst)))
  (define (append kont42990 lst1 lst2)
    (let ((f4299443146
           (lambda (a4288543147)
             (if a4288543147
               (kont42990 lst2)
               (let ((f4299343148
                      (lambda (a4288643149)
                        (let ((f4299243150
                               (lambda (a4288743151)
                                 (let ((f4299143152
                                        (lambda (a4288843153)
                                          (cons
                                           kont42990
                                           a4288643149
                                           a4288843153))))
                                   (append f4299143152 a4288743151 lst2)))))
                          (cdr f4299243150 lst1)))))
                 (car f4299343148 lst1))))))
      (null? f4299443146 lst1)))
  (define (hash . lst)
    (let ((kont4299543154 (prim car lst)))
      (let ((lst43155 (prim cdr lst)))
        (let ((x4288943156 (apply-prim hash lst43155)))
          (kont4299543154 x4288943156)))))
  (define (hash-ref kont42997 h k)
    (let ((x4289043157 (prim hash-ref h k))) (kont42997 x4289043157)))
  (define (hash-set kont42998 h k v)
    (let ((x4289143158 (prim hash-set h k v))) (kont42998 x4289143158)))
  (define (hash-has-key? kont42999 h k)
    (let ((x4289243159 (prim hash-has-key? h k))) (kont42999 x4289243159)))
  (define (hash-count kont43000 h)
    (let ((x4289343160 (prim hash-count h))) (kont43000 x4289343160)))
  (define (call kont43001)
    (let ((a4289443161 "work"))
      (let ((a4289543162 '80))
        (let ((a4289643163 '10))
          (let ((a4289743164 "lmao"))
            (let ((f4300343165
                   (lambda (a4289843166)
                     (let ((a4289943167 "work"))
                       (let ((a4290043168 '90))
                         (let ((f4300243169
                                (lambda (a4290143170)
                                  (let ((a4290243171 "work"))
                                    (hash-ref
                                     kont43001
                                     a4290143170
                                     a4290243171)))))
                           (hash-set
                            f4300243169
                            a4289843166
                            a4289943167
                            a4290043168)))))))
              (hash
               f4300343165
               a4289443161
               a4289543162
               a4289643163
               a4289743164)))))))
  (define (brouhaha_main kont43004)
    (let ((f4300543172 (lambda (x4290343173) (kont43004 x4290343173))))
      (call f4300543172))))
