'((proc
   (+ _50598 . lst)
   (let ((kont5033850438 (prim car lst)))
     (let ((lst50439 (prim cdr lst)))
       (let ((x5025150440 (apply-prim + lst50439)))
         (clo-app kont5033850438 x5025150440)))))
  (proc
   (- _50599 . lst)
   (let ((kont5034050441 (prim car lst)))
     (let ((lst50442 (prim cdr lst)))
       (let ((x5025250443 (apply-prim - lst50442)))
         (clo-app kont5034050441 x5025250443)))))
  (proc
   (* _50600 . lst)
   (let ((kont5034250444 (prim car lst)))
     (let ((lst50445 (prim cdr lst)))
       (let ((x5025350446 (apply-prim * lst50445)))
         (clo-app kont5034250444 x5025350446)))))
  (proc
   (modulo _50601 kont50344 a b)
   (let ((x5025450447 (prim modulo a b))) (clo-app kont50344 x5025450447)))
  (proc
   (/ _50602 . lst)
   (let ((kont5034550448 (prim car lst)))
     (let ((lst50449 (prim cdr lst)))
       (let ((x5025550450 (apply-prim / lst50449)))
         (clo-app kont5034550448 x5025550450)))))
  (proc
   (= _50603 . lst)
   (let ((kont5034750451 (prim car lst)))
     (let ((lst50452 (prim cdr lst)))
       (let ((x5025650453 (apply-prim = lst50452)))
         (clo-app kont5034750451 x5025650453)))))
  (proc
   (> _50604 . lst)
   (let ((kont5034950454 (prim car lst)))
     (let ((lst50455 (prim cdr lst)))
       (let ((x5025750456 (apply-prim > lst50455)))
         (clo-app kont5034950454 x5025750456)))))
  (proc
   (< _50605 . lst)
   (let ((kont5035150457 (prim car lst)))
     (let ((lst50458 (prim cdr lst)))
       (let ((x5025850459 (apply-prim < lst50458)))
         (clo-app kont5035150457 x5025850459)))))
  (proc
   (<= _50606 . lst)
   (let ((kont5035350460 (prim car lst)))
     (let ((lst50461 (prim cdr lst)))
       (let ((x5025950462 (apply-prim <= lst50461)))
         (clo-app kont5035350460 x5025950462)))))
  (proc
   (>= _50607 . lst)
   (let ((kont5035550463 (prim car lst)))
     (let ((lst50464 (prim cdr lst)))
       (let ((x5026050465 (apply-prim >= lst50464)))
         (clo-app kont5035550463 x5026050465)))))
  (proc
   (null? _50608 kont50357 x)
   (let ((x5026150466 (prim null? x))) (clo-app kont50357 x5026150466)))
  (proc
   (equal? _50609 kont50358 x y)
   (let ((x5026250467 (prim equal? x y))) (clo-app kont50358 x5026250467)))
  (proc
   (eq? _50610 kont50359 x y)
   (let ((x5026350468 (prim eq? x y))) (clo-app kont50359 x5026350468)))
  (proc
   (cons _50611 kont50360 a b)
   (let ((x5026450469 (prim cons a b))) (clo-app kont50360 x5026450469)))
  (proc
   (car _50612 kont50361 lst)
   (let ((x5026550470 (prim car lst))) (clo-app kont50361 x5026550470)))
  (proc
   (cdr _50613 kont50362 lst)
   (let ((x5026650471 (prim cdr lst))) (clo-app kont50362 x5026650471)))
  (proc
   (lam50614 env50615 a5026950475)
   (let ((a5026750472 (env-ref env50615 3)))
     (let ((equal? (env-ref env50615 2)))
       (let ((kont50363 (env-ref env50615 1)))
         (clo-app equal? kont50363 a5026750472 a5026950475)))))
  (proc
   (even? _50618 kont50363 x)
   (let ((a5026750472 '0))
     (let ((a5026850473 '2))
       (let ((f5036450474
              (make-closure lam50614 kont50363 equal? a5026750472)))
         (clo-app modulo f5036450474 x a5026850473)))))
  (proc
   (lam50619 env50620 a5027250479)
   (let ((equal? (env-ref env50620 3)))
     (let ((a5027050476 (env-ref env50620 2)))
       (let ((kont50365 (env-ref env50620 1)))
         (clo-app equal? kont50365 a5027050476 a5027250479)))))
  (proc
   (odd? _50623 kont50365 x)
   (let ((a5027050476 '1))
     (let ((a5027150477 '2))
       (let ((f5036650478
              (make-closure lam50619 kont50365 a5027050476 equal?)))
         (clo-app modulo f5036650478 x a5027150477)))))
  (proc
   (list _50624 . x)
   (let ((kont5036750480 (prim car x)))
     (let ((x50481 (prim cdr x))) (clo-app kont5036750480 x50481))))
  (proc
   (lam50627 env50628 a5027850491)
   (let ((kont50369 (env-ref env50628 3)))
     (let ((x (env-ref env50628 2)))
       (let ((member? (env-ref env50628 1)))
         (clo-app member? kont50369 x a5027850491)))))
  (proc
   (lam50629 env50630 a5027650488)
   (let ((lst (env-ref env50630 5)))
     (let ((x (env-ref env50630 4)))
       (let ((member? (env-ref env50630 3)))
         (let ((kont50369 (env-ref env50630 2)))
           (let ((cdr (env-ref env50630 1)))
             (if a5027650488
               (let ((x5027750489 '#t)) (clo-app kont50369 x5027750489))
               (let ((f5037050490 (make-closure lam50627 member? x kont50369)))
                 (clo-app cdr f5037050490 lst)))))))))
  (proc
   (lam50631 env50632 a5027550486)
   (let ((lst (env-ref env50632 6)))
     (let ((equal? (env-ref env50632 5)))
       (let ((x (env-ref env50632 4)))
         (let ((member? (env-ref env50632 3)))
           (let ((kont50369 (env-ref env50632 2)))
             (let ((cdr (env-ref env50632 1)))
               (let ((f5037150487
                      (make-closure lam50629 cdr kont50369 member? x lst)))
                 (clo-app equal? f5037150487 a5027550486 x)))))))))
  (proc
   (lam50633 env50634 a5027350483)
   (let ((lst (env-ref env50634 7)))
     (let ((equal? (env-ref env50634 6)))
       (let ((x (env-ref env50634 5)))
         (let ((car (env-ref env50634 4)))
           (let ((member? (env-ref env50634 3)))
             (let ((kont50369 (env-ref env50634 2)))
               (let ((cdr (env-ref env50634 1)))
                 (if a5027350483
                   (let ((x5027450484 '#f)) (clo-app kont50369 x5027450484))
                   (let ((f5037250485
                          (make-closure
                           lam50631
                           cdr
                           kont50369
                           member?
                           x
                           equal?
                           lst)))
                     (clo-app car f5037250485 lst)))))))))))
  (proc
   (member? _50635 kont50369 x lst)
   (let ((f5037350482
          (make-closure lam50633 cdr kont50369 member? car x equal? lst)))
     (clo-app null? f5037350482 lst)))
  (proc
   (lam50636 env50637 a5028250499)
   (let ((a5028150497 (env-ref env50637 4)))
     (let ((kont50374 (env-ref env50637 3)))
       (let ((fun (env-ref env50637 2)))
         (let ((foldl (env-ref env50637 1)))
           (clo-app foldl kont50374 fun a5028150497 a5028250499))))))
  (proc
   (lam50638 env50639 a5028150497)
   (let ((cdr (env-ref env50639 5)))
     (let ((lst (env-ref env50639 4)))
       (let ((kont50374 (env-ref env50639 3)))
         (let ((fun (env-ref env50639 2)))
           (let ((foldl (env-ref env50639 1)))
             (let ((f5037550498
                    (make-closure lam50636 foldl fun kont50374 a5028150497)))
               (clo-app cdr f5037550498 lst))))))))
  (proc
   (lam50640 env50641 a5028050495)
   (let ((cdr (env-ref env50641 6)))
     (let ((lst (env-ref env50641 5)))
       (let ((kont50374 (env-ref env50641 4)))
         (let ((fun (env-ref env50641 3)))
           (let ((acc (env-ref env50641 2)))
             (let ((foldl (env-ref env50641 1)))
               (let ((f5037650496
                      (make-closure lam50638 foldl fun kont50374 lst cdr)))
                 (clo-app fun f5037650496 a5028050495 acc)))))))))
  (proc
   (lam50642 env50643 a5027950493)
   (let ((cdr (env-ref env50643 7)))
     (let ((lst (env-ref env50643 6)))
       (let ((kont50374 (env-ref env50643 5)))
         (let ((fun (env-ref env50643 4)))
           (let ((acc (env-ref env50643 3)))
             (let ((car (env-ref env50643 2)))
               (let ((foldl (env-ref env50643 1)))
                 (if a5027950493
                   (clo-app kont50374 acc)
                   (let ((f5037750494
                          (make-closure
                           lam50640
                           foldl
                           acc
                           fun
                           kont50374
                           lst
                           cdr)))
                     (clo-app car f5037750494 lst)))))))))))
  (proc
   (foldl _50644 kont50374 fun acc lst)
   (let ((f5037850492
          (make-closure lam50642 foldl car acc fun kont50374 lst cdr)))
     (clo-app null? f5037850492 lst)))
  (proc
   (lam50645 env50646 a5028650507)
   (let ((a5028450503 (env-ref env50646 3)))
     (let ((reverse-helper (env-ref env50646 2)))
       (let ((kont50379 (env-ref env50646 1)))
         (clo-app reverse-helper kont50379 a5028450503 a5028650507)))))
  (proc
   (lam50647 env50648 a5028550505)
   (let ((a5028450503 (env-ref env50648 5)))
     (let ((reverse-helper (env-ref env50648 4)))
       (let ((kont50379 (env-ref env50648 3)))
         (let ((lst2 (env-ref env50648 2)))
           (let ((cons (env-ref env50648 1)))
             (let ((f5038050506
                    (make-closure
                     lam50645
                     kont50379
                     reverse-helper
                     a5028450503)))
               (clo-app cons f5038050506 a5028550505 lst2))))))))
  (proc
   (lam50649 env50650 a5028450503)
   (let ((lst (env-ref env50650 6)))
     (let ((reverse-helper (env-ref env50650 5)))
       (let ((kont50379 (env-ref env50650 4)))
         (let ((lst2 (env-ref env50650 3)))
           (let ((car (env-ref env50650 2)))
             (let ((cons (env-ref env50650 1)))
               (let ((f5038150504
                      (make-closure
                       lam50647
                       cons
                       lst2
                       kont50379
                       reverse-helper
                       a5028450503)))
                 (clo-app car f5038150504 lst)))))))))
  (proc
   (lam50651 env50652 a5028350501)
   (let ((cdr (env-ref env50652 7)))
     (let ((lst (env-ref env50652 6)))
       (let ((reverse-helper (env-ref env50652 5)))
         (let ((kont50379 (env-ref env50652 4)))
           (let ((lst2 (env-ref env50652 3)))
             (let ((car (env-ref env50652 2)))
               (let ((cons (env-ref env50652 1)))
                 (if a5028350501
                   (clo-app kont50379 lst2)
                   (let ((f5038250502
                          (make-closure
                           lam50649
                           cons
                           car
                           lst2
                           kont50379
                           reverse-helper
                           lst)))
                     (clo-app cdr f5038250502 lst)))))))))))
  (proc
   (reverse-helper _50653 kont50379 lst lst2)
   (let ((f5038350500
          (make-closure
           lam50651
           cons
           car
           lst2
           kont50379
           reverse-helper
           lst
           cdr)))
     (clo-app null? f5038350500 lst)))
  (proc
   (lam50654 env50655 a5028750509)
   (let ((lst (env-ref env50655 3)))
     (let ((reverse-helper (env-ref env50655 2)))
       (let ((kont50384 (env-ref env50655 1)))
         (clo-app reverse-helper kont50384 lst a5028750509)))))
  (proc
   (reverse _50656 kont50384 lst)
   (let ((f5038550508 (make-closure lam50654 kont50384 reverse-helper lst)))
     (clo-app list f5038550508)))
  (proc
   (lam50657 env50658 x5029050514)
   (let ((kont50386 (env-ref env50658 1))) (clo-app kont50386 x5029050514)))
  (proc
   (lam50659 env50660 a5029550523)
   (let ((kont50386 (env-ref env50660 4)))
     (let ((a5029150516 (env-ref env50660 3)))
       (let ((a5029350519 (env-ref env50660 2)))
         (let ((take-helper (env-ref env50660 1)))
           (clo-app
            take-helper
            kont50386
            a5029150516
            a5029350519
            a5029550523))))))
  (proc
   (lam50661 env50662 a5029450521)
   (let ((kont50386 (env-ref env50662 6)))
     (let ((a5029150516 (env-ref env50662 5)))
       (let ((a5029350519 (env-ref env50662 4)))
         (let ((cons (env-ref env50662 3)))
           (let ((take-helper (env-ref env50662 2)))
             (let ((lst2 (env-ref env50662 1)))
               (let ((f5038850522
                      (make-closure
                       lam50659
                       take-helper
                       a5029350519
                       a5029150516
                       kont50386)))
                 (clo-app cons f5038850522 a5029450521 lst2)))))))))
  (proc
   (lam50663 env50664 a5029350519)
   (let ((kont50386 (env-ref env50664 7)))
     (let ((a5029150516 (env-ref env50664 6)))
       (let ((lst (env-ref env50664 5)))
         (let ((car (env-ref env50664 4)))
           (let ((cons (env-ref env50664 3)))
             (let ((take-helper (env-ref env50664 2)))
               (let ((lst2 (env-ref env50664 1)))
                 (let ((f5038950520
                        (make-closure
                         lam50661
                         lst2
                         take-helper
                         cons
                         a5029350519
                         a5029150516
                         kont50386)))
                   (clo-app car f5038950520 lst))))))))))
  (proc
   (lam50666 env50667 a5029150516)
   (let ((kont50386 (env-ref env50667 8)))
     (let ((lst (env-ref env50667 7)))
       (let ((cons (env-ref env50667 6)))
         (let ((- (env-ref env50667 5)))
           (let ((take-helper (env-ref env50667 4)))
             (let ((lst2 (env-ref env50667 3)))
               (let ((n (env-ref env50667 2)))
                 (let ((car (env-ref env50667 1)))
                   (let ((a5029250517 '1))
                     (let ((f5039050518
                            (make-closure
                             lam50663
                             lst2
                             take-helper
                             cons
                             car
                             lst
                             a5029150516
                             kont50386)))
                       (clo-app - f5039050518 n a5029250517))))))))))))
  (proc
   (lam50668 env50669 a5028950512)
   (let ((cdr (env-ref env50669 10)))
     (let ((kont50386 (env-ref env50669 9)))
       (let ((lst (env-ref env50669 8)))
         (let ((reverse (env-ref env50669 7)))
           (let ((cons (env-ref env50669 6)))
             (let ((- (env-ref env50669 5)))
               (let ((take-helper (env-ref env50669 4)))
                 (let ((lst2 (env-ref env50669 3)))
                   (let ((n (env-ref env50669 2)))
                     (let ((car (env-ref env50669 1)))
                       (if a5028950512
                         (let ((f5038750513 (make-closure lam50657 kont50386)))
                           (clo-app reverse f5038750513 lst2))
                         (let ((f5039150515
                                (make-closure
                                 lam50666
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 lst
                                 kont50386)))
                           (clo-app cdr f5039150515 lst))))))))))))))
  (proc
   (take-helper _50671 kont50386 lst n lst2)
   (let ((a5028850510 '0))
     (let ((f5039250511
            (make-closure
             lam50668
             car
             n
             lst2
             take-helper
             -
             cons
             reverse
             lst
             kont50386
             cdr)))
       (clo-app = f5039250511 n a5028850510))))
  (proc
   (lam50672 env50673 a5029650525)
   (let ((lst (env-ref env50673 4)))
     (let ((kont50393 (env-ref env50673 3)))
       (let ((take-helper (env-ref env50673 2)))
         (let ((n (env-ref env50673 1)))
           (clo-app take-helper kont50393 lst n a5029650525))))))
  (proc
   (take _50674 kont50393 lst n)
   (let ((f5039450524 (make-closure lam50672 n take-helper kont50393 lst)))
     (clo-app list f5039450524)))
  (proc
   (lam50676 env50677 a5030150533)
   (let ((a5029950529 (env-ref env50677 3)))
     (let ((+ (env-ref env50677 2)))
       (let ((kont50395 (env-ref env50677 1)))
         (clo-app + kont50395 a5029950529 a5030150533)))))
  (proc
   (lam50678 env50679 a5030050531)
   (let ((a5029950529 (env-ref env50679 4)))
     (let ((length (env-ref env50679 3)))
       (let ((+ (env-ref env50679 2)))
         (let ((kont50395 (env-ref env50679 1)))
           (let ((f5039650532 (make-closure lam50676 kont50395 + a5029950529)))
             (clo-app length f5039650532 a5030050531)))))))
  (proc
   (lam50681 env50682 a5029750527)
   (let ((cdr (env-ref env50682 5)))
     (let ((lst (env-ref env50682 4)))
       (let ((length (env-ref env50682 3)))
         (let ((+ (env-ref env50682 2)))
           (let ((kont50395 (env-ref env50682 1)))
             (if a5029750527
               (let ((x5029850528 '0)) (clo-app kont50395 x5029850528))
               (let ((a5029950529 '1))
                 (let ((f5039750530
                        (make-closure
                         lam50678
                         kont50395
                         +
                         length
                         a5029950529)))
                   (clo-app cdr f5039750530 lst))))))))))
  (proc
   (length _50683 kont50395 lst)
   (let ((f5039850526 (make-closure lam50681 kont50395 + length lst cdr)))
     (clo-app null? f5039850526 lst)))
  (proc
   (lam50684 env50685 x5030350537)
   (let ((kont50399 (env-ref env50685 1))) (clo-app kont50399 x5030350537)))
  (proc
   (lam50686 env50687 a5030750545)
   (let ((a5030550541 (env-ref env50687 3)))
     (let ((cons (env-ref env50687 2)))
       (let ((kont50399 (env-ref env50687 1)))
         (clo-app cons kont50399 a5030550541 a5030750545)))))
  (proc
   (lam50688 env50689 a5030650543)
   (let ((map (env-ref env50689 5)))
     (let ((proc (env-ref env50689 4)))
       (let ((a5030550541 (env-ref env50689 3)))
         (let ((cons (env-ref env50689 2)))
           (let ((kont50399 (env-ref env50689 1)))
             (let ((f5040150544
                    (make-closure lam50686 kont50399 cons a5030550541)))
               (clo-app map f5040150544 proc a5030650543))))))))
  (proc
   (lam50690 env50691 a5030550541)
   (let ((cdr (env-ref env50691 6)))
     (let ((lst (env-ref env50691 5)))
       (let ((map (env-ref env50691 4)))
         (let ((proc (env-ref env50691 3)))
           (let ((cons (env-ref env50691 2)))
             (let ((kont50399 (env-ref env50691 1)))
               (let ((f5040250542
                      (make-closure
                       lam50688
                       kont50399
                       cons
                       a5030550541
                       proc
                       map)))
                 (clo-app cdr f5040250542 lst)))))))))
  (proc
   (lam50692 env50693 a5030450539)
   (let ((cdr (env-ref env50693 6)))
     (let ((lst (env-ref env50693 5)))
       (let ((map (env-ref env50693 4)))
         (let ((proc (env-ref env50693 3)))
           (let ((cons (env-ref env50693 2)))
             (let ((kont50399 (env-ref env50693 1)))
               (let ((f5040350540
                      (make-closure lam50690 kont50399 cons proc map lst cdr)))
                 (clo-app proc f5040350540 a5030450539)))))))))
  (proc
   (lam50694 env50695 a5030250535)
   (let ((lst (env-ref env50695 8)))
     (let ((map (env-ref env50695 7)))
       (let ((proc (env-ref env50695 6)))
         (let ((car (env-ref env50695 5)))
           (let ((list (env-ref env50695 4)))
             (let ((cdr (env-ref env50695 3)))
               (let ((cons (env-ref env50695 2)))
                 (let ((kont50399 (env-ref env50695 1)))
                   (if a5030250535
                     (let ((f5040050536 (make-closure lam50684 kont50399)))
                       (clo-app list f5040050536))
                     (let ((f5040450538
                            (make-closure
                             lam50692
                             kont50399
                             cons
                             proc
                             map
                             lst
                             cdr)))
                       (clo-app car f5040450538 lst))))))))))))
  (proc
   (map _50696 kont50399 proc lst)
   (let ((f5040550534
          (make-closure lam50694 kont50399 cons cdr list car proc map lst)))
     (clo-app null? f5040550534 lst)))
  (proc
   (lam50697 env50698 x5030950549)
   (let ((kont50406 (env-ref env50698 1))) (clo-app kont50406 x5030950549)))
  (proc
   (lam50699 env50700 a5031450559)
   (let ((kont50406 (env-ref env50700 3)))
     (let ((a5031250555 (env-ref env50700 2)))
       (let ((cons (env-ref env50700 1)))
         (clo-app cons kont50406 a5031250555 a5031450559)))))
  (proc
   (lam50701 env50702 a5031350557)
   (let ((kont50406 (env-ref env50702 5)))
     (let ((op (env-ref env50702 4)))
       (let ((a5031250555 (env-ref env50702 3)))
         (let ((filter (env-ref env50702 2)))
           (let ((cons (env-ref env50702 1)))
             (let ((f5040850558
                    (make-closure lam50699 cons a5031250555 kont50406)))
               (clo-app filter f5040850558 op a5031350557))))))))
  (proc
   (lam50703 env50704 a5031250555)
   (let ((cdr (env-ref env50704 6)))
     (let ((lst (env-ref env50704 5)))
       (let ((kont50406 (env-ref env50704 4)))
         (let ((op (env-ref env50704 3)))
           (let ((filter (env-ref env50704 2)))
             (let ((cons (env-ref env50704 1)))
               (let ((f5040950556
                      (make-closure
                       lam50701
                       cons
                       filter
                       a5031250555
                       op
                       kont50406)))
                 (clo-app cdr f5040950556 lst)))))))))
  (proc
   (lam50705 env50706 a5031550561)
   (let ((kont50406 (env-ref env50706 3)))
     (let ((op (env-ref env50706 2)))
       (let ((filter (env-ref env50706 1)))
         (clo-app filter kont50406 op a5031550561)))))
  (proc
   (lam50707 env50708 a5031150553)
   (let ((cdr (env-ref env50708 7)))
     (let ((lst (env-ref env50708 6)))
       (let ((kont50406 (env-ref env50708 5)))
         (let ((op (env-ref env50708 4)))
           (let ((cons (env-ref env50708 3)))
             (let ((filter (env-ref env50708 2)))
               (let ((car (env-ref env50708 1)))
                 (if a5031150553
                   (let ((f5041050554
                          (make-closure
                           lam50703
                           cons
                           filter
                           op
                           kont50406
                           lst
                           cdr)))
                     (clo-app car f5041050554 lst))
                   (let ((f5041150560
                          (make-closure lam50705 filter op kont50406)))
                     (clo-app cdr f5041150560 lst)))))))))))
  (proc
   (lam50709 env50710 a5031050551)
   (let ((cdr (env-ref env50710 7)))
     (let ((lst (env-ref env50710 6)))
       (let ((kont50406 (env-ref env50710 5)))
         (let ((op (env-ref env50710 4)))
           (let ((cons (env-ref env50710 3)))
             (let ((filter (env-ref env50710 2)))
               (let ((car (env-ref env50710 1)))
                 (let ((f5041250552
                        (make-closure
                         lam50707
                         car
                         filter
                         cons
                         op
                         kont50406
                         lst
                         cdr)))
                   (clo-app op f5041250552 a5031050551))))))))))
  (proc
   (lam50711 env50712 a5030850547)
   (let ((lst (env-ref env50712 8)))
     (let ((kont50406 (env-ref env50712 7)))
       (let ((op (env-ref env50712 6)))
         (let ((cons (env-ref env50712 5)))
           (let ((list (env-ref env50712 4)))
             (let ((cdr (env-ref env50712 3)))
               (let ((filter (env-ref env50712 2)))
                 (let ((car (env-ref env50712 1)))
                   (if a5030850547
                     (let ((f5040750548 (make-closure lam50697 kont50406)))
                       (clo-app list f5040750548))
                     (let ((f5041350550
                            (make-closure
                             lam50709
                             car
                             filter
                             cons
                             op
                             kont50406
                             lst
                             cdr)))
                       (clo-app car f5041350550 lst))))))))))))
  (proc
   (filter _50713 kont50406 op lst)
   (let ((f5041450546
          (make-closure lam50711 car filter cdr list cons op kont50406 lst)))
     (clo-app null? f5041450546 lst)))
  (proc
   (lam50714 env50715 a5032050569)
   (let ((drop (env-ref env50715 3)))
     (let ((a5031850566 (env-ref env50715 2)))
       (let ((kont50415 (env-ref env50715 1)))
         (clo-app drop kont50415 a5031850566 a5032050569)))))
  (proc
   (lam50717 env50718 a5031850566)
   (let ((drop (env-ref env50718 4)))
     (let ((n (env-ref env50718 3)))
       (let ((kont50415 (env-ref env50718 2)))
         (let ((- (env-ref env50718 1)))
           (let ((a5031950567 '1))
             (let ((f5041650568
                    (make-closure lam50714 kont50415 a5031850566 drop)))
               (clo-app - f5041650568 n a5031950567))))))))
  (proc
   (lam50719 env50720 a5031750564)
   (let ((cdr (env-ref env50720 6)))
     (let ((n (env-ref env50720 5)))
       (let ((kont50415 (env-ref env50720 4)))
         (let ((- (env-ref env50720 3)))
           (let ((lst (env-ref env50720 2)))
             (let ((drop (env-ref env50720 1)))
               (if a5031750564
                 (clo-app kont50415 lst)
                 (let ((f5041750565
                        (make-closure lam50717 - kont50415 n drop)))
                   (clo-app cdr f5041750565 lst))))))))))
  (proc
   (drop _50722 kont50415 lst n)
   (let ((a5031650562 '0))
     (let ((f5041850563 (make-closure lam50719 drop lst - kont50415 n cdr)))
       (clo-app = f5041850563 n a5031650562))))
  (proc
   (lam50723 env50724 a5032450577)
   (let ((kont50419 (env-ref env50724 3)))
     (let ((proc (env-ref env50724 2)))
       (let ((a5032250573 (env-ref env50724 1)))
         (clo-app proc kont50419 a5032250573 a5032450577)))))
  (proc
   (lam50725 env50726 a5032350575)
   (let ((kont50419 (env-ref env50726 5)))
     (let ((foldr (env-ref env50726 4)))
       (let ((a5032250573 (env-ref env50726 3)))
         (let ((proc (env-ref env50726 2)))
           (let ((acc (env-ref env50726 1)))
             (let ((f5042050576
                    (make-closure lam50723 a5032250573 proc kont50419)))
               (clo-app foldr f5042050576 proc acc a5032350575))))))))
  (proc
   (lam50727 env50728 a5032250573)
   (let ((cdr (env-ref env50728 6)))
     (let ((kont50419 (env-ref env50728 5)))
       (let ((foldr (env-ref env50728 4)))
         (let ((lst (env-ref env50728 3)))
           (let ((proc (env-ref env50728 2)))
             (let ((acc (env-ref env50728 1)))
               (let ((f5042150574
                      (make-closure
                       lam50725
                       acc
                       proc
                       a5032250573
                       foldr
                       kont50419)))
                 (clo-app cdr f5042150574 lst)))))))))
  (proc
   (lam50729 env50730 a5032150571)
   (let ((cdr (env-ref env50730 7)))
     (let ((kont50419 (env-ref env50730 6)))
       (let ((car (env-ref env50730 5)))
         (let ((foldr (env-ref env50730 4)))
           (let ((lst (env-ref env50730 3)))
             (let ((proc (env-ref env50730 2)))
               (let ((acc (env-ref env50730 1)))
                 (if a5032150571
                   (clo-app kont50419 acc)
                   (let ((f5042250572
                          (make-closure
                           lam50727
                           acc
                           proc
                           lst
                           foldr
                           kont50419
                           cdr)))
                     (clo-app car f5042250572 lst)))))))))))
  (proc
   (foldr _50731 kont50419 proc acc lst)
   (let ((f5042350570
          (make-closure lam50729 acc proc lst foldr car kont50419 cdr)))
     (clo-app null? f5042350570 lst)))
  (proc
   (lam50732 env50733 a5032850585)
   (let ((a5032650581 (env-ref env50733 3)))
     (let ((kont50424 (env-ref env50733 2)))
       (let ((cons (env-ref env50733 1)))
         (clo-app cons kont50424 a5032650581 a5032850585)))))
  (proc
   (lam50734 env50735 a5032750583)
   (let ((a5032650581 (env-ref env50735 5)))
     (let ((kont50424 (env-ref env50735 4)))
       (let ((append (env-ref env50735 3)))
         (let ((lst2 (env-ref env50735 2)))
           (let ((cons (env-ref env50735 1)))
             (let ((f5042550584
                    (make-closure lam50732 cons kont50424 a5032650581)))
               (clo-app append f5042550584 a5032750583 lst2))))))))
  (proc
   (lam50736 env50737 a5032650581)
   (let ((cdr (env-ref env50737 6)))
     (let ((kont50424 (env-ref env50737 5)))
       (let ((append (env-ref env50737 4)))
         (let ((lst2 (env-ref env50737 3)))
           (let ((lst1 (env-ref env50737 2)))
             (let ((cons (env-ref env50737 1)))
               (let ((f5042650582
                      (make-closure
                       lam50734
                       cons
                       lst2
                       append
                       kont50424
                       a5032650581)))
                 (clo-app cdr f5042650582 lst1)))))))))
  (proc
   (lam50738 env50739 a5032550579)
   (let ((cdr (env-ref env50739 7)))
     (let ((kont50424 (env-ref env50739 6)))
       (let ((append (env-ref env50739 5)))
         (let ((lst2 (env-ref env50739 4)))
           (let ((cons (env-ref env50739 3)))
             (let ((lst1 (env-ref env50739 2)))
               (let ((car (env-ref env50739 1)))
                 (if a5032550579
                   (clo-app kont50424 lst2)
                   (let ((f5042750580
                          (make-closure
                           lam50736
                           cons
                           lst1
                           lst2
                           append
                           kont50424
                           cdr)))
                     (clo-app car f5042750580 lst1)))))))))))
  (proc
   (append _50740 kont50424 lst1 lst2)
   (let ((f5042850578
          (make-closure lam50738 car lst1 cons lst2 append kont50424 cdr)))
     (clo-app null? f5042850578 lst1)))
  (proc
   (hash _50741 . lst)
   (let ((kont5042950586 (prim car lst)))
     (let ((lst50587 (prim cdr lst)))
       (let ((x5032950588 (apply-prim hash lst50587)))
         (clo-app kont5042950586 x5032950588)))))
  (proc
   (hash-ref _50742 kont50431 h k)
   (let ((x5033050589 (prim hash-ref h k))) (clo-app kont50431 x5033050589)))
  (proc
   (hash-set _50743 kont50432 h k v)
   (let ((x5033150590 (prim hash-set h k v))) (clo-app kont50432 x5033150590)))
  (proc
   (hash-has-key? _50744 kont50433 h k)
   (let ((x5033250591 (prim hash-has-key? h k)))
     (clo-app kont50433 x5033250591)))
  (proc
   (hash-count _50745 kont50434 h)
   (let ((x5033350592 (prim hash-count h))) (clo-app kont50434 x5033350592)))
  (proc
   (call _50749 kont50435)
   (let ((a5033450593 '#f))
     (if a5033450593
       (let ((x5033550594 '#f)) (clo-app kont50435 x5033550594))
       (let ((x5033650595 '#t)) (clo-app kont50435 x5033650595)))))
  (proc
   (lam50750 env50751 x5033750597)
   (let ((kont50436 (env-ref env50751 1))) (clo-app kont50436 x5033750597)))
  (proc
   (brouhaha_main _50752 kont50436)
   (let ((f5043750596 (make-closure lam50750 kont50436)))
     (clo-app call f5043750596))))
