'((proc
   (+ _48814 . lst)
   (let ((kont4855448654 (prim car lst)))
     (let ((lst48655 (prim cdr lst)))
       (let ((x4846748656 (apply-prim + lst48655)))
         (clo-app kont4855448654 x4846748656)))))
  (proc
   (- _48815 . lst)
   (let ((kont4855648657 (prim car lst)))
     (let ((lst48658 (prim cdr lst)))
       (let ((x4846848659 (apply-prim - lst48658)))
         (clo-app kont4855648657 x4846848659)))))
  (proc
   (* _48816 . lst)
   (let ((kont4855848660 (prim car lst)))
     (let ((lst48661 (prim cdr lst)))
       (let ((x4846948662 (apply-prim * lst48661)))
         (clo-app kont4855848660 x4846948662)))))
  (proc
   (modulo _48817 kont48560 a b)
   (let ((x4847048663 (prim modulo a b))) (clo-app kont48560 x4847048663)))
  (proc
   (/ _48818 . lst)
   (let ((kont4856148664 (prim car lst)))
     (let ((lst48665 (prim cdr lst)))
       (let ((x4847148666 (apply-prim / lst48665)))
         (clo-app kont4856148664 x4847148666)))))
  (proc
   (= _48819 . lst)
   (let ((kont4856348667 (prim car lst)))
     (let ((lst48668 (prim cdr lst)))
       (let ((x4847248669 (apply-prim = lst48668)))
         (clo-app kont4856348667 x4847248669)))))
  (proc
   (> _48820 . lst)
   (let ((kont4856548670 (prim car lst)))
     (let ((lst48671 (prim cdr lst)))
       (let ((x4847348672 (apply-prim > lst48671)))
         (clo-app kont4856548670 x4847348672)))))
  (proc
   (< _48821 . lst)
   (let ((kont4856748673 (prim car lst)))
     (let ((lst48674 (prim cdr lst)))
       (let ((x4847448675 (apply-prim < lst48674)))
         (clo-app kont4856748673 x4847448675)))))
  (proc
   (<= _48822 . lst)
   (let ((kont4856948676 (prim car lst)))
     (let ((lst48677 (prim cdr lst)))
       (let ((x4847548678 (apply-prim <= lst48677)))
         (clo-app kont4856948676 x4847548678)))))
  (proc
   (>= _48823 . lst)
   (let ((kont4857148679 (prim car lst)))
     (let ((lst48680 (prim cdr lst)))
       (let ((x4847648681 (apply-prim >= lst48680)))
         (clo-app kont4857148679 x4847648681)))))
  (proc
   (null? _48824 kont48573 x)
   (let ((x4847748682 (prim null? x))) (clo-app kont48573 x4847748682)))
  (proc
   (equal? _48825 kont48574 x y)
   (let ((x4847848683 (prim equal? x y))) (clo-app kont48574 x4847848683)))
  (proc
   (eq? _48826 kont48575 x y)
   (let ((x4847948684 (prim eq? x y))) (clo-app kont48575 x4847948684)))
  (proc
   (cons _48827 kont48576 a b)
   (let ((x4848048685 (prim cons a b))) (clo-app kont48576 x4848048685)))
  (proc
   (car _48828 kont48577 lst)
   (let ((x4848148686 (prim car lst))) (clo-app kont48577 x4848148686)))
  (proc
   (cdr _48829 kont48578 lst)
   (let ((x4848248687 (prim cdr lst))) (clo-app kont48578 x4848248687)))
  (proc
   (lam48830 env48831 a4848548691)
   (let ((a4848348688 (env-ref env48831 3)))
     (let ((kont48579 (env-ref env48831 2)))
       (let ((equal? (env-ref env48831 1)))
         (clo-app equal? kont48579 a4848348688 a4848548691)))))
  (proc
   (even? _48834 kont48579 x)
   (let ((a4848348688 '0))
     (let ((a4848448689 '2))
       (let ((f4858048690
              (make-closure lam48830 equal? kont48579 a4848348688)))
         (clo-app modulo f4858048690 x a4848448689)))))
  (proc
   (lam48835 env48836 a4848848695)
   (let ((kont48581 (env-ref env48836 3)))
     (let ((a4848648692 (env-ref env48836 2)))
       (let ((equal? (env-ref env48836 1)))
         (clo-app equal? kont48581 a4848648692 a4848848695)))))
  (proc
   (odd? _48839 kont48581 x)
   (let ((a4848648692 '1))
     (let ((a4848748693 '2))
       (let ((f4858248694
              (make-closure lam48835 equal? a4848648692 kont48581)))
         (clo-app modulo f4858248694 x a4848748693)))))
  (proc
   (list _48840 . x)
   (let ((kont4858348696 (prim car x)))
     (let ((x48697 (prim cdr x))) (clo-app kont4858348696 x48697))))
  (proc
   (lam48843 env48844 a4849448707)
   (let ((x (env-ref env48844 3)))
     (let ((kont48585 (env-ref env48844 2)))
       (let ((member? (env-ref env48844 1)))
         (clo-app member? kont48585 x a4849448707)))))
  (proc
   (lam48845 env48846 a4849248704)
   (let ((cdr (env-ref env48846 5)))
     (let ((lst (env-ref env48846 4)))
       (let ((x (env-ref env48846 3)))
         (let ((kont48585 (env-ref env48846 2)))
           (let ((member? (env-ref env48846 1)))
             (if a4849248704
               (let ((x4849348705 '#t)) (clo-app kont48585 x4849348705))
               (let ((f4858648706 (make-closure lam48843 member? kont48585 x)))
                 (clo-app cdr f4858648706 lst)))))))))
  (proc
   (lam48847 env48848 a4849148702)
   (let ((cdr (env-ref env48848 6)))
     (let ((lst (env-ref env48848 5)))
       (let ((equal? (env-ref env48848 4)))
         (let ((x (env-ref env48848 3)))
           (let ((kont48585 (env-ref env48848 2)))
             (let ((member? (env-ref env48848 1)))
               (let ((f4858748703
                      (make-closure lam48845 member? kont48585 x lst cdr)))
                 (clo-app equal? f4858748703 a4849148702 x)))))))))
  (proc
   (lam48849 env48850 a4848948699)
   (let ((cdr (env-ref env48850 7)))
     (let ((lst (env-ref env48850 6)))
       (let ((equal? (env-ref env48850 5)))
         (let ((x (env-ref env48850 4)))
           (let ((member? (env-ref env48850 3)))
             (let ((car (env-ref env48850 2)))
               (let ((kont48585 (env-ref env48850 1)))
                 (if a4848948699
                   (let ((x4849048700 '#f)) (clo-app kont48585 x4849048700))
                   (let ((f4858848701
                          (make-closure
                           lam48847
                           member?
                           kont48585
                           x
                           equal?
                           lst
                           cdr)))
                     (clo-app car f4858848701 lst)))))))))))
  (proc
   (member? _48851 kont48585 x lst)
   (let ((f4858948698
          (make-closure lam48849 kont48585 car member? x equal? lst cdr)))
     (clo-app null? f4858948698 lst)))
  (proc
   (lam48852 env48853 a4849848715)
   (let ((kont48590 (env-ref env48853 4)))
     (let ((fun (env-ref env48853 3)))
       (let ((a4849748713 (env-ref env48853 2)))
         (let ((foldl (env-ref env48853 1)))
           (clo-app foldl kont48590 fun a4849748713 a4849848715))))))
  (proc
   (lam48854 env48855 a4849748713)
   (let ((cdr (env-ref env48855 5)))
     (let ((kont48590 (env-ref env48855 4)))
       (let ((lst (env-ref env48855 3)))
         (let ((fun (env-ref env48855 2)))
           (let ((foldl (env-ref env48855 1)))
             (let ((f4859148714
                    (make-closure lam48852 foldl a4849748713 fun kont48590)))
               (clo-app cdr f4859148714 lst))))))))
  (proc
   (lam48856 env48857 a4849648711)
   (let ((cdr (env-ref env48857 6)))
     (let ((kont48590 (env-ref env48857 5)))
       (let ((lst (env-ref env48857 4)))
         (let ((fun (env-ref env48857 3)))
           (let ((acc (env-ref env48857 2)))
             (let ((foldl (env-ref env48857 1)))
               (let ((f4859248712
                      (make-closure lam48854 foldl fun lst kont48590 cdr)))
                 (clo-app fun f4859248712 a4849648711 acc)))))))))
  (proc
   (lam48858 env48859 a4849548709)
   (let ((cdr (env-ref env48859 7)))
     (let ((kont48590 (env-ref env48859 6)))
       (let ((lst (env-ref env48859 5)))
         (let ((fun (env-ref env48859 4)))
           (let ((acc (env-ref env48859 3)))
             (let ((car (env-ref env48859 2)))
               (let ((foldl (env-ref env48859 1)))
                 (if a4849548709
                   (clo-app kont48590 acc)
                   (let ((f4859348710
                          (make-closure
                           lam48856
                           foldl
                           acc
                           fun
                           lst
                           kont48590
                           cdr)))
                     (clo-app car f4859348710 lst)))))))))))
  (proc
   (foldl _48860 kont48590 fun acc lst)
   (let ((f4859448708
          (make-closure lam48858 foldl car acc fun lst kont48590 cdr)))
     (clo-app null? f4859448708 lst)))
  (proc
   (lam48861 env48862 a4850248723)
   (let ((a4850048719 (env-ref env48862 3)))
     (let ((reverse-helper (env-ref env48862 2)))
       (let ((kont48595 (env-ref env48862 1)))
         (clo-app reverse-helper kont48595 a4850048719 a4850248723)))))
  (proc
   (lam48863 env48864 a4850148721)
   (let ((a4850048719 (env-ref env48864 5)))
     (let ((lst2 (env-ref env48864 4)))
       (let ((cons (env-ref env48864 3)))
         (let ((reverse-helper (env-ref env48864 2)))
           (let ((kont48595 (env-ref env48864 1)))
             (let ((f4859648722
                    (make-closure
                     lam48861
                     kont48595
                     reverse-helper
                     a4850048719)))
               (clo-app cons f4859648722 a4850148721 lst2))))))))
  (proc
   (lam48865 env48866 a4850048719)
   (let ((lst (env-ref env48866 6)))
     (let ((lst2 (env-ref env48866 5)))
       (let ((car (env-ref env48866 4)))
         (let ((cons (env-ref env48866 3)))
           (let ((reverse-helper (env-ref env48866 2)))
             (let ((kont48595 (env-ref env48866 1)))
               (let ((f4859748720
                      (make-closure
                       lam48863
                       kont48595
                       reverse-helper
                       cons
                       lst2
                       a4850048719)))
                 (clo-app car f4859748720 lst)))))))))
  (proc
   (lam48867 env48868 a4849948717)
   (let ((cdr (env-ref env48868 7)))
     (let ((lst (env-ref env48868 6)))
       (let ((lst2 (env-ref env48868 5)))
         (let ((car (env-ref env48868 4)))
           (let ((cons (env-ref env48868 3)))
             (let ((reverse-helper (env-ref env48868 2)))
               (let ((kont48595 (env-ref env48868 1)))
                 (if a4849948717
                   (clo-app kont48595 lst2)
                   (let ((f4859848718
                          (make-closure
                           lam48865
                           kont48595
                           reverse-helper
                           cons
                           car
                           lst2
                           lst)))
                     (clo-app cdr f4859848718 lst)))))))))))
  (proc
   (reverse-helper _48869 kont48595 lst lst2)
   (let ((f4859948716
          (make-closure
           lam48867
           kont48595
           reverse-helper
           cons
           car
           lst2
           lst
           cdr)))
     (clo-app null? f4859948716 lst)))
  (proc
   (lam48870 env48871 a4850348725)
   (let ((lst (env-ref env48871 3)))
     (let ((reverse-helper (env-ref env48871 2)))
       (let ((kont48600 (env-ref env48871 1)))
         (clo-app reverse-helper kont48600 lst a4850348725)))))
  (proc
   (reverse _48872 kont48600 lst)
   (let ((f4860148724 (make-closure lam48870 kont48600 reverse-helper lst)))
     (clo-app list f4860148724)))
  (proc
   (lam48873 env48874 x4850648730)
   (let ((kont48602 (env-ref env48874 1))) (clo-app kont48602 x4850648730)))
  (proc
   (lam48875 env48876 a4851148739)
   (let ((a4850748732 (env-ref env48876 4)))
     (let ((a4850948735 (env-ref env48876 3)))
       (let ((take-helper (env-ref env48876 2)))
         (let ((kont48602 (env-ref env48876 1)))
           (clo-app
            take-helper
            kont48602
            a4850748732
            a4850948735
            a4851148739))))))
  (proc
   (lam48877 env48878 a4851048737)
   (let ((a4850748732 (env-ref env48878 6)))
     (let ((a4850948735 (env-ref env48878 5)))
       (let ((take-helper (env-ref env48878 4)))
         (let ((lst2 (env-ref env48878 3)))
           (let ((cons (env-ref env48878 2)))
             (let ((kont48602 (env-ref env48878 1)))
               (let ((f4860448738
                      (make-closure
                       lam48875
                       kont48602
                       take-helper
                       a4850948735
                       a4850748732)))
                 (clo-app cons f4860448738 a4851048737 lst2)))))))))
  (proc
   (lam48879 env48880 a4850948735)
   (let ((a4850748732 (env-ref env48880 7)))
     (let ((lst (env-ref env48880 6)))
       (let ((car (env-ref env48880 5)))
         (let ((take-helper (env-ref env48880 4)))
           (let ((lst2 (env-ref env48880 3)))
             (let ((cons (env-ref env48880 2)))
               (let ((kont48602 (env-ref env48880 1)))
                 (let ((f4860548736
                        (make-closure
                         lam48877
                         kont48602
                         cons
                         lst2
                         take-helper
                         a4850948735
                         a4850748732)))
                   (clo-app car f4860548736 lst))))))))))
  (proc
   (lam48882 env48883 a4850748732)
   (let ((lst (env-ref env48883 8)))
     (let ((- (env-ref env48883 7)))
       (let ((take-helper (env-ref env48883 6)))
         (let ((lst2 (env-ref env48883 5)))
           (let ((n (env-ref env48883 4)))
             (let ((car (env-ref env48883 3)))
               (let ((cons (env-ref env48883 2)))
                 (let ((kont48602 (env-ref env48883 1)))
                   (let ((a4850848733 '1))
                     (let ((f4860648734
                            (make-closure
                             lam48879
                             kont48602
                             cons
                             lst2
                             take-helper
                             car
                             lst
                             a4850748732)))
                       (clo-app - f4860648734 n a4850848733))))))))))))
  (proc
   (lam48884 env48885 a4850548728)
   (let ((cdr (env-ref env48885 10)))
     (let ((lst (env-ref env48885 9)))
       (let ((reverse (env-ref env48885 8)))
         (let ((- (env-ref env48885 7)))
           (let ((take-helper (env-ref env48885 6)))
             (let ((lst2 (env-ref env48885 5)))
               (let ((n (env-ref env48885 4)))
                 (let ((car (env-ref env48885 3)))
                   (let ((cons (env-ref env48885 2)))
                     (let ((kont48602 (env-ref env48885 1)))
                       (if a4850548728
                         (let ((f4860348729 (make-closure lam48873 kont48602)))
                           (clo-app reverse f4860348729 lst2))
                         (let ((f4860748731
                                (make-closure
                                 lam48882
                                 kont48602
                                 cons
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 lst)))
                           (clo-app cdr f4860748731 lst))))))))))))))
  (proc
   (take-helper _48887 kont48602 lst n lst2)
   (let ((a4850448726 '0))
     (let ((f4860848727
            (make-closure
             lam48884
             kont48602
             cons
             car
             n
             lst2
             take-helper
             -
             reverse
             lst
             cdr)))
       (clo-app = f4860848727 n a4850448726))))
  (proc
   (lam48888 env48889 a4851248741)
   (let ((lst (env-ref env48889 4)))
     (let ((kont48609 (env-ref env48889 3)))
       (let ((take-helper (env-ref env48889 2)))
         (let ((n (env-ref env48889 1)))
           (clo-app take-helper kont48609 lst n a4851248741))))))
  (proc
   (take _48890 kont48609 lst n)
   (let ((f4861048740 (make-closure lam48888 n take-helper kont48609 lst)))
     (clo-app list f4861048740)))
  (proc
   (lam48892 env48893 a4851748749)
   (let ((kont48611 (env-ref env48893 3)))
     (let ((+ (env-ref env48893 2)))
       (let ((a4851548745 (env-ref env48893 1)))
         (clo-app + kont48611 a4851548745 a4851748749)))))
  (proc
   (lam48894 env48895 a4851648747)
   (let ((length (env-ref env48895 4)))
     (let ((kont48611 (env-ref env48895 3)))
       (let ((+ (env-ref env48895 2)))
         (let ((a4851548745 (env-ref env48895 1)))
           (let ((f4861248748 (make-closure lam48892 a4851548745 + kont48611)))
             (clo-app length f4861248748 a4851648747)))))))
  (proc
   (lam48897 env48898 a4851348743)
   (let ((cdr (env-ref env48898 5)))
     (let ((lst (env-ref env48898 4)))
       (let ((length (env-ref env48898 3)))
         (let ((kont48611 (env-ref env48898 2)))
           (let ((+ (env-ref env48898 1)))
             (if a4851348743
               (let ((x4851448744 '0)) (clo-app kont48611 x4851448744))
               (let ((a4851548745 '1))
                 (let ((f4861348746
                        (make-closure
                         lam48894
                         a4851548745
                         +
                         kont48611
                         length)))
                   (clo-app cdr f4861348746 lst))))))))))
  (proc
   (length _48899 kont48611 lst)
   (let ((f4861448742 (make-closure lam48897 + kont48611 length lst cdr)))
     (clo-app null? f4861448742 lst)))
  (proc
   (lam48900 env48901 x4851948753)
   (let ((kont48615 (env-ref env48901 1))) (clo-app kont48615 x4851948753)))
  (proc
   (lam48902 env48903 a4852348761)
   (let ((a4852148757 (env-ref env48903 3)))
     (let ((kont48615 (env-ref env48903 2)))
       (let ((cons (env-ref env48903 1)))
         (clo-app cons kont48615 a4852148757 a4852348761)))))
  (proc
   (lam48904 env48905 a4852248759)
   (let ((map (env-ref env48905 5)))
     (let ((a4852148757 (env-ref env48905 4)))
       (let ((cons (env-ref env48905 3)))
         (let ((proc (env-ref env48905 2)))
           (let ((kont48615 (env-ref env48905 1)))
             (let ((f4861748760
                    (make-closure lam48902 cons kont48615 a4852148757)))
               (clo-app map f4861748760 proc a4852248759))))))))
  (proc
   (lam48906 env48907 a4852148757)
   (let ((cdr (env-ref env48907 6)))
     (let ((lst (env-ref env48907 5)))
       (let ((map (env-ref env48907 4)))
         (let ((cons (env-ref env48907 3)))
           (let ((proc (env-ref env48907 2)))
             (let ((kont48615 (env-ref env48907 1)))
               (let ((f4861848758
                      (make-closure
                       lam48904
                       kont48615
                       proc
                       cons
                       a4852148757
                       map)))
                 (clo-app cdr f4861848758 lst)))))))))
  (proc
   (lam48908 env48909 a4852048755)
   (let ((cdr (env-ref env48909 6)))
     (let ((lst (env-ref env48909 5)))
       (let ((map (env-ref env48909 4)))
         (let ((cons (env-ref env48909 3)))
           (let ((proc (env-ref env48909 2)))
             (let ((kont48615 (env-ref env48909 1)))
               (let ((f4861948756
                      (make-closure lam48906 kont48615 proc cons map lst cdr)))
                 (clo-app proc f4861948756 a4852048755)))))))))
  (proc
   (lam48910 env48911 a4851848751)
   (let ((lst (env-ref env48911 8)))
     (let ((map (env-ref env48911 7)))
       (let ((car (env-ref env48911 6)))
         (let ((cons (env-ref env48911 5)))
           (let ((list (env-ref env48911 4)))
             (let ((cdr (env-ref env48911 3)))
               (let ((proc (env-ref env48911 2)))
                 (let ((kont48615 (env-ref env48911 1)))
                   (if a4851848751
                     (let ((f4861648752 (make-closure lam48900 kont48615)))
                       (clo-app list f4861648752))
                     (let ((f4862048754
                            (make-closure
                             lam48908
                             kont48615
                             proc
                             cons
                             map
                             lst
                             cdr)))
                       (clo-app car f4862048754 lst))))))))))))
  (proc
   (map _48912 kont48615 proc lst)
   (let ((f4862148750
          (make-closure lam48910 kont48615 proc cdr list cons car map lst)))
     (clo-app null? f4862148750 lst)))
  (proc
   (lam48913 env48914 x4852548765)
   (let ((kont48622 (env-ref env48914 1))) (clo-app kont48622 x4852548765)))
  (proc
   (lam48915 env48916 a4853048775)
   (let ((kont48622 (env-ref env48916 3)))
     (let ((a4852848771 (env-ref env48916 2)))
       (let ((cons (env-ref env48916 1)))
         (clo-app cons kont48622 a4852848771 a4853048775)))))
  (proc
   (lam48917 env48918 a4852948773)
   (let ((kont48622 (env-ref env48918 5)))
     (let ((filter (env-ref env48918 4)))
       (let ((cons (env-ref env48918 3)))
         (let ((a4852848771 (env-ref env48918 2)))
           (let ((op (env-ref env48918 1)))
             (let ((f4862448774
                    (make-closure lam48915 cons a4852848771 kont48622)))
               (clo-app filter f4862448774 op a4852948773))))))))
  (proc
   (lam48919 env48920 a4852848771)
   (let ((cdr (env-ref env48920 6)))
     (let ((kont48622 (env-ref env48920 5)))
       (let ((lst (env-ref env48920 4)))
         (let ((op (env-ref env48920 3)))
           (let ((filter (env-ref env48920 2)))
             (let ((cons (env-ref env48920 1)))
               (let ((f4862548772
                      (make-closure
                       lam48917
                       op
                       a4852848771
                       cons
                       filter
                       kont48622)))
                 (clo-app cdr f4862548772 lst)))))))))
  (proc
   (lam48921 env48922 a4853148777)
   (let ((kont48622 (env-ref env48922 3)))
     (let ((op (env-ref env48922 2)))
       (let ((filter (env-ref env48922 1)))
         (clo-app filter kont48622 op a4853148777)))))
  (proc
   (lam48923 env48924 a4852748769)
   (let ((cdr (env-ref env48924 7)))
     (let ((kont48622 (env-ref env48924 6)))
       (let ((lst (env-ref env48924 5)))
         (let ((op (env-ref env48924 4)))
           (let ((cons (env-ref env48924 3)))
             (let ((filter (env-ref env48924 2)))
               (let ((car (env-ref env48924 1)))
                 (if a4852748769
                   (let ((f4862648770
                          (make-closure
                           lam48919
                           cons
                           filter
                           op
                           lst
                           kont48622
                           cdr)))
                     (clo-app car f4862648770 lst))
                   (let ((f4862748776
                          (make-closure lam48921 filter op kont48622)))
                     (clo-app cdr f4862748776 lst)))))))))))
  (proc
   (lam48925 env48926 a4852648767)
   (let ((cdr (env-ref env48926 7)))
     (let ((kont48622 (env-ref env48926 6)))
       (let ((lst (env-ref env48926 5)))
         (let ((op (env-ref env48926 4)))
           (let ((cons (env-ref env48926 3)))
             (let ((filter (env-ref env48926 2)))
               (let ((car (env-ref env48926 1)))
                 (let ((f4862848768
                        (make-closure
                         lam48923
                         car
                         filter
                         cons
                         op
                         lst
                         kont48622
                         cdr)))
                   (clo-app op f4862848768 a4852648767))))))))))
  (proc
   (lam48927 env48928 a4852448763)
   (let ((kont48622 (env-ref env48928 8)))
     (let ((lst (env-ref env48928 7)))
       (let ((op (env-ref env48928 6)))
         (let ((cons (env-ref env48928 5)))
           (let ((list (env-ref env48928 4)))
             (let ((cdr (env-ref env48928 3)))
               (let ((filter (env-ref env48928 2)))
                 (let ((car (env-ref env48928 1)))
                   (if a4852448763
                     (let ((f4862348764 (make-closure lam48913 kont48622)))
                       (clo-app list f4862348764))
                     (let ((f4862948766
                            (make-closure
                             lam48925
                             car
                             filter
                             cons
                             op
                             lst
                             kont48622
                             cdr)))
                       (clo-app car f4862948766 lst))))))))))))
  (proc
   (filter _48929 kont48622 op lst)
   (let ((f4863048762
          (make-closure lam48927 car filter cdr list cons op lst kont48622)))
     (clo-app null? f4863048762 lst)))
  (proc
   (lam48930 env48931 a4853648785)
   (let ((a4853448782 (env-ref env48931 3)))
     (let ((drop (env-ref env48931 2)))
       (let ((kont48631 (env-ref env48931 1)))
         (clo-app drop kont48631 a4853448782 a4853648785)))))
  (proc
   (lam48933 env48934 a4853448782)
   (let ((drop (env-ref env48934 4)))
     (let ((kont48631 (env-ref env48934 3)))
       (let ((n (env-ref env48934 2)))
         (let ((- (env-ref env48934 1)))
           (let ((a4853548783 '1))
             (let ((f4863248784
                    (make-closure lam48930 kont48631 drop a4853448782)))
               (clo-app - f4863248784 n a4853548783))))))))
  (proc
   (lam48935 env48936 a4853348780)
   (let ((cdr (env-ref env48936 6)))
     (let ((kont48631 (env-ref env48936 5)))
       (let ((n (env-ref env48936 4)))
         (let ((- (env-ref env48936 3)))
           (let ((lst (env-ref env48936 2)))
             (let ((drop (env-ref env48936 1)))
               (if a4853348780
                 (clo-app kont48631 lst)
                 (let ((f4863348781
                        (make-closure lam48933 - n kont48631 drop)))
                   (clo-app cdr f4863348781 lst))))))))))
  (proc
   (drop _48938 kont48631 lst n)
   (let ((a4853248778 '0))
     (let ((f4863448779 (make-closure lam48935 drop lst - n kont48631 cdr)))
       (clo-app = f4863448779 n a4853248778))))
  (proc
   (lam48939 env48940 a4854048793)
   (let ((a4853848789 (env-ref env48940 3)))
     (let ((proc (env-ref env48940 2)))
       (let ((kont48635 (env-ref env48940 1)))
         (clo-app proc kont48635 a4853848789 a4854048793)))))
  (proc
   (lam48941 env48942 a4853948791)
   (let ((foldr (env-ref env48942 5)))
     (let ((a4853848789 (env-ref env48942 4)))
       (let ((kont48635 (env-ref env48942 3)))
         (let ((proc (env-ref env48942 2)))
           (let ((acc (env-ref env48942 1)))
             (let ((f4863648792
                    (make-closure lam48939 kont48635 proc a4853848789)))
               (clo-app foldr f4863648792 proc acc a4853948791))))))))
  (proc
   (lam48943 env48944 a4853848789)
   (let ((cdr (env-ref env48944 6)))
     (let ((kont48635 (env-ref env48944 5)))
       (let ((foldr (env-ref env48944 4)))
         (let ((lst (env-ref env48944 3)))
           (let ((proc (env-ref env48944 2)))
             (let ((acc (env-ref env48944 1)))
               (let ((f4863748790
                      (make-closure
                       lam48941
                       acc
                       proc
                       kont48635
                       a4853848789
                       foldr)))
                 (clo-app cdr f4863748790 lst)))))))))
  (proc
   (lam48945 env48946 a4853748787)
   (let ((cdr (env-ref env48946 7)))
     (let ((car (env-ref env48946 6)))
       (let ((kont48635 (env-ref env48946 5)))
         (let ((foldr (env-ref env48946 4)))
           (let ((lst (env-ref env48946 3)))
             (let ((proc (env-ref env48946 2)))
               (let ((acc (env-ref env48946 1)))
                 (if a4853748787
                   (clo-app kont48635 acc)
                   (let ((f4863848788
                          (make-closure
                           lam48943
                           acc
                           proc
                           lst
                           foldr
                           kont48635
                           cdr)))
                     (clo-app car f4863848788 lst)))))))))))
  (proc
   (foldr _48947 kont48635 proc acc lst)
   (let ((f4863948786
          (make-closure lam48945 acc proc lst foldr kont48635 car cdr)))
     (clo-app null? f4863948786 lst)))
  (proc
   (lam48948 env48949 a4854448801)
   (let ((a4854248797 (env-ref env48949 3)))
     (let ((kont48640 (env-ref env48949 2)))
       (let ((cons (env-ref env48949 1)))
         (clo-app cons kont48640 a4854248797 a4854448801)))))
  (proc
   (lam48950 env48951 a4854348799)
   (let ((a4854248797 (env-ref env48951 5)))
     (let ((kont48640 (env-ref env48951 4)))
       (let ((append (env-ref env48951 3)))
         (let ((lst2 (env-ref env48951 2)))
           (let ((cons (env-ref env48951 1)))
             (let ((f4864148800
                    (make-closure lam48948 cons kont48640 a4854248797)))
               (clo-app append f4864148800 a4854348799 lst2))))))))
  (proc
   (lam48952 env48953 a4854248797)
   (let ((cdr (env-ref env48953 6)))
     (let ((kont48640 (env-ref env48953 5)))
       (let ((append (env-ref env48953 4)))
         (let ((lst2 (env-ref env48953 3)))
           (let ((lst1 (env-ref env48953 2)))
             (let ((cons (env-ref env48953 1)))
               (let ((f4864248798
                      (make-closure
                       lam48950
                       cons
                       lst2
                       append
                       kont48640
                       a4854248797)))
                 (clo-app cdr f4864248798 lst1)))))))))
  (proc
   (lam48954 env48955 a4854148795)
   (let ((cdr (env-ref env48955 7)))
     (let ((kont48640 (env-ref env48955 6)))
       (let ((append (env-ref env48955 5)))
         (let ((lst2 (env-ref env48955 4)))
           (let ((cons (env-ref env48955 3)))
             (let ((lst1 (env-ref env48955 2)))
               (let ((car (env-ref env48955 1)))
                 (if a4854148795
                   (clo-app kont48640 lst2)
                   (let ((f4864348796
                          (make-closure
                           lam48952
                           cons
                           lst1
                           lst2
                           append
                           kont48640
                           cdr)))
                     (clo-app car f4864348796 lst1)))))))))))
  (proc
   (append _48956 kont48640 lst1 lst2)
   (let ((f4864448794
          (make-closure lam48954 car lst1 cons lst2 append kont48640 cdr)))
     (clo-app null? f4864448794 lst1)))
  (proc
   (hash _48957 . lst)
   (let ((kont4864548802 (prim car lst)))
     (let ((lst48803 (prim cdr lst)))
       (let ((x4854548804 (apply-prim hash lst48803)))
         (clo-app kont4864548802 x4854548804)))))
  (proc
   (hash-ref _48958 kont48647 h k)
   (let ((x4854648805 (prim hash-ref h k))) (clo-app kont48647 x4854648805)))
  (proc
   (hash-set _48959 kont48648 h k v)
   (let ((x4854748806 (prim hash-set h k v))) (clo-app kont48648 x4854748806)))
  (proc
   (hash-has-key? _48960 kont48649 h k)
   (let ((x4854848807 (prim hash-has-key? h k)))
     (clo-app kont48649 x4854848807)))
  (proc
   (hash-count _48961 kont48650 h)
   (let ((x4854948808 (prim hash-count h))) (clo-app kont48650 x4854948808)))
  (proc
   (call _48965 kont48651)
   (let ((a4855048809 '#f))
     (if a4855048809
       (let ((x4855148810 '#f)) (clo-app kont48651 x4855148810))
       (let ((x4855248811 '#t)) (clo-app kont48651 x4855248811)))))
  (proc
   (lam48966 env48967 x4855348813)
   (let ((kont48652 (env-ref env48967 1))) (clo-app kont48652 x4855348813)))
  (proc
   (brouhaha_main _48968 kont48652)
   (let ((f4865348812 (make-closure lam48966 kont48652)))
     (clo-app call f4865348812))))
