'((define (+ . lst)
    (let ((kont4680246902 (prim car lst)))
      (let ((lst46903 (prim cdr lst)))
        (let ((x4671546904 (apply-prim + lst46903)))
          (kont4680246902 x4671546904)))))
  (define (- . lst)
    (let ((kont4680446905 (prim car lst)))
      (let ((lst46906 (prim cdr lst)))
        (let ((x4671646907 (apply-prim - lst46906)))
          (kont4680446905 x4671646907)))))
  (define (* . lst)
    (let ((kont4680646908 (prim car lst)))
      (let ((lst46909 (prim cdr lst)))
        (let ((x4671746910 (apply-prim * lst46909)))
          (kont4680646908 x4671746910)))))
  (define (modulo kont46808 a b)
    (let ((x4671846911 (prim modulo a b))) (kont46808 x4671846911)))
  (define (/ . lst)
    (let ((kont4680946912 (prim car lst)))
      (let ((lst46913 (prim cdr lst)))
        (let ((x4671946914 (apply-prim / lst46913)))
          (kont4680946912 x4671946914)))))
  (define (= . lst)
    (let ((kont4681146915 (prim car lst)))
      (let ((lst46916 (prim cdr lst)))
        (let ((x4672046917 (apply-prim = lst46916)))
          (kont4681146915 x4672046917)))))
  (define (> . lst)
    (let ((kont4681346918 (prim car lst)))
      (let ((lst46919 (prim cdr lst)))
        (let ((x4672146920 (apply-prim > lst46919)))
          (kont4681346918 x4672146920)))))
  (define (< . lst)
    (let ((kont4681546921 (prim car lst)))
      (let ((lst46922 (prim cdr lst)))
        (let ((x4672246923 (apply-prim < lst46922)))
          (kont4681546921 x4672246923)))))
  (define (<= . lst)
    (let ((kont4681746924 (prim car lst)))
      (let ((lst46925 (prim cdr lst)))
        (let ((x4672346926 (apply-prim <= lst46925)))
          (kont4681746924 x4672346926)))))
  (define (>= . lst)
    (let ((kont4681946927 (prim car lst)))
      (let ((lst46928 (prim cdr lst)))
        (let ((x4672446929 (apply-prim >= lst46928)))
          (kont4681946927 x4672446929)))))
  (define (null? kont46821 x)
    (let ((x4672546930 (prim null? x))) (kont46821 x4672546930)))
  (define (equal? kont46822 x y)
    (let ((x4672646931 (prim equal? x y))) (kont46822 x4672646931)))
  (define (eq? kont46823 x y)
    (let ((x4672746932 (prim eq? x y))) (kont46823 x4672746932)))
  (define (cons kont46824 a b)
    (let ((x4672846933 (prim cons a b))) (kont46824 x4672846933)))
  (define (car kont46825 lst)
    (let ((x4672946934 (prim car lst))) (kont46825 x4672946934)))
  (define (cdr kont46826 lst)
    (let ((x4673046935 (prim cdr lst))) (kont46826 x4673046935)))
  (define (even? kont46827 x)
    (let ((a4673146936 '0))
      (let ((a4673246937 '2))
        (let ((f4682846938
               (lambda (a4673346939)
                 (equal? kont46827 a4673146936 a4673346939))))
          (modulo f4682846938 x a4673246937)))))
  (define (odd? kont46829 x)
    (let ((a4673446940 '1))
      (let ((a4673546941 '2))
        (let ((f4683046942
               (lambda (a4673646943)
                 (equal? kont46829 a4673446940 a4673646943))))
          (modulo f4683046942 x a4673546941)))))
  (define (list . x)
    (let ((kont4683146944 (prim car x)))
      (let ((x46945 (prim cdr x))) (kont4683146944 x46945))))
  (define (member? kont46833 x lst)
    (let ((f4683746946
           (lambda (a4673746947)
             (if a4673746947
               (let ((x4673846948 '#f)) (kont46833 x4673846948))
               (let ((f4683646949
                      (lambda (a4673946950)
                        (let ((f4683546951
                               (lambda (a4674046952)
                                 (if a4674046952
                                   (let ((x4674146953 '#t))
                                     (kont46833 x4674146953))
                                   (let ((f4683446954
                                          (lambda (a4674246955)
                                            (member?
                                             kont46833
                                             x
                                             a4674246955))))
                                     (cdr f4683446954 lst))))))
                          (equal? f4683546951 a4673946950 x)))))
                 (car f4683646949 lst))))))
      (null? f4683746946 lst)))
  (define (foldl kont46838 fun acc lst)
    (let ((f4684246956
           (lambda (a4674346957)
             (if a4674346957
               (kont46838 acc)
               (let ((f4684146958
                      (lambda (a4674446959)
                        (let ((f4684046960
                               (lambda (a4674546961)
                                 (let ((f4683946962
                                        (lambda (a4674646963)
                                          (foldl
                                           kont46838
                                           fun
                                           a4674546961
                                           a4674646963))))
                                   (cdr f4683946962 lst)))))
                          (fun f4684046960 a4674446959 acc)))))
                 (car f4684146958 lst))))))
      (null? f4684246956 lst)))
  (define (reverse-helper kont46843 lst lst2)
    (let ((f4684746964
           (lambda (a4674746965)
             (if a4674746965
               (kont46843 lst2)
               (let ((f4684646966
                      (lambda (a4674846967)
                        (let ((f4684546968
                               (lambda (a4674946969)
                                 (let ((f4684446970
                                        (lambda (a4675046971)
                                          (reverse-helper
                                           kont46843
                                           a4674846967
                                           a4675046971))))
                                   (cons f4684446970 a4674946969 lst2)))))
                          (car f4684546968 lst)))))
                 (cdr f4684646966 lst))))))
      (null? f4684746964 lst)))
  (define (reverse kont46848 lst)
    (let ((f4684946972
           (lambda (a4675146973) (reverse-helper kont46848 lst a4675146973))))
      (list f4684946972)))
  (define (take-helper kont46850 lst n lst2)
    (let ((a4675246974 '0))
      (let ((f4685646975
             (lambda (a4675346976)
               (if a4675346976
                 (let ((f4685146977
                        (lambda (x4675446978) (kont46850 x4675446978))))
                   (reverse f4685146977 lst2))
                 (let ((f4685546979
                        (lambda (a4675546980)
                          (let ((a4675646981 '1))
                            (let ((f4685446982
                                   (lambda (a4675746983)
                                     (let ((f4685346984
                                            (lambda (a4675846985)
                                              (let ((f4685246986
                                                     (lambda (a4675946987)
                                                       (take-helper
                                                        kont46850
                                                        a4675546980
                                                        a4675746983
                                                        a4675946987))))
                                                (cons
                                                 f4685246986
                                                 a4675846985
                                                 lst2)))))
                                       (car f4685346984 lst)))))
                              (- f4685446982 n a4675646981))))))
                   (cdr f4685546979 lst))))))
        (= f4685646975 n a4675246974))))
  (define (take kont46857 lst n)
    (let ((f4685846988
           (lambda (a4676046989) (take-helper kont46857 lst n a4676046989))))
      (list f4685846988)))
  (define (length kont46859 lst)
    (let ((f4686246990
           (lambda (a4676146991)
             (if a4676146991
               (let ((x4676246992 '0)) (kont46859 x4676246992))
               (let ((a4676346993 '1))
                 (let ((f4686146994
                        (lambda (a4676446995)
                          (let ((f4686046996
                                 (lambda (a4676546997)
                                   (+ kont46859 a4676346993 a4676546997))))
                            (length f4686046996 a4676446995)))))
                   (cdr f4686146994 lst)))))))
      (null? f4686246990 lst)))
  (define (map kont46863 proc lst)
    (let ((f4686946998
           (lambda (a4676646999)
             (if a4676646999
               (let ((f4686447000
                      (lambda (x4676747001) (kont46863 x4676747001))))
                 (list f4686447000))
               (let ((f4686847002
                      (lambda (a4676847003)
                        (let ((f4686747004
                               (lambda (a4676947005)
                                 (let ((f4686647006
                                        (lambda (a4677047007)
                                          (let ((f4686547008
                                                 (lambda (a4677147009)
                                                   (cons
                                                    kont46863
                                                    a4676947005
                                                    a4677147009))))
                                            (map
                                             f4686547008
                                             proc
                                             a4677047007)))))
                                   (cdr f4686647006 lst)))))
                          (proc f4686747004 a4676847003)))))
                 (car f4686847002 lst))))))
      (null? f4686946998 lst)))
  (define (filter kont46870 op lst)
    (let ((f4687847010
           (lambda (a4677247011)
             (if a4677247011
               (let ((f4687147012
                      (lambda (x4677347013) (kont46870 x4677347013))))
                 (list f4687147012))
               (let ((f4687747014
                      (lambda (a4677447015)
                        (let ((f4687647016
                               (lambda (a4677547017)
                                 (if a4677547017
                                   (let ((f4687447018
                                          (lambda (a4677647019)
                                            (let ((f4687347020
                                                   (lambda (a4677747021)
                                                     (let ((f4687247022
                                                            (lambda (a4677847023)
                                                              (cons
                                                               kont46870
                                                               a4677647019
                                                               a4677847023))))
                                                       (filter
                                                        f4687247022
                                                        op
                                                        a4677747021)))))
                                              (cdr f4687347020 lst)))))
                                     (car f4687447018 lst))
                                   (let ((f4687547024
                                          (lambda (a4677947025)
                                            (filter
                                             kont46870
                                             op
                                             a4677947025))))
                                     (cdr f4687547024 lst))))))
                          (op f4687647016 a4677447015)))))
                 (car f4687747014 lst))))))
      (null? f4687847010 lst)))
  (define (drop kont46879 lst n)
    (let ((a4678047026 '0))
      (let ((f4688247027
             (lambda (a4678147028)
               (if a4678147028
                 (kont46879 lst)
                 (let ((f4688147029
                        (lambda (a4678247030)
                          (let ((a4678347031 '1))
                            (let ((f4688047032
                                   (lambda (a4678447033)
                                     (drop
                                      kont46879
                                      a4678247030
                                      a4678447033))))
                              (- f4688047032 n a4678347031))))))
                   (cdr f4688147029 lst))))))
        (= f4688247027 n a4678047026))))
  (define (foldr kont46883 proc acc lst)
    (let ((f4688747034
           (lambda (a4678547035)
             (if a4678547035
               (kont46883 acc)
               (let ((f4688647036
                      (lambda (a4678647037)
                        (let ((f4688547038
                               (lambda (a4678747039)
                                 (let ((f4688447040
                                        (lambda (a4678847041)
                                          (proc
                                           kont46883
                                           a4678647037
                                           a4678847041))))
                                   (foldr f4688447040 proc acc a4678747039)))))
                          (cdr f4688547038 lst)))))
                 (car f4688647036 lst))))))
      (null? f4688747034 lst)))
  (define (append kont46888 lst1 lst2)
    (let ((f4689247042
           (lambda (a4678947043)
             (if a4678947043
               (kont46888 lst2)
               (let ((f4689147044
                      (lambda (a4679047045)
                        (let ((f4689047046
                               (lambda (a4679147047)
                                 (let ((f4688947048
                                        (lambda (a4679247049)
                                          (cons
                                           kont46888
                                           a4679047045
                                           a4679247049))))
                                   (append f4688947048 a4679147047 lst2)))))
                          (cdr f4689047046 lst1)))))
                 (car f4689147044 lst1))))))
      (null? f4689247042 lst1)))
  (define (hash . lst)
    (let ((kont4689347050 (prim car lst)))
      (let ((lst47051 (prim cdr lst)))
        (let ((x4679347052 (apply-prim hash lst47051)))
          (kont4689347050 x4679347052)))))
  (define (hash-ref kont46895 h k)
    (let ((x4679447053 (prim hash-ref h k))) (kont46895 x4679447053)))
  (define (hash-set kont46896 h k v)
    (let ((x4679547054 (prim hash-set h k v))) (kont46896 x4679547054)))
  (define (hash-has-key? kont46897 h k)
    (let ((x4679647055 (prim hash-has-key? h k))) (kont46897 x4679647055)))
  (define (hash-count kont46898 h)
    (let ((x4679747056 (prim hash-count h))) (kont46898 x4679747056)))
  (define (call kont46899)
    (let ((a4679847057 '#f))
      (if a4679847057
        (let ((x4679947058 '#f)) (kont46899 x4679947058))
        (let ((x4680047059 '#t)) (kont46899 x4680047059)))))
  (define (brouhaha_main kont46900)
    (let ((f4690147060 (lambda (x4680147061) (kont46900 x4680147061))))
      (call f4690147060))))
