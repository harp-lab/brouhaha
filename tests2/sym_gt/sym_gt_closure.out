'((proc
   (+ _52589 . lst)
   (let ((kont5232752427 (prim car lst)))
     (let ((lst52428 (prim cdr lst)))
       (let ((x5223852429 (apply-prim + lst52428)))
         (clo-app kont5232752427 x5223852429)))))
  (proc
   (- _52590 . lst)
   (let ((kont5232952430 (prim car lst)))
     (let ((lst52431 (prim cdr lst)))
       (let ((x5223952432 (apply-prim - lst52431)))
         (clo-app kont5232952430 x5223952432)))))
  (proc
   (* _52591 . lst)
   (let ((kont5233152433 (prim car lst)))
     (let ((lst52434 (prim cdr lst)))
       (let ((x5224052435 (apply-prim * lst52434)))
         (clo-app kont5233152433 x5224052435)))))
  (proc
   (modulo _52592 kont52333 a b)
   (let ((x5224152436 (prim modulo a b))) (clo-app kont52333 x5224152436)))
  (proc
   (/ _52593 . lst)
   (let ((kont5233452437 (prim car lst)))
     (let ((lst52438 (prim cdr lst)))
       (let ((x5224252439 (apply-prim / lst52438)))
         (clo-app kont5233452437 x5224252439)))))
  (proc
   (= _52594 . lst)
   (let ((kont5233652440 (prim car lst)))
     (let ((lst52441 (prim cdr lst)))
       (let ((x5224352442 (apply-prim = lst52441)))
         (clo-app kont5233652440 x5224352442)))))
  (proc
   (> _52595 . lst)
   (let ((kont5233852443 (prim car lst)))
     (let ((lst52444 (prim cdr lst)))
       (let ((x5224452445 (apply-prim > lst52444)))
         (clo-app kont5233852443 x5224452445)))))
  (proc
   (< _52596 . lst)
   (let ((kont5234052446 (prim car lst)))
     (let ((lst52447 (prim cdr lst)))
       (let ((x5224552448 (apply-prim < lst52447)))
         (clo-app kont5234052446 x5224552448)))))
  (proc
   (<= _52597 . lst)
   (let ((kont5234252449 (prim car lst)))
     (let ((lst52450 (prim cdr lst)))
       (let ((x5224652451 (apply-prim <= lst52450)))
         (clo-app kont5234252449 x5224652451)))))
  (proc
   (>= _52598 . lst)
   (let ((kont5234452452 (prim car lst)))
     (let ((lst52453 (prim cdr lst)))
       (let ((x5224752454 (apply-prim >= lst52453)))
         (clo-app kont5234452452 x5224752454)))))
  (proc
   (null? _52599 kont52346 x)
   (let ((x5224852455 (prim null? x))) (clo-app kont52346 x5224852455)))
  (proc
   (equal? _52600 kont52347 x y)
   (let ((x5224952456 (prim equal? x y))) (clo-app kont52347 x5224952456)))
  (proc
   (eq? _52601 kont52348 x y)
   (let ((x5225052457 (prim eq? x y))) (clo-app kont52348 x5225052457)))
  (proc
   (cons _52602 kont52349 a b)
   (let ((x5225152458 (prim cons a b))) (clo-app kont52349 x5225152458)))
  (proc
   (car _52603 kont52350 lst)
   (let ((x5225252459 (prim car lst))) (clo-app kont52350 x5225252459)))
  (proc
   (cdr _52604 kont52351 lst)
   (let ((x5225352460 (prim cdr lst))) (clo-app kont52351 x5225352460)))
  (proc
   (lam52605 env52606 a5225652464)
   (let ((a5225452461 (env-ref env52606 3)))
     (let ((kont52352 (env-ref env52606 2)))
       (let ((equal? (env-ref env52606 1)))
         (clo-app equal? kont52352 a5225452461 a5225652464)))))
  (proc
   (even? _52609 kont52352 x)
   (let ((a5225452461 '0))
     (let ((a5225552462 '2))
       (let ((f5235352463
              (make-closure lam52605 equal? kont52352 a5225452461)))
         (clo-app modulo f5235352463 x a5225552462)))))
  (proc
   (lam52610 env52611 a5225952468)
   (let ((a5225752465 (env-ref env52611 3)))
     (let ((kont52354 (env-ref env52611 2)))
       (let ((equal? (env-ref env52611 1)))
         (clo-app equal? kont52354 a5225752465 a5225952468)))))
  (proc
   (odd? _52614 kont52354 x)
   (let ((a5225752465 '1))
     (let ((a5225852466 '2))
       (let ((f5235552467
              (make-closure lam52610 equal? kont52354 a5225752465)))
         (clo-app modulo f5235552467 x a5225852466)))))
  (proc
   (list _52615 . x)
   (let ((kont5235652469 (prim car x)))
     (let ((x52470 (prim cdr x))) (clo-app kont5235652469 x52470))))
  (proc
   (lam52618 env52619 a5226552480)
   (let ((kont52358 (env-ref env52619 3)))
     (let ((x (env-ref env52619 2)))
       (let ((member? (env-ref env52619 1)))
         (clo-app member? kont52358 x a5226552480)))))
  (proc
   (lam52620 env52621 a5226352477)
   (let ((cdr (env-ref env52621 5)))
     (let ((lst (env-ref env52621 4)))
       (let ((kont52358 (env-ref env52621 3)))
         (let ((x (env-ref env52621 2)))
           (let ((member? (env-ref env52621 1)))
             (if a5226352477
               (let ((x5226452478 '#t)) (clo-app kont52358 x5226452478))
               (let ((f5235952479 (make-closure lam52618 member? x kont52358)))
                 (clo-app cdr f5235952479 lst)))))))))
  (proc
   (lam52622 env52623 a5226252475)
   (let ((cdr (env-ref env52623 6)))
     (let ((lst (env-ref env52623 5)))
       (let ((equal? (env-ref env52623 4)))
         (let ((kont52358 (env-ref env52623 3)))
           (let ((x (env-ref env52623 2)))
             (let ((member? (env-ref env52623 1)))
               (let ((f5236052476
                      (make-closure lam52620 member? x kont52358 lst cdr)))
                 (clo-app equal? f5236052476 a5226252475 x)))))))))
  (proc
   (lam52624 env52625 a5226052472)
   (let ((cdr (env-ref env52625 7)))
     (let ((lst (env-ref env52625 6)))
       (let ((equal? (env-ref env52625 5)))
         (let ((kont52358 (env-ref env52625 4)))
           (let ((x (env-ref env52625 3)))
             (let ((car (env-ref env52625 2)))
               (let ((member? (env-ref env52625 1)))
                 (if a5226052472
                   (let ((x5226152473 '#f)) (clo-app kont52358 x5226152473))
                   (let ((f5236152474
                          (make-closure
                           lam52622
                           member?
                           x
                           kont52358
                           equal?
                           lst
                           cdr)))
                     (clo-app car f5236152474 lst)))))))))))
  (proc
   (member? _52626 kont52358 x lst)
   (let ((f5236252471
          (make-closure lam52624 member? car x kont52358 equal? lst cdr)))
     (clo-app null? f5236252471 lst)))
  (proc
   (lam52627 env52628 a5226952488)
   (let ((a5226852486 (env-ref env52628 4)))
     (let ((fun (env-ref env52628 3)))
       (let ((kont52363 (env-ref env52628 2)))
         (let ((foldl (env-ref env52628 1)))
           (clo-app foldl kont52363 fun a5226852486 a5226952488))))))
  (proc
   (lam52629 env52630 a5226852486)
   (let ((cdr (env-ref env52630 5)))
     (let ((lst (env-ref env52630 4)))
       (let ((fun (env-ref env52630 3)))
         (let ((kont52363 (env-ref env52630 2)))
           (let ((foldl (env-ref env52630 1)))
             (let ((f5236452487
                    (make-closure lam52627 foldl kont52363 fun a5226852486)))
               (clo-app cdr f5236452487 lst))))))))
  (proc
   (lam52631 env52632 a5226752484)
   (let ((cdr (env-ref env52632 6)))
     (let ((lst (env-ref env52632 5)))
       (let ((fun (env-ref env52632 4)))
         (let ((acc (env-ref env52632 3)))
           (let ((kont52363 (env-ref env52632 2)))
             (let ((foldl (env-ref env52632 1)))
               (let ((f5236552485
                      (make-closure lam52629 foldl kont52363 fun lst cdr)))
                 (clo-app fun f5236552485 a5226752484 acc)))))))))
  (proc
   (lam52633 env52634 a5226652482)
   (let ((cdr (env-ref env52634 7)))
     (let ((lst (env-ref env52634 6)))
       (let ((fun (env-ref env52634 5)))
         (let ((acc (env-ref env52634 4)))
           (let ((car (env-ref env52634 3)))
             (let ((kont52363 (env-ref env52634 2)))
               (let ((foldl (env-ref env52634 1)))
                 (if a5226652482
                   (clo-app kont52363 acc)
                   (let ((f5236652483
                          (make-closure
                           lam52631
                           foldl
                           kont52363
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f5236652483 lst)))))))))))
  (proc
   (foldl _52635 kont52363 fun acc lst)
   (let ((f5236752481
          (make-closure lam52633 foldl kont52363 car acc fun lst cdr)))
     (clo-app null? f5236752481 lst)))
  (proc
   (lam52636 env52637 a5227352496)
   (let ((kont52368 (env-ref env52637 3)))
     (let ((reverse-helper (env-ref env52637 2)))
       (let ((a5227152492 (env-ref env52637 1)))
         (clo-app reverse-helper kont52368 a5227152492 a5227352496)))))
  (proc
   (lam52638 env52639 a5227252494)
   (let ((kont52368 (env-ref env52639 5)))
     (let ((reverse-helper (env-ref env52639 4)))
       (let ((lst2 (env-ref env52639 3)))
         (let ((cons (env-ref env52639 2)))
           (let ((a5227152492 (env-ref env52639 1)))
             (let ((f5236952495
                    (make-closure
                     lam52636
                     a5227152492
                     reverse-helper
                     kont52368)))
               (clo-app cons f5236952495 a5227252494 lst2))))))))
  (proc
   (lam52640 env52641 a5227152492)
   (let ((kont52368 (env-ref env52641 6)))
     (let ((lst (env-ref env52641 5)))
       (let ((reverse-helper (env-ref env52641 4)))
         (let ((lst2 (env-ref env52641 3)))
           (let ((car (env-ref env52641 2)))
             (let ((cons (env-ref env52641 1)))
               (let ((f5237052493
                      (make-closure
                       lam52638
                       a5227152492
                       cons
                       lst2
                       reverse-helper
                       kont52368)))
                 (clo-app car f5237052493 lst)))))))))
  (proc
   (lam52642 env52643 a5227052490)
   (let ((cdr (env-ref env52643 7)))
     (let ((kont52368 (env-ref env52643 6)))
       (let ((lst (env-ref env52643 5)))
         (let ((reverse-helper (env-ref env52643 4)))
           (let ((lst2 (env-ref env52643 3)))
             (let ((car (env-ref env52643 2)))
               (let ((cons (env-ref env52643 1)))
                 (if a5227052490
                   (clo-app kont52368 lst2)
                   (let ((f5237152491
                          (make-closure
                           lam52640
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont52368)))
                     (clo-app cdr f5237152491 lst)))))))))))
  (proc
   (reverse-helper _52644 kont52368 lst lst2)
   (let ((f5237252489
          (make-closure
           lam52642
           cons
           car
           lst2
           reverse-helper
           lst
           kont52368
           cdr)))
     (clo-app null? f5237252489 lst)))
  (proc
   (lam52645 env52646 a5227452498)
   (let ((lst (env-ref env52646 3)))
     (let ((reverse-helper (env-ref env52646 2)))
       (let ((kont52373 (env-ref env52646 1)))
         (clo-app reverse-helper kont52373 lst a5227452498)))))
  (proc
   (reverse _52647 kont52373 lst)
   (let ((f5237452497 (make-closure lam52645 kont52373 reverse-helper lst)))
     (clo-app list f5237452497)))
  (proc
   (lam52648 env52649 x5227752503)
   (let ((kont52375 (env-ref env52649 1))) (clo-app kont52375 x5227752503)))
  (proc
   (lam52650 env52651 a5228252512)
   (let ((kont52375 (env-ref env52651 4)))
     (let ((a5228052508 (env-ref env52651 3)))
       (let ((take-helper (env-ref env52651 2)))
         (let ((a5227852505 (env-ref env52651 1)))
           (clo-app
            take-helper
            kont52375
            a5227852505
            a5228052508
            a5228252512))))))
  (proc
   (lam52652 env52653 a5228152510)
   (let ((kont52375 (env-ref env52653 6)))
     (let ((cons (env-ref env52653 5)))
       (let ((a5228052508 (env-ref env52653 4)))
         (let ((take-helper (env-ref env52653 3)))
           (let ((a5227852505 (env-ref env52653 2)))
             (let ((lst2 (env-ref env52653 1)))
               (let ((f5237752511
                      (make-closure
                       lam52650
                       a5227852505
                       take-helper
                       a5228052508
                       kont52375)))
                 (clo-app cons f5237752511 a5228152510 lst2)))))))))
  (proc
   (lam52654 env52655 a5228052508)
   (let ((lst (env-ref env52655 7)))
     (let ((kont52375 (env-ref env52655 6)))
       (let ((car (env-ref env52655 5)))
         (let ((cons (env-ref env52655 4)))
           (let ((take-helper (env-ref env52655 3)))
             (let ((a5227852505 (env-ref env52655 2)))
               (let ((lst2 (env-ref env52655 1)))
                 (let ((f5237852509
                        (make-closure
                         lam52652
                         lst2
                         a5227852505
                         take-helper
                         a5228052508
                         cons
                         kont52375)))
                   (clo-app car f5237852509 lst))))))))))
  (proc
   (lam52657 env52658 a5227852505)
   (let ((lst (env-ref env52658 8)))
     (let ((kont52375 (env-ref env52658 7)))
       (let ((cons (env-ref env52658 6)))
         (let ((- (env-ref env52658 5)))
           (let ((take-helper (env-ref env52658 4)))
             (let ((lst2 (env-ref env52658 3)))
               (let ((n (env-ref env52658 2)))
                 (let ((car (env-ref env52658 1)))
                   (let ((a5227952506 '1))
                     (let ((f5237952507
                            (make-closure
                             lam52654
                             lst2
                             a5227852505
                             take-helper
                             cons
                             car
                             kont52375
                             lst)))
                       (clo-app - f5237952507 n a5227952506))))))))))))
  (proc
   (lam52659 env52660 a5227652501)
   (let ((cdr (env-ref env52660 10)))
     (let ((lst (env-ref env52660 9)))
       (let ((reverse (env-ref env52660 8)))
         (let ((kont52375 (env-ref env52660 7)))
           (let ((cons (env-ref env52660 6)))
             (let ((- (env-ref env52660 5)))
               (let ((take-helper (env-ref env52660 4)))
                 (let ((lst2 (env-ref env52660 3)))
                   (let ((n (env-ref env52660 2)))
                     (let ((car (env-ref env52660 1)))
                       (if a5227652501
                         (let ((f5237652502 (make-closure lam52648 kont52375)))
                           (clo-app reverse f5237652502 lst2))
                         (let ((f5238052504
                                (make-closure
                                 lam52657
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont52375
                                 lst)))
                           (clo-app cdr f5238052504 lst))))))))))))))
  (proc
   (take-helper _52662 kont52375 lst n lst2)
   (let ((a5227552499 '0))
     (let ((f5238152500
            (make-closure
             lam52659
             car
             n
             lst2
             take-helper
             -
             cons
             kont52375
             reverse
             lst
             cdr)))
       (clo-app = f5238152500 n a5227552499))))
  (proc
   (lam52663 env52664 a5228352514)
   (let ((kont52382 (env-ref env52664 4)))
     (let ((lst (env-ref env52664 3)))
       (let ((take-helper (env-ref env52664 2)))
         (let ((n (env-ref env52664 1)))
           (clo-app take-helper kont52382 lst n a5228352514))))))
  (proc
   (take _52665 kont52382 lst n)
   (let ((f5238352513 (make-closure lam52663 n take-helper lst kont52382)))
     (clo-app list f5238352513)))
  (proc
   (lam52667 env52668 a5228852522)
   (let ((kont52384 (env-ref env52668 3)))
     (let ((+ (env-ref env52668 2)))
       (let ((a5228652518 (env-ref env52668 1)))
         (clo-app + kont52384 a5228652518 a5228852522)))))
  (proc
   (lam52669 env52670 a5228752520)
   (let ((kont52384 (env-ref env52670 4)))
     (let ((length (env-ref env52670 3)))
       (let ((+ (env-ref env52670 2)))
         (let ((a5228652518 (env-ref env52670 1)))
           (let ((f5238552521 (make-closure lam52667 a5228652518 + kont52384)))
             (clo-app length f5238552521 a5228752520)))))))
  (proc
   (lam52672 env52673 a5228452516)
   (let ((cdr (env-ref env52673 5)))
     (let ((kont52384 (env-ref env52673 4)))
       (let ((lst (env-ref env52673 3)))
         (let ((length (env-ref env52673 2)))
           (let ((+ (env-ref env52673 1)))
             (if a5228452516
               (let ((x5228552517 '0)) (clo-app kont52384 x5228552517))
               (let ((a5228652518 '1))
                 (let ((f5238652519
                        (make-closure
                         lam52669
                         a5228652518
                         +
                         length
                         kont52384)))
                   (clo-app cdr f5238652519 lst))))))))))
  (proc
   (length _52674 kont52384 lst)
   (let ((f5238752515 (make-closure lam52672 + length lst kont52384 cdr)))
     (clo-app null? f5238752515 lst)))
  (proc
   (lam52675 env52676 x5229052526)
   (let ((kont52388 (env-ref env52676 1))) (clo-app kont52388 x5229052526)))
  (proc
   (lam52677 env52678 a5229452534)
   (let ((a5229252530 (env-ref env52678 3)))
     (let ((kont52388 (env-ref env52678 2)))
       (let ((cons (env-ref env52678 1)))
         (clo-app cons kont52388 a5229252530 a5229452534)))))
  (proc
   (lam52679 env52680 a5229352532)
   (let ((kont52388 (env-ref env52680 5)))
     (let ((proc (env-ref env52680 4)))
       (let ((cons (env-ref env52680 3)))
         (let ((map (env-ref env52680 2)))
           (let ((a5229252530 (env-ref env52680 1)))
             (let ((f5239052533
                    (make-closure lam52677 cons kont52388 a5229252530)))
               (clo-app map f5239052533 proc a5229352532))))))))
  (proc
   (lam52681 env52682 a5229252530)
   (let ((cdr (env-ref env52682 6)))
     (let ((lst (env-ref env52682 5)))
       (let ((map (env-ref env52682 4)))
         (let ((kont52388 (env-ref env52682 3)))
           (let ((proc (env-ref env52682 2)))
             (let ((cons (env-ref env52682 1)))
               (let ((f5239152531
                      (make-closure
                       lam52679
                       a5229252530
                       map
                       cons
                       proc
                       kont52388)))
                 (clo-app cdr f5239152531 lst)))))))))
  (proc
   (lam52683 env52684 a5229152528)
   (let ((cdr (env-ref env52684 6)))
     (let ((lst (env-ref env52684 5)))
       (let ((map (env-ref env52684 4)))
         (let ((kont52388 (env-ref env52684 3)))
           (let ((proc (env-ref env52684 2)))
             (let ((cons (env-ref env52684 1)))
               (let ((f5239252529
                      (make-closure lam52681 cons proc kont52388 map lst cdr)))
                 (clo-app proc f5239252529 a5229152528)))))))))
  (proc
   (lam52685 env52686 a5228952524)
   (let ((lst (env-ref env52686 8)))
     (let ((map (env-ref env52686 7)))
       (let ((kont52388 (env-ref env52686 6)))
         (let ((proc (env-ref env52686 5)))
           (let ((car (env-ref env52686 4)))
             (let ((cons (env-ref env52686 3)))
               (let ((list (env-ref env52686 2)))
                 (let ((cdr (env-ref env52686 1)))
                   (if a5228952524
                     (let ((f5238952525 (make-closure lam52675 kont52388)))
                       (clo-app list f5238952525))
                     (let ((f5239352527
                            (make-closure
                             lam52683
                             cons
                             proc
                             kont52388
                             map
                             lst
                             cdr)))
                       (clo-app car f5239352527 lst))))))))))))
  (proc
   (map _52687 kont52388 proc lst)
   (let ((f5239452523
          (make-closure lam52685 cdr list cons car proc kont52388 map lst)))
     (clo-app null? f5239452523 lst)))
  (proc
   (lam52688 env52689 x5229652538)
   (let ((kont52395 (env-ref env52689 1))) (clo-app kont52395 x5229652538)))
  (proc
   (lam52690 env52691 a5230152548)
   (let ((a5229952544 (env-ref env52691 3)))
     (let ((cons (env-ref env52691 2)))
       (let ((kont52395 (env-ref env52691 1)))
         (clo-app cons kont52395 a5229952544 a5230152548)))))
  (proc
   (lam52692 env52693 a5230052546)
   (let ((a5229952544 (env-ref env52693 5)))
     (let ((op (env-ref env52693 4)))
       (let ((filter (env-ref env52693 3)))
         (let ((cons (env-ref env52693 2)))
           (let ((kont52395 (env-ref env52693 1)))
             (let ((f5239752547
                    (make-closure lam52690 kont52395 cons a5229952544)))
               (clo-app filter f5239752547 op a5230052546))))))))
  (proc
   (lam52694 env52695 a5229952544)
   (let ((cdr (env-ref env52695 6)))
     (let ((lst (env-ref env52695 5)))
       (let ((op (env-ref env52695 4)))
         (let ((filter (env-ref env52695 3)))
           (let ((cons (env-ref env52695 2)))
             (let ((kont52395 (env-ref env52695 1)))
               (let ((f5239852545
                      (make-closure
                       lam52692
                       kont52395
                       cons
                       filter
                       op
                       a5229952544)))
                 (clo-app cdr f5239852545 lst)))))))))
  (proc
   (lam52696 env52697 a5230252550)
   (let ((op (env-ref env52697 3)))
     (let ((filter (env-ref env52697 2)))
       (let ((kont52395 (env-ref env52697 1)))
         (clo-app filter kont52395 op a5230252550)))))
  (proc
   (lam52698 env52699 a5229852542)
   (let ((cdr (env-ref env52699 7)))
     (let ((lst (env-ref env52699 6)))
       (let ((op (env-ref env52699 5)))
         (let ((filter (env-ref env52699 4)))
           (let ((car (env-ref env52699 3)))
             (let ((cons (env-ref env52699 2)))
               (let ((kont52395 (env-ref env52699 1)))
                 (if a5229852542
                   (let ((f5239952543
                          (make-closure
                           lam52694
                           kont52395
                           cons
                           filter
                           op
                           lst
                           cdr)))
                     (clo-app car f5239952543 lst))
                   (let ((f5240052549
                          (make-closure lam52696 kont52395 filter op)))
                     (clo-app cdr f5240052549 lst)))))))))))
  (proc
   (lam52700 env52701 a5229752540)
   (let ((cdr (env-ref env52701 7)))
     (let ((lst (env-ref env52701 6)))
       (let ((op (env-ref env52701 5)))
         (let ((filter (env-ref env52701 4)))
           (let ((car (env-ref env52701 3)))
             (let ((cons (env-ref env52701 2)))
               (let ((kont52395 (env-ref env52701 1)))
                 (let ((f5240152541
                        (make-closure
                         lam52698
                         kont52395
                         cons
                         car
                         filter
                         op
                         lst
                         cdr)))
                   (clo-app op f5240152541 a5229752540))))))))))
  (proc
   (lam52702 env52703 a5229552536)
   (let ((lst (env-ref env52703 8)))
     (let ((op (env-ref env52703 7)))
       (let ((list (env-ref env52703 6)))
         (let ((cdr (env-ref env52703 5)))
           (let ((filter (env-ref env52703 4)))
             (let ((car (env-ref env52703 3)))
               (let ((cons (env-ref env52703 2)))
                 (let ((kont52395 (env-ref env52703 1)))
                   (if a5229552536
                     (let ((f5239652537 (make-closure lam52688 kont52395)))
                       (clo-app list f5239652537))
                     (let ((f5240252539
                            (make-closure
                             lam52700
                             kont52395
                             cons
                             car
                             filter
                             op
                             lst
                             cdr)))
                       (clo-app car f5240252539 lst))))))))))))
  (proc
   (filter _52704 kont52395 op lst)
   (let ((f5240352535
          (make-closure lam52702 kont52395 cons car filter cdr list op lst)))
     (clo-app null? f5240352535 lst)))
  (proc
   (lam52705 env52706 a5230752558)
   (let ((drop (env-ref env52706 3)))
     (let ((kont52404 (env-ref env52706 2)))
       (let ((a5230552555 (env-ref env52706 1)))
         (clo-app drop kont52404 a5230552555 a5230752558)))))
  (proc
   (lam52708 env52709 a5230552555)
   (let ((drop (env-ref env52709 4)))
     (let ((kont52404 (env-ref env52709 3)))
       (let ((n (env-ref env52709 2)))
         (let ((- (env-ref env52709 1)))
           (let ((a5230652556 '1))
             (let ((f5240552557
                    (make-closure lam52705 a5230552555 kont52404 drop)))
               (clo-app - f5240552557 n a5230652556))))))))
  (proc
   (lam52710 env52711 a5230452553)
   (let ((cdr (env-ref env52711 6)))
     (let ((kont52404 (env-ref env52711 5)))
       (let ((n (env-ref env52711 4)))
         (let ((- (env-ref env52711 3)))
           (let ((lst (env-ref env52711 2)))
             (let ((drop (env-ref env52711 1)))
               (if a5230452553
                 (clo-app kont52404 lst)
                 (let ((f5240652554
                        (make-closure lam52708 - n kont52404 drop)))
                   (clo-app cdr f5240652554 lst))))))))))
  (proc
   (drop _52713 kont52404 lst n)
   (let ((a5230352551 '0))
     (let ((f5240752552 (make-closure lam52710 drop lst - n kont52404 cdr)))
       (clo-app = f5240752552 n a5230352551))))
  (proc
   (lam52714 env52715 a5231152566)
   (let ((a5230952562 (env-ref env52715 3)))
     (let ((proc (env-ref env52715 2)))
       (let ((kont52408 (env-ref env52715 1)))
         (clo-app proc kont52408 a5230952562 a5231152566)))))
  (proc
   (lam52716 env52717 a5231052564)
   (let ((foldr (env-ref env52717 5)))
     (let ((a5230952562 (env-ref env52717 4)))
       (let ((proc (env-ref env52717 3)))
         (let ((acc (env-ref env52717 2)))
           (let ((kont52408 (env-ref env52717 1)))
             (let ((f5240952565
                    (make-closure lam52714 kont52408 proc a5230952562)))
               (clo-app foldr f5240952565 proc acc a5231052564))))))))
  (proc
   (lam52718 env52719 a5230952562)
   (let ((cdr (env-ref env52719 6)))
     (let ((foldr (env-ref env52719 5)))
       (let ((lst (env-ref env52719 4)))
         (let ((proc (env-ref env52719 3)))
           (let ((acc (env-ref env52719 2)))
             (let ((kont52408 (env-ref env52719 1)))
               (let ((f5241052563
                      (make-closure
                       lam52716
                       kont52408
                       acc
                       proc
                       a5230952562
                       foldr)))
                 (clo-app cdr f5241052563 lst)))))))))
  (proc
   (lam52720 env52721 a5230852560)
   (let ((cdr (env-ref env52721 7)))
     (let ((car (env-ref env52721 6)))
       (let ((foldr (env-ref env52721 5)))
         (let ((lst (env-ref env52721 4)))
           (let ((proc (env-ref env52721 3)))
             (let ((acc (env-ref env52721 2)))
               (let ((kont52408 (env-ref env52721 1)))
                 (if a5230852560
                   (clo-app kont52408 acc)
                   (let ((f5241152561
                          (make-closure
                           lam52718
                           kont52408
                           acc
                           proc
                           lst
                           foldr
                           cdr)))
                     (clo-app car f5241152561 lst)))))))))))
  (proc
   (foldr _52722 kont52408 proc acc lst)
   (let ((f5241252559
          (make-closure lam52720 kont52408 acc proc lst foldr car cdr)))
     (clo-app null? f5241252559 lst)))
  (proc
   (lam52723 env52724 a5231552574)
   (let ((kont52413 (env-ref env52724 3)))
     (let ((a5231352570 (env-ref env52724 2)))
       (let ((cons (env-ref env52724 1)))
         (clo-app cons kont52413 a5231352570 a5231552574)))))
  (proc
   (lam52725 env52726 a5231452572)
   (let ((kont52413 (env-ref env52726 5)))
     (let ((append (env-ref env52726 4)))
       (let ((lst2 (env-ref env52726 3)))
         (let ((a5231352570 (env-ref env52726 2)))
           (let ((cons (env-ref env52726 1)))
             (let ((f5241452573
                    (make-closure lam52723 cons a5231352570 kont52413)))
               (clo-app append f5241452573 a5231452572 lst2))))))))
  (proc
   (lam52727 env52728 a5231352570)
   (let ((append (env-ref env52728 6)))
     (let ((lst2 (env-ref env52728 5)))
       (let ((lst1 (env-ref env52728 4)))
         (let ((cons (env-ref env52728 3)))
           (let ((kont52413 (env-ref env52728 2)))
             (let ((cdr (env-ref env52728 1)))
               (let ((f5241552571
                      (make-closure
                       lam52725
                       cons
                       a5231352570
                       lst2
                       append
                       kont52413)))
                 (clo-app cdr f5241552571 lst1)))))))))
  (proc
   (lam52729 env52730 a5231252568)
   (let ((append (env-ref env52730 7)))
     (let ((lst2 (env-ref env52730 6)))
       (let ((cons (env-ref env52730 5)))
         (let ((kont52413 (env-ref env52730 4)))
           (let ((cdr (env-ref env52730 3)))
             (let ((lst1 (env-ref env52730 2)))
               (let ((car (env-ref env52730 1)))
                 (if a5231252568
                   (clo-app kont52413 lst2)
                   (let ((f5241652569
                          (make-closure
                           lam52727
                           cdr
                           kont52413
                           cons
                           lst1
                           lst2
                           append)))
                     (clo-app car f5241652569 lst1)))))))))))
  (proc
   (append _52731 kont52413 lst1 lst2)
   (let ((f5241752567
          (make-closure lam52729 car lst1 cdr kont52413 cons lst2 append)))
     (clo-app null? f5241752567 lst1)))
  (proc
   (hash _52732 . lst)
   (let ((kont5241852575 (prim car lst)))
     (let ((lst52576 (prim cdr lst)))
       (let ((x5231652577 (apply-prim hash lst52576)))
         (clo-app kont5241852575 x5231652577)))))
  (proc
   (hash-ref _52733 kont52420 h k)
   (let ((x5231752578 (prim hash-ref h k))) (clo-app kont52420 x5231752578)))
  (proc
   (hash-set _52734 kont52421 h k v)
   (let ((x5231852579 (prim hash-set h k v))) (clo-app kont52421 x5231852579)))
  (proc
   (hash-has-key? _52735 kont52422 h k)
   (let ((x5231952580 (prim hash-has-key? h k)))
     (clo-app kont52422 x5231952580)))
  (proc
   (hash-count _52736 kont52423 h)
   (let ((x5232052581 (prim hash-count h))) (clo-app kont52423 x5232052581)))
  (proc
   (call _52742 kont52424)
   (let ((a5232152582 '100))
     (let ((a5232252583 '20))
       (let ((a5232352584 '10))
         (let ((a5232452585 '5))
           (let ((a5232552586 '1))
             (clo-app
              >
              kont52424
              a5232152582
              a5232252583
              a5232352584
              a5232452585
              a5232552586)))))))
  (proc
   (lam52743 env52744 x5232652588)
   (let ((kont52425 (env-ref env52744 1))) (clo-app kont52425 x5232652588)))
  (proc
   (brouhaha_main _52745 kont52425)
   (let ((f5242652587 (make-closure lam52743 kont52425)))
     (clo-app call f5242652587))))
