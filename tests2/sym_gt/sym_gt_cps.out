'((define (+ . lst)
    (let ((kont5232752427 (prim car lst)))
      (let ((lst52428 (prim cdr lst)))
        (let ((x5223852429 (apply-prim + lst52428)))
          (kont5232752427 x5223852429)))))
  (define (- . lst)
    (let ((kont5232952430 (prim car lst)))
      (let ((lst52431 (prim cdr lst)))
        (let ((x5223952432 (apply-prim - lst52431)))
          (kont5232952430 x5223952432)))))
  (define (* . lst)
    (let ((kont5233152433 (prim car lst)))
      (let ((lst52434 (prim cdr lst)))
        (let ((x5224052435 (apply-prim * lst52434)))
          (kont5233152433 x5224052435)))))
  (define (modulo kont52333 a b)
    (let ((x5224152436 (prim modulo a b))) (kont52333 x5224152436)))
  (define (/ . lst)
    (let ((kont5233452437 (prim car lst)))
      (let ((lst52438 (prim cdr lst)))
        (let ((x5224252439 (apply-prim / lst52438)))
          (kont5233452437 x5224252439)))))
  (define (= . lst)
    (let ((kont5233652440 (prim car lst)))
      (let ((lst52441 (prim cdr lst)))
        (let ((x5224352442 (apply-prim = lst52441)))
          (kont5233652440 x5224352442)))))
  (define (> . lst)
    (let ((kont5233852443 (prim car lst)))
      (let ((lst52444 (prim cdr lst)))
        (let ((x5224452445 (apply-prim > lst52444)))
          (kont5233852443 x5224452445)))))
  (define (< . lst)
    (let ((kont5234052446 (prim car lst)))
      (let ((lst52447 (prim cdr lst)))
        (let ((x5224552448 (apply-prim < lst52447)))
          (kont5234052446 x5224552448)))))
  (define (<= . lst)
    (let ((kont5234252449 (prim car lst)))
      (let ((lst52450 (prim cdr lst)))
        (let ((x5224652451 (apply-prim <= lst52450)))
          (kont5234252449 x5224652451)))))
  (define (>= . lst)
    (let ((kont5234452452 (prim car lst)))
      (let ((lst52453 (prim cdr lst)))
        (let ((x5224752454 (apply-prim >= lst52453)))
          (kont5234452452 x5224752454)))))
  (define (null? kont52346 x)
    (let ((x5224852455 (prim null? x))) (kont52346 x5224852455)))
  (define (equal? kont52347 x y)
    (let ((x5224952456 (prim equal? x y))) (kont52347 x5224952456)))
  (define (eq? kont52348 x y)
    (let ((x5225052457 (prim eq? x y))) (kont52348 x5225052457)))
  (define (cons kont52349 a b)
    (let ((x5225152458 (prim cons a b))) (kont52349 x5225152458)))
  (define (car kont52350 lst)
    (let ((x5225252459 (prim car lst))) (kont52350 x5225252459)))
  (define (cdr kont52351 lst)
    (let ((x5225352460 (prim cdr lst))) (kont52351 x5225352460)))
  (define (even? kont52352 x)
    (let ((a5225452461 '0))
      (let ((a5225552462 '2))
        (let ((f5235352463
               (lambda (a5225652464)
                 (equal? kont52352 a5225452461 a5225652464))))
          (modulo f5235352463 x a5225552462)))))
  (define (odd? kont52354 x)
    (let ((a5225752465 '1))
      (let ((a5225852466 '2))
        (let ((f5235552467
               (lambda (a5225952468)
                 (equal? kont52354 a5225752465 a5225952468))))
          (modulo f5235552467 x a5225852466)))))
  (define (list . x)
    (let ((kont5235652469 (prim car x)))
      (let ((x52470 (prim cdr x))) (kont5235652469 x52470))))
  (define (member? kont52358 x lst)
    (let ((f5236252471
           (lambda (a5226052472)
             (if a5226052472
               (let ((x5226152473 '#f)) (kont52358 x5226152473))
               (let ((f5236152474
                      (lambda (a5226252475)
                        (let ((f5236052476
                               (lambda (a5226352477)
                                 (if a5226352477
                                   (let ((x5226452478 '#t))
                                     (kont52358 x5226452478))
                                   (let ((f5235952479
                                          (lambda (a5226552480)
                                            (member?
                                             kont52358
                                             x
                                             a5226552480))))
                                     (cdr f5235952479 lst))))))
                          (equal? f5236052476 a5226252475 x)))))
                 (car f5236152474 lst))))))
      (null? f5236252471 lst)))
  (define (foldl kont52363 fun acc lst)
    (let ((f5236752481
           (lambda (a5226652482)
             (if a5226652482
               (kont52363 acc)
               (let ((f5236652483
                      (lambda (a5226752484)
                        (let ((f5236552485
                               (lambda (a5226852486)
                                 (let ((f5236452487
                                        (lambda (a5226952488)
                                          (foldl
                                           kont52363
                                           fun
                                           a5226852486
                                           a5226952488))))
                                   (cdr f5236452487 lst)))))
                          (fun f5236552485 a5226752484 acc)))))
                 (car f5236652483 lst))))))
      (null? f5236752481 lst)))
  (define (reverse-helper kont52368 lst lst2)
    (let ((f5237252489
           (lambda (a5227052490)
             (if a5227052490
               (kont52368 lst2)
               (let ((f5237152491
                      (lambda (a5227152492)
                        (let ((f5237052493
                               (lambda (a5227252494)
                                 (let ((f5236952495
                                        (lambda (a5227352496)
                                          (reverse-helper
                                           kont52368
                                           a5227152492
                                           a5227352496))))
                                   (cons f5236952495 a5227252494 lst2)))))
                          (car f5237052493 lst)))))
                 (cdr f5237152491 lst))))))
      (null? f5237252489 lst)))
  (define (reverse kont52373 lst)
    (let ((f5237452497
           (lambda (a5227452498) (reverse-helper kont52373 lst a5227452498))))
      (list f5237452497)))
  (define (take-helper kont52375 lst n lst2)
    (let ((a5227552499 '0))
      (let ((f5238152500
             (lambda (a5227652501)
               (if a5227652501
                 (let ((f5237652502
                        (lambda (x5227752503) (kont52375 x5227752503))))
                   (reverse f5237652502 lst2))
                 (let ((f5238052504
                        (lambda (a5227852505)
                          (let ((a5227952506 '1))
                            (let ((f5237952507
                                   (lambda (a5228052508)
                                     (let ((f5237852509
                                            (lambda (a5228152510)
                                              (let ((f5237752511
                                                     (lambda (a5228252512)
                                                       (take-helper
                                                        kont52375
                                                        a5227852505
                                                        a5228052508
                                                        a5228252512))))
                                                (cons
                                                 f5237752511
                                                 a5228152510
                                                 lst2)))))
                                       (car f5237852509 lst)))))
                              (- f5237952507 n a5227952506))))))
                   (cdr f5238052504 lst))))))
        (= f5238152500 n a5227552499))))
  (define (take kont52382 lst n)
    (let ((f5238352513
           (lambda (a5228352514) (take-helper kont52382 lst n a5228352514))))
      (list f5238352513)))
  (define (length kont52384 lst)
    (let ((f5238752515
           (lambda (a5228452516)
             (if a5228452516
               (let ((x5228552517 '0)) (kont52384 x5228552517))
               (let ((a5228652518 '1))
                 (let ((f5238652519
                        (lambda (a5228752520)
                          (let ((f5238552521
                                 (lambda (a5228852522)
                                   (+ kont52384 a5228652518 a5228852522))))
                            (length f5238552521 a5228752520)))))
                   (cdr f5238652519 lst)))))))
      (null? f5238752515 lst)))
  (define (map kont52388 proc lst)
    (let ((f5239452523
           (lambda (a5228952524)
             (if a5228952524
               (let ((f5238952525
                      (lambda (x5229052526) (kont52388 x5229052526))))
                 (list f5238952525))
               (let ((f5239352527
                      (lambda (a5229152528)
                        (let ((f5239252529
                               (lambda (a5229252530)
                                 (let ((f5239152531
                                        (lambda (a5229352532)
                                          (let ((f5239052533
                                                 (lambda (a5229452534)
                                                   (cons
                                                    kont52388
                                                    a5229252530
                                                    a5229452534))))
                                            (map
                                             f5239052533
                                             proc
                                             a5229352532)))))
                                   (cdr f5239152531 lst)))))
                          (proc f5239252529 a5229152528)))))
                 (car f5239352527 lst))))))
      (null? f5239452523 lst)))
  (define (filter kont52395 op lst)
    (let ((f5240352535
           (lambda (a5229552536)
             (if a5229552536
               (let ((f5239652537
                      (lambda (x5229652538) (kont52395 x5229652538))))
                 (list f5239652537))
               (let ((f5240252539
                      (lambda (a5229752540)
                        (let ((f5240152541
                               (lambda (a5229852542)
                                 (if a5229852542
                                   (let ((f5239952543
                                          (lambda (a5229952544)
                                            (let ((f5239852545
                                                   (lambda (a5230052546)
                                                     (let ((f5239752547
                                                            (lambda (a5230152548)
                                                              (cons
                                                               kont52395
                                                               a5229952544
                                                               a5230152548))))
                                                       (filter
                                                        f5239752547
                                                        op
                                                        a5230052546)))))
                                              (cdr f5239852545 lst)))))
                                     (car f5239952543 lst))
                                   (let ((f5240052549
                                          (lambda (a5230252550)
                                            (filter
                                             kont52395
                                             op
                                             a5230252550))))
                                     (cdr f5240052549 lst))))))
                          (op f5240152541 a5229752540)))))
                 (car f5240252539 lst))))))
      (null? f5240352535 lst)))
  (define (drop kont52404 lst n)
    (let ((a5230352551 '0))
      (let ((f5240752552
             (lambda (a5230452553)
               (if a5230452553
                 (kont52404 lst)
                 (let ((f5240652554
                        (lambda (a5230552555)
                          (let ((a5230652556 '1))
                            (let ((f5240552557
                                   (lambda (a5230752558)
                                     (drop
                                      kont52404
                                      a5230552555
                                      a5230752558))))
                              (- f5240552557 n a5230652556))))))
                   (cdr f5240652554 lst))))))
        (= f5240752552 n a5230352551))))
  (define (foldr kont52408 proc acc lst)
    (let ((f5241252559
           (lambda (a5230852560)
             (if a5230852560
               (kont52408 acc)
               (let ((f5241152561
                      (lambda (a5230952562)
                        (let ((f5241052563
                               (lambda (a5231052564)
                                 (let ((f5240952565
                                        (lambda (a5231152566)
                                          (proc
                                           kont52408
                                           a5230952562
                                           a5231152566))))
                                   (foldr f5240952565 proc acc a5231052564)))))
                          (cdr f5241052563 lst)))))
                 (car f5241152561 lst))))))
      (null? f5241252559 lst)))
  (define (append kont52413 lst1 lst2)
    (let ((f5241752567
           (lambda (a5231252568)
             (if a5231252568
               (kont52413 lst2)
               (let ((f5241652569
                      (lambda (a5231352570)
                        (let ((f5241552571
                               (lambda (a5231452572)
                                 (let ((f5241452573
                                        (lambda (a5231552574)
                                          (cons
                                           kont52413
                                           a5231352570
                                           a5231552574))))
                                   (append f5241452573 a5231452572 lst2)))))
                          (cdr f5241552571 lst1)))))
                 (car f5241652569 lst1))))))
      (null? f5241752567 lst1)))
  (define (hash . lst)
    (let ((kont5241852575 (prim car lst)))
      (let ((lst52576 (prim cdr lst)))
        (let ((x5231652577 (apply-prim hash lst52576)))
          (kont5241852575 x5231652577)))))
  (define (hash-ref kont52420 h k)
    (let ((x5231752578 (prim hash-ref h k))) (kont52420 x5231752578)))
  (define (hash-set kont52421 h k v)
    (let ((x5231852579 (prim hash-set h k v))) (kont52421 x5231852579)))
  (define (hash-has-key? kont52422 h k)
    (let ((x5231952580 (prim hash-has-key? h k))) (kont52422 x5231952580)))
  (define (hash-count kont52423 h)
    (let ((x5232052581 (prim hash-count h))) (kont52423 x5232052581)))
  (define (call kont52424)
    (let ((a5232152582 '100))
      (let ((a5232252583 '20))
        (let ((a5232352584 '10))
          (let ((a5232452585 '5))
            (let ((a5232552586 '1))
              (>
               kont52424
               a5232152582
               a5232252583
               a5232352584
               a5232452585
               a5232552586)))))))
  (define (brouhaha_main kont52425)
    (let ((f5242652587 (lambda (x5232652588) (kont52425 x5232652588))))
      (call f5242652587))))
