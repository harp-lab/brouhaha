'((proc
   (+ _10546 . lst)
   (let ((kont1047010502 (prim car lst)))
     (let ((lst10503 (prim cdr lst)))
       (let ((x1044710504 (apply-prim + lst10503)))
         (clo-app kont1047010502 x1044710504)))))
  (proc
   (- _10547 . lst)
   (let ((kont1047210505 (prim car lst)))
     (let ((lst10506 (prim cdr lst)))
       (let ((x1044810507 (apply-prim - lst10506)))
         (clo-app kont1047210505 x1044810507)))))
  (proc
   (* _10548 . lst)
   (let ((kont1047410508 (prim car lst)))
     (let ((lst10509 (prim cdr lst)))
       (let ((x1044910510 (apply-prim * lst10509)))
         (clo-app kont1047410508 x1044910510)))))
  (proc
   (modulo _10549 kont10476 a b)
   (let ((x1045010511 (prim modulo a b))) (clo-app kont10476 x1045010511)))
  (proc
   (= _10550 . lst)
   (let ((kont1047710512 (prim car lst)))
     (let ((lst10513 (prim cdr lst)))
       (let ((x1045110514 (apply-prim = lst10513)))
         (clo-app kont1047710512 x1045110514)))))
  (proc
   (> _10551 . lst)
   (let ((kont1047910515 (prim car lst)))
     (let ((lst10516 (prim cdr lst)))
       (let ((x1045210517 (apply-prim > lst10516)))
         (clo-app kont1047910515 x1045210517)))))
  (proc
   (< _10552 . lst)
   (let ((kont1048110518 (prim car lst)))
     (let ((lst10519 (prim cdr lst)))
       (let ((x1045310520 (apply-prim < lst10519)))
         (clo-app kont1048110518 x1045310520)))))
  (proc
   (<= _10553 . lst)
   (let ((kont1048310521 (prim car lst)))
     (let ((lst10522 (prim cdr lst)))
       (let ((x1045410523 (apply-prim <= lst10522)))
         (clo-app kont1048310521 x1045410523)))))
  (proc
   (>= _10554 . lst)
   (let ((kont1048510524 (prim car lst)))
     (let ((lst10525 (prim cdr lst)))
       (let ((x1045510526 (apply-prim >= lst10525)))
         (clo-app kont1048510524 x1045510526)))))
  (proc
   (null? _10555 kont10487 x)
   (let ((x1045610527 (prim null? x))) (clo-app kont10487 x1045610527)))
  (proc
   (equal? _10556 kont10488 x y)
   (let ((x1045710528 (prim equal? x y))) (clo-app kont10488 x1045710528)))
  (proc
   (eq? _10557 kont10489 x y)
   (let ((x1045810529 (prim eq? x y))) (clo-app kont10489 x1045810529)))
  (proc
   (cons _10558 kont10490 a b)
   (let ((x1045910530 (prim cons a b))) (clo-app kont10490 x1045910530)))
  (proc
   (car _10559 kont10491 lst)
   (let ((x1046010531 (prim car lst))) (clo-app kont10491 x1046010531)))
  (proc
   (cdr _10560 kont10492 lst)
   (let ((x1046110532 (prim cdr lst))) (clo-app kont10492 x1046110532)))
  (proc
   (lam10561 env10562 a1046410536)
   (let ((a1046210533 (env-ref env10562 3)))
     (let ((equal? (env-ref env10562 2)))
       (let ((kont10493 (env-ref env10562 1)))
         (clo-app equal? kont10493 a1046210533 a1046410536)))))
  (proc
   (even? _10565 kont10493 x)
   (let ((a1046210533 '0))
     (let ((a1046310534 '2))
       (let ((f1049410535
              (make-closure lam10561 kont10493 equal? a1046210533)))
         (clo-app modulo f1049410535 x a1046310534)))))
  (proc
   (lam10566 env10567 a1046710540)
   (let ((kont10495 (env-ref env10567 3)))
     (let ((equal? (env-ref env10567 2)))
       (let ((a1046510537 (env-ref env10567 1)))
         (clo-app equal? kont10495 a1046510537 a1046710540)))))
  (proc
   (odd? _10570 kont10495 x)
   (let ((a1046510537 '1))
     (let ((a1046610538 '2))
       (let ((f1049610539
              (make-closure lam10566 a1046510537 equal? kont10495)))
         (clo-app modulo f1049610539 x a1046610538)))))
  (proc
   (list _10571 . x)
   (let ((kont1049710541 (prim car x)))
     (let ((x10542 (prim cdr x))) (clo-app kont1049710541 x10542))))
  (proc
   (call _10573 kont10499)
   (let ((a1046810543 '1)) (clo-app null? kont10499 a1046810543)))
  (proc
   (lam10574 env10575 x1046910545)
   (let ((kont10500 (env-ref env10575 1))) (clo-app kont10500 x1046910545)))
  (proc
   (brouhaha_main _10576 kont10500)
   (let ((f1050110544 (make-closure lam10574 kont10500)))
     (clo-app call f1050110544))))
