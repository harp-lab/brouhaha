'((proc
   (+ _48496 . lst)
   (let ((kont4823748337 (prim car lst)))
     (let ((lst48338 (prim cdr lst)))
       (let ((x4815148339 (apply-prim + lst48338)))
         (clo-app kont4823748337 x4815148339)))))
  (proc
   (- _48497 . lst)
   (let ((kont4823948340 (prim car lst)))
     (let ((lst48341 (prim cdr lst)))
       (let ((x4815248342 (apply-prim - lst48341)))
         (clo-app kont4823948340 x4815248342)))))
  (proc
   (* _48498 . lst)
   (let ((kont4824148343 (prim car lst)))
     (let ((lst48344 (prim cdr lst)))
       (let ((x4815348345 (apply-prim * lst48344)))
         (clo-app kont4824148343 x4815348345)))))
  (proc
   (modulo _48499 kont48243 a b)
   (let ((x4815448346 (prim modulo a b))) (clo-app kont48243 x4815448346)))
  (proc
   (/ _48500 . lst)
   (let ((kont4824448347 (prim car lst)))
     (let ((lst48348 (prim cdr lst)))
       (let ((x4815548349 (apply-prim / lst48348)))
         (clo-app kont4824448347 x4815548349)))))
  (proc
   (= _48501 . lst)
   (let ((kont4824648350 (prim car lst)))
     (let ((lst48351 (prim cdr lst)))
       (let ((x4815648352 (apply-prim = lst48351)))
         (clo-app kont4824648350 x4815648352)))))
  (proc
   (> _48502 . lst)
   (let ((kont4824848353 (prim car lst)))
     (let ((lst48354 (prim cdr lst)))
       (let ((x4815748355 (apply-prim > lst48354)))
         (clo-app kont4824848353 x4815748355)))))
  (proc
   (< _48503 . lst)
   (let ((kont4825048356 (prim car lst)))
     (let ((lst48357 (prim cdr lst)))
       (let ((x4815848358 (apply-prim < lst48357)))
         (clo-app kont4825048356 x4815848358)))))
  (proc
   (<= _48504 . lst)
   (let ((kont4825248359 (prim car lst)))
     (let ((lst48360 (prim cdr lst)))
       (let ((x4815948361 (apply-prim <= lst48360)))
         (clo-app kont4825248359 x4815948361)))))
  (proc
   (>= _48505 . lst)
   (let ((kont4825448362 (prim car lst)))
     (let ((lst48363 (prim cdr lst)))
       (let ((x4816048364 (apply-prim >= lst48363)))
         (clo-app kont4825448362 x4816048364)))))
  (proc
   (null? _48506 kont48256 x)
   (let ((x4816148365 (prim null? x))) (clo-app kont48256 x4816148365)))
  (proc
   (equal? _48507 kont48257 x y)
   (let ((x4816248366 (prim equal? x y))) (clo-app kont48257 x4816248366)))
  (proc
   (eq? _48508 kont48258 x y)
   (let ((x4816348367 (prim eq? x y))) (clo-app kont48258 x4816348367)))
  (proc
   (cons _48509 kont48259 a b)
   (let ((x4816448368 (prim cons a b))) (clo-app kont48259 x4816448368)))
  (proc
   (car _48510 kont48260 lst)
   (let ((x4816548369 (prim car lst))) (clo-app kont48260 x4816548369)))
  (proc
   (cdr _48511 kont48261 lst)
   (let ((x4816648370 (prim cdr lst))) (clo-app kont48261 x4816648370)))
  (proc
   (lam48512 env48513 a4816948374)
   (let ((equal? (env-ref env48513 3)))
     (let ((a4816748371 (env-ref env48513 2)))
       (let ((kont48262 (env-ref env48513 1)))
         (clo-app equal? kont48262 a4816748371 a4816948374)))))
  (proc
   (even? _48516 kont48262 x)
   (let ((a4816748371 '0))
     (let ((a4816848372 '2))
       (let ((f4826348373
              (make-closure lam48512 kont48262 a4816748371 equal?)))
         (clo-app modulo f4826348373 x a4816848372)))))
  (proc
   (lam48517 env48518 a4817248378)
   (let ((equal? (env-ref env48518 3)))
     (let ((a4817048375 (env-ref env48518 2)))
       (let ((kont48264 (env-ref env48518 1)))
         (clo-app equal? kont48264 a4817048375 a4817248378)))))
  (proc
   (odd? _48521 kont48264 x)
   (let ((a4817048375 '1))
     (let ((a4817148376 '2))
       (let ((f4826548377
              (make-closure lam48517 kont48264 a4817048375 equal?)))
         (clo-app modulo f4826548377 x a4817148376)))))
  (proc
   (list _48522 . x)
   (let ((kont4826648379 (prim car x)))
     (let ((x48380 (prim cdr x))) (clo-app kont4826648379 x48380))))
  (proc
   (lam48525 env48526 a4817848390)
   (let ((kont48268 (env-ref env48526 3)))
     (let ((x (env-ref env48526 2)))
       (let ((member? (env-ref env48526 1)))
         (clo-app member? kont48268 x a4817848390)))))
  (proc
   (lam48527 env48528 a4817648387)
   (let ((cdr (env-ref env48528 5)))
     (let ((kont48268 (env-ref env48528 4)))
       (let ((lst (env-ref env48528 3)))
         (let ((x (env-ref env48528 2)))
           (let ((member? (env-ref env48528 1)))
             (if a4817648387
               (let ((x4817748388 '#t)) (clo-app kont48268 x4817748388))
               (let ((f4826948389 (make-closure lam48525 member? x kont48268)))
                 (clo-app cdr f4826948389 lst)))))))))
  (proc
   (lam48529 env48530 a4817548385)
   (let ((cdr (env-ref env48530 6)))
     (let ((kont48268 (env-ref env48530 5)))
       (let ((lst (env-ref env48530 4)))
         (let ((equal? (env-ref env48530 3)))
           (let ((x (env-ref env48530 2)))
             (let ((member? (env-ref env48530 1)))
               (let ((f4827048386
                      (make-closure lam48527 member? x lst kont48268 cdr)))
                 (clo-app equal? f4827048386 a4817548385 x)))))))))
  (proc
   (lam48531 env48532 a4817348382)
   (let ((cdr (env-ref env48532 7)))
     (let ((kont48268 (env-ref env48532 6)))
       (let ((lst (env-ref env48532 5)))
         (let ((equal? (env-ref env48532 4)))
           (let ((x (env-ref env48532 3)))
             (let ((car (env-ref env48532 2)))
               (let ((member? (env-ref env48532 1)))
                 (if a4817348382
                   (let ((x4817448383 '#f)) (clo-app kont48268 x4817448383))
                   (let ((f4827148384
                          (make-closure
                           lam48529
                           member?
                           x
                           equal?
                           lst
                           kont48268
                           cdr)))
                     (clo-app car f4827148384 lst)))))))))))
  (proc
   (member? _48533 kont48268 x lst)
   (let ((f4827248381
          (make-closure lam48531 member? car x equal? lst kont48268 cdr)))
     (clo-app null? f4827248381 lst)))
  (proc
   (lam48534 env48535 a4818248398)
   (let ((a4818148396 (env-ref env48535 4)))
     (let ((kont48273 (env-ref env48535 3)))
       (let ((fun (env-ref env48535 2)))
         (let ((foldl (env-ref env48535 1)))
           (clo-app foldl kont48273 fun a4818148396 a4818248398))))))
  (proc
   (lam48536 env48537 a4818148396)
   (let ((cdr (env-ref env48537 5)))
     (let ((lst (env-ref env48537 4)))
       (let ((kont48273 (env-ref env48537 3)))
         (let ((fun (env-ref env48537 2)))
           (let ((foldl (env-ref env48537 1)))
             (let ((f4827448397
                    (make-closure lam48534 foldl fun kont48273 a4818148396)))
               (clo-app cdr f4827448397 lst))))))))
  (proc
   (lam48538 env48539 a4818048394)
   (let ((cdr (env-ref env48539 6)))
     (let ((lst (env-ref env48539 5)))
       (let ((kont48273 (env-ref env48539 4)))
         (let ((fun (env-ref env48539 3)))
           (let ((acc (env-ref env48539 2)))
             (let ((foldl (env-ref env48539 1)))
               (let ((f4827548395
                      (make-closure lam48536 foldl fun kont48273 lst cdr)))
                 (clo-app fun f4827548395 a4818048394 acc)))))))))
  (proc
   (lam48540 env48541 a4817948392)
   (let ((cdr (env-ref env48541 7)))
     (let ((lst (env-ref env48541 6)))
       (let ((kont48273 (env-ref env48541 5)))
         (let ((fun (env-ref env48541 4)))
           (let ((acc (env-ref env48541 3)))
             (let ((car (env-ref env48541 2)))
               (let ((foldl (env-ref env48541 1)))
                 (if a4817948392
                   (clo-app kont48273 acc)
                   (let ((f4827648393
                          (make-closure
                           lam48538
                           foldl
                           acc
                           fun
                           kont48273
                           lst
                           cdr)))
                     (clo-app car f4827648393 lst)))))))))))
  (proc
   (foldl _48542 kont48273 fun acc lst)
   (let ((f4827748391
          (make-closure lam48540 foldl car acc fun kont48273 lst cdr)))
     (clo-app null? f4827748391 lst)))
  (proc
   (lam48543 env48544 a4818648406)
   (let ((reverse-helper (env-ref env48544 3)))
     (let ((a4818448402 (env-ref env48544 2)))
       (let ((kont48278 (env-ref env48544 1)))
         (clo-app reverse-helper kont48278 a4818448402 a4818648406)))))
  (proc
   (lam48545 env48546 a4818548404)
   (let ((reverse-helper (env-ref env48546 5)))
     (let ((a4818448402 (env-ref env48546 4)))
       (let ((lst2 (env-ref env48546 3)))
         (let ((kont48278 (env-ref env48546 2)))
           (let ((cons (env-ref env48546 1)))
             (let ((f4827948405
                    (make-closure
                     lam48543
                     kont48278
                     a4818448402
                     reverse-helper)))
               (clo-app cons f4827948405 a4818548404 lst2))))))))
  (proc
   (lam48547 env48548 a4818448402)
   (let ((lst (env-ref env48548 6)))
     (let ((reverse-helper (env-ref env48548 5)))
       (let ((lst2 (env-ref env48548 4)))
         (let ((cons (env-ref env48548 3)))
           (let ((kont48278 (env-ref env48548 2)))
             (let ((car (env-ref env48548 1)))
               (let ((f4828048403
                      (make-closure
                       lam48545
                       cons
                       kont48278
                       lst2
                       a4818448402
                       reverse-helper)))
                 (clo-app car f4828048403 lst)))))))))
  (proc
   (lam48549 env48550 a4818348400)
   (let ((cdr (env-ref env48550 7)))
     (let ((lst (env-ref env48550 6)))
       (let ((reverse-helper (env-ref env48550 5)))
         (let ((lst2 (env-ref env48550 4)))
           (let ((cons (env-ref env48550 3)))
             (let ((kont48278 (env-ref env48550 2)))
               (let ((car (env-ref env48550 1)))
                 (if a4818348400
                   (clo-app kont48278 lst2)
                   (let ((f4828148401
                          (make-closure
                           lam48547
                           car
                           kont48278
                           cons
                           lst2
                           reverse-helper
                           lst)))
                     (clo-app cdr f4828148401 lst)))))))))))
  (proc
   (reverse-helper _48551 kont48278 lst lst2)
   (let ((f4828248399
          (make-closure
           lam48549
           car
           kont48278
           cons
           lst2
           reverse-helper
           lst
           cdr)))
     (clo-app null? f4828248399 lst)))
  (proc
   (lam48552 env48553 a4818748408)
   (let ((kont48283 (env-ref env48553 3)))
     (let ((lst (env-ref env48553 2)))
       (let ((reverse-helper (env-ref env48553 1)))
         (clo-app reverse-helper kont48283 lst a4818748408)))))
  (proc
   (reverse _48554 kont48283 lst)
   (let ((f4828448407 (make-closure lam48552 reverse-helper lst kont48283)))
     (clo-app list f4828448407)))
  (proc
   (lam48555 env48556 x4819048413)
   (let ((kont48285 (env-ref env48556 1))) (clo-app kont48285 x4819048413)))
  (proc
   (lam48557 env48558 a4819548422)
   (let ((kont48285 (env-ref env48558 4)))
     (let ((a4819148415 (env-ref env48558 3)))
       (let ((a4819348418 (env-ref env48558 2)))
         (let ((take-helper (env-ref env48558 1)))
           (clo-app
            take-helper
            kont48285
            a4819148415
            a4819348418
            a4819548422))))))
  (proc
   (lam48559 env48560 a4819448420)
   (let ((kont48285 (env-ref env48560 6)))
     (let ((a4819148415 (env-ref env48560 5)))
       (let ((a4819348418 (env-ref env48560 4)))
         (let ((cons (env-ref env48560 3)))
           (let ((take-helper (env-ref env48560 2)))
             (let ((lst2 (env-ref env48560 1)))
               (let ((f4828748421
                      (make-closure
                       lam48557
                       take-helper
                       a4819348418
                       a4819148415
                       kont48285)))
                 (clo-app cons f4828748421 a4819448420 lst2)))))))))
  (proc
   (lam48561 env48562 a4819348418)
   (let ((a4819148415 (env-ref env48562 7)))
     (let ((car (env-ref env48562 6)))
       (let ((cons (env-ref env48562 5)))
         (let ((lst (env-ref env48562 4)))
           (let ((kont48285 (env-ref env48562 3)))
             (let ((take-helper (env-ref env48562 2)))
               (let ((lst2 (env-ref env48562 1)))
                 (let ((f4828848419
                        (make-closure
                         lam48559
                         lst2
                         take-helper
                         cons
                         a4819348418
                         a4819148415
                         kont48285)))
                   (clo-app car f4828848419 lst))))))))))
  (proc
   (lam48564 env48565 a4819148415)
   (let ((cons (env-ref env48565 8)))
     (let ((- (env-ref env48565 7)))
       (let ((lst (env-ref env48565 6)))
         (let ((kont48285 (env-ref env48565 5)))
           (let ((take-helper (env-ref env48565 4)))
             (let ((lst2 (env-ref env48565 3)))
               (let ((n (env-ref env48565 2)))
                 (let ((car (env-ref env48565 1)))
                   (let ((a4819248416 '1))
                     (let ((f4828948417
                            (make-closure
                             lam48561
                             lst2
                             take-helper
                             kont48285
                             lst
                             cons
                             car
                             a4819148415)))
                       (clo-app - f4828948417 n a4819248416))))))))))))
  (proc
   (lam48566 env48567 a4818948411)
   (let ((cdr (env-ref env48567 10)))
     (let ((reverse (env-ref env48567 9)))
       (let ((cons (env-ref env48567 8)))
         (let ((- (env-ref env48567 7)))
           (let ((lst (env-ref env48567 6)))
             (let ((kont48285 (env-ref env48567 5)))
               (let ((take-helper (env-ref env48567 4)))
                 (let ((lst2 (env-ref env48567 3)))
                   (let ((n (env-ref env48567 2)))
                     (let ((car (env-ref env48567 1)))
                       (if a4818948411
                         (let ((f4828648412 (make-closure lam48555 kont48285)))
                           (clo-app reverse f4828648412 lst2))
                         (let ((f4829048414
                                (make-closure
                                 lam48564
                                 car
                                 n
                                 lst2
                                 take-helper
                                 kont48285
                                 lst
                                 -
                                 cons)))
                           (clo-app cdr f4829048414 lst))))))))))))))
  (proc
   (take-helper _48569 kont48285 lst n lst2)
   (let ((a4818848409 '0))
     (let ((f4829148410
            (make-closure
             lam48566
             car
             n
             lst2
             take-helper
             kont48285
             lst
             -
             cons
             reverse
             cdr)))
       (clo-app = f4829148410 n a4818848409))))
  (proc
   (lam48570 env48571 a4819648424)
   (let ((lst (env-ref env48571 4)))
     (let ((kont48292 (env-ref env48571 3)))
       (let ((take-helper (env-ref env48571 2)))
         (let ((n (env-ref env48571 1)))
           (clo-app take-helper kont48292 lst n a4819648424))))))
  (proc
   (take _48572 kont48292 lst n)
   (let ((f4829348423 (make-closure lam48570 n take-helper kont48292 lst)))
     (clo-app list f4829348423)))
  (proc
   (lam48574 env48575 a4820148432)
   (let ((a4819948428 (env-ref env48575 3)))
     (let ((+ (env-ref env48575 2)))
       (let ((kont48294 (env-ref env48575 1)))
         (clo-app + kont48294 a4819948428 a4820148432)))))
  (proc
   (lam48576 env48577 a4820048430)
   (let ((a4819948428 (env-ref env48577 4)))
     (let ((length (env-ref env48577 3)))
       (let ((+ (env-ref env48577 2)))
         (let ((kont48294 (env-ref env48577 1)))
           (let ((f4829548431 (make-closure lam48574 kont48294 + a4819948428)))
             (clo-app length f4829548431 a4820048430)))))))
  (proc
   (lam48579 env48580 a4819748426)
   (let ((cdr (env-ref env48580 5)))
     (let ((lst (env-ref env48580 4)))
       (let ((length (env-ref env48580 3)))
         (let ((+ (env-ref env48580 2)))
           (let ((kont48294 (env-ref env48580 1)))
             (if a4819748426
               (let ((x4819848427 '0)) (clo-app kont48294 x4819848427))
               (let ((a4819948428 '1))
                 (let ((f4829648429
                        (make-closure
                         lam48576
                         kont48294
                         +
                         length
                         a4819948428)))
                   (clo-app cdr f4829648429 lst))))))))))
  (proc
   (length _48581 kont48294 lst)
   (let ((f4829748425 (make-closure lam48579 kont48294 + length lst cdr)))
     (clo-app null? f4829748425 lst)))
  (proc
   (lam48582 env48583 x4820348436)
   (let ((kont48298 (env-ref env48583 1))) (clo-app kont48298 x4820348436)))
  (proc
   (lam48584 env48585 a4820748444)
   (let ((kont48298 (env-ref env48585 3)))
     (let ((cons (env-ref env48585 2)))
       (let ((a4820548440 (env-ref env48585 1)))
         (clo-app cons kont48298 a4820548440 a4820748444)))))
  (proc
   (lam48586 env48587 a4820648442)
   (let ((kont48298 (env-ref env48587 5)))
     (let ((map (env-ref env48587 4)))
       (let ((proc (env-ref env48587 3)))
         (let ((cons (env-ref env48587 2)))
           (let ((a4820548440 (env-ref env48587 1)))
             (let ((f4830048443
                    (make-closure lam48584 a4820548440 cons kont48298)))
               (clo-app map f4830048443 proc a4820648442))))))))
  (proc
   (lam48588 env48589 a4820548440)
   (let ((cdr (env-ref env48589 6)))
     (let ((kont48298 (env-ref env48589 5)))
       (let ((lst (env-ref env48589 4)))
         (let ((map (env-ref env48589 3)))
           (let ((proc (env-ref env48589 2)))
             (let ((cons (env-ref env48589 1)))
               (let ((f4830148441
                      (make-closure
                       lam48586
                       a4820548440
                       cons
                       proc
                       map
                       kont48298)))
                 (clo-app cdr f4830148441 lst)))))))))
  (proc
   (lam48590 env48591 a4820448438)
   (let ((cdr (env-ref env48591 6)))
     (let ((kont48298 (env-ref env48591 5)))
       (let ((lst (env-ref env48591 4)))
         (let ((map (env-ref env48591 3)))
           (let ((proc (env-ref env48591 2)))
             (let ((cons (env-ref env48591 1)))
               (let ((f4830248439
                      (make-closure lam48588 cons proc map lst kont48298 cdr)))
                 (clo-app proc f4830248439 a4820448438)))))))))
  (proc
   (lam48592 env48593 a4820248434)
   (let ((kont48298 (env-ref env48593 8)))
     (let ((lst (env-ref env48593 7)))
       (let ((map (env-ref env48593 6)))
         (let ((proc (env-ref env48593 5)))
           (let ((car (env-ref env48593 4)))
             (let ((cons (env-ref env48593 3)))
               (let ((list (env-ref env48593 2)))
                 (let ((cdr (env-ref env48593 1)))
                   (if a4820248434
                     (let ((f4829948435 (make-closure lam48582 kont48298)))
                       (clo-app list f4829948435))
                     (let ((f4830348437
                            (make-closure
                             lam48590
                             cons
                             proc
                             map
                             lst
                             kont48298
                             cdr)))
                       (clo-app car f4830348437 lst))))))))))))
  (proc
   (map _48594 kont48298 proc lst)
   (let ((f4830448433
          (make-closure lam48592 cdr list cons car proc map lst kont48298)))
     (clo-app null? f4830448433 lst)))
  (proc
   (lam48595 env48596 x4820948448)
   (let ((kont48305 (env-ref env48596 1))) (clo-app kont48305 x4820948448)))
  (proc
   (lam48597 env48598 a4821448458)
   (let ((kont48305 (env-ref env48598 3)))
     (let ((a4821248454 (env-ref env48598 2)))
       (let ((cons (env-ref env48598 1)))
         (clo-app cons kont48305 a4821248454 a4821448458)))))
  (proc
   (lam48599 env48600 a4821348456)
   (let ((op (env-ref env48600 5)))
     (let ((kont48305 (env-ref env48600 4)))
       (let ((cons (env-ref env48600 3)))
         (let ((a4821248454 (env-ref env48600 2)))
           (let ((filter (env-ref env48600 1)))
             (let ((f4830748457
                    (make-closure lam48597 cons a4821248454 kont48305)))
               (clo-app filter f4830748457 op a4821348456))))))))
  (proc
   (lam48601 env48602 a4821248454)
   (let ((cdr (env-ref env48602 6)))
     (let ((lst (env-ref env48602 5)))
       (let ((op (env-ref env48602 4)))
         (let ((kont48305 (env-ref env48602 3)))
           (let ((filter (env-ref env48602 2)))
             (let ((cons (env-ref env48602 1)))
               (let ((f4830848455
                      (make-closure
                       lam48599
                       filter
                       a4821248454
                       cons
                       kont48305
                       op)))
                 (clo-app cdr f4830848455 lst)))))))))
  (proc
   (lam48603 env48604 a4821548460)
   (let ((op (env-ref env48604 3)))
     (let ((kont48305 (env-ref env48604 2)))
       (let ((filter (env-ref env48604 1)))
         (clo-app filter kont48305 op a4821548460)))))
  (proc
   (lam48605 env48606 a4821148452)
   (let ((cdr (env-ref env48606 7)))
     (let ((lst (env-ref env48606 6)))
       (let ((op (env-ref env48606 5)))
         (let ((kont48305 (env-ref env48606 4)))
           (let ((cons (env-ref env48606 3)))
             (let ((filter (env-ref env48606 2)))
               (let ((car (env-ref env48606 1)))
                 (if a4821148452
                   (let ((f4830948453
                          (make-closure
                           lam48601
                           cons
                           filter
                           kont48305
                           op
                           lst
                           cdr)))
                     (clo-app car f4830948453 lst))
                   (let ((f4831048459
                          (make-closure lam48603 filter kont48305 op)))
                     (clo-app cdr f4831048459 lst)))))))))))
  (proc
   (lam48607 env48608 a4821048450)
   (let ((cdr (env-ref env48608 7)))
     (let ((lst (env-ref env48608 6)))
       (let ((op (env-ref env48608 5)))
         (let ((kont48305 (env-ref env48608 4)))
           (let ((cons (env-ref env48608 3)))
             (let ((filter (env-ref env48608 2)))
               (let ((car (env-ref env48608 1)))
                 (let ((f4831148451
                        (make-closure
                         lam48605
                         car
                         filter
                         cons
                         kont48305
                         op
                         lst
                         cdr)))
                   (clo-app op f4831148451 a4821048450))))))))))
  (proc
   (lam48609 env48610 a4820848446)
   (let ((lst (env-ref env48610 8)))
     (let ((op (env-ref env48610 7)))
       (let ((kont48305 (env-ref env48610 6)))
         (let ((cons (env-ref env48610 5)))
           (let ((list (env-ref env48610 4)))
             (let ((cdr (env-ref env48610 3)))
               (let ((filter (env-ref env48610 2)))
                 (let ((car (env-ref env48610 1)))
                   (if a4820848446
                     (let ((f4830648447 (make-closure lam48595 kont48305)))
                       (clo-app list f4830648447))
                     (let ((f4831248449
                            (make-closure
                             lam48607
                             car
                             filter
                             cons
                             kont48305
                             op
                             lst
                             cdr)))
                       (clo-app car f4831248449 lst))))))))))))
  (proc
   (filter _48611 kont48305 op lst)
   (let ((f4831348445
          (make-closure lam48609 car filter cdr list cons kont48305 op lst)))
     (clo-app null? f4831348445 lst)))
  (proc
   (lam48612 env48613 a4822048468)
   (let ((kont48314 (env-ref env48613 3)))
     (let ((drop (env-ref env48613 2)))
       (let ((a4821848465 (env-ref env48613 1)))
         (clo-app drop kont48314 a4821848465 a4822048468)))))
  (proc
   (lam48615 env48616 a4821848465)
   (let ((kont48314 (env-ref env48616 4)))
     (let ((drop (env-ref env48616 3)))
       (let ((n (env-ref env48616 2)))
         (let ((- (env-ref env48616 1)))
           (let ((a4821948466 '1))
             (let ((f4831548467
                    (make-closure lam48612 a4821848465 drop kont48314)))
               (clo-app - f4831548467 n a4821948466))))))))
  (proc
   (lam48617 env48618 a4821748463)
   (let ((cdr (env-ref env48618 6)))
     (let ((kont48314 (env-ref env48618 5)))
       (let ((n (env-ref env48618 4)))
         (let ((- (env-ref env48618 3)))
           (let ((lst (env-ref env48618 2)))
             (let ((drop (env-ref env48618 1)))
               (if a4821748463
                 (clo-app kont48314 lst)
                 (let ((f4831648464
                        (make-closure lam48615 - n drop kont48314)))
                   (clo-app cdr f4831648464 lst))))))))))
  (proc
   (drop _48620 kont48314 lst n)
   (let ((a4821648461 '0))
     (let ((f4831748462 (make-closure lam48617 drop lst - n kont48314 cdr)))
       (clo-app = f4831748462 n a4821648461))))
  (proc
   (lam48621 env48622 a4822448476)
   (let ((kont48318 (env-ref env48622 3)))
     (let ((proc (env-ref env48622 2)))
       (let ((a4822248472 (env-ref env48622 1)))
         (clo-app proc kont48318 a4822248472 a4822448476)))))
  (proc
   (lam48623 env48624 a4822348474)
   (let ((foldr (env-ref env48624 5)))
     (let ((kont48318 (env-ref env48624 4)))
       (let ((a4822248472 (env-ref env48624 3)))
         (let ((proc (env-ref env48624 2)))
           (let ((acc (env-ref env48624 1)))
             (let ((f4831948475
                    (make-closure lam48621 a4822248472 proc kont48318)))
               (clo-app foldr f4831948475 proc acc a4822348474))))))))
  (proc
   (lam48625 env48626 a4822248472)
   (let ((cdr (env-ref env48626 6)))
     (let ((kont48318 (env-ref env48626 5)))
       (let ((foldr (env-ref env48626 4)))
         (let ((lst (env-ref env48626 3)))
           (let ((proc (env-ref env48626 2)))
             (let ((acc (env-ref env48626 1)))
               (let ((f4832048473
                      (make-closure
                       lam48623
                       acc
                       proc
                       a4822248472
                       kont48318
                       foldr)))
                 (clo-app cdr f4832048473 lst)))))))))
  (proc
   (lam48627 env48628 a4822148470)
   (let ((cdr (env-ref env48628 7)))
     (let ((kont48318 (env-ref env48628 6)))
       (let ((car (env-ref env48628 5)))
         (let ((foldr (env-ref env48628 4)))
           (let ((lst (env-ref env48628 3)))
             (let ((proc (env-ref env48628 2)))
               (let ((acc (env-ref env48628 1)))
                 (if a4822148470
                   (clo-app kont48318 acc)
                   (let ((f4832148471
                          (make-closure
                           lam48625
                           acc
                           proc
                           lst
                           foldr
                           kont48318
                           cdr)))
                     (clo-app car f4832148471 lst)))))))))))
  (proc
   (foldr _48629 kont48318 proc acc lst)
   (let ((f4832248469
          (make-closure lam48627 acc proc lst foldr car kont48318 cdr)))
     (clo-app null? f4832248469 lst)))
  (proc
   (lam48630 env48631 a4822848484)
   (let ((a4822648480 (env-ref env48631 3)))
     (let ((kont48323 (env-ref env48631 2)))
       (let ((cons (env-ref env48631 1)))
         (clo-app cons kont48323 a4822648480 a4822848484)))))
  (proc
   (lam48632 env48633 a4822748482)
   (let ((a4822648480 (env-ref env48633 5)))
     (let ((append (env-ref env48633 4)))
       (let ((kont48323 (env-ref env48633 3)))
         (let ((lst2 (env-ref env48633 2)))
           (let ((cons (env-ref env48633 1)))
             (let ((f4832448483
                    (make-closure lam48630 cons kont48323 a4822648480)))
               (clo-app append f4832448483 a4822748482 lst2))))))))
  (proc
   (lam48634 env48635 a4822648480)
   (let ((cdr (env-ref env48635 6)))
     (let ((append (env-ref env48635 5)))
       (let ((kont48323 (env-ref env48635 4)))
         (let ((lst2 (env-ref env48635 3)))
           (let ((lst1 (env-ref env48635 2)))
             (let ((cons (env-ref env48635 1)))
               (let ((f4832548481
                      (make-closure
                       lam48632
                       cons
                       lst2
                       kont48323
                       append
                       a4822648480)))
                 (clo-app cdr f4832548481 lst1)))))))))
  (proc
   (lam48636 env48637 a4822548478)
   (let ((cdr (env-ref env48637 7)))
     (let ((append (env-ref env48637 6)))
       (let ((kont48323 (env-ref env48637 5)))
         (let ((lst2 (env-ref env48637 4)))
           (let ((cons (env-ref env48637 3)))
             (let ((lst1 (env-ref env48637 2)))
               (let ((car (env-ref env48637 1)))
                 (if a4822548478
                   (clo-app kont48323 lst2)
                   (let ((f4832648479
                          (make-closure
                           lam48634
                           cons
                           lst1
                           lst2
                           kont48323
                           append
                           cdr)))
                     (clo-app car f4832648479 lst1)))))))))))
  (proc
   (append _48638 kont48323 lst1 lst2)
   (let ((f4832748477
          (make-closure lam48636 car lst1 cons lst2 kont48323 append cdr)))
     (clo-app null? f4832748477 lst1)))
  (proc
   (hash _48639 . lst)
   (let ((kont4832848485 (prim car lst)))
     (let ((lst48486 (prim cdr lst)))
       (let ((x4822948487 (apply-prim hash lst48486)))
         (clo-app kont4832848485 x4822948487)))))
  (proc
   (hash-ref _48640 kont48330 h k)
   (let ((x4823048488 (prim hash-ref h k))) (clo-app kont48330 x4823048488)))
  (proc
   (hash-set _48641 kont48331 h k v)
   (let ((x4823148489 (prim hash-set h k v))) (clo-app kont48331 x4823148489)))
  (proc
   (hash-has-key? _48642 kont48332 h k)
   (let ((x4823248490 (prim hash-has-key? h k)))
     (clo-app kont48332 x4823248490)))
  (proc
   (hash-count _48643 kont48333 h)
   (let ((x4823348491 (prim hash-count h))) (clo-app kont48333 x4823348491)))
  (proc
   (call _48646 kont48334)
   (let ((a4823448492 '28))
     (let ((a4823548493 '8))
       (clo-app modulo kont48334 a4823448492 a4823548493))))
  (proc
   (lam48647 env48648 x4823648495)
   (let ((kont48335 (env-ref env48648 1))) (clo-app kont48335 x4823648495)))
  (proc
   (brouhaha_main _48649 kont48335)
   (let ((f4833648494 (make-closure lam48647 kont48335)))
     (clo-app call f4833648494))))
