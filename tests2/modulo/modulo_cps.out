'((define (+ . lst)
    (let ((kont4587345973 (prim car lst)))
      (let ((lst45974 (prim cdr lst)))
        (let ((x4578745975 (apply-prim + lst45974)))
          (kont4587345973 x4578745975)))))
  (define (- . lst)
    (let ((kont4587545976 (prim car lst)))
      (let ((lst45977 (prim cdr lst)))
        (let ((x4578845978 (apply-prim - lst45977)))
          (kont4587545976 x4578845978)))))
  (define (* . lst)
    (let ((kont4587745979 (prim car lst)))
      (let ((lst45980 (prim cdr lst)))
        (let ((x4578945981 (apply-prim * lst45980)))
          (kont4587745979 x4578945981)))))
  (define (modulo kont45879 a b)
    (let ((x4579045982 (prim modulo a b))) (kont45879 x4579045982)))
  (define (/ . lst)
    (let ((kont4588045983 (prim car lst)))
      (let ((lst45984 (prim cdr lst)))
        (let ((x4579145985 (apply-prim / lst45984)))
          (kont4588045983 x4579145985)))))
  (define (= . lst)
    (let ((kont4588245986 (prim car lst)))
      (let ((lst45987 (prim cdr lst)))
        (let ((x4579245988 (apply-prim = lst45987)))
          (kont4588245986 x4579245988)))))
  (define (> . lst)
    (let ((kont4588445989 (prim car lst)))
      (let ((lst45990 (prim cdr lst)))
        (let ((x4579345991 (apply-prim > lst45990)))
          (kont4588445989 x4579345991)))))
  (define (< . lst)
    (let ((kont4588645992 (prim car lst)))
      (let ((lst45993 (prim cdr lst)))
        (let ((x4579445994 (apply-prim < lst45993)))
          (kont4588645992 x4579445994)))))
  (define (<= . lst)
    (let ((kont4588845995 (prim car lst)))
      (let ((lst45996 (prim cdr lst)))
        (let ((x4579545997 (apply-prim <= lst45996)))
          (kont4588845995 x4579545997)))))
  (define (>= . lst)
    (let ((kont4589045998 (prim car lst)))
      (let ((lst45999 (prim cdr lst)))
        (let ((x4579646000 (apply-prim >= lst45999)))
          (kont4589045998 x4579646000)))))
  (define (null? kont45892 x)
    (let ((x4579746001 (prim null? x))) (kont45892 x4579746001)))
  (define (equal? kont45893 x y)
    (let ((x4579846002 (prim equal? x y))) (kont45893 x4579846002)))
  (define (eq? kont45894 x y)
    (let ((x4579946003 (prim eq? x y))) (kont45894 x4579946003)))
  (define (cons kont45895 a b)
    (let ((x4580046004 (prim cons a b))) (kont45895 x4580046004)))
  (define (car kont45896 lst)
    (let ((x4580146005 (prim car lst))) (kont45896 x4580146005)))
  (define (cdr kont45897 lst)
    (let ((x4580246006 (prim cdr lst))) (kont45897 x4580246006)))
  (define (even? kont45898 x)
    (let ((a4580346007 '0))
      (let ((a4580446008 '2))
        (let ((f4589946009
               (lambda (a4580546010)
                 (equal? kont45898 a4580346007 a4580546010))))
          (modulo f4589946009 x a4580446008)))))
  (define (odd? kont45900 x)
    (let ((a4580646011 '1))
      (let ((a4580746012 '2))
        (let ((f4590146013
               (lambda (a4580846014)
                 (equal? kont45900 a4580646011 a4580846014))))
          (modulo f4590146013 x a4580746012)))))
  (define (list . x)
    (let ((kont4590246015 (prim car x)))
      (let ((x46016 (prim cdr x))) (kont4590246015 x46016))))
  (define (member? kont45904 x lst)
    (let ((f4590846017
           (lambda (a4580946018)
             (if a4580946018
               (let ((x4581046019 '#f)) (kont45904 x4581046019))
               (let ((f4590746020
                      (lambda (a4581146021)
                        (let ((f4590646022
                               (lambda (a4581246023)
                                 (if a4581246023
                                   (let ((x4581346024 '#t))
                                     (kont45904 x4581346024))
                                   (let ((f4590546025
                                          (lambda (a4581446026)
                                            (member?
                                             kont45904
                                             x
                                             a4581446026))))
                                     (cdr f4590546025 lst))))))
                          (equal? f4590646022 a4581146021 x)))))
                 (car f4590746020 lst))))))
      (null? f4590846017 lst)))
  (define (foldl kont45909 fun acc lst)
    (let ((f4591346027
           (lambda (a4581546028)
             (if a4581546028
               (kont45909 acc)
               (let ((f4591246029
                      (lambda (a4581646030)
                        (let ((f4591146031
                               (lambda (a4581746032)
                                 (let ((f4591046033
                                        (lambda (a4581846034)
                                          (foldl
                                           kont45909
                                           fun
                                           a4581746032
                                           a4581846034))))
                                   (cdr f4591046033 lst)))))
                          (fun f4591146031 a4581646030 acc)))))
                 (car f4591246029 lst))))))
      (null? f4591346027 lst)))
  (define (reverse-helper kont45914 lst lst2)
    (let ((f4591846035
           (lambda (a4581946036)
             (if a4581946036
               (kont45914 lst2)
               (let ((f4591746037
                      (lambda (a4582046038)
                        (let ((f4591646039
                               (lambda (a4582146040)
                                 (let ((f4591546041
                                        (lambda (a4582246042)
                                          (reverse-helper
                                           kont45914
                                           a4582046038
                                           a4582246042))))
                                   (cons f4591546041 a4582146040 lst2)))))
                          (car f4591646039 lst)))))
                 (cdr f4591746037 lst))))))
      (null? f4591846035 lst)))
  (define (reverse kont45919 lst)
    (let ((f4592046043
           (lambda (a4582346044) (reverse-helper kont45919 lst a4582346044))))
      (list f4592046043)))
  (define (take-helper kont45921 lst n lst2)
    (let ((a4582446045 '0))
      (let ((f4592746046
             (lambda (a4582546047)
               (if a4582546047
                 (let ((f4592246048
                        (lambda (x4582646049) (kont45921 x4582646049))))
                   (reverse f4592246048 lst2))
                 (let ((f4592646050
                        (lambda (a4582746051)
                          (let ((a4582846052 '1))
                            (let ((f4592546053
                                   (lambda (a4582946054)
                                     (let ((f4592446055
                                            (lambda (a4583046056)
                                              (let ((f4592346057
                                                     (lambda (a4583146058)
                                                       (take-helper
                                                        kont45921
                                                        a4582746051
                                                        a4582946054
                                                        a4583146058))))
                                                (cons
                                                 f4592346057
                                                 a4583046056
                                                 lst2)))))
                                       (car f4592446055 lst)))))
                              (- f4592546053 n a4582846052))))))
                   (cdr f4592646050 lst))))))
        (= f4592746046 n a4582446045))))
  (define (take kont45928 lst n)
    (let ((f4592946059
           (lambda (a4583246060) (take-helper kont45928 lst n a4583246060))))
      (list f4592946059)))
  (define (length kont45930 lst)
    (let ((f4593346061
           (lambda (a4583346062)
             (if a4583346062
               (let ((x4583446063 '0)) (kont45930 x4583446063))
               (let ((a4583546064 '1))
                 (let ((f4593246065
                        (lambda (a4583646066)
                          (let ((f4593146067
                                 (lambda (a4583746068)
                                   (+ kont45930 a4583546064 a4583746068))))
                            (length f4593146067 a4583646066)))))
                   (cdr f4593246065 lst)))))))
      (null? f4593346061 lst)))
  (define (map kont45934 proc lst)
    (let ((f4594046069
           (lambda (a4583846070)
             (if a4583846070
               (let ((f4593546071
                      (lambda (x4583946072) (kont45934 x4583946072))))
                 (list f4593546071))
               (let ((f4593946073
                      (lambda (a4584046074)
                        (let ((f4593846075
                               (lambda (a4584146076)
                                 (let ((f4593746077
                                        (lambda (a4584246078)
                                          (let ((f4593646079
                                                 (lambda (a4584346080)
                                                   (cons
                                                    kont45934
                                                    a4584146076
                                                    a4584346080))))
                                            (map
                                             f4593646079
                                             proc
                                             a4584246078)))))
                                   (cdr f4593746077 lst)))))
                          (proc f4593846075 a4584046074)))))
                 (car f4593946073 lst))))))
      (null? f4594046069 lst)))
  (define (filter kont45941 op lst)
    (let ((f4594946081
           (lambda (a4584446082)
             (if a4584446082
               (let ((f4594246083
                      (lambda (x4584546084) (kont45941 x4584546084))))
                 (list f4594246083))
               (let ((f4594846085
                      (lambda (a4584646086)
                        (let ((f4594746087
                               (lambda (a4584746088)
                                 (if a4584746088
                                   (let ((f4594546089
                                          (lambda (a4584846090)
                                            (let ((f4594446091
                                                   (lambda (a4584946092)
                                                     (let ((f4594346093
                                                            (lambda (a4585046094)
                                                              (cons
                                                               kont45941
                                                               a4584846090
                                                               a4585046094))))
                                                       (filter
                                                        f4594346093
                                                        op
                                                        a4584946092)))))
                                              (cdr f4594446091 lst)))))
                                     (car f4594546089 lst))
                                   (let ((f4594646095
                                          (lambda (a4585146096)
                                            (filter
                                             kont45941
                                             op
                                             a4585146096))))
                                     (cdr f4594646095 lst))))))
                          (op f4594746087 a4584646086)))))
                 (car f4594846085 lst))))))
      (null? f4594946081 lst)))
  (define (drop kont45950 lst n)
    (let ((a4585246097 '0))
      (let ((f4595346098
             (lambda (a4585346099)
               (if a4585346099
                 (kont45950 lst)
                 (let ((f4595246100
                        (lambda (a4585446101)
                          (let ((a4585546102 '1))
                            (let ((f4595146103
                                   (lambda (a4585646104)
                                     (drop
                                      kont45950
                                      a4585446101
                                      a4585646104))))
                              (- f4595146103 n a4585546102))))))
                   (cdr f4595246100 lst))))))
        (= f4595346098 n a4585246097))))
  (define (foldr kont45954 proc acc lst)
    (let ((f4595846105
           (lambda (a4585746106)
             (if a4585746106
               (kont45954 acc)
               (let ((f4595746107
                      (lambda (a4585846108)
                        (let ((f4595646109
                               (lambda (a4585946110)
                                 (let ((f4595546111
                                        (lambda (a4586046112)
                                          (proc
                                           kont45954
                                           a4585846108
                                           a4586046112))))
                                   (foldr f4595546111 proc acc a4585946110)))))
                          (cdr f4595646109 lst)))))
                 (car f4595746107 lst))))))
      (null? f4595846105 lst)))
  (define (append kont45959 lst1 lst2)
    (let ((f4596346113
           (lambda (a4586146114)
             (if a4586146114
               (kont45959 lst2)
               (let ((f4596246115
                      (lambda (a4586246116)
                        (let ((f4596146117
                               (lambda (a4586346118)
                                 (let ((f4596046119
                                        (lambda (a4586446120)
                                          (cons
                                           kont45959
                                           a4586246116
                                           a4586446120))))
                                   (append f4596046119 a4586346118 lst2)))))
                          (cdr f4596146117 lst1)))))
                 (car f4596246115 lst1))))))
      (null? f4596346113 lst1)))
  (define (hash . lst)
    (let ((kont4596446121 (prim car lst)))
      (let ((lst46122 (prim cdr lst)))
        (let ((x4586546123 (apply-prim hash lst46122)))
          (kont4596446121 x4586546123)))))
  (define (hash-ref kont45966 h k)
    (let ((x4586646124 (prim hash-ref h k))) (kont45966 x4586646124)))
  (define (hash-set kont45967 h k v)
    (let ((x4586746125 (prim hash-set h k v))) (kont45967 x4586746125)))
  (define (hash-has-key? kont45968 h k)
    (let ((x4586846126 (prim hash-has-key? h k))) (kont45968 x4586846126)))
  (define (hash-count kont45969 h)
    (let ((x4586946127 (prim hash-count h))) (kont45969 x4586946127)))
  (define (call kont45970)
    (let ((a4587046128 '28))
      (let ((a4587146129 '8)) (modulo kont45970 a4587046128 a4587146129))))
  (define (brouhaha_main kont45971)
    (let ((f4597246130 (lambda (x4587246131) (kont45971 x4587246131))))
      (call f4597246130))))
