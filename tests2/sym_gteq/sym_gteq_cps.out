'((define (+ . lst)
    (let ((kont5506755167 (prim car lst)))
      (let ((lst55168 (prim cdr lst)))
        (let ((x5497855169 (apply-prim + lst55168)))
          (kont5506755167 x5497855169)))))
  (define (- . lst)
    (let ((kont5506955170 (prim car lst)))
      (let ((lst55171 (prim cdr lst)))
        (let ((x5497955172 (apply-prim - lst55171)))
          (kont5506955170 x5497955172)))))
  (define (* . lst)
    (let ((kont5507155173 (prim car lst)))
      (let ((lst55174 (prim cdr lst)))
        (let ((x5498055175 (apply-prim * lst55174)))
          (kont5507155173 x5498055175)))))
  (define (modulo kont55073 a b)
    (let ((x5498155176 (prim modulo a b))) (kont55073 x5498155176)))
  (define (/ . lst)
    (let ((kont5507455177 (prim car lst)))
      (let ((lst55178 (prim cdr lst)))
        (let ((x5498255179 (apply-prim / lst55178)))
          (kont5507455177 x5498255179)))))
  (define (= . lst)
    (let ((kont5507655180 (prim car lst)))
      (let ((lst55181 (prim cdr lst)))
        (let ((x5498355182 (apply-prim = lst55181)))
          (kont5507655180 x5498355182)))))
  (define (> . lst)
    (let ((kont5507855183 (prim car lst)))
      (let ((lst55184 (prim cdr lst)))
        (let ((x5498455185 (apply-prim > lst55184)))
          (kont5507855183 x5498455185)))))
  (define (< . lst)
    (let ((kont5508055186 (prim car lst)))
      (let ((lst55187 (prim cdr lst)))
        (let ((x5498555188 (apply-prim < lst55187)))
          (kont5508055186 x5498555188)))))
  (define (<= . lst)
    (let ((kont5508255189 (prim car lst)))
      (let ((lst55190 (prim cdr lst)))
        (let ((x5498655191 (apply-prim <= lst55190)))
          (kont5508255189 x5498655191)))))
  (define (>= . lst)
    (let ((kont5508455192 (prim car lst)))
      (let ((lst55193 (prim cdr lst)))
        (let ((x5498755194 (apply-prim >= lst55193)))
          (kont5508455192 x5498755194)))))
  (define (null? kont55086 x)
    (let ((x5498855195 (prim null? x))) (kont55086 x5498855195)))
  (define (equal? kont55087 x y)
    (let ((x5498955196 (prim equal? x y))) (kont55087 x5498955196)))
  (define (eq? kont55088 x y)
    (let ((x5499055197 (prim eq? x y))) (kont55088 x5499055197)))
  (define (cons kont55089 a b)
    (let ((x5499155198 (prim cons a b))) (kont55089 x5499155198)))
  (define (car kont55090 lst)
    (let ((x5499255199 (prim car lst))) (kont55090 x5499255199)))
  (define (cdr kont55091 lst)
    (let ((x5499355200 (prim cdr lst))) (kont55091 x5499355200)))
  (define (even? kont55092 x)
    (let ((a5499455201 '0))
      (let ((a5499555202 '2))
        (let ((f5509355203
               (lambda (a5499655204)
                 (equal? kont55092 a5499455201 a5499655204))))
          (modulo f5509355203 x a5499555202)))))
  (define (odd? kont55094 x)
    (let ((a5499755205 '1))
      (let ((a5499855206 '2))
        (let ((f5509555207
               (lambda (a5499955208)
                 (equal? kont55094 a5499755205 a5499955208))))
          (modulo f5509555207 x a5499855206)))))
  (define (list . x)
    (let ((kont5509655209 (prim car x)))
      (let ((x55210 (prim cdr x))) (kont5509655209 x55210))))
  (define (member? kont55098 x lst)
    (let ((f5510255211
           (lambda (a5500055212)
             (if a5500055212
               (let ((x5500155213 '#f)) (kont55098 x5500155213))
               (let ((f5510155214
                      (lambda (a5500255215)
                        (let ((f5510055216
                               (lambda (a5500355217)
                                 (if a5500355217
                                   (let ((x5500455218 '#t))
                                     (kont55098 x5500455218))
                                   (let ((f5509955219
                                          (lambda (a5500555220)
                                            (member?
                                             kont55098
                                             x
                                             a5500555220))))
                                     (cdr f5509955219 lst))))))
                          (equal? f5510055216 a5500255215 x)))))
                 (car f5510155214 lst))))))
      (null? f5510255211 lst)))
  (define (foldl kont55103 fun acc lst)
    (let ((f5510755221
           (lambda (a5500655222)
             (if a5500655222
               (kont55103 acc)
               (let ((f5510655223
                      (lambda (a5500755224)
                        (let ((f5510555225
                               (lambda (a5500855226)
                                 (let ((f5510455227
                                        (lambda (a5500955228)
                                          (foldl
                                           kont55103
                                           fun
                                           a5500855226
                                           a5500955228))))
                                   (cdr f5510455227 lst)))))
                          (fun f5510555225 a5500755224 acc)))))
                 (car f5510655223 lst))))))
      (null? f5510755221 lst)))
  (define (reverse-helper kont55108 lst lst2)
    (let ((f5511255229
           (lambda (a5501055230)
             (if a5501055230
               (kont55108 lst2)
               (let ((f5511155231
                      (lambda (a5501155232)
                        (let ((f5511055233
                               (lambda (a5501255234)
                                 (let ((f5510955235
                                        (lambda (a5501355236)
                                          (reverse-helper
                                           kont55108
                                           a5501155232
                                           a5501355236))))
                                   (cons f5510955235 a5501255234 lst2)))))
                          (car f5511055233 lst)))))
                 (cdr f5511155231 lst))))))
      (null? f5511255229 lst)))
  (define (reverse kont55113 lst)
    (let ((f5511455237
           (lambda (a5501455238) (reverse-helper kont55113 lst a5501455238))))
      (list f5511455237)))
  (define (take-helper kont55115 lst n lst2)
    (let ((a5501555239 '0))
      (let ((f5512155240
             (lambda (a5501655241)
               (if a5501655241
                 (let ((f5511655242
                        (lambda (x5501755243) (kont55115 x5501755243))))
                   (reverse f5511655242 lst2))
                 (let ((f5512055244
                        (lambda (a5501855245)
                          (let ((a5501955246 '1))
                            (let ((f5511955247
                                   (lambda (a5502055248)
                                     (let ((f5511855249
                                            (lambda (a5502155250)
                                              (let ((f5511755251
                                                     (lambda (a5502255252)
                                                       (take-helper
                                                        kont55115
                                                        a5501855245
                                                        a5502055248
                                                        a5502255252))))
                                                (cons
                                                 f5511755251
                                                 a5502155250
                                                 lst2)))))
                                       (car f5511855249 lst)))))
                              (- f5511955247 n a5501955246))))))
                   (cdr f5512055244 lst))))))
        (= f5512155240 n a5501555239))))
  (define (take kont55122 lst n)
    (let ((f5512355253
           (lambda (a5502355254) (take-helper kont55122 lst n a5502355254))))
      (list f5512355253)))
  (define (length kont55124 lst)
    (let ((f5512755255
           (lambda (a5502455256)
             (if a5502455256
               (let ((x5502555257 '0)) (kont55124 x5502555257))
               (let ((a5502655258 '1))
                 (let ((f5512655259
                        (lambda (a5502755260)
                          (let ((f5512555261
                                 (lambda (a5502855262)
                                   (+ kont55124 a5502655258 a5502855262))))
                            (length f5512555261 a5502755260)))))
                   (cdr f5512655259 lst)))))))
      (null? f5512755255 lst)))
  (define (map kont55128 proc lst)
    (let ((f5513455263
           (lambda (a5502955264)
             (if a5502955264
               (let ((f5512955265
                      (lambda (x5503055266) (kont55128 x5503055266))))
                 (list f5512955265))
               (let ((f5513355267
                      (lambda (a5503155268)
                        (let ((f5513255269
                               (lambda (a5503255270)
                                 (let ((f5513155271
                                        (lambda (a5503355272)
                                          (let ((f5513055273
                                                 (lambda (a5503455274)
                                                   (cons
                                                    kont55128
                                                    a5503255270
                                                    a5503455274))))
                                            (map
                                             f5513055273
                                             proc
                                             a5503355272)))))
                                   (cdr f5513155271 lst)))))
                          (proc f5513255269 a5503155268)))))
                 (car f5513355267 lst))))))
      (null? f5513455263 lst)))
  (define (filter kont55135 op lst)
    (let ((f5514355275
           (lambda (a5503555276)
             (if a5503555276
               (let ((f5513655277
                      (lambda (x5503655278) (kont55135 x5503655278))))
                 (list f5513655277))
               (let ((f5514255279
                      (lambda (a5503755280)
                        (let ((f5514155281
                               (lambda (a5503855282)
                                 (if a5503855282
                                   (let ((f5513955283
                                          (lambda (a5503955284)
                                            (let ((f5513855285
                                                   (lambda (a5504055286)
                                                     (let ((f5513755287
                                                            (lambda (a5504155288)
                                                              (cons
                                                               kont55135
                                                               a5503955284
                                                               a5504155288))))
                                                       (filter
                                                        f5513755287
                                                        op
                                                        a5504055286)))))
                                              (cdr f5513855285 lst)))))
                                     (car f5513955283 lst))
                                   (let ((f5514055289
                                          (lambda (a5504255290)
                                            (filter
                                             kont55135
                                             op
                                             a5504255290))))
                                     (cdr f5514055289 lst))))))
                          (op f5514155281 a5503755280)))))
                 (car f5514255279 lst))))))
      (null? f5514355275 lst)))
  (define (drop kont55144 lst n)
    (let ((a5504355291 '0))
      (let ((f5514755292
             (lambda (a5504455293)
               (if a5504455293
                 (kont55144 lst)
                 (let ((f5514655294
                        (lambda (a5504555295)
                          (let ((a5504655296 '1))
                            (let ((f5514555297
                                   (lambda (a5504755298)
                                     (drop
                                      kont55144
                                      a5504555295
                                      a5504755298))))
                              (- f5514555297 n a5504655296))))))
                   (cdr f5514655294 lst))))))
        (= f5514755292 n a5504355291))))
  (define (foldr kont55148 proc acc lst)
    (let ((f5515255299
           (lambda (a5504855300)
             (if a5504855300
               (kont55148 acc)
               (let ((f5515155301
                      (lambda (a5504955302)
                        (let ((f5515055303
                               (lambda (a5505055304)
                                 (let ((f5514955305
                                        (lambda (a5505155306)
                                          (proc
                                           kont55148
                                           a5504955302
                                           a5505155306))))
                                   (foldr f5514955305 proc acc a5505055304)))))
                          (cdr f5515055303 lst)))))
                 (car f5515155301 lst))))))
      (null? f5515255299 lst)))
  (define (append kont55153 lst1 lst2)
    (let ((f5515755307
           (lambda (a5505255308)
             (if a5505255308
               (kont55153 lst2)
               (let ((f5515655309
                      (lambda (a5505355310)
                        (let ((f5515555311
                               (lambda (a5505455312)
                                 (let ((f5515455313
                                        (lambda (a5505555314)
                                          (cons
                                           kont55153
                                           a5505355310
                                           a5505555314))))
                                   (append f5515455313 a5505455312 lst2)))))
                          (cdr f5515555311 lst1)))))
                 (car f5515655309 lst1))))))
      (null? f5515755307 lst1)))
  (define (hash . lst)
    (let ((kont5515855315 (prim car lst)))
      (let ((lst55316 (prim cdr lst)))
        (let ((x5505655317 (apply-prim hash lst55316)))
          (kont5515855315 x5505655317)))))
  (define (hash-ref kont55160 h k)
    (let ((x5505755318 (prim hash-ref h k))) (kont55160 x5505755318)))
  (define (hash-set kont55161 h k v)
    (let ((x5505855319 (prim hash-set h k v))) (kont55161 x5505855319)))
  (define (hash-has-key? kont55162 h k)
    (let ((x5505955320 (prim hash-has-key? h k))) (kont55162 x5505955320)))
  (define (hash-count kont55163 h)
    (let ((x5506055321 (prim hash-count h))) (kont55163 x5506055321)))
  (define (call kont55164)
    (let ((a5506155322 '100))
      (let ((a5506255323 '90))
        (let ((a5506355324 '80))
          (let ((a5506455325 '70))
            (let ((a5506555326 '60))
              (>=
               kont55164
               a5506155322
               a5506255323
               a5506355324
               a5506455325
               a5506555326)))))))
  (define (brouhaha_main kont55165)
    (let ((f5516655327 (lambda (x5506655328) (kont55165 x5506655328))))
      (call f5516655327))))
