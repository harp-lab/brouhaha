'((define (+ . lst)
    (let ((kont5350753607 (prim car lst)))
      (let ((lst53608 (prim cdr lst)))
        (let ((x5341853609 (apply-prim + lst53608)))
          (kont5350753607 x5341853609)))))
  (define (- . lst)
    (let ((kont5350953610 (prim car lst)))
      (let ((lst53611 (prim cdr lst)))
        (let ((x5341953612 (apply-prim - lst53611)))
          (kont5350953610 x5341953612)))))
  (define (* . lst)
    (let ((kont5351153613 (prim car lst)))
      (let ((lst53614 (prim cdr lst)))
        (let ((x5342053615 (apply-prim * lst53614)))
          (kont5351153613 x5342053615)))))
  (define (modulo kont53513 a b)
    (let ((x5342153616 (prim modulo a b))) (kont53513 x5342153616)))
  (define (/ . lst)
    (let ((kont5351453617 (prim car lst)))
      (let ((lst53618 (prim cdr lst)))
        (let ((x5342253619 (apply-prim / lst53618)))
          (kont5351453617 x5342253619)))))
  (define (= . lst)
    (let ((kont5351653620 (prim car lst)))
      (let ((lst53621 (prim cdr lst)))
        (let ((x5342353622 (apply-prim = lst53621)))
          (kont5351653620 x5342353622)))))
  (define (> . lst)
    (let ((kont5351853623 (prim car lst)))
      (let ((lst53624 (prim cdr lst)))
        (let ((x5342453625 (apply-prim > lst53624)))
          (kont5351853623 x5342453625)))))
  (define (< . lst)
    (let ((kont5352053626 (prim car lst)))
      (let ((lst53627 (prim cdr lst)))
        (let ((x5342553628 (apply-prim < lst53627)))
          (kont5352053626 x5342553628)))))
  (define (<= . lst)
    (let ((kont5352253629 (prim car lst)))
      (let ((lst53630 (prim cdr lst)))
        (let ((x5342653631 (apply-prim <= lst53630)))
          (kont5352253629 x5342653631)))))
  (define (>= . lst)
    (let ((kont5352453632 (prim car lst)))
      (let ((lst53633 (prim cdr lst)))
        (let ((x5342753634 (apply-prim >= lst53633)))
          (kont5352453632 x5342753634)))))
  (define (null? kont53526 x)
    (let ((x5342853635 (prim null? x))) (kont53526 x5342853635)))
  (define (equal? kont53527 x y)
    (let ((x5342953636 (prim equal? x y))) (kont53527 x5342953636)))
  (define (eq? kont53528 x y)
    (let ((x5343053637 (prim eq? x y))) (kont53528 x5343053637)))
  (define (cons kont53529 a b)
    (let ((x5343153638 (prim cons a b))) (kont53529 x5343153638)))
  (define (car kont53530 lst)
    (let ((x5343253639 (prim car lst))) (kont53530 x5343253639)))
  (define (cdr kont53531 lst)
    (let ((x5343353640 (prim cdr lst))) (kont53531 x5343353640)))
  (define (even? kont53532 x)
    (let ((a5343453641 '0))
      (let ((a5343553642 '2))
        (let ((f5353353643
               (lambda (a5343653644)
                 (equal? kont53532 a5343453641 a5343653644))))
          (modulo f5353353643 x a5343553642)))))
  (define (odd? kont53534 x)
    (let ((a5343753645 '1))
      (let ((a5343853646 '2))
        (let ((f5353553647
               (lambda (a5343953648)
                 (equal? kont53534 a5343753645 a5343953648))))
          (modulo f5353553647 x a5343853646)))))
  (define (list . x)
    (let ((kont5353653649 (prim car x)))
      (let ((x53650 (prim cdr x))) (kont5353653649 x53650))))
  (define (member? kont53538 x lst)
    (let ((f5354253651
           (lambda (a5344053652)
             (if a5344053652
               (let ((x5344153653 '#f)) (kont53538 x5344153653))
               (let ((f5354153654
                      (lambda (a5344253655)
                        (let ((f5354053656
                               (lambda (a5344353657)
                                 (if a5344353657
                                   (let ((x5344453658 '#t))
                                     (kont53538 x5344453658))
                                   (let ((f5353953659
                                          (lambda (a5344553660)
                                            (member?
                                             kont53538
                                             x
                                             a5344553660))))
                                     (cdr f5353953659 lst))))))
                          (equal? f5354053656 a5344253655 x)))))
                 (car f5354153654 lst))))))
      (null? f5354253651 lst)))
  (define (foldl kont53543 fun acc lst)
    (let ((f5354753661
           (lambda (a5344653662)
             (if a5344653662
               (kont53543 acc)
               (let ((f5354653663
                      (lambda (a5344753664)
                        (let ((f5354553665
                               (lambda (a5344853666)
                                 (let ((f5354453667
                                        (lambda (a5344953668)
                                          (foldl
                                           kont53543
                                           fun
                                           a5344853666
                                           a5344953668))))
                                   (cdr f5354453667 lst)))))
                          (fun f5354553665 a5344753664 acc)))))
                 (car f5354653663 lst))))))
      (null? f5354753661 lst)))
  (define (reverse-helper kont53548 lst lst2)
    (let ((f5355253669
           (lambda (a5345053670)
             (if a5345053670
               (kont53548 lst2)
               (let ((f5355153671
                      (lambda (a5345153672)
                        (let ((f5355053673
                               (lambda (a5345253674)
                                 (let ((f5354953675
                                        (lambda (a5345353676)
                                          (reverse-helper
                                           kont53548
                                           a5345153672
                                           a5345353676))))
                                   (cons f5354953675 a5345253674 lst2)))))
                          (car f5355053673 lst)))))
                 (cdr f5355153671 lst))))))
      (null? f5355253669 lst)))
  (define (reverse kont53553 lst)
    (let ((f5355453677
           (lambda (a5345453678) (reverse-helper kont53553 lst a5345453678))))
      (list f5355453677)))
  (define (take-helper kont53555 lst n lst2)
    (let ((a5345553679 '0))
      (let ((f5356153680
             (lambda (a5345653681)
               (if a5345653681
                 (let ((f5355653682
                        (lambda (x5345753683) (kont53555 x5345753683))))
                   (reverse f5355653682 lst2))
                 (let ((f5356053684
                        (lambda (a5345853685)
                          (let ((a5345953686 '1))
                            (let ((f5355953687
                                   (lambda (a5346053688)
                                     (let ((f5355853689
                                            (lambda (a5346153690)
                                              (let ((f5355753691
                                                     (lambda (a5346253692)
                                                       (take-helper
                                                        kont53555
                                                        a5345853685
                                                        a5346053688
                                                        a5346253692))))
                                                (cons
                                                 f5355753691
                                                 a5346153690
                                                 lst2)))))
                                       (car f5355853689 lst)))))
                              (- f5355953687 n a5345953686))))))
                   (cdr f5356053684 lst))))))
        (= f5356153680 n a5345553679))))
  (define (take kont53562 lst n)
    (let ((f5356353693
           (lambda (a5346353694) (take-helper kont53562 lst n a5346353694))))
      (list f5356353693)))
  (define (length kont53564 lst)
    (let ((f5356753695
           (lambda (a5346453696)
             (if a5346453696
               (let ((x5346553697 '0)) (kont53564 x5346553697))
               (let ((a5346653698 '1))
                 (let ((f5356653699
                        (lambda (a5346753700)
                          (let ((f5356553701
                                 (lambda (a5346853702)
                                   (+ kont53564 a5346653698 a5346853702))))
                            (length f5356553701 a5346753700)))))
                   (cdr f5356653699 lst)))))))
      (null? f5356753695 lst)))
  (define (map kont53568 proc lst)
    (let ((f5357453703
           (lambda (a5346953704)
             (if a5346953704
               (let ((f5356953705
                      (lambda (x5347053706) (kont53568 x5347053706))))
                 (list f5356953705))
               (let ((f5357353707
                      (lambda (a5347153708)
                        (let ((f5357253709
                               (lambda (a5347253710)
                                 (let ((f5357153711
                                        (lambda (a5347353712)
                                          (let ((f5357053713
                                                 (lambda (a5347453714)
                                                   (cons
                                                    kont53568
                                                    a5347253710
                                                    a5347453714))))
                                            (map
                                             f5357053713
                                             proc
                                             a5347353712)))))
                                   (cdr f5357153711 lst)))))
                          (proc f5357253709 a5347153708)))))
                 (car f5357353707 lst))))))
      (null? f5357453703 lst)))
  (define (filter kont53575 op lst)
    (let ((f5358353715
           (lambda (a5347553716)
             (if a5347553716
               (let ((f5357653717
                      (lambda (x5347653718) (kont53575 x5347653718))))
                 (list f5357653717))
               (let ((f5358253719
                      (lambda (a5347753720)
                        (let ((f5358153721
                               (lambda (a5347853722)
                                 (if a5347853722
                                   (let ((f5357953723
                                          (lambda (a5347953724)
                                            (let ((f5357853725
                                                   (lambda (a5348053726)
                                                     (let ((f5357753727
                                                            (lambda (a5348153728)
                                                              (cons
                                                               kont53575
                                                               a5347953724
                                                               a5348153728))))
                                                       (filter
                                                        f5357753727
                                                        op
                                                        a5348053726)))))
                                              (cdr f5357853725 lst)))))
                                     (car f5357953723 lst))
                                   (let ((f5358053729
                                          (lambda (a5348253730)
                                            (filter
                                             kont53575
                                             op
                                             a5348253730))))
                                     (cdr f5358053729 lst))))))
                          (op f5358153721 a5347753720)))))
                 (car f5358253719 lst))))))
      (null? f5358353715 lst)))
  (define (drop kont53584 lst n)
    (let ((a5348353731 '0))
      (let ((f5358753732
             (lambda (a5348453733)
               (if a5348453733
                 (kont53584 lst)
                 (let ((f5358653734
                        (lambda (a5348553735)
                          (let ((a5348653736 '1))
                            (let ((f5358553737
                                   (lambda (a5348753738)
                                     (drop
                                      kont53584
                                      a5348553735
                                      a5348753738))))
                              (- f5358553737 n a5348653736))))))
                   (cdr f5358653734 lst))))))
        (= f5358753732 n a5348353731))))
  (define (foldr kont53588 proc acc lst)
    (let ((f5359253739
           (lambda (a5348853740)
             (if a5348853740
               (kont53588 acc)
               (let ((f5359153741
                      (lambda (a5348953742)
                        (let ((f5359053743
                               (lambda (a5349053744)
                                 (let ((f5358953745
                                        (lambda (a5349153746)
                                          (proc
                                           kont53588
                                           a5348953742
                                           a5349153746))))
                                   (foldr f5358953745 proc acc a5349053744)))))
                          (cdr f5359053743 lst)))))
                 (car f5359153741 lst))))))
      (null? f5359253739 lst)))
  (define (append kont53593 lst1 lst2)
    (let ((f5359753747
           (lambda (a5349253748)
             (if a5349253748
               (kont53593 lst2)
               (let ((f5359653749
                      (lambda (a5349353750)
                        (let ((f5359553751
                               (lambda (a5349453752)
                                 (let ((f5359453753
                                        (lambda (a5349553754)
                                          (cons
                                           kont53593
                                           a5349353750
                                           a5349553754))))
                                   (append f5359453753 a5349453752 lst2)))))
                          (cdr f5359553751 lst1)))))
                 (car f5359653749 lst1))))))
      (null? f5359753747 lst1)))
  (define (hash . lst)
    (let ((kont5359853755 (prim car lst)))
      (let ((lst53756 (prim cdr lst)))
        (let ((x5349653757 (apply-prim hash lst53756)))
          (kont5359853755 x5349653757)))))
  (define (hash-ref kont53600 h k)
    (let ((x5349753758 (prim hash-ref h k))) (kont53600 x5349753758)))
  (define (hash-set kont53601 h k v)
    (let ((x5349853759 (prim hash-set h k v))) (kont53601 x5349853759)))
  (define (hash-has-key? kont53602 h k)
    (let ((x5349953760 (prim hash-has-key? h k))) (kont53602 x5349953760)))
  (define (hash-count kont53603 h)
    (let ((x5350053761 (prim hash-count h))) (kont53603 x5350053761)))
  (define (call kont53604)
    (let ((a5350153762 '100))
      (let ((a5350253763 '90))
        (let ((a5350353764 '80))
          (let ((a5350453765 '70))
            (let ((a5350553766 '60))
              (>=
               kont53604
               a5350153762
               a5350253763
               a5350353764
               a5350453765
               a5350553766)))))))
  (define (brouhaha_main kont53605)
    (let ((f5360653767 (lambda (x5350653768) (kont53605 x5350653768))))
      (call f5360653767))))
