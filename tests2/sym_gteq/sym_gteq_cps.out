'((define (+ . lst)
    (let ((kont5704357143 (prim car lst)))
      (let ((lst57144 (prim cdr lst)))
        (let ((x5695457145 (apply-prim + lst57144)))
          (kont5704357143 x5695457145)))))
  (define (- . lst)
    (let ((kont5704557146 (prim car lst)))
      (let ((lst57147 (prim cdr lst)))
        (let ((x5695557148 (apply-prim - lst57147)))
          (kont5704557146 x5695557148)))))
  (define (* . lst)
    (let ((kont5704757149 (prim car lst)))
      (let ((lst57150 (prim cdr lst)))
        (let ((x5695657151 (apply-prim * lst57150)))
          (kont5704757149 x5695657151)))))
  (define (modulo kont57049 a b)
    (let ((x5695757152 (prim modulo a b))) (kont57049 x5695757152)))
  (define (/ . lst)
    (let ((kont5705057153 (prim car lst)))
      (let ((lst57154 (prim cdr lst)))
        (let ((x5695857155 (apply-prim / lst57154)))
          (kont5705057153 x5695857155)))))
  (define (= . lst)
    (let ((kont5705257156 (prim car lst)))
      (let ((lst57157 (prim cdr lst)))
        (let ((x5695957158 (apply-prim = lst57157)))
          (kont5705257156 x5695957158)))))
  (define (> . lst)
    (let ((kont5705457159 (prim car lst)))
      (let ((lst57160 (prim cdr lst)))
        (let ((x5696057161 (apply-prim > lst57160)))
          (kont5705457159 x5696057161)))))
  (define (< . lst)
    (let ((kont5705657162 (prim car lst)))
      (let ((lst57163 (prim cdr lst)))
        (let ((x5696157164 (apply-prim < lst57163)))
          (kont5705657162 x5696157164)))))
  (define (<= . lst)
    (let ((kont5705857165 (prim car lst)))
      (let ((lst57166 (prim cdr lst)))
        (let ((x5696257167 (apply-prim <= lst57166)))
          (kont5705857165 x5696257167)))))
  (define (>= . lst)
    (let ((kont5706057168 (prim car lst)))
      (let ((lst57169 (prim cdr lst)))
        (let ((x5696357170 (apply-prim >= lst57169)))
          (kont5706057168 x5696357170)))))
  (define (null? kont57062 x)
    (let ((x5696457171 (prim null? x))) (kont57062 x5696457171)))
  (define (equal? kont57063 x y)
    (let ((x5696557172 (prim equal? x y))) (kont57063 x5696557172)))
  (define (eq? kont57064 x y)
    (let ((x5696657173 (prim eq? x y))) (kont57064 x5696657173)))
  (define (cons kont57065 a b)
    (let ((x5696757174 (prim cons a b))) (kont57065 x5696757174)))
  (define (car kont57066 lst)
    (let ((x5696857175 (prim car lst))) (kont57066 x5696857175)))
  (define (cdr kont57067 lst)
    (let ((x5696957176 (prim cdr lst))) (kont57067 x5696957176)))
  (define (even? kont57068 x)
    (let ((a5697057177 '0))
      (let ((a5697157178 '2))
        (let ((f5706957179
               (lambda (a5697257180)
                 (equal? kont57068 a5697057177 a5697257180))))
          (modulo f5706957179 x a5697157178)))))
  (define (odd? kont57070 x)
    (let ((a5697357181 '1))
      (let ((a5697457182 '2))
        (let ((f5707157183
               (lambda (a5697557184)
                 (equal? kont57070 a5697357181 a5697557184))))
          (modulo f5707157183 x a5697457182)))))
  (define (list . x)
    (let ((kont5707257185 (prim car x)))
      (let ((x57186 (prim cdr x))) (kont5707257185 x57186))))
  (define (member? kont57074 x lst)
    (let ((f5707857187
           (lambda (a5697657188)
             (if a5697657188
               (let ((x5697757189 '#f)) (kont57074 x5697757189))
               (let ((f5707757190
                      (lambda (a5697857191)
                        (let ((f5707657192
                               (lambda (a5697957193)
                                 (if a5697957193
                                   (let ((x5698057194 '#t))
                                     (kont57074 x5698057194))
                                   (let ((f5707557195
                                          (lambda (a5698157196)
                                            (member?
                                             kont57074
                                             x
                                             a5698157196))))
                                     (cdr f5707557195 lst))))))
                          (equal? f5707657192 a5697857191 x)))))
                 (car f5707757190 lst))))))
      (null? f5707857187 lst)))
  (define (foldl kont57079 fun acc lst)
    (let ((f5708357197
           (lambda (a5698257198)
             (if a5698257198
               (kont57079 acc)
               (let ((f5708257199
                      (lambda (a5698357200)
                        (let ((f5708157201
                               (lambda (a5698457202)
                                 (let ((f5708057203
                                        (lambda (a5698557204)
                                          (foldl
                                           kont57079
                                           fun
                                           a5698457202
                                           a5698557204))))
                                   (cdr f5708057203 lst)))))
                          (fun f5708157201 a5698357200 acc)))))
                 (car f5708257199 lst))))))
      (null? f5708357197 lst)))
  (define (reverse-helper kont57084 lst lst2)
    (let ((f5708857205
           (lambda (a5698657206)
             (if a5698657206
               (kont57084 lst2)
               (let ((f5708757207
                      (lambda (a5698757208)
                        (let ((f5708657209
                               (lambda (a5698857210)
                                 (let ((f5708557211
                                        (lambda (a5698957212)
                                          (reverse-helper
                                           kont57084
                                           a5698757208
                                           a5698957212))))
                                   (cons f5708557211 a5698857210 lst2)))))
                          (car f5708657209 lst)))))
                 (cdr f5708757207 lst))))))
      (null? f5708857205 lst)))
  (define (reverse kont57089 lst)
    (let ((f5709057213
           (lambda (a5699057214) (reverse-helper kont57089 lst a5699057214))))
      (list f5709057213)))
  (define (take-helper kont57091 lst n lst2)
    (let ((a5699157215 '0))
      (let ((f5709757216
             (lambda (a5699257217)
               (if a5699257217
                 (let ((f5709257218
                        (lambda (x5699357219) (kont57091 x5699357219))))
                   (reverse f5709257218 lst2))
                 (let ((f5709657220
                        (lambda (a5699457221)
                          (let ((a5699557222 '1))
                            (let ((f5709557223
                                   (lambda (a5699657224)
                                     (let ((f5709457225
                                            (lambda (a5699757226)
                                              (let ((f5709357227
                                                     (lambda (a5699857228)
                                                       (take-helper
                                                        kont57091
                                                        a5699457221
                                                        a5699657224
                                                        a5699857228))))
                                                (cons
                                                 f5709357227
                                                 a5699757226
                                                 lst2)))))
                                       (car f5709457225 lst)))))
                              (- f5709557223 n a5699557222))))))
                   (cdr f5709657220 lst))))))
        (= f5709757216 n a5699157215))))
  (define (take kont57098 lst n)
    (let ((f5709957229
           (lambda (a5699957230) (take-helper kont57098 lst n a5699957230))))
      (list f5709957229)))
  (define (length kont57100 lst)
    (let ((f5710357231
           (lambda (a5700057232)
             (if a5700057232
               (let ((x5700157233 '0)) (kont57100 x5700157233))
               (let ((a5700257234 '1))
                 (let ((f5710257235
                        (lambda (a5700357236)
                          (let ((f5710157237
                                 (lambda (a5700457238)
                                   (+ kont57100 a5700257234 a5700457238))))
                            (length f5710157237 a5700357236)))))
                   (cdr f5710257235 lst)))))))
      (null? f5710357231 lst)))
  (define (map kont57104 proc lst)
    (let ((f5711057239
           (lambda (a5700557240)
             (if a5700557240
               (let ((f5710557241
                      (lambda (x5700657242) (kont57104 x5700657242))))
                 (list f5710557241))
               (let ((f5710957243
                      (lambda (a5700757244)
                        (let ((f5710857245
                               (lambda (a5700857246)
                                 (let ((f5710757247
                                        (lambda (a5700957248)
                                          (let ((f5710657249
                                                 (lambda (a5701057250)
                                                   (cons
                                                    kont57104
                                                    a5700857246
                                                    a5701057250))))
                                            (map
                                             f5710657249
                                             proc
                                             a5700957248)))))
                                   (cdr f5710757247 lst)))))
                          (proc f5710857245 a5700757244)))))
                 (car f5710957243 lst))))))
      (null? f5711057239 lst)))
  (define (filter kont57111 op lst)
    (let ((f5711957251
           (lambda (a5701157252)
             (if a5701157252
               (let ((f5711257253
                      (lambda (x5701257254) (kont57111 x5701257254))))
                 (list f5711257253))
               (let ((f5711857255
                      (lambda (a5701357256)
                        (let ((f5711757257
                               (lambda (a5701457258)
                                 (if a5701457258
                                   (let ((f5711557259
                                          (lambda (a5701557260)
                                            (let ((f5711457261
                                                   (lambda (a5701657262)
                                                     (let ((f5711357263
                                                            (lambda (a5701757264)
                                                              (cons
                                                               kont57111
                                                               a5701557260
                                                               a5701757264))))
                                                       (filter
                                                        f5711357263
                                                        op
                                                        a5701657262)))))
                                              (cdr f5711457261 lst)))))
                                     (car f5711557259 lst))
                                   (let ((f5711657265
                                          (lambda (a5701857266)
                                            (filter
                                             kont57111
                                             op
                                             a5701857266))))
                                     (cdr f5711657265 lst))))))
                          (op f5711757257 a5701357256)))))
                 (car f5711857255 lst))))))
      (null? f5711957251 lst)))
  (define (drop kont57120 lst n)
    (let ((a5701957267 '0))
      (let ((f5712357268
             (lambda (a5702057269)
               (if a5702057269
                 (kont57120 lst)
                 (let ((f5712257270
                        (lambda (a5702157271)
                          (let ((a5702257272 '1))
                            (let ((f5712157273
                                   (lambda (a5702357274)
                                     (drop
                                      kont57120
                                      a5702157271
                                      a5702357274))))
                              (- f5712157273 n a5702257272))))))
                   (cdr f5712257270 lst))))))
        (= f5712357268 n a5701957267))))
  (define (foldr kont57124 proc acc lst)
    (let ((f5712857275
           (lambda (a5702457276)
             (if a5702457276
               (kont57124 acc)
               (let ((f5712757277
                      (lambda (a5702557278)
                        (let ((f5712657279
                               (lambda (a5702657280)
                                 (let ((f5712557281
                                        (lambda (a5702757282)
                                          (proc
                                           kont57124
                                           a5702557278
                                           a5702757282))))
                                   (foldr f5712557281 proc acc a5702657280)))))
                          (cdr f5712657279 lst)))))
                 (car f5712757277 lst))))))
      (null? f5712857275 lst)))
  (define (append kont57129 lst1 lst2)
    (let ((f5713357283
           (lambda (a5702857284)
             (if a5702857284
               (kont57129 lst2)
               (let ((f5713257285
                      (lambda (a5702957286)
                        (let ((f5713157287
                               (lambda (a5703057288)
                                 (let ((f5713057289
                                        (lambda (a5703157290)
                                          (cons
                                           kont57129
                                           a5702957286
                                           a5703157290))))
                                   (append f5713057289 a5703057288 lst2)))))
                          (cdr f5713157287 lst1)))))
                 (car f5713257285 lst1))))))
      (null? f5713357283 lst1)))
  (define (hash . lst)
    (let ((kont5713457291 (prim car lst)))
      (let ((lst57292 (prim cdr lst)))
        (let ((x5703257293 (apply-prim hash lst57292)))
          (kont5713457291 x5703257293)))))
  (define (hash-ref kont57136 h k)
    (let ((x5703357294 (prim hash-ref h k))) (kont57136 x5703357294)))
  (define (hash-set kont57137 h k v)
    (let ((x5703457295 (prim hash-set h k v))) (kont57137 x5703457295)))
  (define (hash-has-key? kont57138 h k)
    (let ((x5703557296 (prim hash-has-key? h k))) (kont57138 x5703557296)))
  (define (hash-count kont57139 h)
    (let ((x5703657297 (prim hash-count h))) (kont57139 x5703657297)))
  (define (call kont57140)
    (let ((a5703757298 '100))
      (let ((a5703857299 '90))
        (let ((a5703957300 '80))
          (let ((a5704057301 '70))
            (let ((a5704157302 '60))
              (>=
               kont57140
               a5703757298
               a5703857299
               a5703957300
               a5704057301
               a5704157302)))))))
  (define (brouhaha_main kont57141)
    (let ((f5714257303 (lambda (x5704257304) (kont57141 x5704257304))))
      (call f5714257303))))
