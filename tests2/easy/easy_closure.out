'((proc
   (+ _11010 . lst)
   (let ((kont1073710841 (prim car lst)))
     (let ((lst10842 (prim cdr lst)))
       (let ((x1064510843 (apply-prim + lst10842)))
         (clo-app kont1073710841 x1064510843)))))
  (proc
   (- _11011 . lst)
   (let ((kont1073910844 (prim car lst)))
     (let ((lst10845 (prim cdr lst)))
       (let ((x1064610846 (apply-prim - lst10845)))
         (clo-app kont1073910844 x1064610846)))))
  (proc
   (* _11012 . lst)
   (let ((kont1074110847 (prim car lst)))
     (let ((lst10848 (prim cdr lst)))
       (let ((x1064710849 (apply-prim * lst10848)))
         (clo-app kont1074110847 x1064710849)))))
  (proc
   (modulo _11013 kont10743 a b)
   (let ((x1064810850 (prim modulo a b))) (clo-app kont10743 x1064810850)))
  (proc
   (/ _11014 . lst)
   (let ((kont1074410851 (prim car lst)))
     (let ((lst10852 (prim cdr lst)))
       (let ((x1064910853 (apply-prim / lst10852)))
         (clo-app kont1074410851 x1064910853)))))
  (proc
   (= _11015 . lst)
   (let ((kont1074610854 (prim car lst)))
     (let ((lst10855 (prim cdr lst)))
       (let ((x1065010856 (apply-prim = lst10855)))
         (clo-app kont1074610854 x1065010856)))))
  (proc
   (> _11016 . lst)
   (let ((kont1074810857 (prim car lst)))
     (let ((lst10858 (prim cdr lst)))
       (let ((x1065110859 (apply-prim > lst10858)))
         (clo-app kont1074810857 x1065110859)))))
  (proc
   (< _11017 . lst)
   (let ((kont1075010860 (prim car lst)))
     (let ((lst10861 (prim cdr lst)))
       (let ((x1065210862 (apply-prim < lst10861)))
         (clo-app kont1075010860 x1065210862)))))
  (proc
   (<= _11018 . lst)
   (let ((kont1075210863 (prim car lst)))
     (let ((lst10864 (prim cdr lst)))
       (let ((x1065310865 (apply-prim <= lst10864)))
         (clo-app kont1075210863 x1065310865)))))
  (proc
   (>= _11019 . lst)
   (let ((kont1075410866 (prim car lst)))
     (let ((lst10867 (prim cdr lst)))
       (let ((x1065410868 (apply-prim >= lst10867)))
         (clo-app kont1075410866 x1065410868)))))
  (proc
   (null? _11020 kont10756 x)
   (let ((x1065510869 (prim null? x))) (clo-app kont10756 x1065510869)))
  (proc
   (equal? _11021 kont10757 x y)
   (let ((x1065610870 (prim equal? x y))) (clo-app kont10757 x1065610870)))
  (proc
   (eq? _11022 kont10758 x y)
   (let ((x1065710871 (prim eq? x y))) (clo-app kont10758 x1065710871)))
  (proc
   (cons _11023 kont10759 a b)
   (let ((x1065810872 (prim cons a b))) (clo-app kont10759 x1065810872)))
  (proc
   (car _11024 kont10760 lst)
   (let ((x1065910873 (prim car lst))) (clo-app kont10760 x1065910873)))
  (proc
   (cdr _11025 kont10761 lst)
   (let ((x1066010874 (prim cdr lst))) (clo-app kont10761 x1066010874)))
  (proc
   (lam11026 env11027 a1066310878)
   (let ((a1066110875 (env-ref env11027 3)))
     (let ((equal? (env-ref env11027 2)))
       (let ((kont10762 (env-ref env11027 1)))
         (clo-app equal? kont10762 a1066110875 a1066310878)))))
  (proc
   (even? _11030 kont10762 x)
   (let ((a1066110875 '0))
     (let ((a1066210876 '2))
       (let ((f1076310877
              (make-closure lam11026 kont10762 equal? a1066110875)))
         (clo-app modulo f1076310877 x a1066210876)))))
  (proc
   (lam11031 env11032 a1066610882)
   (let ((kont10764 (env-ref env11032 3)))
     (let ((a1066410879 (env-ref env11032 2)))
       (let ((equal? (env-ref env11032 1)))
         (clo-app equal? kont10764 a1066410879 a1066610882)))))
  (proc
   (odd? _11035 kont10764 x)
   (let ((a1066410879 '1))
     (let ((a1066510880 '2))
       (let ((f1076510881
              (make-closure lam11031 equal? a1066410879 kont10764)))
         (clo-app modulo f1076510881 x a1066510880)))))
  (proc
   (list _11036 . x)
   (let ((kont1076610883 (prim car x)))
     (let ((x10884 (prim cdr x))) (clo-app kont1076610883 x10884))))
  (proc
   (and _11037 . lst)
   (let ((kont1076810885 (prim car lst)))
     (let ((lst10886 (prim cdr lst)))
       (let ((x1066710887 (apply-prim and lst10886)))
         (clo-app kont1076810885 x1066710887)))))
  (proc
   (or _11038 . lst)
   (let ((kont1077010888 (prim car lst)))
     (let ((lst10889 (prim cdr lst)))
       (let ((x1066810890 (apply-prim or lst10889)))
         (clo-app kont1077010888 x1066810890)))))
  (proc
   (lam11041 env11042 a1067410900)
   (let ((kont10772 (env-ref env11042 3)))
     (let ((x (env-ref env11042 2)))
       (let ((member? (env-ref env11042 1)))
         (clo-app member? kont10772 x a1067410900)))))
  (proc
   (lam11043 env11044 a1067210897)
   (let ((cdr (env-ref env11044 5)))
     (let ((lst (env-ref env11044 4)))
       (let ((kont10772 (env-ref env11044 3)))
         (let ((x (env-ref env11044 2)))
           (let ((member? (env-ref env11044 1)))
             (if a1067210897
               (let ((x1067310898 '#t)) (clo-app kont10772 x1067310898))
               (let ((f1077310899 (make-closure lam11041 member? x kont10772)))
                 (clo-app cdr f1077310899 lst)))))))))
  (proc
   (lam11045 env11046 a1067110895)
   (let ((cdr (env-ref env11046 6)))
     (let ((lst (env-ref env11046 5)))
       (let ((equal? (env-ref env11046 4)))
         (let ((kont10772 (env-ref env11046 3)))
           (let ((x (env-ref env11046 2)))
             (let ((member? (env-ref env11046 1)))
               (let ((f1077410896
                      (make-closure lam11043 member? x kont10772 lst cdr)))
                 (clo-app equal? f1077410896 a1067110895 x)))))))))
  (proc
   (lam11047 env11048 a1066910892)
   (let ((cdr (env-ref env11048 7)))
     (let ((lst (env-ref env11048 6)))
       (let ((equal? (env-ref env11048 5)))
         (let ((kont10772 (env-ref env11048 4)))
           (let ((x (env-ref env11048 3)))
             (let ((car (env-ref env11048 2)))
               (let ((member? (env-ref env11048 1)))
                 (if a1066910892
                   (let ((x1067010893 '#f)) (clo-app kont10772 x1067010893))
                   (let ((f1077510894
                          (make-closure
                           lam11045
                           member?
                           x
                           kont10772
                           equal?
                           lst
                           cdr)))
                     (clo-app car f1077510894 lst)))))))))))
  (proc
   (member? _11049 kont10772 x lst)
   (let ((f1077610891
          (make-closure lam11047 member? car x kont10772 equal? lst cdr)))
     (clo-app null? f1077610891 lst)))
  (proc
   (lam11050 env11051 a1067810908)
   (let ((fun (env-ref env11051 4)))
     (let ((a1067710906 (env-ref env11051 3)))
       (let ((kont10777 (env-ref env11051 2)))
         (let ((foldl (env-ref env11051 1)))
           (clo-app foldl kont10777 fun a1067710906 a1067810908))))))
  (proc
   (lam11052 env11053 a1067710906)
   (let ((cdr (env-ref env11053 5)))
     (let ((lst (env-ref env11053 4)))
       (let ((fun (env-ref env11053 3)))
         (let ((kont10777 (env-ref env11053 2)))
           (let ((foldl (env-ref env11053 1)))
             (let ((f1077810907
                    (make-closure lam11050 foldl kont10777 a1067710906 fun)))
               (clo-app cdr f1077810907 lst))))))))
  (proc
   (lam11054 env11055 a1067610904)
   (let ((cdr (env-ref env11055 6)))
     (let ((lst (env-ref env11055 5)))
       (let ((fun (env-ref env11055 4)))
         (let ((acc (env-ref env11055 3)))
           (let ((kont10777 (env-ref env11055 2)))
             (let ((foldl (env-ref env11055 1)))
               (let ((f1077910905
                      (make-closure lam11052 foldl kont10777 fun lst cdr)))
                 (clo-app fun f1077910905 a1067610904 acc)))))))))
  (proc
   (lam11056 env11057 a1067510902)
   (let ((cdr (env-ref env11057 7)))
     (let ((lst (env-ref env11057 6)))
       (let ((fun (env-ref env11057 5)))
         (let ((acc (env-ref env11057 4)))
           (let ((car (env-ref env11057 3)))
             (let ((kont10777 (env-ref env11057 2)))
               (let ((foldl (env-ref env11057 1)))
                 (if a1067510902
                   (clo-app kont10777 acc)
                   (let ((f1078010903
                          (make-closure
                           lam11054
                           foldl
                           kont10777
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f1078010903 lst)))))))))))
  (proc
   (foldl _11058 kont10777 fun acc lst)
   (let ((f1078110901
          (make-closure lam11056 foldl kont10777 car acc fun lst cdr)))
     (clo-app null? f1078110901 lst)))
  (proc
   (lam11059 env11060 a1068210916)
   (let ((kont10782 (env-ref env11060 3)))
     (let ((a1068010912 (env-ref env11060 2)))
       (let ((reverse-helper (env-ref env11060 1)))
         (clo-app reverse-helper kont10782 a1068010912 a1068210916)))))
  (proc
   (lam11061 env11062 a1068110914)
   (let ((kont10782 (env-ref env11062 5)))
     (let ((a1068010912 (env-ref env11062 4)))
       (let ((reverse-helper (env-ref env11062 3)))
         (let ((lst2 (env-ref env11062 2)))
           (let ((cons (env-ref env11062 1)))
             (let ((f1078310915
                    (make-closure
                     lam11059
                     reverse-helper
                     a1068010912
                     kont10782)))
               (clo-app cons f1078310915 a1068110914 lst2))))))))
  (proc
   (lam11063 env11064 a1068010912)
   (let ((kont10782 (env-ref env11064 6)))
     (let ((lst (env-ref env11064 5)))
       (let ((reverse-helper (env-ref env11064 4)))
         (let ((lst2 (env-ref env11064 3)))
           (let ((car (env-ref env11064 2)))
             (let ((cons (env-ref env11064 1)))
               (let ((f1078410913
                      (make-closure
                       lam11061
                       cons
                       lst2
                       reverse-helper
                       a1068010912
                       kont10782)))
                 (clo-app car f1078410913 lst)))))))))
  (proc
   (lam11065 env11066 a1067910910)
   (let ((cdr (env-ref env11066 7)))
     (let ((kont10782 (env-ref env11066 6)))
       (let ((lst (env-ref env11066 5)))
         (let ((reverse-helper (env-ref env11066 4)))
           (let ((lst2 (env-ref env11066 3)))
             (let ((car (env-ref env11066 2)))
               (let ((cons (env-ref env11066 1)))
                 (if a1067910910
                   (clo-app kont10782 lst2)
                   (let ((f1078510911
                          (make-closure
                           lam11063
                           cons
                           car
                           lst2
                           reverse-helper
                           lst
                           kont10782)))
                     (clo-app cdr f1078510911 lst)))))))))))
  (proc
   (reverse-helper _11067 kont10782 lst lst2)
   (let ((f1078610909
          (make-closure
           lam11065
           cons
           car
           lst2
           reverse-helper
           lst
           kont10782
           cdr)))
     (clo-app null? f1078610909 lst)))
  (proc
   (lam11068 env11069 a1068310918)
   (let ((lst (env-ref env11069 3)))
     (let ((reverse-helper (env-ref env11069 2)))
       (let ((kont10787 (env-ref env11069 1)))
         (clo-app reverse-helper kont10787 lst a1068310918)))))
  (proc
   (reverse _11070 kont10787 lst)
   (let ((f1078810917 (make-closure lam11068 kont10787 reverse-helper lst)))
     (clo-app list f1078810917)))
  (proc
   (lam11071 env11072 x1068610923)
   (let ((kont10789 (env-ref env11072 1))) (clo-app kont10789 x1068610923)))
  (proc
   (lam11073 env11074 a1069110932)
   (let ((a1068710925 (env-ref env11074 4)))
     (let ((a1068910928 (env-ref env11074 3)))
       (let ((kont10789 (env-ref env11074 2)))
         (let ((take-helper (env-ref env11074 1)))
           (clo-app
            take-helper
            kont10789
            a1068710925
            a1068910928
            a1069110932))))))
  (proc
   (lam11075 env11076 a1069010930)
   (let ((a1068710925 (env-ref env11076 6)))
     (let ((a1068910928 (env-ref env11076 5)))
       (let ((kont10789 (env-ref env11076 4)))
         (let ((cons (env-ref env11076 3)))
           (let ((take-helper (env-ref env11076 2)))
             (let ((lst2 (env-ref env11076 1)))
               (let ((f1079110931
                      (make-closure
                       lam11073
                       take-helper
                       kont10789
                       a1068910928
                       a1068710925)))
                 (clo-app cons f1079110931 a1069010930 lst2)))))))))
  (proc
   (lam11077 env11078 a1068910928)
   (let ((a1068710925 (env-ref env11078 7)))
     (let ((lst (env-ref env11078 6)))
       (let ((kont10789 (env-ref env11078 5)))
         (let ((car (env-ref env11078 4)))
           (let ((cons (env-ref env11078 3)))
             (let ((take-helper (env-ref env11078 2)))
               (let ((lst2 (env-ref env11078 1)))
                 (let ((f1079210929
                        (make-closure
                         lam11075
                         lst2
                         take-helper
                         cons
                         kont10789
                         a1068910928
                         a1068710925)))
                   (clo-app car f1079210929 lst))))))))))
  (proc
   (lam11080 env11081 a1068710925)
   (let ((lst (env-ref env11081 8)))
     (let ((kont10789 (env-ref env11081 7)))
       (let ((cons (env-ref env11081 6)))
         (let ((- (env-ref env11081 5)))
           (let ((take-helper (env-ref env11081 4)))
             (let ((lst2 (env-ref env11081 3)))
               (let ((n (env-ref env11081 2)))
                 (let ((car (env-ref env11081 1)))
                   (let ((a1068810926 '1))
                     (let ((f1079310927
                            (make-closure
                             lam11077
                             lst2
                             take-helper
                             cons
                             car
                             kont10789
                             lst
                             a1068710925)))
                       (clo-app - f1079310927 n a1068810926))))))))))))
  (proc
   (lam11082 env11083 a1068510921)
   (let ((cdr (env-ref env11083 10)))
     (let ((lst (env-ref env11083 9)))
       (let ((reverse (env-ref env11083 8)))
         (let ((kont10789 (env-ref env11083 7)))
           (let ((cons (env-ref env11083 6)))
             (let ((- (env-ref env11083 5)))
               (let ((take-helper (env-ref env11083 4)))
                 (let ((lst2 (env-ref env11083 3)))
                   (let ((n (env-ref env11083 2)))
                     (let ((car (env-ref env11083 1)))
                       (if a1068510921
                         (let ((f1079010922 (make-closure lam11071 kont10789)))
                           (clo-app reverse f1079010922 lst2))
                         (let ((f1079410924
                                (make-closure
                                 lam11080
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont10789
                                 lst)))
                           (clo-app cdr f1079410924 lst))))))))))))))
  (proc
   (take-helper _11085 kont10789 lst n lst2)
   (let ((a1068410919 '0))
     (let ((f1079510920
            (make-closure
             lam11082
             car
             n
             lst2
             take-helper
             -
             cons
             kont10789
             reverse
             lst
             cdr)))
       (clo-app = f1079510920 n a1068410919))))
  (proc
   (lam11086 env11087 a1069210934)
   (let ((kont10796 (env-ref env11087 4)))
     (let ((lst (env-ref env11087 3)))
       (let ((take-helper (env-ref env11087 2)))
         (let ((n (env-ref env11087 1)))
           (clo-app take-helper kont10796 lst n a1069210934))))))
  (proc
   (take _11088 kont10796 lst n)
   (let ((f1079710933 (make-closure lam11086 n take-helper lst kont10796)))
     (clo-app list f1079710933)))
  (proc
   (lam11090 env11091 a1069710942)
   (let ((kont10798 (env-ref env11091 3)))
     (let ((+ (env-ref env11091 2)))
       (let ((a1069510938 (env-ref env11091 1)))
         (clo-app + kont10798 a1069510938 a1069710942)))))
  (proc
   (lam11092 env11093 a1069610940)
   (let ((kont10798 (env-ref env11093 4)))
     (let ((length (env-ref env11093 3)))
       (let ((+ (env-ref env11093 2)))
         (let ((a1069510938 (env-ref env11093 1)))
           (let ((f1079910941 (make-closure lam11090 a1069510938 + kont10798)))
             (clo-app length f1079910941 a1069610940)))))))
  (proc
   (lam11095 env11096 a1069310936)
   (let ((cdr (env-ref env11096 5)))
     (let ((kont10798 (env-ref env11096 4)))
       (let ((lst (env-ref env11096 3)))
         (let ((length (env-ref env11096 2)))
           (let ((+ (env-ref env11096 1)))
             (if a1069310936
               (let ((x1069410937 '0)) (clo-app kont10798 x1069410937))
               (let ((a1069510938 '1))
                 (let ((f1080010939
                        (make-closure
                         lam11092
                         a1069510938
                         +
                         length
                         kont10798)))
                   (clo-app cdr f1080010939 lst))))))))))
  (proc
   (length _11097 kont10798 lst)
   (let ((f1080110935 (make-closure lam11095 + length lst kont10798 cdr)))
     (clo-app null? f1080110935 lst)))
  (proc
   (lam11098 env11099 x1069910946)
   (let ((kont10802 (env-ref env11099 1))) (clo-app kont10802 x1069910946)))
  (proc
   (lam11100 env11101 a1070310954)
   (let ((kont10802 (env-ref env11101 3)))
     (let ((a1070110950 (env-ref env11101 2)))
       (let ((cons (env-ref env11101 1)))
         (clo-app cons kont10802 a1070110950 a1070310954)))))
  (proc
   (lam11102 env11103 a1070210952)
   (let ((map (env-ref env11103 5)))
     (let ((kont10802 (env-ref env11103 4)))
       (let ((cons (env-ref env11103 3)))
         (let ((proc (env-ref env11103 2)))
           (let ((a1070110950 (env-ref env11103 1)))
             (let ((f1080410953
                    (make-closure lam11100 cons a1070110950 kont10802)))
               (clo-app map f1080410953 proc a1070210952))))))))
  (proc
   (lam11104 env11105 a1070110950)
   (let ((cdr (env-ref env11105 6)))
     (let ((lst (env-ref env11105 5)))
       (let ((map (env-ref env11105 4)))
         (let ((kont10802 (env-ref env11105 3)))
           (let ((proc (env-ref env11105 2)))
             (let ((cons (env-ref env11105 1)))
               (let ((f1080510951
                      (make-closure
                       lam11102
                       a1070110950
                       proc
                       cons
                       kont10802
                       map)))
                 (clo-app cdr f1080510951 lst)))))))))
  (proc
   (lam11106 env11107 a1070010948)
   (let ((cdr (env-ref env11107 6)))
     (let ((lst (env-ref env11107 5)))
       (let ((map (env-ref env11107 4)))
         (let ((kont10802 (env-ref env11107 3)))
           (let ((proc (env-ref env11107 2)))
             (let ((cons (env-ref env11107 1)))
               (let ((f1080610949
                      (make-closure lam11104 cons proc kont10802 map lst cdr)))
                 (clo-app proc f1080610949 a1070010948)))))))))
  (proc
   (lam11108 env11109 a1069810944)
   (let ((lst (env-ref env11109 8)))
     (let ((map (env-ref env11109 7)))
       (let ((kont10802 (env-ref env11109 6)))
         (let ((proc (env-ref env11109 5)))
           (let ((car (env-ref env11109 4)))
             (let ((cons (env-ref env11109 3)))
               (let ((list (env-ref env11109 2)))
                 (let ((cdr (env-ref env11109 1)))
                   (if a1069810944
                     (let ((f1080310945 (make-closure lam11098 kont10802)))
                       (clo-app list f1080310945))
                     (let ((f1080710947
                            (make-closure
                             lam11106
                             cons
                             proc
                             kont10802
                             map
                             lst
                             cdr)))
                       (clo-app car f1080710947 lst))))))))))))
  (proc
   (map _11110 kont10802 proc lst)
   (let ((f1080810943
          (make-closure lam11108 cdr list cons car proc kont10802 map lst)))
     (clo-app null? f1080810943 lst)))
  (proc
   (lam11111 env11112 x1070510958)
   (let ((kont10809 (env-ref env11112 1))) (clo-app kont10809 x1070510958)))
  (proc
   (lam11113 env11114 a1071010968)
   (let ((a1070810964 (env-ref env11114 3)))
     (let ((cons (env-ref env11114 2)))
       (let ((kont10809 (env-ref env11114 1)))
         (clo-app cons kont10809 a1070810964 a1071010968)))))
  (proc
   (lam11115 env11116 a1070910966)
   (let ((op (env-ref env11116 5)))
     (let ((a1070810964 (env-ref env11116 4)))
       (let ((filter (env-ref env11116 3)))
         (let ((cons (env-ref env11116 2)))
           (let ((kont10809 (env-ref env11116 1)))
             (let ((f1081110967
                    (make-closure lam11113 kont10809 cons a1070810964)))
               (clo-app filter f1081110967 op a1070910966))))))))
  (proc
   (lam11117 env11118 a1070810964)
   (let ((cdr (env-ref env11118 6)))
     (let ((lst (env-ref env11118 5)))
       (let ((op (env-ref env11118 4)))
         (let ((filter (env-ref env11118 3)))
           (let ((cons (env-ref env11118 2)))
             (let ((kont10809 (env-ref env11118 1)))
               (let ((f1081210965
                      (make-closure
                       lam11115
                       kont10809
                       cons
                       filter
                       a1070810964
                       op)))
                 (clo-app cdr f1081210965 lst)))))))))
  (proc
   (lam11119 env11120 a1071110970)
   (let ((op (env-ref env11120 3)))
     (let ((filter (env-ref env11120 2)))
       (let ((kont10809 (env-ref env11120 1)))
         (clo-app filter kont10809 op a1071110970)))))
  (proc
   (lam11121 env11122 a1070710962)
   (let ((cdr (env-ref env11122 7)))
     (let ((lst (env-ref env11122 6)))
       (let ((op (env-ref env11122 5)))
         (let ((filter (env-ref env11122 4)))
           (let ((car (env-ref env11122 3)))
             (let ((cons (env-ref env11122 2)))
               (let ((kont10809 (env-ref env11122 1)))
                 (if a1070710962
                   (let ((f1081310963
                          (make-closure
                           lam11117
                           kont10809
                           cons
                           filter
                           op
                           lst
                           cdr)))
                     (clo-app car f1081310963 lst))
                   (let ((f1081410969
                          (make-closure lam11119 kont10809 filter op)))
                     (clo-app cdr f1081410969 lst)))))))))))
  (proc
   (lam11123 env11124 a1070610960)
   (let ((cdr (env-ref env11124 7)))
     (let ((lst (env-ref env11124 6)))
       (let ((op (env-ref env11124 5)))
         (let ((filter (env-ref env11124 4)))
           (let ((car (env-ref env11124 3)))
             (let ((cons (env-ref env11124 2)))
               (let ((kont10809 (env-ref env11124 1)))
                 (let ((f1081510961
                        (make-closure
                         lam11121
                         kont10809
                         cons
                         car
                         filter
                         op
                         lst
                         cdr)))
                   (clo-app op f1081510961 a1070610960))))))))))
  (proc
   (lam11125 env11126 a1070410956)
   (let ((lst (env-ref env11126 8)))
     (let ((op (env-ref env11126 7)))
       (let ((list (env-ref env11126 6)))
         (let ((cdr (env-ref env11126 5)))
           (let ((filter (env-ref env11126 4)))
             (let ((car (env-ref env11126 3)))
               (let ((cons (env-ref env11126 2)))
                 (let ((kont10809 (env-ref env11126 1)))
                   (if a1070410956
                     (let ((f1081010957 (make-closure lam11111 kont10809)))
                       (clo-app list f1081010957))
                     (let ((f1081610959
                            (make-closure
                             lam11123
                             kont10809
                             cons
                             car
                             filter
                             op
                             lst
                             cdr)))
                       (clo-app car f1081610959 lst))))))))))))
  (proc
   (filter _11127 kont10809 op lst)
   (let ((f1081710955
          (make-closure lam11125 kont10809 cons car filter cdr list op lst)))
     (clo-app null? f1081710955 lst)))
  (proc
   (lam11128 env11129 a1071610978)
   (let ((kont10818 (env-ref env11129 3)))
     (let ((a1071410975 (env-ref env11129 2)))
       (let ((drop (env-ref env11129 1)))
         (clo-app drop kont10818 a1071410975 a1071610978)))))
  (proc
   (lam11131 env11132 a1071410975)
   (let ((drop (env-ref env11132 4)))
     (let ((kont10818 (env-ref env11132 3)))
       (let ((n (env-ref env11132 2)))
         (let ((- (env-ref env11132 1)))
           (let ((a1071510976 '1))
             (let ((f1081910977
                    (make-closure lam11128 drop a1071410975 kont10818)))
               (clo-app - f1081910977 n a1071510976))))))))
  (proc
   (lam11133 env11134 a1071310973)
   (let ((cdr (env-ref env11134 6)))
     (let ((kont10818 (env-ref env11134 5)))
       (let ((n (env-ref env11134 4)))
         (let ((- (env-ref env11134 3)))
           (let ((lst (env-ref env11134 2)))
             (let ((drop (env-ref env11134 1)))
               (if a1071310973
                 (clo-app kont10818 lst)
                 (let ((f1082010974
                        (make-closure lam11131 - n kont10818 drop)))
                   (clo-app cdr f1082010974 lst))))))))))
  (proc
   (drop _11136 kont10818 lst n)
   (let ((a1071210971 '0))
     (let ((f1082110972 (make-closure lam11133 drop lst - n kont10818 cdr)))
       (clo-app = f1082110972 n a1071210971))))
  (proc
   (lam11137 env11138 a1072010986)
   (let ((proc (env-ref env11138 3)))
     (let ((a1071810982 (env-ref env11138 2)))
       (let ((kont10822 (env-ref env11138 1)))
         (clo-app proc kont10822 a1071810982 a1072010986)))))
  (proc
   (lam11139 env11140 a1071910984)
   (let ((foldr (env-ref env11140 5)))
     (let ((proc (env-ref env11140 4)))
       (let ((acc (env-ref env11140 3)))
         (let ((a1071810982 (env-ref env11140 2)))
           (let ((kont10822 (env-ref env11140 1)))
             (let ((f1082310985
                    (make-closure lam11137 kont10822 a1071810982 proc)))
               (clo-app foldr f1082310985 proc acc a1071910984))))))))
  (proc
   (lam11141 env11142 a1071810982)
   (let ((cdr (env-ref env11142 6)))
     (let ((foldr (env-ref env11142 5)))
       (let ((lst (env-ref env11142 4)))
         (let ((proc (env-ref env11142 3)))
           (let ((acc (env-ref env11142 2)))
             (let ((kont10822 (env-ref env11142 1)))
               (let ((f1082410983
                      (make-closure
                       lam11139
                       kont10822
                       a1071810982
                       acc
                       proc
                       foldr)))
                 (clo-app cdr f1082410983 lst)))))))))
  (proc
   (lam11143 env11144 a1071710980)
   (let ((cdr (env-ref env11144 7)))
     (let ((car (env-ref env11144 6)))
       (let ((foldr (env-ref env11144 5)))
         (let ((lst (env-ref env11144 4)))
           (let ((proc (env-ref env11144 3)))
             (let ((acc (env-ref env11144 2)))
               (let ((kont10822 (env-ref env11144 1)))
                 (if a1071710980
                   (clo-app kont10822 acc)
                   (let ((f1082510981
                          (make-closure
                           lam11141
                           kont10822
                           acc
                           proc
                           lst
                           foldr
                           cdr)))
                     (clo-app car f1082510981 lst)))))))))))
  (proc
   (foldr _11145 kont10822 proc acc lst)
   (let ((f1082610979
          (make-closure lam11143 kont10822 acc proc lst foldr car cdr)))
     (clo-app null? f1082610979 lst)))
  (proc
   (lam11146 env11147 a1072410994)
   (let ((kont10827 (env-ref env11147 3)))
     (let ((a1072210990 (env-ref env11147 2)))
       (let ((cons (env-ref env11147 1)))
         (clo-app cons kont10827 a1072210990 a1072410994)))))
  (proc
   (lam11148 env11149 a1072310992)
   (let ((kont10827 (env-ref env11149 5)))
     (let ((a1072210990 (env-ref env11149 4)))
       (let ((append (env-ref env11149 3)))
         (let ((lst2 (env-ref env11149 2)))
           (let ((cons (env-ref env11149 1)))
             (let ((f1082810993
                    (make-closure lam11146 cons a1072210990 kont10827)))
               (clo-app append f1082810993 a1072310992 lst2))))))))
  (proc
   (lam11150 env11151 a1072210990)
   (let ((append (env-ref env11151 6)))
     (let ((lst2 (env-ref env11151 5)))
       (let ((lst1 (env-ref env11151 4)))
         (let ((cons (env-ref env11151 3)))
           (let ((kont10827 (env-ref env11151 2)))
             (let ((cdr (env-ref env11151 1)))
               (let ((f1082910991
                      (make-closure
                       lam11148
                       cons
                       lst2
                       append
                       a1072210990
                       kont10827)))
                 (clo-app cdr f1082910991 lst1)))))))))
  (proc
   (lam11152 env11153 a1072110988)
   (let ((append (env-ref env11153 7)))
     (let ((lst2 (env-ref env11153 6)))
       (let ((cons (env-ref env11153 5)))
         (let ((kont10827 (env-ref env11153 4)))
           (let ((cdr (env-ref env11153 3)))
             (let ((lst1 (env-ref env11153 2)))
               (let ((car (env-ref env11153 1)))
                 (if a1072110988
                   (clo-app kont10827 lst2)
                   (let ((f1083010989
                          (make-closure
                           lam11150
                           cdr
                           kont10827
                           cons
                           lst1
                           lst2
                           append)))
                     (clo-app car f1083010989 lst1)))))))))))
  (proc
   (append _11154 kont10827 lst1 lst2)
   (let ((f1083110987
          (make-closure lam11152 car lst1 cdr kont10827 cons lst2 append)))
     (clo-app null? f1083110987 lst1)))
  (proc
   (hash _11155 . lst)
   (let ((kont1083210995 (prim car lst)))
     (let ((lst10996 (prim cdr lst)))
       (let ((x1072510997 (apply-prim hash lst10996)))
         (clo-app kont1083210995 x1072510997)))))
  (proc
   (hash-ref _11156 kont10834 h k)
   (let ((x1072610998 (prim hash-ref h k))) (clo-app kont10834 x1072610998)))
  (proc
   (hash-set _11157 kont10835 h k v)
   (let ((x1072710999 (prim hash-set h k v))) (clo-app kont10835 x1072710999)))
  (proc
   (hash-has-key? _11158 kont10836 h k)
   (let ((x1072811000 (prim hash-has-key? h k)))
     (clo-app kont10836 x1072811000)))
  (proc
   (hash-count _11159 kont10837 h)
   (let ((x1072911001 (prim hash-count h))) (clo-app kont10837 x1072911001)))
  (proc
   (call _11166 kont10838)
   (let ((a1073011002 '10))
     (let ((a1073111003 '2))
       (let ((a1073211004 '3))
         (let ((a1073311005 '4))
           (let ((a1073411006 '5))
             (let ((a1073511007 '6))
               (clo-app
                +
                kont10838
                a1073011002
                a1073111003
                a1073211004
                a1073311005
                a1073411006
                a1073511007))))))))
  (proc
   (lam11167 env11168 x1073611009)
   (let ((kont10839 (env-ref env11168 1))) (clo-app kont10839 x1073611009)))
  (proc
   (brouhaha_main _11169 kont10839)
   (let ((f1084011008 (make-closure lam11167 kont10839)))
     (clo-app call f1084011008))))
