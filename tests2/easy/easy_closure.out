'((proc
   (+ _10701 . lst)
   (let ((kont1043710538 (prim car lst)))
     (let ((lst10539 (prim cdr lst)))
       (let ((x1034810540 (apply-prim + lst10539)))
         (clo-app kont1043710538 x1034810540)))))
  (proc
   (- _10702 . lst)
   (let ((kont1043910541 (prim car lst)))
     (let ((lst10542 (prim cdr lst)))
       (let ((x1034910543 (apply-prim - lst10542)))
         (clo-app kont1043910541 x1034910543)))))
  (proc
   (* _10703 . lst)
   (let ((kont1044110544 (prim car lst)))
     (let ((lst10545 (prim cdr lst)))
       (let ((x1035010546 (apply-prim * lst10545)))
         (clo-app kont1044110544 x1035010546)))))
  (proc
   (modulo _10704 kont10443 a b)
   (let ((x1035110547 (prim modulo a b))) (clo-app kont10443 x1035110547)))
  (proc
   (/ _10705 . lst)
   (let ((kont1044410548 (prim car lst)))
     (let ((lst10549 (prim cdr lst)))
       (let ((x1035210550 (apply-prim / lst10549)))
         (clo-app kont1044410548 x1035210550)))))
  (proc
   (= _10706 . lst)
   (let ((kont1044610551 (prim car lst)))
     (let ((lst10552 (prim cdr lst)))
       (let ((x1035310553 (apply-prim = lst10552)))
         (clo-app kont1044610551 x1035310553)))))
  (proc
   (> _10707 . lst)
   (let ((kont1044810554 (prim car lst)))
     (let ((lst10555 (prim cdr lst)))
       (let ((x1035410556 (apply-prim > lst10555)))
         (clo-app kont1044810554 x1035410556)))))
  (proc
   (< _10708 . lst)
   (let ((kont1045010557 (prim car lst)))
     (let ((lst10558 (prim cdr lst)))
       (let ((x1035510559 (apply-prim < lst10558)))
         (clo-app kont1045010557 x1035510559)))))
  (proc
   (<= _10709 . lst)
   (let ((kont1045210560 (prim car lst)))
     (let ((lst10561 (prim cdr lst)))
       (let ((x1035610562 (apply-prim <= lst10561)))
         (clo-app kont1045210560 x1035610562)))))
  (proc
   (>= _10710 . lst)
   (let ((kont1045410563 (prim car lst)))
     (let ((lst10564 (prim cdr lst)))
       (let ((x1035710565 (apply-prim >= lst10564)))
         (clo-app kont1045410563 x1035710565)))))
  (proc
   (null? _10711 kont10456 x)
   (let ((x1035810566 (prim null? x))) (clo-app kont10456 x1035810566)))
  (proc
   (equal? _10712 kont10457 x y)
   (let ((x1035910567 (prim equal? x y))) (clo-app kont10457 x1035910567)))
  (proc
   (eq? _10713 kont10458 x y)
   (let ((x1036010568 (prim eq? x y))) (clo-app kont10458 x1036010568)))
  (proc
   (cons _10714 kont10459 a b)
   (let ((x1036110569 (prim cons a b))) (clo-app kont10459 x1036110569)))
  (proc
   (car _10715 kont10460 lst)
   (let ((x1036210570 (prim car lst))) (clo-app kont10460 x1036210570)))
  (proc
   (cdr _10716 kont10461 lst)
   (let ((x1036310571 (prim cdr lst))) (clo-app kont10461 x1036310571)))
  (proc
   (lam10717 env10718 a1036610575)
   (let ((equal? (env-ref env10718 3)))
     (let ((a1036410572 (env-ref env10718 2)))
       (let ((kont10462 (env-ref env10718 1)))
         (clo-app equal? kont10462 a1036410572 a1036610575)))))
  (proc
   (even? _10721 kont10462 x)
   (let ((a1036410572 '0))
     (let ((a1036510573 '2))
       (let ((f1046310574
              (make-closure lam10717 kont10462 a1036410572 equal?)))
         (clo-app modulo f1046310574 x a1036510573)))))
  (proc
   (lam10722 env10723 a1036910579)
   (let ((equal? (env-ref env10723 3)))
     (let ((a1036710576 (env-ref env10723 2)))
       (let ((kont10464 (env-ref env10723 1)))
         (clo-app equal? kont10464 a1036710576 a1036910579)))))
  (proc
   (odd? _10726 kont10464 x)
   (let ((a1036710576 '1))
     (let ((a1036810577 '2))
       (let ((f1046510578
              (make-closure lam10722 kont10464 a1036710576 equal?)))
         (clo-app modulo f1046510578 x a1036810577)))))
  (proc
   (list _10727 . x)
   (let ((kont1046610580 (prim car x)))
     (let ((x10581 (prim cdr x))) (clo-app kont1046610580 x10581))))
  (proc
   (lam10730 env10731 a1037510591)
   (let ((kont10468 (env-ref env10731 3)))
     (let ((x (env-ref env10731 2)))
       (let ((member? (env-ref env10731 1)))
         (clo-app member? kont10468 x a1037510591)))))
  (proc
   (lam10732 env10733 a1037310588)
   (let ((cdr (env-ref env10733 5)))
     (let ((kont10468 (env-ref env10733 4)))
       (let ((lst (env-ref env10733 3)))
         (let ((x (env-ref env10733 2)))
           (let ((member? (env-ref env10733 1)))
             (if a1037310588
               (let ((x1037410589 '#t)) (clo-app kont10468 x1037410589))
               (let ((f1046910590 (make-closure lam10730 member? x kont10468)))
                 (clo-app cdr f1046910590 lst)))))))))
  (proc
   (lam10734 env10735 a1037210586)
   (let ((cdr (env-ref env10735 6)))
     (let ((kont10468 (env-ref env10735 5)))
       (let ((lst (env-ref env10735 4)))
         (let ((equal? (env-ref env10735 3)))
           (let ((x (env-ref env10735 2)))
             (let ((member? (env-ref env10735 1)))
               (let ((f1047010587
                      (make-closure lam10732 member? x lst kont10468 cdr)))
                 (clo-app equal? f1047010587 a1037210586 x)))))))))
  (proc
   (lam10736 env10737 a1037010583)
   (let ((cdr (env-ref env10737 7)))
     (let ((kont10468 (env-ref env10737 6)))
       (let ((lst (env-ref env10737 5)))
         (let ((equal? (env-ref env10737 4)))
           (let ((x (env-ref env10737 3)))
             (let ((car (env-ref env10737 2)))
               (let ((member? (env-ref env10737 1)))
                 (if a1037010583
                   (let ((x1037110584 '#f)) (clo-app kont10468 x1037110584))
                   (let ((f1047110585
                          (make-closure
                           lam10734
                           member?
                           x
                           equal?
                           lst
                           kont10468
                           cdr)))
                     (clo-app car f1047110585 lst)))))))))))
  (proc
   (member? _10738 kont10468 x lst)
   (let ((f1047210582
          (make-closure lam10736 member? car x equal? lst kont10468 cdr)))
     (clo-app null? f1047210582 lst)))
  (proc
   (lam10739 env10740 a1037910599)
   (let ((a1037810597 (env-ref env10740 4)))
     (let ((kont10473 (env-ref env10740 3)))
       (let ((fun (env-ref env10740 2)))
         (let ((foldl (env-ref env10740 1)))
           (clo-app foldl kont10473 fun a1037810597 a1037910599))))))
  (proc
   (lam10741 env10742 a1037810597)
   (let ((cdr (env-ref env10742 5)))
     (let ((lst (env-ref env10742 4)))
       (let ((kont10473 (env-ref env10742 3)))
         (let ((fun (env-ref env10742 2)))
           (let ((foldl (env-ref env10742 1)))
             (let ((f1047410598
                    (make-closure lam10739 foldl fun kont10473 a1037810597)))
               (clo-app cdr f1047410598 lst))))))))
  (proc
   (lam10743 env10744 a1037710595)
   (let ((cdr (env-ref env10744 6)))
     (let ((lst (env-ref env10744 5)))
       (let ((kont10473 (env-ref env10744 4)))
         (let ((fun (env-ref env10744 3)))
           (let ((acc (env-ref env10744 2)))
             (let ((foldl (env-ref env10744 1)))
               (let ((f1047510596
                      (make-closure lam10741 foldl fun kont10473 lst cdr)))
                 (clo-app fun f1047510596 a1037710595 acc)))))))))
  (proc
   (lam10745 env10746 a1037610593)
   (let ((cdr (env-ref env10746 7)))
     (let ((lst (env-ref env10746 6)))
       (let ((kont10473 (env-ref env10746 5)))
         (let ((fun (env-ref env10746 4)))
           (let ((acc (env-ref env10746 3)))
             (let ((car (env-ref env10746 2)))
               (let ((foldl (env-ref env10746 1)))
                 (if a1037610593
                   (clo-app kont10473 acc)
                   (let ((f1047610594
                          (make-closure
                           lam10743
                           foldl
                           acc
                           fun
                           kont10473
                           lst
                           cdr)))
                     (clo-app car f1047610594 lst)))))))))))
  (proc
   (foldl _10747 kont10473 fun acc lst)
   (let ((f1047710592
          (make-closure lam10745 foldl car acc fun kont10473 lst cdr)))
     (clo-app null? f1047710592 lst)))
  (proc
   (lam10748 env10749 a1038310607)
   (let ((reverse-helper (env-ref env10749 3)))
     (let ((a1038110603 (env-ref env10749 2)))
       (let ((kont10478 (env-ref env10749 1)))
         (clo-app reverse-helper kont10478 a1038110603 a1038310607)))))
  (proc
   (lam10750 env10751 a1038210605)
   (let ((reverse-helper (env-ref env10751 5)))
     (let ((a1038110603 (env-ref env10751 4)))
       (let ((lst2 (env-ref env10751 3)))
         (let ((kont10478 (env-ref env10751 2)))
           (let ((cons (env-ref env10751 1)))
             (let ((f1047910606
                    (make-closure
                     lam10748
                     kont10478
                     a1038110603
                     reverse-helper)))
               (clo-app cons f1047910606 a1038210605 lst2))))))))
  (proc
   (lam10752 env10753 a1038110603)
   (let ((lst (env-ref env10753 6)))
     (let ((reverse-helper (env-ref env10753 5)))
       (let ((lst2 (env-ref env10753 4)))
         (let ((cons (env-ref env10753 3)))
           (let ((kont10478 (env-ref env10753 2)))
             (let ((car (env-ref env10753 1)))
               (let ((f1048010604
                      (make-closure
                       lam10750
                       cons
                       kont10478
                       lst2
                       a1038110603
                       reverse-helper)))
                 (clo-app car f1048010604 lst)))))))))
  (proc
   (lam10754 env10755 a1038010601)
   (let ((cdr (env-ref env10755 7)))
     (let ((lst (env-ref env10755 6)))
       (let ((reverse-helper (env-ref env10755 5)))
         (let ((lst2 (env-ref env10755 4)))
           (let ((cons (env-ref env10755 3)))
             (let ((kont10478 (env-ref env10755 2)))
               (let ((car (env-ref env10755 1)))
                 (if a1038010601
                   (clo-app kont10478 lst2)
                   (let ((f1048110602
                          (make-closure
                           lam10752
                           car
                           kont10478
                           cons
                           lst2
                           reverse-helper
                           lst)))
                     (clo-app cdr f1048110602 lst)))))))))))
  (proc
   (reverse-helper _10756 kont10478 lst lst2)
   (let ((f1048210600
          (make-closure
           lam10754
           car
           kont10478
           cons
           lst2
           reverse-helper
           lst
           cdr)))
     (clo-app null? f1048210600 lst)))
  (proc
   (lam10757 env10758 a1038410609)
   (let ((kont10483 (env-ref env10758 3)))
     (let ((lst (env-ref env10758 2)))
       (let ((reverse-helper (env-ref env10758 1)))
         (clo-app reverse-helper kont10483 lst a1038410609)))))
  (proc
   (reverse _10759 kont10483 lst)
   (let ((f1048410608 (make-closure lam10757 reverse-helper lst kont10483)))
     (clo-app list f1048410608)))
  (proc
   (lam10760 env10761 x1038710614)
   (let ((kont10485 (env-ref env10761 1))) (clo-app kont10485 x1038710614)))
  (proc
   (lam10762 env10763 a1039210623)
   (let ((kont10485 (env-ref env10763 4)))
     (let ((a1038810616 (env-ref env10763 3)))
       (let ((a1039010619 (env-ref env10763 2)))
         (let ((take-helper (env-ref env10763 1)))
           (clo-app
            take-helper
            kont10485
            a1038810616
            a1039010619
            a1039210623))))))
  (proc
   (lam10764 env10765 a1039110621)
   (let ((kont10485 (env-ref env10765 6)))
     (let ((a1038810616 (env-ref env10765 5)))
       (let ((a1039010619 (env-ref env10765 4)))
         (let ((cons (env-ref env10765 3)))
           (let ((take-helper (env-ref env10765 2)))
             (let ((lst2 (env-ref env10765 1)))
               (let ((f1048710622
                      (make-closure
                       lam10762
                       take-helper
                       a1039010619
                       a1038810616
                       kont10485)))
                 (clo-app cons f1048710622 a1039110621 lst2)))))))))
  (proc
   (lam10766 env10767 a1039010619)
   (let ((a1038810616 (env-ref env10767 7)))
     (let ((car (env-ref env10767 6)))
       (let ((cons (env-ref env10767 5)))
         (let ((lst (env-ref env10767 4)))
           (let ((kont10485 (env-ref env10767 3)))
             (let ((take-helper (env-ref env10767 2)))
               (let ((lst2 (env-ref env10767 1)))
                 (let ((f1048810620
                        (make-closure
                         lam10764
                         lst2
                         take-helper
                         cons
                         a1039010619
                         a1038810616
                         kont10485)))
                   (clo-app car f1048810620 lst))))))))))
  (proc
   (lam10769 env10770 a1038810616)
   (let ((cons (env-ref env10770 8)))
     (let ((- (env-ref env10770 7)))
       (let ((lst (env-ref env10770 6)))
         (let ((kont10485 (env-ref env10770 5)))
           (let ((take-helper (env-ref env10770 4)))
             (let ((lst2 (env-ref env10770 3)))
               (let ((n (env-ref env10770 2)))
                 (let ((car (env-ref env10770 1)))
                   (let ((a1038910617 '1))
                     (let ((f1048910618
                            (make-closure
                             lam10766
                             lst2
                             take-helper
                             kont10485
                             lst
                             cons
                             car
                             a1038810616)))
                       (clo-app - f1048910618 n a1038910617))))))))))))
  (proc
   (lam10771 env10772 a1038610612)
   (let ((cdr (env-ref env10772 10)))
     (let ((reverse (env-ref env10772 9)))
       (let ((cons (env-ref env10772 8)))
         (let ((- (env-ref env10772 7)))
           (let ((lst (env-ref env10772 6)))
             (let ((kont10485 (env-ref env10772 5)))
               (let ((take-helper (env-ref env10772 4)))
                 (let ((lst2 (env-ref env10772 3)))
                   (let ((n (env-ref env10772 2)))
                     (let ((car (env-ref env10772 1)))
                       (if a1038610612
                         (let ((f1048610613 (make-closure lam10760 kont10485)))
                           (clo-app reverse f1048610613 lst2))
                         (let ((f1049010615
                                (make-closure
                                 lam10769
                                 car
                                 n
                                 lst2
                                 take-helper
                                 kont10485
                                 lst
                                 -
                                 cons)))
                           (clo-app cdr f1049010615 lst))))))))))))))
  (proc
   (take-helper _10774 kont10485 lst n lst2)
   (let ((a1038510610 '0))
     (let ((f1049110611
            (make-closure
             lam10771
             car
             n
             lst2
             take-helper
             kont10485
             lst
             -
             cons
             reverse
             cdr)))
       (clo-app = f1049110611 n a1038510610))))
  (proc
   (lam10775 env10776 a1039310625)
   (let ((lst (env-ref env10776 4)))
     (let ((kont10492 (env-ref env10776 3)))
       (let ((take-helper (env-ref env10776 2)))
         (let ((n (env-ref env10776 1)))
           (clo-app take-helper kont10492 lst n a1039310625))))))
  (proc
   (take _10777 kont10492 lst n)
   (let ((f1049310624 (make-closure lam10775 n take-helper kont10492 lst)))
     (clo-app list f1049310624)))
  (proc
   (lam10779 env10780 a1039810633)
   (let ((a1039610629 (env-ref env10780 3)))
     (let ((+ (env-ref env10780 2)))
       (let ((kont10494 (env-ref env10780 1)))
         (clo-app + kont10494 a1039610629 a1039810633)))))
  (proc
   (lam10781 env10782 a1039710631)
   (let ((a1039610629 (env-ref env10782 4)))
     (let ((length (env-ref env10782 3)))
       (let ((+ (env-ref env10782 2)))
         (let ((kont10494 (env-ref env10782 1)))
           (let ((f1049510632 (make-closure lam10779 kont10494 + a1039610629)))
             (clo-app length f1049510632 a1039710631)))))))
  (proc
   (lam10784 env10785 a1039410627)
   (let ((cdr (env-ref env10785 5)))
     (let ((lst (env-ref env10785 4)))
       (let ((length (env-ref env10785 3)))
         (let ((+ (env-ref env10785 2)))
           (let ((kont10494 (env-ref env10785 1)))
             (if a1039410627
               (let ((x1039510628 '0)) (clo-app kont10494 x1039510628))
               (let ((a1039610629 '1))
                 (let ((f1049610630
                        (make-closure
                         lam10781
                         kont10494
                         +
                         length
                         a1039610629)))
                   (clo-app cdr f1049610630 lst))))))))))
  (proc
   (length _10786 kont10494 lst)
   (let ((f1049710626 (make-closure lam10784 kont10494 + length lst cdr)))
     (clo-app null? f1049710626 lst)))
  (proc
   (lam10787 env10788 x1040010637)
   (let ((kont10498 (env-ref env10788 1))) (clo-app kont10498 x1040010637)))
  (proc
   (lam10789 env10790 a1040410645)
   (let ((a1040210641 (env-ref env10790 3)))
     (let ((kont10498 (env-ref env10790 2)))
       (let ((cons (env-ref env10790 1)))
         (clo-app cons kont10498 a1040210641 a1040410645)))))
  (proc
   (lam10791 env10792 a1040310643)
   (let ((a1040210641 (env-ref env10792 5)))
     (let ((kont10498 (env-ref env10792 4)))
       (let ((map (env-ref env10792 3)))
         (let ((proc (env-ref env10792 2)))
           (let ((cons (env-ref env10792 1)))
             (let ((f1050010644
                    (make-closure lam10789 cons kont10498 a1040210641)))
               (clo-app map f1050010644 proc a1040310643))))))))
  (proc
   (lam10793 env10794 a1040210641)
   (let ((cdr (env-ref env10794 6)))
     (let ((kont10498 (env-ref env10794 5)))
       (let ((lst (env-ref env10794 4)))
         (let ((map (env-ref env10794 3)))
           (let ((proc (env-ref env10794 2)))
             (let ((cons (env-ref env10794 1)))
               (let ((f1050110642
                      (make-closure
                       lam10791
                       cons
                       proc
                       map
                       kont10498
                       a1040210641)))
                 (clo-app cdr f1050110642 lst)))))))))
  (proc
   (lam10795 env10796 a1040110639)
   (let ((cdr (env-ref env10796 6)))
     (let ((kont10498 (env-ref env10796 5)))
       (let ((lst (env-ref env10796 4)))
         (let ((map (env-ref env10796 3)))
           (let ((proc (env-ref env10796 2)))
             (let ((cons (env-ref env10796 1)))
               (let ((f1050210640
                      (make-closure lam10793 cons proc map lst kont10498 cdr)))
                 (clo-app proc f1050210640 a1040110639)))))))))
  (proc
   (lam10797 env10798 a1039910635)
   (let ((kont10498 (env-ref env10798 8)))
     (let ((lst (env-ref env10798 7)))
       (let ((map (env-ref env10798 6)))
         (let ((proc (env-ref env10798 5)))
           (let ((car (env-ref env10798 4)))
             (let ((cons (env-ref env10798 3)))
               (let ((list (env-ref env10798 2)))
                 (let ((cdr (env-ref env10798 1)))
                   (if a1039910635
                     (let ((f1049910636 (make-closure lam10787 kont10498)))
                       (clo-app list f1049910636))
                     (let ((f1050310638
                            (make-closure
                             lam10795
                             cons
                             proc
                             map
                             lst
                             kont10498
                             cdr)))
                       (clo-app car f1050310638 lst))))))))))))
  (proc
   (map _10799 kont10498 proc lst)
   (let ((f1050410634
          (make-closure lam10797 cdr list cons car proc map lst kont10498)))
     (clo-app null? f1050410634 lst)))
  (proc
   (lam10800 env10801 x1040610649)
   (let ((kont10505 (env-ref env10801 1))) (clo-app kont10505 x1040610649)))
  (proc
   (lam10802 env10803 a1041110659)
   (let ((kont10505 (env-ref env10803 3)))
     (let ((cons (env-ref env10803 2)))
       (let ((a1040910655 (env-ref env10803 1)))
         (clo-app cons kont10505 a1040910655 a1041110659)))))
  (proc
   (lam10804 env10805 a1041010657)
   (let ((op (env-ref env10805 5)))
     (let ((kont10505 (env-ref env10805 4)))
       (let ((filter (env-ref env10805 3)))
         (let ((cons (env-ref env10805 2)))
           (let ((a1040910655 (env-ref env10805 1)))
             (let ((f1050710658
                    (make-closure lam10802 a1040910655 cons kont10505)))
               (clo-app filter f1050710658 op a1041010657))))))))
  (proc
   (lam10806 env10807 a1040910655)
   (let ((cdr (env-ref env10807 6)))
     (let ((lst (env-ref env10807 5)))
       (let ((op (env-ref env10807 4)))
         (let ((kont10505 (env-ref env10807 3)))
           (let ((filter (env-ref env10807 2)))
             (let ((cons (env-ref env10807 1)))
               (let ((f1050810656
                      (make-closure
                       lam10804
                       a1040910655
                       cons
                       filter
                       kont10505
                       op)))
                 (clo-app cdr f1050810656 lst)))))))))
  (proc
   (lam10808 env10809 a1041210661)
   (let ((op (env-ref env10809 3)))
     (let ((kont10505 (env-ref env10809 2)))
       (let ((filter (env-ref env10809 1)))
         (clo-app filter kont10505 op a1041210661)))))
  (proc
   (lam10810 env10811 a1040810653)
   (let ((cdr (env-ref env10811 7)))
     (let ((lst (env-ref env10811 6)))
       (let ((op (env-ref env10811 5)))
         (let ((kont10505 (env-ref env10811 4)))
           (let ((cons (env-ref env10811 3)))
             (let ((filter (env-ref env10811 2)))
               (let ((car (env-ref env10811 1)))
                 (if a1040810653
                   (let ((f1050910654
                          (make-closure
                           lam10806
                           cons
                           filter
                           kont10505
                           op
                           lst
                           cdr)))
                     (clo-app car f1050910654 lst))
                   (let ((f1051010660
                          (make-closure lam10808 filter kont10505 op)))
                     (clo-app cdr f1051010660 lst)))))))))))
  (proc
   (lam10812 env10813 a1040710651)
   (let ((cdr (env-ref env10813 7)))
     (let ((lst (env-ref env10813 6)))
       (let ((op (env-ref env10813 5)))
         (let ((kont10505 (env-ref env10813 4)))
           (let ((cons (env-ref env10813 3)))
             (let ((filter (env-ref env10813 2)))
               (let ((car (env-ref env10813 1)))
                 (let ((f1051110652
                        (make-closure
                         lam10810
                         car
                         filter
                         cons
                         kont10505
                         op
                         lst
                         cdr)))
                   (clo-app op f1051110652 a1040710651))))))))))
  (proc
   (lam10814 env10815 a1040510647)
   (let ((lst (env-ref env10815 8)))
     (let ((op (env-ref env10815 7)))
       (let ((kont10505 (env-ref env10815 6)))
         (let ((cons (env-ref env10815 5)))
           (let ((list (env-ref env10815 4)))
             (let ((cdr (env-ref env10815 3)))
               (let ((filter (env-ref env10815 2)))
                 (let ((car (env-ref env10815 1)))
                   (if a1040510647
                     (let ((f1050610648 (make-closure lam10800 kont10505)))
                       (clo-app list f1050610648))
                     (let ((f1051210650
                            (make-closure
                             lam10812
                             car
                             filter
                             cons
                             kont10505
                             op
                             lst
                             cdr)))
                       (clo-app car f1051210650 lst))))))))))))
  (proc
   (filter _10816 kont10505 op lst)
   (let ((f1051310646
          (make-closure lam10814 car filter cdr list cons kont10505 op lst)))
     (clo-app null? f1051310646 lst)))
  (proc
   (lam10817 env10818 a1041710669)
   (let ((kont10514 (env-ref env10818 3)))
     (let ((drop (env-ref env10818 2)))
       (let ((a1041510666 (env-ref env10818 1)))
         (clo-app drop kont10514 a1041510666 a1041710669)))))
  (proc
   (lam10820 env10821 a1041510666)
   (let ((kont10514 (env-ref env10821 4)))
     (let ((drop (env-ref env10821 3)))
       (let ((n (env-ref env10821 2)))
         (let ((- (env-ref env10821 1)))
           (let ((a1041610667 '1))
             (let ((f1051510668
                    (make-closure lam10817 a1041510666 drop kont10514)))
               (clo-app - f1051510668 n a1041610667))))))))
  (proc
   (lam10822 env10823 a1041410664)
   (let ((cdr (env-ref env10823 6)))
     (let ((kont10514 (env-ref env10823 5)))
       (let ((n (env-ref env10823 4)))
         (let ((- (env-ref env10823 3)))
           (let ((lst (env-ref env10823 2)))
             (let ((drop (env-ref env10823 1)))
               (if a1041410664
                 (clo-app kont10514 lst)
                 (let ((f1051610665
                        (make-closure lam10820 - n drop kont10514)))
                   (clo-app cdr f1051610665 lst))))))))))
  (proc
   (drop _10825 kont10514 lst n)
   (let ((a1041310662 '0))
     (let ((f1051710663 (make-closure lam10822 drop lst - n kont10514 cdr)))
       (clo-app = f1051710663 n a1041310662))))
  (proc
   (lam10826 env10827 a1042110677)
   (let ((a1041910673 (env-ref env10827 3)))
     (let ((kont10518 (env-ref env10827 2)))
       (let ((proc (env-ref env10827 1)))
         (clo-app proc kont10518 a1041910673 a1042110677)))))
  (proc
   (lam10828 env10829 a1042010675)
   (let ((a1041910673 (env-ref env10829 5)))
     (let ((foldr (env-ref env10829 4)))
       (let ((kont10518 (env-ref env10829 3)))
         (let ((proc (env-ref env10829 2)))
           (let ((acc (env-ref env10829 1)))
             (let ((f1051910676
                    (make-closure lam10826 proc kont10518 a1041910673)))
               (clo-app foldr f1051910676 proc acc a1042010675))))))))
  (proc
   (lam10830 env10831 a1041910673)
   (let ((cdr (env-ref env10831 6)))
     (let ((kont10518 (env-ref env10831 5)))
       (let ((foldr (env-ref env10831 4)))
         (let ((lst (env-ref env10831 3)))
           (let ((proc (env-ref env10831 2)))
             (let ((acc (env-ref env10831 1)))
               (let ((f1052010674
                      (make-closure
                       lam10828
                       acc
                       proc
                       kont10518
                       foldr
                       a1041910673)))
                 (clo-app cdr f1052010674 lst)))))))))
  (proc
   (lam10832 env10833 a1041810671)
   (let ((cdr (env-ref env10833 7)))
     (let ((kont10518 (env-ref env10833 6)))
       (let ((car (env-ref env10833 5)))
         (let ((foldr (env-ref env10833 4)))
           (let ((lst (env-ref env10833 3)))
             (let ((proc (env-ref env10833 2)))
               (let ((acc (env-ref env10833 1)))
                 (if a1041810671
                   (clo-app kont10518 acc)
                   (let ((f1052110672
                          (make-closure
                           lam10830
                           acc
                           proc
                           lst
                           foldr
                           kont10518
                           cdr)))
                     (clo-app car f1052110672 lst)))))))))))
  (proc
   (foldr _10834 kont10518 proc acc lst)
   (let ((f1052210670
          (make-closure lam10832 acc proc lst foldr car kont10518 cdr)))
     (clo-app null? f1052210670 lst)))
  (proc
   (lam10835 env10836 a1042510685)
   (let ((a1042310681 (env-ref env10836 3)))
     (let ((kont10523 (env-ref env10836 2)))
       (let ((cons (env-ref env10836 1)))
         (clo-app cons kont10523 a1042310681 a1042510685)))))
  (proc
   (lam10837 env10838 a1042410683)
   (let ((kont10523 (env-ref env10838 5)))
     (let ((lst2 (env-ref env10838 4)))
       (let ((cons (env-ref env10838 3)))
         (let ((append (env-ref env10838 2)))
           (let ((a1042310681 (env-ref env10838 1)))
             (let ((f1052410684
                    (make-closure lam10835 cons kont10523 a1042310681)))
               (clo-app append f1052410684 a1042410683 lst2))))))))
  (proc
   (lam10839 env10840 a1042310681)
   (let ((cdr (env-ref env10840 6)))
     (let ((append (env-ref env10840 5)))
       (let ((kont10523 (env-ref env10840 4)))
         (let ((lst2 (env-ref env10840 3)))
           (let ((lst1 (env-ref env10840 2)))
             (let ((cons (env-ref env10840 1)))
               (let ((f1052510682
                      (make-closure
                       lam10837
                       a1042310681
                       append
                       cons
                       lst2
                       kont10523)))
                 (clo-app cdr f1052510682 lst1)))))))))
  (proc
   (lam10841 env10842 a1042210679)
   (let ((cdr (env-ref env10842 7)))
     (let ((append (env-ref env10842 6)))
       (let ((kont10523 (env-ref env10842 5)))
         (let ((lst2 (env-ref env10842 4)))
           (let ((cons (env-ref env10842 3)))
             (let ((lst1 (env-ref env10842 2)))
               (let ((car (env-ref env10842 1)))
                 (if a1042210679
                   (clo-app kont10523 lst2)
                   (let ((f1052610680
                          (make-closure
                           lam10839
                           cons
                           lst1
                           lst2
                           kont10523
                           append
                           cdr)))
                     (clo-app car f1052610680 lst1)))))))))))
  (proc
   (append _10843 kont10523 lst1 lst2)
   (let ((f1052710678
          (make-closure lam10841 car lst1 cons lst2 kont10523 append cdr)))
     (clo-app null? f1052710678 lst1)))
  (proc
   (hash _10844 . lst)
   (let ((kont1052810686 (prim car lst)))
     (let ((lst10687 (prim cdr lst)))
       (let ((x1042610688 (apply-prim hash lst10687)))
         (clo-app kont1052810686 x1042610688)))))
  (proc
   (hash-ref _10845 kont10530 h k)
   (let ((x1042710689 (prim hash-ref h k))) (clo-app kont10530 x1042710689)))
  (proc
   (hash-set _10846 kont10531 h k v)
   (let ((x1042810690 (prim hash-set h k v))) (clo-app kont10531 x1042810690)))
  (proc
   (hash-has-key? _10847 kont10532 h k)
   (let ((x1042910691 (prim hash-has-key? h k)))
     (clo-app kont10532 x1042910691)))
  (proc
   (hash-count _10848 kont10533 h)
   (let ((x1043010692 (prim hash-count h))) (clo-app kont10533 x1043010692)))
  (proc
   (lam10849 env10850 a1043510698)
   (let ((a1043110693 (env-ref env10850 4)))
     (let ((+ (env-ref env10850 3)))
       (let ((a1043210694 (env-ref env10850 2)))
         (let ((kont10534 (env-ref env10850 1)))
           (clo-app + kont10534 a1043110693 a1043210694 a1043510698))))))
  (proc
   (call _10855 kont10534)
   (let ((a1043110693 '10))
     (let ((a1043210694 '3))
       (let ((a1043310695 '4))
         (let ((a1043410696 '3))
           (let ((f1053510697
                  (make-closure lam10849 kont10534 a1043210694 + a1043110693)))
             (clo-app + f1053510697 a1043310695 a1043410696)))))))
  (proc
   (lam10856 env10857 x1043610700)
   (let ((kont10536 (env-ref env10857 1))) (clo-app kont10536 x1043610700)))
  (proc
   (brouhaha_main _10858 kont10536)
   (let ((f1053710699 (make-closure lam10856 kont10536)))
     (clo-app call f1053710699))))
