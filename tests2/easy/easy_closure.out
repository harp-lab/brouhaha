'((proc
   (+ _10953 . lst)
   (let ((kont1068910790 (prim car lst)))
     (let ((lst10791 (prim cdr lst)))
       (let ((x1060010792 (apply-prim + lst10791)))
         (clo-app kont1068910790 x1060010792)))))
  (proc
   (- _10954 . lst)
   (let ((kont1069110793 (prim car lst)))
     (let ((lst10794 (prim cdr lst)))
       (let ((x1060110795 (apply-prim - lst10794)))
         (clo-app kont1069110793 x1060110795)))))
  (proc
   (* _10955 . lst)
   (let ((kont1069310796 (prim car lst)))
     (let ((lst10797 (prim cdr lst)))
       (let ((x1060210798 (apply-prim * lst10797)))
         (clo-app kont1069310796 x1060210798)))))
  (proc
   (modulo _10956 kont10695 a b)
   (let ((x1060310799 (prim modulo a b))) (clo-app kont10695 x1060310799)))
  (proc
   (/ _10957 . lst)
   (let ((kont1069610800 (prim car lst)))
     (let ((lst10801 (prim cdr lst)))
       (let ((x1060410802 (apply-prim / lst10801)))
         (clo-app kont1069610800 x1060410802)))))
  (proc
   (= _10958 . lst)
   (let ((kont1069810803 (prim car lst)))
     (let ((lst10804 (prim cdr lst)))
       (let ((x1060510805 (apply-prim = lst10804)))
         (clo-app kont1069810803 x1060510805)))))
  (proc
   (> _10959 . lst)
   (let ((kont1070010806 (prim car lst)))
     (let ((lst10807 (prim cdr lst)))
       (let ((x1060610808 (apply-prim > lst10807)))
         (clo-app kont1070010806 x1060610808)))))
  (proc
   (< _10960 . lst)
   (let ((kont1070210809 (prim car lst)))
     (let ((lst10810 (prim cdr lst)))
       (let ((x1060710811 (apply-prim < lst10810)))
         (clo-app kont1070210809 x1060710811)))))
  (proc
   (<= _10961 . lst)
   (let ((kont1070410812 (prim car lst)))
     (let ((lst10813 (prim cdr lst)))
       (let ((x1060810814 (apply-prim <= lst10813)))
         (clo-app kont1070410812 x1060810814)))))
  (proc
   (>= _10962 . lst)
   (let ((kont1070610815 (prim car lst)))
     (let ((lst10816 (prim cdr lst)))
       (let ((x1060910817 (apply-prim >= lst10816)))
         (clo-app kont1070610815 x1060910817)))))
  (proc
   (null? _10963 kont10708 x)
   (let ((x1061010818 (prim null? x))) (clo-app kont10708 x1061010818)))
  (proc
   (equal? _10964 kont10709 x y)
   (let ((x1061110819 (prim equal? x y))) (clo-app kont10709 x1061110819)))
  (proc
   (eq? _10965 kont10710 x y)
   (let ((x1061210820 (prim eq? x y))) (clo-app kont10710 x1061210820)))
  (proc
   (cons _10966 kont10711 a b)
   (let ((x1061310821 (prim cons a b))) (clo-app kont10711 x1061310821)))
  (proc
   (car _10967 kont10712 lst)
   (let ((x1061410822 (prim car lst))) (clo-app kont10712 x1061410822)))
  (proc
   (cdr _10968 kont10713 lst)
   (let ((x1061510823 (prim cdr lst))) (clo-app kont10713 x1061510823)))
  (proc
   (lam10969 env10970 a1061810827)
   (let ((a1061610824 (env-ref env10970 3)))
     (let ((kont10714 (env-ref env10970 2)))
       (let ((equal? (env-ref env10970 1)))
         (clo-app equal? kont10714 a1061610824 a1061810827)))))
  (proc
   (even? _10973 kont10714 x)
   (let ((a1061610824 '0))
     (let ((a1061710825 '2))
       (let ((f1071510826
              (make-closure lam10969 equal? kont10714 a1061610824)))
         (clo-app modulo f1071510826 x a1061710825)))))
  (proc
   (lam10974 env10975 a1062110831)
   (let ((equal? (env-ref env10975 3)))
     (let ((a1061910828 (env-ref env10975 2)))
       (let ((kont10716 (env-ref env10975 1)))
         (clo-app equal? kont10716 a1061910828 a1062110831)))))
  (proc
   (odd? _10978 kont10716 x)
   (let ((a1061910828 '1))
     (let ((a1062010829 '2))
       (let ((f1071710830
              (make-closure lam10974 kont10716 a1061910828 equal?)))
         (clo-app modulo f1071710830 x a1062010829)))))
  (proc
   (list _10979 . x)
   (let ((kont1071810832 (prim car x)))
     (let ((x10833 (prim cdr x))) (clo-app kont1071810832 x10833))))
  (proc
   (lam10982 env10983 a1062710843)
   (let ((kont10720 (env-ref env10983 3)))
     (let ((x (env-ref env10983 2)))
       (let ((member? (env-ref env10983 1)))
         (clo-app member? kont10720 x a1062710843)))))
  (proc
   (lam10984 env10985 a1062510840)
   (let ((cdr (env-ref env10985 5)))
     (let ((lst (env-ref env10985 4)))
       (let ((kont10720 (env-ref env10985 3)))
         (let ((x (env-ref env10985 2)))
           (let ((member? (env-ref env10985 1)))
             (if a1062510840
               (let ((x1062610841 '#t)) (clo-app kont10720 x1062610841))
               (let ((f1072110842 (make-closure lam10982 member? x kont10720)))
                 (clo-app cdr f1072110842 lst)))))))))
  (proc
   (lam10986 env10987 a1062410838)
   (let ((cdr (env-ref env10987 6)))
     (let ((lst (env-ref env10987 5)))
       (let ((equal? (env-ref env10987 4)))
         (let ((kont10720 (env-ref env10987 3)))
           (let ((x (env-ref env10987 2)))
             (let ((member? (env-ref env10987 1)))
               (let ((f1072210839
                      (make-closure lam10984 member? x kont10720 lst cdr)))
                 (clo-app equal? f1072210839 a1062410838 x)))))))))
  (proc
   (lam10988 env10989 a1062210835)
   (let ((cdr (env-ref env10989 7)))
     (let ((lst (env-ref env10989 6)))
       (let ((equal? (env-ref env10989 5)))
         (let ((kont10720 (env-ref env10989 4)))
           (let ((x (env-ref env10989 3)))
             (let ((car (env-ref env10989 2)))
               (let ((member? (env-ref env10989 1)))
                 (if a1062210835
                   (let ((x1062310836 '#f)) (clo-app kont10720 x1062310836))
                   (let ((f1072310837
                          (make-closure
                           lam10986
                           member?
                           x
                           kont10720
                           equal?
                           lst
                           cdr)))
                     (clo-app car f1072310837 lst)))))))))))
  (proc
   (member? _10990 kont10720 x lst)
   (let ((f1072410834
          (make-closure lam10988 member? car x kont10720 equal? lst cdr)))
     (clo-app null? f1072410834 lst)))
  (proc
   (lam10991 env10992 a1063110851)
   (let ((fun (env-ref env10992 4)))
     (let ((a1063010849 (env-ref env10992 3)))
       (let ((foldl (env-ref env10992 2)))
         (let ((kont10725 (env-ref env10992 1)))
           (clo-app foldl kont10725 fun a1063010849 a1063110851))))))
  (proc
   (lam10993 env10994 a1063010849)
   (let ((cdr (env-ref env10994 5)))
     (let ((lst (env-ref env10994 4)))
       (let ((fun (env-ref env10994 3)))
         (let ((foldl (env-ref env10994 2)))
           (let ((kont10725 (env-ref env10994 1)))
             (let ((f1072610850
                    (make-closure lam10991 kont10725 foldl a1063010849 fun)))
               (clo-app cdr f1072610850 lst))))))))
  (proc
   (lam10995 env10996 a1062910847)
   (let ((cdr (env-ref env10996 6)))
     (let ((lst (env-ref env10996 5)))
       (let ((fun (env-ref env10996 4)))
         (let ((acc (env-ref env10996 3)))
           (let ((foldl (env-ref env10996 2)))
             (let ((kont10725 (env-ref env10996 1)))
               (let ((f1072710848
                      (make-closure lam10993 kont10725 foldl fun lst cdr)))
                 (clo-app fun f1072710848 a1062910847 acc)))))))))
  (proc
   (lam10997 env10998 a1062810845)
   (let ((cdr (env-ref env10998 7)))
     (let ((lst (env-ref env10998 6)))
       (let ((fun (env-ref env10998 5)))
         (let ((acc (env-ref env10998 4)))
           (let ((car (env-ref env10998 3)))
             (let ((foldl (env-ref env10998 2)))
               (let ((kont10725 (env-ref env10998 1)))
                 (if a1062810845
                   (clo-app kont10725 acc)
                   (let ((f1072810846
                          (make-closure
                           lam10995
                           kont10725
                           foldl
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f1072810846 lst)))))))))))
  (proc
   (foldl _10999 kont10725 fun acc lst)
   (let ((f1072910844
          (make-closure lam10997 kont10725 foldl car acc fun lst cdr)))
     (clo-app null? f1072910844 lst)))
  (proc
   (lam11000 env11001 a1063510859)
   (let ((a1063310855 (env-ref env11001 3)))
     (let ((kont10730 (env-ref env11001 2)))
       (let ((reverse-helper (env-ref env11001 1)))
         (clo-app reverse-helper kont10730 a1063310855 a1063510859)))))
  (proc
   (lam11002 env11003 a1063410857)
   (let ((a1063310855 (env-ref env11003 5)))
     (let ((kont10730 (env-ref env11003 4)))
       (let ((reverse-helper (env-ref env11003 3)))
         (let ((lst2 (env-ref env11003 2)))
           (let ((cons (env-ref env11003 1)))
             (let ((f1073110858
                    (make-closure
                     lam11000
                     reverse-helper
                     kont10730
                     a1063310855)))
               (clo-app cons f1073110858 a1063410857 lst2))))))))
  (proc
   (lam11004 env11005 a1063310855)
   (let ((reverse-helper (env-ref env11005 6)))
     (let ((lst2 (env-ref env11005 5)))
       (let ((car (env-ref env11005 4)))
         (let ((cons (env-ref env11005 3)))
           (let ((lst (env-ref env11005 2)))
             (let ((kont10730 (env-ref env11005 1)))
               (let ((f1073210856
                      (make-closure
                       lam11002
                       cons
                       lst2
                       reverse-helper
                       kont10730
                       a1063310855)))
                 (clo-app car f1073210856 lst)))))))))
  (proc
   (lam11006 env11007 a1063210853)
   (let ((cdr (env-ref env11007 7)))
     (let ((reverse-helper (env-ref env11007 6)))
       (let ((lst2 (env-ref env11007 5)))
         (let ((car (env-ref env11007 4)))
           (let ((cons (env-ref env11007 3)))
             (let ((lst (env-ref env11007 2)))
               (let ((kont10730 (env-ref env11007 1)))
                 (if a1063210853
                   (clo-app kont10730 lst2)
                   (let ((f1073310854
                          (make-closure
                           lam11004
                           kont10730
                           lst
                           cons
                           car
                           lst2
                           reverse-helper)))
                     (clo-app cdr f1073310854 lst)))))))))))
  (proc
   (reverse-helper _11008 kont10730 lst lst2)
   (let ((f1073410852
          (make-closure
           lam11006
           kont10730
           lst
           cons
           car
           lst2
           reverse-helper
           cdr)))
     (clo-app null? f1073410852 lst)))
  (proc
   (lam11009 env11010 a1063610861)
   (let ((lst (env-ref env11010 3)))
     (let ((reverse-helper (env-ref env11010 2)))
       (let ((kont10735 (env-ref env11010 1)))
         (clo-app reverse-helper kont10735 lst a1063610861)))))
  (proc
   (reverse _11011 kont10735 lst)
   (let ((f1073610860 (make-closure lam11009 kont10735 reverse-helper lst)))
     (clo-app list f1073610860)))
  (proc
   (lam11012 env11013 x1063910866)
   (let ((kont10737 (env-ref env11013 1))) (clo-app kont10737 x1063910866)))
  (proc
   (lam11014 env11015 a1064410875)
   (let ((a1064210871 (env-ref env11015 4)))
     (let ((kont10737 (env-ref env11015 3)))
       (let ((take-helper (env-ref env11015 2)))
         (let ((a1064010868 (env-ref env11015 1)))
           (clo-app
            take-helper
            kont10737
            a1064010868
            a1064210871
            a1064410875))))))
  (proc
   (lam11016 env11017 a1064310873)
   (let ((a1064210871 (env-ref env11017 6)))
     (let ((kont10737 (env-ref env11017 5)))
       (let ((take-helper (env-ref env11017 4)))
         (let ((lst2 (env-ref env11017 3)))
           (let ((a1064010868 (env-ref env11017 2)))
             (let ((cons (env-ref env11017 1)))
               (let ((f1073910874
                      (make-closure
                       lam11014
                       a1064010868
                       take-helper
                       kont10737
                       a1064210871)))
                 (clo-app cons f1073910874 a1064310873 lst2)))))))))
  (proc
   (lam11018 env11019 a1064210871)
   (let ((lst (env-ref env11019 7)))
     (let ((kont10737 (env-ref env11019 6)))
       (let ((car (env-ref env11019 5)))
         (let ((take-helper (env-ref env11019 4)))
           (let ((lst2 (env-ref env11019 3)))
             (let ((a1064010868 (env-ref env11019 2)))
               (let ((cons (env-ref env11019 1)))
                 (let ((f1074010872
                        (make-closure
                         lam11016
                         cons
                         a1064010868
                         lst2
                         take-helper
                         kont10737
                         a1064210871)))
                   (clo-app car f1074010872 lst))))))))))
  (proc
   (lam11021 env11022 a1064010868)
   (let ((lst (env-ref env11022 8)))
     (let ((kont10737 (env-ref env11022 7)))
       (let ((cons (env-ref env11022 6)))
         (let ((- (env-ref env11022 5)))
           (let ((take-helper (env-ref env11022 4)))
             (let ((lst2 (env-ref env11022 3)))
               (let ((n (env-ref env11022 2)))
                 (let ((car (env-ref env11022 1)))
                   (let ((a1064110869 '1))
                     (let ((f1074110870
                            (make-closure
                             lam11018
                             cons
                             a1064010868
                             lst2
                             take-helper
                             car
                             kont10737
                             lst)))
                       (clo-app - f1074110870 n a1064110869))))))))))))
  (proc
   (lam11023 env11024 a1063810864)
   (let ((cdr (env-ref env11024 10)))
     (let ((lst (env-ref env11024 9)))
       (let ((reverse (env-ref env11024 8)))
         (let ((kont10737 (env-ref env11024 7)))
           (let ((cons (env-ref env11024 6)))
             (let ((- (env-ref env11024 5)))
               (let ((take-helper (env-ref env11024 4)))
                 (let ((lst2 (env-ref env11024 3)))
                   (let ((n (env-ref env11024 2)))
                     (let ((car (env-ref env11024 1)))
                       (if a1063810864
                         (let ((f1073810865 (make-closure lam11012 kont10737)))
                           (clo-app reverse f1073810865 lst2))
                         (let ((f1074210867
                                (make-closure
                                 lam11021
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont10737
                                 lst)))
                           (clo-app cdr f1074210867 lst))))))))))))))
  (proc
   (take-helper _11026 kont10737 lst n lst2)
   (let ((a1063710862 '0))
     (let ((f1074310863
            (make-closure
             lam11023
             car
             n
             lst2
             take-helper
             -
             cons
             kont10737
             reverse
             lst
             cdr)))
       (clo-app = f1074310863 n a1063710862))))
  (proc
   (lam11027 env11028 a1064510877)
   (let ((kont10744 (env-ref env11028 4)))
     (let ((lst (env-ref env11028 3)))
       (let ((take-helper (env-ref env11028 2)))
         (let ((n (env-ref env11028 1)))
           (clo-app take-helper kont10744 lst n a1064510877))))))
  (proc
   (take _11029 kont10744 lst n)
   (let ((f1074510876 (make-closure lam11027 n take-helper lst kont10744)))
     (clo-app list f1074510876)))
  (proc
   (lam11031 env11032 a1065010885)
   (let ((kont10746 (env-ref env11032 3)))
     (let ((+ (env-ref env11032 2)))
       (let ((a1064810881 (env-ref env11032 1)))
         (clo-app + kont10746 a1064810881 a1065010885)))))
  (proc
   (lam11033 env11034 a1064910883)
   (let ((kont10746 (env-ref env11034 4)))
     (let ((length (env-ref env11034 3)))
       (let ((+ (env-ref env11034 2)))
         (let ((a1064810881 (env-ref env11034 1)))
           (let ((f1074710884 (make-closure lam11031 a1064810881 + kont10746)))
             (clo-app length f1074710884 a1064910883)))))))
  (proc
   (lam11036 env11037 a1064610879)
   (let ((cdr (env-ref env11037 5)))
     (let ((length (env-ref env11037 4)))
       (let ((+ (env-ref env11037 3)))
         (let ((lst (env-ref env11037 2)))
           (let ((kont10746 (env-ref env11037 1)))
             (if a1064610879
               (let ((x1064710880 '0)) (clo-app kont10746 x1064710880))
               (let ((a1064810881 '1))
                 (let ((f1074810882
                        (make-closure
                         lam11033
                         a1064810881
                         +
                         length
                         kont10746)))
                   (clo-app cdr f1074810882 lst))))))))))
  (proc
   (length _11038 kont10746 lst)
   (let ((f1074910878 (make-closure lam11036 kont10746 lst + length cdr)))
     (clo-app null? f1074910878 lst)))
  (proc
   (lam11039 env11040 x1065210889)
   (let ((kont10750 (env-ref env11040 1))) (clo-app kont10750 x1065210889)))
  (proc
   (lam11041 env11042 a1065610897)
   (let ((a1065410893 (env-ref env11042 3)))
     (let ((kont10750 (env-ref env11042 2)))
       (let ((cons (env-ref env11042 1)))
         (clo-app cons kont10750 a1065410893 a1065610897)))))
  (proc
   (lam11043 env11044 a1065510895)
   (let ((map (env-ref env11044 5)))
     (let ((a1065410893 (env-ref env11044 4)))
       (let ((kont10750 (env-ref env11044 3)))
         (let ((proc (env-ref env11044 2)))
           (let ((cons (env-ref env11044 1)))
             (let ((f1075210896
                    (make-closure lam11041 cons kont10750 a1065410893)))
               (clo-app map f1075210896 proc a1065510895))))))))
  (proc
   (lam11045 env11046 a1065410893)
   (let ((cdr (env-ref env11046 6)))
     (let ((lst (env-ref env11046 5)))
       (let ((map (env-ref env11046 4)))
         (let ((kont10750 (env-ref env11046 3)))
           (let ((proc (env-ref env11046 2)))
             (let ((cons (env-ref env11046 1)))
               (let ((f1075310894
                      (make-closure
                       lam11043
                       cons
                       proc
                       kont10750
                       a1065410893
                       map)))
                 (clo-app cdr f1075310894 lst)))))))))
  (proc
   (lam11047 env11048 a1065310891)
   (let ((cdr (env-ref env11048 6)))
     (let ((lst (env-ref env11048 5)))
       (let ((map (env-ref env11048 4)))
         (let ((kont10750 (env-ref env11048 3)))
           (let ((proc (env-ref env11048 2)))
             (let ((cons (env-ref env11048 1)))
               (let ((f1075410892
                      (make-closure lam11045 cons proc kont10750 map lst cdr)))
                 (clo-app proc f1075410892 a1065310891)))))))))
  (proc
   (lam11049 env11050 a1065110887)
   (let ((lst (env-ref env11050 8)))
     (let ((map (env-ref env11050 7)))
       (let ((kont10750 (env-ref env11050 6)))
         (let ((proc (env-ref env11050 5)))
           (let ((car (env-ref env11050 4)))
             (let ((cons (env-ref env11050 3)))
               (let ((list (env-ref env11050 2)))
                 (let ((cdr (env-ref env11050 1)))
                   (if a1065110887
                     (let ((f1075110888 (make-closure lam11039 kont10750)))
                       (clo-app list f1075110888))
                     (let ((f1075510890
                            (make-closure
                             lam11047
                             cons
                             proc
                             kont10750
                             map
                             lst
                             cdr)))
                       (clo-app car f1075510890 lst))))))))))))
  (proc
   (map _11051 kont10750 proc lst)
   (let ((f1075610886
          (make-closure lam11049 cdr list cons car proc kont10750 map lst)))
     (clo-app null? f1075610886 lst)))
  (proc
   (lam11052 env11053 x1065810901)
   (let ((kont10757 (env-ref env11053 1))) (clo-app kont10757 x1065810901)))
  (proc
   (lam11054 env11055 a1066310911)
   (let ((a1066110907 (env-ref env11055 3)))
     (let ((cons (env-ref env11055 2)))
       (let ((kont10757 (env-ref env11055 1)))
         (clo-app cons kont10757 a1066110907 a1066310911)))))
  (proc
   (lam11056 env11057 a1066210909)
   (let ((a1066110907 (env-ref env11057 5)))
     (let ((op (env-ref env11057 4)))
       (let ((filter (env-ref env11057 3)))
         (let ((cons (env-ref env11057 2)))
           (let ((kont10757 (env-ref env11057 1)))
             (let ((f1075910910
                    (make-closure lam11054 kont10757 cons a1066110907)))
               (clo-app filter f1075910910 op a1066210909))))))))
  (proc
   (lam11058 env11059 a1066110907)
   (let ((cdr (env-ref env11059 6)))
     (let ((lst (env-ref env11059 5)))
       (let ((op (env-ref env11059 4)))
         (let ((filter (env-ref env11059 3)))
           (let ((cons (env-ref env11059 2)))
             (let ((kont10757 (env-ref env11059 1)))
               (let ((f1076010908
                      (make-closure
                       lam11056
                       kont10757
                       cons
                       filter
                       op
                       a1066110907)))
                 (clo-app cdr f1076010908 lst)))))))))
  (proc
   (lam11060 env11061 a1066410913)
   (let ((op (env-ref env11061 3)))
     (let ((filter (env-ref env11061 2)))
       (let ((kont10757 (env-ref env11061 1)))
         (clo-app filter kont10757 op a1066410913)))))
  (proc
   (lam11062 env11063 a1066010905)
   (let ((cdr (env-ref env11063 7)))
     (let ((lst (env-ref env11063 6)))
       (let ((op (env-ref env11063 5)))
         (let ((cons (env-ref env11063 4)))
           (let ((kont10757 (env-ref env11063 3)))
             (let ((filter (env-ref env11063 2)))
               (let ((car (env-ref env11063 1)))
                 (if a1066010905
                   (let ((f1076110906
                          (make-closure
                           lam11058
                           kont10757
                           cons
                           filter
                           op
                           lst
                           cdr)))
                     (clo-app car f1076110906 lst))
                   (let ((f1076210912
                          (make-closure lam11060 kont10757 filter op)))
                     (clo-app cdr f1076210912 lst)))))))))))
  (proc
   (lam11064 env11065 a1065910903)
   (let ((cdr (env-ref env11065 7)))
     (let ((lst (env-ref env11065 6)))
       (let ((op (env-ref env11065 5)))
         (let ((cons (env-ref env11065 4)))
           (let ((kont10757 (env-ref env11065 3)))
             (let ((filter (env-ref env11065 2)))
               (let ((car (env-ref env11065 1)))
                 (let ((f1076310904
                        (make-closure
                         lam11062
                         car
                         filter
                         kont10757
                         cons
                         op
                         lst
                         cdr)))
                   (clo-app op f1076310904 a1065910903))))))))))
  (proc
   (lam11066 env11067 a1065710899)
   (let ((lst (env-ref env11067 8)))
     (let ((op (env-ref env11067 7)))
       (let ((cons (env-ref env11067 6)))
         (let ((kont10757 (env-ref env11067 5)))
           (let ((list (env-ref env11067 4)))
             (let ((cdr (env-ref env11067 3)))
               (let ((filter (env-ref env11067 2)))
                 (let ((car (env-ref env11067 1)))
                   (if a1065710899
                     (let ((f1075810900 (make-closure lam11052 kont10757)))
                       (clo-app list f1075810900))
                     (let ((f1076410902
                            (make-closure
                             lam11064
                             car
                             filter
                             kont10757
                             cons
                             op
                             lst
                             cdr)))
                       (clo-app car f1076410902 lst))))))))))))
  (proc
   (filter _11068 kont10757 op lst)
   (let ((f1076510898
          (make-closure lam11066 car filter cdr list kont10757 cons op lst)))
     (clo-app null? f1076510898 lst)))
  (proc
   (lam11069 env11070 a1066910921)
   (let ((a1066710918 (env-ref env11070 3)))
     (let ((drop (env-ref env11070 2)))
       (let ((kont10766 (env-ref env11070 1)))
         (clo-app drop kont10766 a1066710918 a1066910921)))))
  (proc
   (lam11072 env11073 a1066710918)
   (let ((drop (env-ref env11073 4)))
     (let ((kont10766 (env-ref env11073 3)))
       (let ((n (env-ref env11073 2)))
         (let ((- (env-ref env11073 1)))
           (let ((a1066810919 '1))
             (let ((f1076710920
                    (make-closure lam11069 kont10766 drop a1066710918)))
               (clo-app - f1076710920 n a1066810919))))))))
  (proc
   (lam11074 env11075 a1066610916)
   (let ((cdr (env-ref env11075 6)))
     (let ((kont10766 (env-ref env11075 5)))
       (let ((n (env-ref env11075 4)))
         (let ((- (env-ref env11075 3)))
           (let ((lst (env-ref env11075 2)))
             (let ((drop (env-ref env11075 1)))
               (if a1066610916
                 (clo-app kont10766 lst)
                 (let ((f1076810917
                        (make-closure lam11072 - n kont10766 drop)))
                   (clo-app cdr f1076810917 lst))))))))))
  (proc
   (drop _11077 kont10766 lst n)
   (let ((a1066510914 '0))
     (let ((f1076910915 (make-closure lam11074 drop lst - n kont10766 cdr)))
       (clo-app = f1076910915 n a1066510914))))
  (proc
   (lam11078 env11079 a1067310929)
   (let ((a1067110925 (env-ref env11079 3)))
     (let ((proc (env-ref env11079 2)))
       (let ((kont10770 (env-ref env11079 1)))
         (clo-app proc kont10770 a1067110925 a1067310929)))))
  (proc
   (lam11080 env11081 a1067210927)
   (let ((foldr (env-ref env11081 5)))
     (let ((a1067110925 (env-ref env11081 4)))
       (let ((kont10770 (env-ref env11081 3)))
         (let ((proc (env-ref env11081 2)))
           (let ((acc (env-ref env11081 1)))
             (let ((f1077110928
                    (make-closure lam11078 kont10770 proc a1067110925)))
               (clo-app foldr f1077110928 proc acc a1067210927))))))))
  (proc
   (lam11082 env11083 a1067110925)
   (let ((cdr (env-ref env11083 6)))
     (let ((kont10770 (env-ref env11083 5)))
       (let ((foldr (env-ref env11083 4)))
         (let ((lst (env-ref env11083 3)))
           (let ((proc (env-ref env11083 2)))
             (let ((acc (env-ref env11083 1)))
               (let ((f1077210926
                      (make-closure
                       lam11080
                       acc
                       proc
                       kont10770
                       a1067110925
                       foldr)))
                 (clo-app cdr f1077210926 lst)))))))))
  (proc
   (lam11084 env11085 a1067010923)
   (let ((cdr (env-ref env11085 7)))
     (let ((kont10770 (env-ref env11085 6)))
       (let ((car (env-ref env11085 5)))
         (let ((foldr (env-ref env11085 4)))
           (let ((lst (env-ref env11085 3)))
             (let ((proc (env-ref env11085 2)))
               (let ((acc (env-ref env11085 1)))
                 (if a1067010923
                   (clo-app kont10770 acc)
                   (let ((f1077310924
                          (make-closure
                           lam11082
                           acc
                           proc
                           lst
                           foldr
                           kont10770
                           cdr)))
                     (clo-app car f1077310924 lst)))))))))))
  (proc
   (foldr _11086 kont10770 proc acc lst)
   (let ((f1077410922
          (make-closure lam11084 acc proc lst foldr car kont10770 cdr)))
     (clo-app null? f1077410922 lst)))
  (proc
   (lam11087 env11088 a1067710937)
   (let ((kont10775 (env-ref env11088 3)))
     (let ((cons (env-ref env11088 2)))
       (let ((a1067510933 (env-ref env11088 1)))
         (clo-app cons kont10775 a1067510933 a1067710937)))))
  (proc
   (lam11089 env11090 a1067610935)
   (let ((kont10775 (env-ref env11090 5)))
     (let ((append (env-ref env11090 4)))
       (let ((lst2 (env-ref env11090 3)))
         (let ((cons (env-ref env11090 2)))
           (let ((a1067510933 (env-ref env11090 1)))
             (let ((f1077610936
                    (make-closure lam11087 a1067510933 cons kont10775)))
               (clo-app append f1077610936 a1067610935 lst2))))))))
  (proc
   (lam11091 env11092 a1067510933)
   (let ((cdr (env-ref env11092 6)))
     (let ((kont10775 (env-ref env11092 5)))
       (let ((append (env-ref env11092 4)))
         (let ((lst2 (env-ref env11092 3)))
           (let ((lst1 (env-ref env11092 2)))
             (let ((cons (env-ref env11092 1)))
               (let ((f1077710934
                      (make-closure
                       lam11089
                       a1067510933
                       cons
                       lst2
                       append
                       kont10775)))
                 (clo-app cdr f1077710934 lst1)))))))))
  (proc
   (lam11093 env11094 a1067410931)
   (let ((cdr (env-ref env11094 7)))
     (let ((kont10775 (env-ref env11094 6)))
       (let ((append (env-ref env11094 5)))
         (let ((lst2 (env-ref env11094 4)))
           (let ((cons (env-ref env11094 3)))
             (let ((lst1 (env-ref env11094 2)))
               (let ((car (env-ref env11094 1)))
                 (if a1067410931
                   (clo-app kont10775 lst2)
                   (let ((f1077810932
                          (make-closure
                           lam11091
                           cons
                           lst1
                           lst2
                           append
                           kont10775
                           cdr)))
                     (clo-app car f1077810932 lst1)))))))))))
  (proc
   (append _11095 kont10775 lst1 lst2)
   (let ((f1077910930
          (make-closure lam11093 car lst1 cons lst2 append kont10775 cdr)))
     (clo-app null? f1077910930 lst1)))
  (proc
   (hash _11096 . lst)
   (let ((kont1078010938 (prim car lst)))
     (let ((lst10939 (prim cdr lst)))
       (let ((x1067810940 (apply-prim hash lst10939)))
         (clo-app kont1078010938 x1067810940)))))
  (proc
   (hash-ref _11097 kont10782 h k)
   (let ((x1067910941 (prim hash-ref h k))) (clo-app kont10782 x1067910941)))
  (proc
   (hash-set _11098 kont10783 h k v)
   (let ((x1068010942 (prim hash-set h k v))) (clo-app kont10783 x1068010942)))
  (proc
   (hash-has-key? _11099 kont10784 h k)
   (let ((x1068110943 (prim hash-has-key? h k)))
     (clo-app kont10784 x1068110943)))
  (proc
   (hash-count _11100 kont10785 h)
   (let ((x1068210944 (prim hash-count h))) (clo-app kont10785 x1068210944)))
  (proc
   (lam11101 env11102 a1068710950)
   (let ((+ (env-ref env11102 4)))
     (let ((a1068310945 (env-ref env11102 3)))
       (let ((a1068410946 (env-ref env11102 2)))
         (let ((kont10786 (env-ref env11102 1)))
           (clo-app + kont10786 a1068310945 a1068410946 a1068710950))))))
  (proc
   (call _11107 kont10786)
   (let ((a1068310945 '10))
     (let ((a1068410946 '3))
       (let ((a1068510947 '4))
         (let ((a1068610948 '3))
           (let ((f1078710949
                  (make-closure lam11101 kont10786 a1068410946 a1068310945 +)))
             (clo-app + f1078710949 a1068510947 a1068610948)))))))
  (proc
   (lam11108 env11109 x1068810952)
   (let ((kont10788 (env-ref env11109 1))) (clo-app kont10788 x1068810952)))
  (proc
   (brouhaha_main _11110 kont10788)
   (let ((f1078910951 (make-closure lam11108 kont10788)))
     (clo-app call f1078910951))))
