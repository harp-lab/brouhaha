'((proc
   (+ _10957 . lst)
   (let ((kont1069310794 (prim car lst)))
     (let ((lst10795 (prim cdr lst)))
       (let ((x1060410796 (apply-prim + lst10795)))
         (clo-app kont1069310794 x1060410796)))))
  (proc
   (- _10958 . lst)
   (let ((kont1069510797 (prim car lst)))
     (let ((lst10798 (prim cdr lst)))
       (let ((x1060510799 (apply-prim - lst10798)))
         (clo-app kont1069510797 x1060510799)))))
  (proc
   (* _10959 . lst)
   (let ((kont1069710800 (prim car lst)))
     (let ((lst10801 (prim cdr lst)))
       (let ((x1060610802 (apply-prim * lst10801)))
         (clo-app kont1069710800 x1060610802)))))
  (proc
   (modulo _10960 kont10699 a b)
   (let ((x1060710803 (prim modulo a b))) (clo-app kont10699 x1060710803)))
  (proc
   (/ _10961 . lst)
   (let ((kont1070010804 (prim car lst)))
     (let ((lst10805 (prim cdr lst)))
       (let ((x1060810806 (apply-prim / lst10805)))
         (clo-app kont1070010804 x1060810806)))))
  (proc
   (= _10962 . lst)
   (let ((kont1070210807 (prim car lst)))
     (let ((lst10808 (prim cdr lst)))
       (let ((x1060910809 (apply-prim = lst10808)))
         (clo-app kont1070210807 x1060910809)))))
  (proc
   (> _10963 . lst)
   (let ((kont1070410810 (prim car lst)))
     (let ((lst10811 (prim cdr lst)))
       (let ((x1061010812 (apply-prim > lst10811)))
         (clo-app kont1070410810 x1061010812)))))
  (proc
   (< _10964 . lst)
   (let ((kont1070610813 (prim car lst)))
     (let ((lst10814 (prim cdr lst)))
       (let ((x1061110815 (apply-prim < lst10814)))
         (clo-app kont1070610813 x1061110815)))))
  (proc
   (<= _10965 . lst)
   (let ((kont1070810816 (prim car lst)))
     (let ((lst10817 (prim cdr lst)))
       (let ((x1061210818 (apply-prim <= lst10817)))
         (clo-app kont1070810816 x1061210818)))))
  (proc
   (>= _10966 . lst)
   (let ((kont1071010819 (prim car lst)))
     (let ((lst10820 (prim cdr lst)))
       (let ((x1061310821 (apply-prim >= lst10820)))
         (clo-app kont1071010819 x1061310821)))))
  (proc
   (null? _10967 kont10712 x)
   (let ((x1061410822 (prim null? x))) (clo-app kont10712 x1061410822)))
  (proc
   (equal? _10968 kont10713 x y)
   (let ((x1061510823 (prim equal? x y))) (clo-app kont10713 x1061510823)))
  (proc
   (eq? _10969 kont10714 x y)
   (let ((x1061610824 (prim eq? x y))) (clo-app kont10714 x1061610824)))
  (proc
   (cons _10970 kont10715 a b)
   (let ((x1061710825 (prim cons a b))) (clo-app kont10715 x1061710825)))
  (proc
   (car _10971 kont10716 lst)
   (let ((x1061810826 (prim car lst))) (clo-app kont10716 x1061810826)))
  (proc
   (cdr _10972 kont10717 lst)
   (let ((x1061910827 (prim cdr lst))) (clo-app kont10717 x1061910827)))
  (proc
   (lam10973 env10974 a1062210831)
   (let ((a1062010828 (env-ref env10974 3)))
     (let ((kont10718 (env-ref env10974 2)))
       (let ((equal? (env-ref env10974 1)))
         (clo-app equal? kont10718 a1062010828 a1062210831)))))
  (proc
   (even? _10977 kont10718 x)
   (let ((a1062010828 '0))
     (let ((a1062110829 '2))
       (let ((f1071910830
              (make-closure lam10973 equal? kont10718 a1062010828)))
         (clo-app modulo f1071910830 x a1062110829)))))
  (proc
   (lam10978 env10979 a1062510835)
   (let ((equal? (env-ref env10979 3)))
     (let ((a1062310832 (env-ref env10979 2)))
       (let ((kont10720 (env-ref env10979 1)))
         (clo-app equal? kont10720 a1062310832 a1062510835)))))
  (proc
   (odd? _10982 kont10720 x)
   (let ((a1062310832 '1))
     (let ((a1062410833 '2))
       (let ((f1072110834
              (make-closure lam10978 kont10720 a1062310832 equal?)))
         (clo-app modulo f1072110834 x a1062410833)))))
  (proc
   (list _10983 . x)
   (let ((kont1072210836 (prim car x)))
     (let ((x10837 (prim cdr x))) (clo-app kont1072210836 x10837))))
  (proc
   (lam10986 env10987 a1063110847)
   (let ((kont10724 (env-ref env10987 3)))
     (let ((x (env-ref env10987 2)))
       (let ((member? (env-ref env10987 1)))
         (clo-app member? kont10724 x a1063110847)))))
  (proc
   (lam10988 env10989 a1062910844)
   (let ((cdr (env-ref env10989 5)))
     (let ((lst (env-ref env10989 4)))
       (let ((kont10724 (env-ref env10989 3)))
         (let ((x (env-ref env10989 2)))
           (let ((member? (env-ref env10989 1)))
             (if a1062910844
               (let ((x1063010845 '#t)) (clo-app kont10724 x1063010845))
               (let ((f1072510846 (make-closure lam10986 member? x kont10724)))
                 (clo-app cdr f1072510846 lst)))))))))
  (proc
   (lam10990 env10991 a1062810842)
   (let ((cdr (env-ref env10991 6)))
     (let ((lst (env-ref env10991 5)))
       (let ((equal? (env-ref env10991 4)))
         (let ((kont10724 (env-ref env10991 3)))
           (let ((x (env-ref env10991 2)))
             (let ((member? (env-ref env10991 1)))
               (let ((f1072610843
                      (make-closure lam10988 member? x kont10724 lst cdr)))
                 (clo-app equal? f1072610843 a1062810842 x)))))))))
  (proc
   (lam10992 env10993 a1062610839)
   (let ((cdr (env-ref env10993 7)))
     (let ((lst (env-ref env10993 6)))
       (let ((equal? (env-ref env10993 5)))
         (let ((kont10724 (env-ref env10993 4)))
           (let ((x (env-ref env10993 3)))
             (let ((car (env-ref env10993 2)))
               (let ((member? (env-ref env10993 1)))
                 (if a1062610839
                   (let ((x1062710840 '#f)) (clo-app kont10724 x1062710840))
                   (let ((f1072710841
                          (make-closure
                           lam10990
                           member?
                           x
                           kont10724
                           equal?
                           lst
                           cdr)))
                     (clo-app car f1072710841 lst)))))))))))
  (proc
   (member? _10994 kont10724 x lst)
   (let ((f1072810838
          (make-closure lam10992 member? car x kont10724 equal? lst cdr)))
     (clo-app null? f1072810838 lst)))
  (proc
   (lam10995 env10996 a1063510855)
   (let ((fun (env-ref env10996 4)))
     (let ((a1063410853 (env-ref env10996 3)))
       (let ((foldl (env-ref env10996 2)))
         (let ((kont10729 (env-ref env10996 1)))
           (clo-app foldl kont10729 fun a1063410853 a1063510855))))))
  (proc
   (lam10997 env10998 a1063410853)
   (let ((cdr (env-ref env10998 5)))
     (let ((lst (env-ref env10998 4)))
       (let ((fun (env-ref env10998 3)))
         (let ((foldl (env-ref env10998 2)))
           (let ((kont10729 (env-ref env10998 1)))
             (let ((f1073010854
                    (make-closure lam10995 kont10729 foldl a1063410853 fun)))
               (clo-app cdr f1073010854 lst))))))))
  (proc
   (lam10999 env11000 a1063310851)
   (let ((cdr (env-ref env11000 6)))
     (let ((lst (env-ref env11000 5)))
       (let ((fun (env-ref env11000 4)))
         (let ((acc (env-ref env11000 3)))
           (let ((foldl (env-ref env11000 2)))
             (let ((kont10729 (env-ref env11000 1)))
               (let ((f1073110852
                      (make-closure lam10997 kont10729 foldl fun lst cdr)))
                 (clo-app fun f1073110852 a1063310851 acc)))))))))
  (proc
   (lam11001 env11002 a1063210849)
   (let ((cdr (env-ref env11002 7)))
     (let ((lst (env-ref env11002 6)))
       (let ((fun (env-ref env11002 5)))
         (let ((acc (env-ref env11002 4)))
           (let ((car (env-ref env11002 3)))
             (let ((foldl (env-ref env11002 2)))
               (let ((kont10729 (env-ref env11002 1)))
                 (if a1063210849
                   (clo-app kont10729 acc)
                   (let ((f1073210850
                          (make-closure
                           lam10999
                           kont10729
                           foldl
                           acc
                           fun
                           lst
                           cdr)))
                     (clo-app car f1073210850 lst)))))))))))
  (proc
   (foldl _11003 kont10729 fun acc lst)
   (let ((f1073310848
          (make-closure lam11001 kont10729 foldl car acc fun lst cdr)))
     (clo-app null? f1073310848 lst)))
  (proc
   (lam11004 env11005 a1063910863)
   (let ((a1063710859 (env-ref env11005 3)))
     (let ((kont10734 (env-ref env11005 2)))
       (let ((reverse-helper (env-ref env11005 1)))
         (clo-app reverse-helper kont10734 a1063710859 a1063910863)))))
  (proc
   (lam11006 env11007 a1063810861)
   (let ((a1063710859 (env-ref env11007 5)))
     (let ((kont10734 (env-ref env11007 4)))
       (let ((reverse-helper (env-ref env11007 3)))
         (let ((lst2 (env-ref env11007 2)))
           (let ((cons (env-ref env11007 1)))
             (let ((f1073510862
                    (make-closure
                     lam11004
                     reverse-helper
                     kont10734
                     a1063710859)))
               (clo-app cons f1073510862 a1063810861 lst2))))))))
  (proc
   (lam11008 env11009 a1063710859)
   (let ((reverse-helper (env-ref env11009 6)))
     (let ((lst2 (env-ref env11009 5)))
       (let ((car (env-ref env11009 4)))
         (let ((cons (env-ref env11009 3)))
           (let ((lst (env-ref env11009 2)))
             (let ((kont10734 (env-ref env11009 1)))
               (let ((f1073610860
                      (make-closure
                       lam11006
                       cons
                       lst2
                       reverse-helper
                       kont10734
                       a1063710859)))
                 (clo-app car f1073610860 lst)))))))))
  (proc
   (lam11010 env11011 a1063610857)
   (let ((cdr (env-ref env11011 7)))
     (let ((reverse-helper (env-ref env11011 6)))
       (let ((lst2 (env-ref env11011 5)))
         (let ((car (env-ref env11011 4)))
           (let ((cons (env-ref env11011 3)))
             (let ((lst (env-ref env11011 2)))
               (let ((kont10734 (env-ref env11011 1)))
                 (if a1063610857
                   (clo-app kont10734 lst2)
                   (let ((f1073710858
                          (make-closure
                           lam11008
                           kont10734
                           lst
                           cons
                           car
                           lst2
                           reverse-helper)))
                     (clo-app cdr f1073710858 lst)))))))))))
  (proc
   (reverse-helper _11012 kont10734 lst lst2)
   (let ((f1073810856
          (make-closure
           lam11010
           kont10734
           lst
           cons
           car
           lst2
           reverse-helper
           cdr)))
     (clo-app null? f1073810856 lst)))
  (proc
   (lam11013 env11014 a1064010865)
   (let ((lst (env-ref env11014 3)))
     (let ((reverse-helper (env-ref env11014 2)))
       (let ((kont10739 (env-ref env11014 1)))
         (clo-app reverse-helper kont10739 lst a1064010865)))))
  (proc
   (reverse _11015 kont10739 lst)
   (let ((f1074010864 (make-closure lam11013 kont10739 reverse-helper lst)))
     (clo-app list f1074010864)))
  (proc
   (lam11016 env11017 x1064310870)
   (let ((kont10741 (env-ref env11017 1))) (clo-app kont10741 x1064310870)))
  (proc
   (lam11018 env11019 a1064810879)
   (let ((a1064610875 (env-ref env11019 4)))
     (let ((kont10741 (env-ref env11019 3)))
       (let ((take-helper (env-ref env11019 2)))
         (let ((a1064410872 (env-ref env11019 1)))
           (clo-app
            take-helper
            kont10741
            a1064410872
            a1064610875
            a1064810879))))))
  (proc
   (lam11020 env11021 a1064710877)
   (let ((a1064610875 (env-ref env11021 6)))
     (let ((kont10741 (env-ref env11021 5)))
       (let ((take-helper (env-ref env11021 4)))
         (let ((lst2 (env-ref env11021 3)))
           (let ((cons (env-ref env11021 2)))
             (let ((a1064410872 (env-ref env11021 1)))
               (let ((f1074310878
                      (make-closure
                       lam11018
                       a1064410872
                       take-helper
                       kont10741
                       a1064610875)))
                 (clo-app cons f1074310878 a1064710877 lst2)))))))))
  (proc
   (lam11022 env11023 a1064610875)
   (let ((lst (env-ref env11023 7)))
     (let ((kont10741 (env-ref env11023 6)))
       (let ((car (env-ref env11023 5)))
         (let ((take-helper (env-ref env11023 4)))
           (let ((lst2 (env-ref env11023 3)))
             (let ((cons (env-ref env11023 2)))
               (let ((a1064410872 (env-ref env11023 1)))
                 (let ((f1074410876
                        (make-closure
                         lam11020
                         a1064410872
                         cons
                         lst2
                         take-helper
                         kont10741
                         a1064610875)))
                   (clo-app car f1074410876 lst))))))))))
  (proc
   (lam11025 env11026 a1064410872)
   (let ((lst (env-ref env11026 8)))
     (let ((kont10741 (env-ref env11026 7)))
       (let ((cons (env-ref env11026 6)))
         (let ((- (env-ref env11026 5)))
           (let ((take-helper (env-ref env11026 4)))
             (let ((lst2 (env-ref env11026 3)))
               (let ((n (env-ref env11026 2)))
                 (let ((car (env-ref env11026 1)))
                   (let ((a1064510873 '1))
                     (let ((f1074510874
                            (make-closure
                             lam11022
                             a1064410872
                             cons
                             lst2
                             take-helper
                             car
                             kont10741
                             lst)))
                       (clo-app - f1074510874 n a1064510873))))))))))))
  (proc
   (lam11027 env11028 a1064210868)
   (let ((cdr (env-ref env11028 10)))
     (let ((lst (env-ref env11028 9)))
       (let ((reverse (env-ref env11028 8)))
         (let ((kont10741 (env-ref env11028 7)))
           (let ((cons (env-ref env11028 6)))
             (let ((- (env-ref env11028 5)))
               (let ((take-helper (env-ref env11028 4)))
                 (let ((lst2 (env-ref env11028 3)))
                   (let ((n (env-ref env11028 2)))
                     (let ((car (env-ref env11028 1)))
                       (if a1064210868
                         (let ((f1074210869 (make-closure lam11016 kont10741)))
                           (clo-app reverse f1074210869 lst2))
                         (let ((f1074610871
                                (make-closure
                                 lam11025
                                 car
                                 n
                                 lst2
                                 take-helper
                                 -
                                 cons
                                 kont10741
                                 lst)))
                           (clo-app cdr f1074610871 lst))))))))))))))
  (proc
   (take-helper _11030 kont10741 lst n lst2)
   (let ((a1064110866 '0))
     (let ((f1074710867
            (make-closure
             lam11027
             car
             n
             lst2
             take-helper
             -
             cons
             kont10741
             reverse
             lst
             cdr)))
       (clo-app = f1074710867 n a1064110866))))
  (proc
   (lam11031 env11032 a1064910881)
   (let ((kont10748 (env-ref env11032 4)))
     (let ((lst (env-ref env11032 3)))
       (let ((take-helper (env-ref env11032 2)))
         (let ((n (env-ref env11032 1)))
           (clo-app take-helper kont10748 lst n a1064910881))))))
  (proc
   (take _11033 kont10748 lst n)
   (let ((f1074910880 (make-closure lam11031 n take-helper lst kont10748)))
     (clo-app list f1074910880)))
  (proc
   (lam11035 env11036 a1065410889)
   (let ((kont10750 (env-ref env11036 3)))
     (let ((+ (env-ref env11036 2)))
       (let ((a1065210885 (env-ref env11036 1)))
         (clo-app + kont10750 a1065210885 a1065410889)))))
  (proc
   (lam11037 env11038 a1065310887)
   (let ((kont10750 (env-ref env11038 4)))
     (let ((length (env-ref env11038 3)))
       (let ((+ (env-ref env11038 2)))
         (let ((a1065210885 (env-ref env11038 1)))
           (let ((f1075110888 (make-closure lam11035 a1065210885 + kont10750)))
             (clo-app length f1075110888 a1065310887)))))))
  (proc
   (lam11040 env11041 a1065010883)
   (let ((cdr (env-ref env11041 5)))
     (let ((length (env-ref env11041 4)))
       (let ((+ (env-ref env11041 3)))
         (let ((lst (env-ref env11041 2)))
           (let ((kont10750 (env-ref env11041 1)))
             (if a1065010883
               (let ((x1065110884 '0)) (clo-app kont10750 x1065110884))
               (let ((a1065210885 '1))
                 (let ((f1075210886
                        (make-closure
                         lam11037
                         a1065210885
                         +
                         length
                         kont10750)))
                   (clo-app cdr f1075210886 lst))))))))))
  (proc
   (length _11042 kont10750 lst)
   (let ((f1075310882 (make-closure lam11040 kont10750 lst + length cdr)))
     (clo-app null? f1075310882 lst)))
  (proc
   (lam11043 env11044 x1065610893)
   (let ((kont10754 (env-ref env11044 1))) (clo-app kont10754 x1065610893)))
  (proc
   (lam11045 env11046 a1066010901)
   (let ((a1065810897 (env-ref env11046 3)))
     (let ((kont10754 (env-ref env11046 2)))
       (let ((cons (env-ref env11046 1)))
         (clo-app cons kont10754 a1065810897 a1066010901)))))
  (proc
   (lam11047 env11048 a1065910899)
   (let ((map (env-ref env11048 5)))
     (let ((a1065810897 (env-ref env11048 4)))
       (let ((kont10754 (env-ref env11048 3)))
         (let ((proc (env-ref env11048 2)))
           (let ((cons (env-ref env11048 1)))
             (let ((f1075610900
                    (make-closure lam11045 cons kont10754 a1065810897)))
               (clo-app map f1075610900 proc a1065910899))))))))
  (proc
   (lam11049 env11050 a1065810897)
   (let ((cdr (env-ref env11050 6)))
     (let ((lst (env-ref env11050 5)))
       (let ((map (env-ref env11050 4)))
         (let ((kont10754 (env-ref env11050 3)))
           (let ((proc (env-ref env11050 2)))
             (let ((cons (env-ref env11050 1)))
               (let ((f1075710898
                      (make-closure
                       lam11047
                       cons
                       proc
                       kont10754
                       a1065810897
                       map)))
                 (clo-app cdr f1075710898 lst)))))))))
  (proc
   (lam11051 env11052 a1065710895)
   (let ((cdr (env-ref env11052 6)))
     (let ((lst (env-ref env11052 5)))
       (let ((map (env-ref env11052 4)))
         (let ((kont10754 (env-ref env11052 3)))
           (let ((proc (env-ref env11052 2)))
             (let ((cons (env-ref env11052 1)))
               (let ((f1075810896
                      (make-closure lam11049 cons proc kont10754 map lst cdr)))
                 (clo-app proc f1075810896 a1065710895)))))))))
  (proc
   (lam11053 env11054 a1065510891)
   (let ((lst (env-ref env11054 8)))
     (let ((map (env-ref env11054 7)))
       (let ((kont10754 (env-ref env11054 6)))
         (let ((proc (env-ref env11054 5)))
           (let ((car (env-ref env11054 4)))
             (let ((cons (env-ref env11054 3)))
               (let ((list (env-ref env11054 2)))
                 (let ((cdr (env-ref env11054 1)))
                   (if a1065510891
                     (let ((f1075510892 (make-closure lam11043 kont10754)))
                       (clo-app list f1075510892))
                     (let ((f1075910894
                            (make-closure
                             lam11051
                             cons
                             proc
                             kont10754
                             map
                             lst
                             cdr)))
                       (clo-app car f1075910894 lst))))))))))))
  (proc
   (map _11055 kont10754 proc lst)
   (let ((f1076010890
          (make-closure lam11053 cdr list cons car proc kont10754 map lst)))
     (clo-app null? f1076010890 lst)))
  (proc
   (lam11056 env11057 x1066210905)
   (let ((kont10761 (env-ref env11057 1))) (clo-app kont10761 x1066210905)))
  (proc
   (lam11058 env11059 a1066710915)
   (let ((a1066510911 (env-ref env11059 3)))
     (let ((cons (env-ref env11059 2)))
       (let ((kont10761 (env-ref env11059 1)))
         (clo-app cons kont10761 a1066510911 a1066710915)))))
  (proc
   (lam11060 env11061 a1066610913)
   (let ((a1066510911 (env-ref env11061 5)))
     (let ((op (env-ref env11061 4)))
       (let ((filter (env-ref env11061 3)))
         (let ((cons (env-ref env11061 2)))
           (let ((kont10761 (env-ref env11061 1)))
             (let ((f1076310914
                    (make-closure lam11058 kont10761 cons a1066510911)))
               (clo-app filter f1076310914 op a1066610913))))))))
  (proc
   (lam11062 env11063 a1066510911)
   (let ((cdr (env-ref env11063 6)))
     (let ((lst (env-ref env11063 5)))
       (let ((op (env-ref env11063 4)))
         (let ((filter (env-ref env11063 3)))
           (let ((cons (env-ref env11063 2)))
             (let ((kont10761 (env-ref env11063 1)))
               (let ((f1076410912
                      (make-closure
                       lam11060
                       kont10761
                       cons
                       filter
                       op
                       a1066510911)))
                 (clo-app cdr f1076410912 lst)))))))))
  (proc
   (lam11064 env11065 a1066810917)
   (let ((op (env-ref env11065 3)))
     (let ((filter (env-ref env11065 2)))
       (let ((kont10761 (env-ref env11065 1)))
         (clo-app filter kont10761 op a1066810917)))))
  (proc
   (lam11066 env11067 a1066410909)
   (let ((cdr (env-ref env11067 7)))
     (let ((lst (env-ref env11067 6)))
       (let ((op (env-ref env11067 5)))
         (let ((cons (env-ref env11067 4)))
           (let ((kont10761 (env-ref env11067 3)))
             (let ((filter (env-ref env11067 2)))
               (let ((car (env-ref env11067 1)))
                 (if a1066410909
                   (let ((f1076510910
                          (make-closure
                           lam11062
                           kont10761
                           cons
                           filter
                           op
                           lst
                           cdr)))
                     (clo-app car f1076510910 lst))
                   (let ((f1076610916
                          (make-closure lam11064 kont10761 filter op)))
                     (clo-app cdr f1076610916 lst)))))))))))
  (proc
   (lam11068 env11069 a1066310907)
   (let ((cdr (env-ref env11069 7)))
     (let ((lst (env-ref env11069 6)))
       (let ((op (env-ref env11069 5)))
         (let ((cons (env-ref env11069 4)))
           (let ((kont10761 (env-ref env11069 3)))
             (let ((filter (env-ref env11069 2)))
               (let ((car (env-ref env11069 1)))
                 (let ((f1076710908
                        (make-closure
                         lam11066
                         car
                         filter
                         kont10761
                         cons
                         op
                         lst
                         cdr)))
                   (clo-app op f1076710908 a1066310907))))))))))
  (proc
   (lam11070 env11071 a1066110903)
   (let ((lst (env-ref env11071 8)))
     (let ((op (env-ref env11071 7)))
       (let ((cons (env-ref env11071 6)))
         (let ((kont10761 (env-ref env11071 5)))
           (let ((list (env-ref env11071 4)))
             (let ((cdr (env-ref env11071 3)))
               (let ((filter (env-ref env11071 2)))
                 (let ((car (env-ref env11071 1)))
                   (if a1066110903
                     (let ((f1076210904 (make-closure lam11056 kont10761)))
                       (clo-app list f1076210904))
                     (let ((f1076810906
                            (make-closure
                             lam11068
                             car
                             filter
                             kont10761
                             cons
                             op
                             lst
                             cdr)))
                       (clo-app car f1076810906 lst))))))))))))
  (proc
   (filter _11072 kont10761 op lst)
   (let ((f1076910902
          (make-closure lam11070 car filter cdr list kont10761 cons op lst)))
     (clo-app null? f1076910902 lst)))
  (proc
   (lam11073 env11074 a1067310925)
   (let ((a1067110922 (env-ref env11074 3)))
     (let ((drop (env-ref env11074 2)))
       (let ((kont10770 (env-ref env11074 1)))
         (clo-app drop kont10770 a1067110922 a1067310925)))))
  (proc
   (lam11076 env11077 a1067110922)
   (let ((drop (env-ref env11077 4)))
     (let ((kont10770 (env-ref env11077 3)))
       (let ((n (env-ref env11077 2)))
         (let ((- (env-ref env11077 1)))
           (let ((a1067210923 '1))
             (let ((f1077110924
                    (make-closure lam11073 kont10770 drop a1067110922)))
               (clo-app - f1077110924 n a1067210923))))))))
  (proc
   (lam11078 env11079 a1067010920)
   (let ((cdr (env-ref env11079 6)))
     (let ((kont10770 (env-ref env11079 5)))
       (let ((n (env-ref env11079 4)))
         (let ((- (env-ref env11079 3)))
           (let ((lst (env-ref env11079 2)))
             (let ((drop (env-ref env11079 1)))
               (if a1067010920
                 (clo-app kont10770 lst)
                 (let ((f1077210921
                        (make-closure lam11076 - n kont10770 drop)))
                   (clo-app cdr f1077210921 lst))))))))))
  (proc
   (drop _11081 kont10770 lst n)
   (let ((a1066910918 '0))
     (let ((f1077310919 (make-closure lam11078 drop lst - n kont10770 cdr)))
       (clo-app = f1077310919 n a1066910918))))
  (proc
   (lam11082 env11083 a1067710933)
   (let ((a1067510929 (env-ref env11083 3)))
     (let ((proc (env-ref env11083 2)))
       (let ((kont10774 (env-ref env11083 1)))
         (clo-app proc kont10774 a1067510929 a1067710933)))))
  (proc
   (lam11084 env11085 a1067610931)
   (let ((foldr (env-ref env11085 5)))
     (let ((a1067510929 (env-ref env11085 4)))
       (let ((kont10774 (env-ref env11085 3)))
         (let ((proc (env-ref env11085 2)))
           (let ((acc (env-ref env11085 1)))
             (let ((f1077510932
                    (make-closure lam11082 kont10774 proc a1067510929)))
               (clo-app foldr f1077510932 proc acc a1067610931))))))))
  (proc
   (lam11086 env11087 a1067510929)
   (let ((cdr (env-ref env11087 6)))
     (let ((kont10774 (env-ref env11087 5)))
       (let ((foldr (env-ref env11087 4)))
         (let ((lst (env-ref env11087 3)))
           (let ((proc (env-ref env11087 2)))
             (let ((acc (env-ref env11087 1)))
               (let ((f1077610930
                      (make-closure
                       lam11084
                       acc
                       proc
                       kont10774
                       a1067510929
                       foldr)))
                 (clo-app cdr f1077610930 lst)))))))))
  (proc
   (lam11088 env11089 a1067410927)
   (let ((cdr (env-ref env11089 7)))
     (let ((kont10774 (env-ref env11089 6)))
       (let ((car (env-ref env11089 5)))
         (let ((foldr (env-ref env11089 4)))
           (let ((lst (env-ref env11089 3)))
             (let ((proc (env-ref env11089 2)))
               (let ((acc (env-ref env11089 1)))
                 (if a1067410927
                   (clo-app kont10774 acc)
                   (let ((f1077710928
                          (make-closure
                           lam11086
                           acc
                           proc
                           lst
                           foldr
                           kont10774
                           cdr)))
                     (clo-app car f1077710928 lst)))))))))))
  (proc
   (foldr _11090 kont10774 proc acc lst)
   (let ((f1077810926
          (make-closure lam11088 acc proc lst foldr car kont10774 cdr)))
     (clo-app null? f1077810926 lst)))
  (proc
   (lam11091 env11092 a1068110941)
   (let ((kont10779 (env-ref env11092 3)))
     (let ((cons (env-ref env11092 2)))
       (let ((a1067910937 (env-ref env11092 1)))
         (clo-app cons kont10779 a1067910937 a1068110941)))))
  (proc
   (lam11093 env11094 a1068010939)
   (let ((kont10779 (env-ref env11094 5)))
     (let ((append (env-ref env11094 4)))
       (let ((lst2 (env-ref env11094 3)))
         (let ((cons (env-ref env11094 2)))
           (let ((a1067910937 (env-ref env11094 1)))
             (let ((f1078010940
                    (make-closure lam11091 a1067910937 cons kont10779)))
               (clo-app append f1078010940 a1068010939 lst2))))))))
  (proc
   (lam11095 env11096 a1067910937)
   (let ((cdr (env-ref env11096 6)))
     (let ((kont10779 (env-ref env11096 5)))
       (let ((append (env-ref env11096 4)))
         (let ((lst2 (env-ref env11096 3)))
           (let ((lst1 (env-ref env11096 2)))
             (let ((cons (env-ref env11096 1)))
               (let ((f1078110938
                      (make-closure
                       lam11093
                       a1067910937
                       cons
                       lst2
                       append
                       kont10779)))
                 (clo-app cdr f1078110938 lst1)))))))))
  (proc
   (lam11097 env11098 a1067810935)
   (let ((cdr (env-ref env11098 7)))
     (let ((kont10779 (env-ref env11098 6)))
       (let ((append (env-ref env11098 5)))
         (let ((lst2 (env-ref env11098 4)))
           (let ((cons (env-ref env11098 3)))
             (let ((lst1 (env-ref env11098 2)))
               (let ((car (env-ref env11098 1)))
                 (if a1067810935
                   (clo-app kont10779 lst2)
                   (let ((f1078210936
                          (make-closure
                           lam11095
                           cons
                           lst1
                           lst2
                           append
                           kont10779
                           cdr)))
                     (clo-app car f1078210936 lst1)))))))))))
  (proc
   (append _11099 kont10779 lst1 lst2)
   (let ((f1078310934
          (make-closure lam11097 car lst1 cons lst2 append kont10779 cdr)))
     (clo-app null? f1078310934 lst1)))
  (proc
   (hash _11100 . lst)
   (let ((kont1078410942 (prim car lst)))
     (let ((lst10943 (prim cdr lst)))
       (let ((x1068210944 (apply-prim hash lst10943)))
         (clo-app kont1078410942 x1068210944)))))
  (proc
   (hash-ref _11101 kont10786 h k)
   (let ((x1068310945 (prim hash-ref h k))) (clo-app kont10786 x1068310945)))
  (proc
   (hash-set _11102 kont10787 h k v)
   (let ((x1068410946 (prim hash-set h k v))) (clo-app kont10787 x1068410946)))
  (proc
   (hash-has-key? _11103 kont10788 h k)
   (let ((x1068510947 (prim hash-has-key? h k)))
     (clo-app kont10788 x1068510947)))
  (proc
   (hash-count _11104 kont10789 h)
   (let ((x1068610948 (prim hash-count h))) (clo-app kont10789 x1068610948)))
  (proc
   (lam11105 env11106 a1069110954)
   (let ((+ (env-ref env11106 4)))
     (let ((a1068710949 (env-ref env11106 3)))
       (let ((a1068810950 (env-ref env11106 2)))
         (let ((kont10790 (env-ref env11106 1)))
           (clo-app + kont10790 a1068710949 a1068810950 a1069110954))))))
  (proc
   (call _11111 kont10790)
   (let ((a1068710949 '10))
     (let ((a1068810950 '3))
       (let ((a1068910951 '4))
         (let ((a1069010952 '3))
           (let ((f1079110953
                  (make-closure lam11105 kont10790 a1068810950 a1068710949 +)))
             (clo-app + f1079110953 a1068910951 a1069010952)))))))
  (proc
   (lam11112 env11113 x1069210956)
   (let ((kont10792 (env-ref env11113 1))) (clo-app kont10792 x1069210956)))
  (proc
   (brouhaha_main _11114 kont10792)
   (let ((f1079310955 (make-closure lam11112 kont10792)))
     (clo-app call f1079310955))))
