'((define (+ . lst)
    (let ((kont4552245626 (prim car lst)))
      (let ((lst45627 (prim cdr lst)))
        (let ((x4543245628 (apply-prim + lst45627)))
          (kont4552245626 x4543245628)))))
  (define (- . lst)
    (let ((kont4552445629 (prim car lst)))
      (let ((lst45630 (prim cdr lst)))
        (let ((x4543345631 (apply-prim - lst45630)))
          (kont4552445629 x4543345631)))))
  (define (* . lst)
    (let ((kont4552645632 (prim car lst)))
      (let ((lst45633 (prim cdr lst)))
        (let ((x4543445634 (apply-prim * lst45633)))
          (kont4552645632 x4543445634)))))
  (define (modulo kont45528 a b)
    (let ((x4543545635 (prim modulo a b))) (kont45528 x4543545635)))
  (define (/ . lst)
    (let ((kont4552945636 (prim car lst)))
      (let ((lst45637 (prim cdr lst)))
        (let ((x4543645638 (apply-prim / lst45637)))
          (kont4552945636 x4543645638)))))
  (define (= . lst)
    (let ((kont4553145639 (prim car lst)))
      (let ((lst45640 (prim cdr lst)))
        (let ((x4543745641 (apply-prim = lst45640)))
          (kont4553145639 x4543745641)))))
  (define (> . lst)
    (let ((kont4553345642 (prim car lst)))
      (let ((lst45643 (prim cdr lst)))
        (let ((x4543845644 (apply-prim > lst45643)))
          (kont4553345642 x4543845644)))))
  (define (< . lst)
    (let ((kont4553545645 (prim car lst)))
      (let ((lst45646 (prim cdr lst)))
        (let ((x4543945647 (apply-prim < lst45646)))
          (kont4553545645 x4543945647)))))
  (define (<= . lst)
    (let ((kont4553745648 (prim car lst)))
      (let ((lst45649 (prim cdr lst)))
        (let ((x4544045650 (apply-prim <= lst45649)))
          (kont4553745648 x4544045650)))))
  (define (>= . lst)
    (let ((kont4553945651 (prim car lst)))
      (let ((lst45652 (prim cdr lst)))
        (let ((x4544145653 (apply-prim >= lst45652)))
          (kont4553945651 x4544145653)))))
  (define (null? kont45541 x)
    (let ((x4544245654 (prim null? x))) (kont45541 x4544245654)))
  (define (equal? kont45542 x y)
    (let ((x4544345655 (prim equal? x y))) (kont45542 x4544345655)))
  (define (eq? kont45543 x y)
    (let ((x4544445656 (prim eq? x y))) (kont45543 x4544445656)))
  (define (cons kont45544 a b)
    (let ((x4544545657 (prim cons a b))) (kont45544 x4544545657)))
  (define (car kont45545 lst)
    (let ((x4544645658 (prim car lst))) (kont45545 x4544645658)))
  (define (cdr kont45546 lst)
    (let ((x4544745659 (prim cdr lst))) (kont45546 x4544745659)))
  (define (even? kont45547 x)
    (let ((a4544845660 '0))
      (let ((a4544945661 '2))
        (let ((f4554845662
               (lambda (a4545045663)
                 (equal? kont45547 a4544845660 a4545045663))))
          (modulo f4554845662 x a4544945661)))))
  (define (odd? kont45549 x)
    (let ((a4545145664 '1))
      (let ((a4545245665 '2))
        (let ((f4555045666
               (lambda (a4545345667)
                 (equal? kont45549 a4545145664 a4545345667))))
          (modulo f4555045666 x a4545245665)))))
  (define (list . x)
    (let ((kont4555145668 (prim car x)))
      (let ((x45669 (prim cdr x))) (kont4555145668 x45669))))
  (define (and . lst)
    (let ((kont4555345670 (prim car lst)))
      (let ((lst45671 (prim cdr lst)))
        (let ((x4545445672 (apply-prim and lst45671)))
          (kont4555345670 x4545445672)))))
  (define (or . lst)
    (let ((kont4555545673 (prim car lst)))
      (let ((lst45674 (prim cdr lst)))
        (let ((x4545545675 (apply-prim or lst45674)))
          (kont4555545673 x4545545675)))))
  (define (member? kont45557 x lst)
    (let ((f4556145676
           (lambda (a4545645677)
             (if a4545645677
               (let ((x4545745678 '#f)) (kont45557 x4545745678))
               (let ((f4556045679
                      (lambda (a4545845680)
                        (let ((f4555945681
                               (lambda (a4545945682)
                                 (if a4545945682
                                   (let ((x4546045683 '#t))
                                     (kont45557 x4546045683))
                                   (let ((f4555845684
                                          (lambda (a4546145685)
                                            (member?
                                             kont45557
                                             x
                                             a4546145685))))
                                     (cdr f4555845684 lst))))))
                          (equal? f4555945681 a4545845680 x)))))
                 (car f4556045679 lst))))))
      (null? f4556145676 lst)))
  (define (foldl kont45562 fun acc lst)
    (let ((f4556645686
           (lambda (a4546245687)
             (if a4546245687
               (kont45562 acc)
               (let ((f4556545688
                      (lambda (a4546345689)
                        (let ((f4556445690
                               (lambda (a4546445691)
                                 (let ((f4556345692
                                        (lambda (a4546545693)
                                          (foldl
                                           kont45562
                                           fun
                                           a4546445691
                                           a4546545693))))
                                   (cdr f4556345692 lst)))))
                          (fun f4556445690 a4546345689 acc)))))
                 (car f4556545688 lst))))))
      (null? f4556645686 lst)))
  (define (reverse-helper kont45567 lst lst2)
    (let ((f4557145694
           (lambda (a4546645695)
             (if a4546645695
               (kont45567 lst2)
               (let ((f4557045696
                      (lambda (a4546745697)
                        (let ((f4556945698
                               (lambda (a4546845699)
                                 (let ((f4556845700
                                        (lambda (a4546945701)
                                          (reverse-helper
                                           kont45567
                                           a4546745697
                                           a4546945701))))
                                   (cons f4556845700 a4546845699 lst2)))))
                          (car f4556945698 lst)))))
                 (cdr f4557045696 lst))))))
      (null? f4557145694 lst)))
  (define (reverse kont45572 lst)
    (let ((f4557345702
           (lambda (a4547045703) (reverse-helper kont45572 lst a4547045703))))
      (list f4557345702)))
  (define (take-helper kont45574 lst n lst2)
    (let ((a4547145704 '0))
      (let ((f4558045705
             (lambda (a4547245706)
               (if a4547245706
                 (let ((f4557545707
                        (lambda (x4547345708) (kont45574 x4547345708))))
                   (reverse f4557545707 lst2))
                 (let ((f4557945709
                        (lambda (a4547445710)
                          (let ((a4547545711 '1))
                            (let ((f4557845712
                                   (lambda (a4547645713)
                                     (let ((f4557745714
                                            (lambda (a4547745715)
                                              (let ((f4557645716
                                                     (lambda (a4547845717)
                                                       (take-helper
                                                        kont45574
                                                        a4547445710
                                                        a4547645713
                                                        a4547845717))))
                                                (cons
                                                 f4557645716
                                                 a4547745715
                                                 lst2)))))
                                       (car f4557745714 lst)))))
                              (- f4557845712 n a4547545711))))))
                   (cdr f4557945709 lst))))))
        (= f4558045705 n a4547145704))))
  (define (take kont45581 lst n)
    (let ((f4558245718
           (lambda (a4547945719) (take-helper kont45581 lst n a4547945719))))
      (list f4558245718)))
  (define (length kont45583 lst)
    (let ((f4558645720
           (lambda (a4548045721)
             (if a4548045721
               (let ((x4548145722 '0)) (kont45583 x4548145722))
               (let ((a4548245723 '1))
                 (let ((f4558545724
                        (lambda (a4548345725)
                          (let ((f4558445726
                                 (lambda (a4548445727)
                                   (+ kont45583 a4548245723 a4548445727))))
                            (length f4558445726 a4548345725)))))
                   (cdr f4558545724 lst)))))))
      (null? f4558645720 lst)))
  (define (map kont45587 proc lst)
    (let ((f4559345728
           (lambda (a4548545729)
             (if a4548545729
               (let ((f4558845730
                      (lambda (x4548645731) (kont45587 x4548645731))))
                 (list f4558845730))
               (let ((f4559245732
                      (lambda (a4548745733)
                        (let ((f4559145734
                               (lambda (a4548845735)
                                 (let ((f4559045736
                                        (lambda (a4548945737)
                                          (let ((f4558945738
                                                 (lambda (a4549045739)
                                                   (cons
                                                    kont45587
                                                    a4548845735
                                                    a4549045739))))
                                            (map
                                             f4558945738
                                             proc
                                             a4548945737)))))
                                   (cdr f4559045736 lst)))))
                          (proc f4559145734 a4548745733)))))
                 (car f4559245732 lst))))))
      (null? f4559345728 lst)))
  (define (filter kont45594 op lst)
    (let ((f4560245740
           (lambda (a4549145741)
             (if a4549145741
               (let ((f4559545742
                      (lambda (x4549245743) (kont45594 x4549245743))))
                 (list f4559545742))
               (let ((f4560145744
                      (lambda (a4549345745)
                        (let ((f4560045746
                               (lambda (a4549445747)
                                 (if a4549445747
                                   (let ((f4559845748
                                          (lambda (a4549545749)
                                            (let ((f4559745750
                                                   (lambda (a4549645751)
                                                     (let ((f4559645752
                                                            (lambda (a4549745753)
                                                              (cons
                                                               kont45594
                                                               a4549545749
                                                               a4549745753))))
                                                       (filter
                                                        f4559645752
                                                        op
                                                        a4549645751)))))
                                              (cdr f4559745750 lst)))))
                                     (car f4559845748 lst))
                                   (let ((f4559945754
                                          (lambda (a4549845755)
                                            (filter
                                             kont45594
                                             op
                                             a4549845755))))
                                     (cdr f4559945754 lst))))))
                          (op f4560045746 a4549345745)))))
                 (car f4560145744 lst))))))
      (null? f4560245740 lst)))
  (define (drop kont45603 lst n)
    (let ((a4549945756 '0))
      (let ((f4560645757
             (lambda (a4550045758)
               (if a4550045758
                 (kont45603 lst)
                 (let ((f4560545759
                        (lambda (a4550145760)
                          (let ((a4550245761 '1))
                            (let ((f4560445762
                                   (lambda (a4550345763)
                                     (drop
                                      kont45603
                                      a4550145760
                                      a4550345763))))
                              (- f4560445762 n a4550245761))))))
                   (cdr f4560545759 lst))))))
        (= f4560645757 n a4549945756))))
  (define (foldr kont45607 proc acc lst)
    (let ((f4561145764
           (lambda (a4550445765)
             (if a4550445765
               (kont45607 acc)
               (let ((f4561045766
                      (lambda (a4550545767)
                        (let ((f4560945768
                               (lambda (a4550645769)
                                 (let ((f4560845770
                                        (lambda (a4550745771)
                                          (proc
                                           kont45607
                                           a4550545767
                                           a4550745771))))
                                   (foldr f4560845770 proc acc a4550645769)))))
                          (cdr f4560945768 lst)))))
                 (car f4561045766 lst))))))
      (null? f4561145764 lst)))
  (define (append kont45612 lst1 lst2)
    (let ((f4561645772
           (lambda (a4550845773)
             (if a4550845773
               (kont45612 lst2)
               (let ((f4561545774
                      (lambda (a4550945775)
                        (let ((f4561445776
                               (lambda (a4551045777)
                                 (let ((f4561345778
                                        (lambda (a4551145779)
                                          (cons
                                           kont45612
                                           a4550945775
                                           a4551145779))))
                                   (append f4561345778 a4551045777 lst2)))))
                          (cdr f4561445776 lst1)))))
                 (car f4561545774 lst1))))))
      (null? f4561645772 lst1)))
  (define (hash . lst)
    (let ((kont4561745780 (prim car lst)))
      (let ((lst45781 (prim cdr lst)))
        (let ((x4551245782 (apply-prim hash lst45781)))
          (kont4561745780 x4551245782)))))
  (define (hash-ref kont45619 h k)
    (let ((x4551345783 (prim hash-ref h k))) (kont45619 x4551345783)))
  (define (hash-set kont45620 h k v)
    (let ((x4551445784 (prim hash-set h k v))) (kont45620 x4551445784)))
  (define (hash-has-key? kont45621 h k)
    (let ((x4551545785 (prim hash-has-key? h k))) (kont45621 x4551545785)))
  (define (hash-count kont45622 h)
    (let ((x4551645786 (prim hash-count h))) (kont45622 x4551645786)))
  (define (call kont45623)
    (let ((a4551745787 '100))
      (let ((a4551845788 '80))
        (let ((a4551945789 '10))
          (let ((a4552045790 '2))
            (- kont45623 a4551745787 a4551845788 a4551945789 a4552045790))))))
  (define (brouhaha_main kont45624)
    (let ((f4562545791 (lambda (x4552145792) (kont45624 x4552145792))))
      (call f4562545791))))
