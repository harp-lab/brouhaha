'((proc
   (+ _8247 . lst)
   (let ((kont79828084 (prim car lst)))
     (let ((lst8085 (prim cdr lst)))
       (let ((x78948086 (apply-prim + lst8085)))
         (clo-app kont79828084 x78948086)))))
  (proc
   (- _8248 . lst)
   (let ((kont79848087 (prim car lst)))
     (let ((lst8088 (prim cdr lst)))
       (let ((x78958089 (apply-prim - lst8088)))
         (clo-app kont79848087 x78958089)))))
  (proc
   (* _8249 . lst)
   (let ((kont79868090 (prim car lst)))
     (let ((lst8091 (prim cdr lst)))
       (let ((x78968092 (apply-prim * lst8091)))
         (clo-app kont79868090 x78968092)))))
  (proc
   (modulo _8250 kont7988 a b)
   (let ((x78978093 (prim modulo a b))) (clo-app kont7988 x78978093)))
  (proc
   (/ _8251 . lst)
   (let ((kont79898094 (prim car lst)))
     (let ((lst8095 (prim cdr lst)))
       (let ((x78988096 (apply-prim / lst8095)))
         (clo-app kont79898094 x78988096)))))
  (proc
   (= _8252 . lst)
   (let ((kont79918097 (prim car lst)))
     (let ((lst8098 (prim cdr lst)))
       (let ((x78998099 (apply-prim = lst8098)))
         (clo-app kont79918097 x78998099)))))
  (proc
   (> _8253 . lst)
   (let ((kont79938100 (prim car lst)))
     (let ((lst8101 (prim cdr lst)))
       (let ((x79008102 (apply-prim > lst8101)))
         (clo-app kont79938100 x79008102)))))
  (proc
   (< _8254 . lst)
   (let ((kont79958103 (prim car lst)))
     (let ((lst8104 (prim cdr lst)))
       (let ((x79018105 (apply-prim < lst8104)))
         (clo-app kont79958103 x79018105)))))
  (proc
   (<= _8255 . lst)
   (let ((kont79978106 (prim car lst)))
     (let ((lst8107 (prim cdr lst)))
       (let ((x79028108 (apply-prim <= lst8107)))
         (clo-app kont79978106 x79028108)))))
  (proc
   (>= _8256 . lst)
   (let ((kont79998109 (prim car lst)))
     (let ((lst8110 (prim cdr lst)))
       (let ((x79038111 (apply-prim >= lst8110)))
         (clo-app kont79998109 x79038111)))))
  (proc
   (null? _8257 kont8001 x)
   (let ((x79048112 (prim null? x))) (clo-app kont8001 x79048112)))
  (proc
   (equal? _8258 kont8002 x y)
   (let ((x79058113 (prim equal? x y))) (clo-app kont8002 x79058113)))
  (proc
   (eq? _8259 kont8003 x y)
   (let ((x79068114 (prim eq? x y))) (clo-app kont8003 x79068114)))
  (proc
   (cons _8260 kont8004 a b)
   (let ((x79078115 (prim cons a b))) (clo-app kont8004 x79078115)))
  (proc
   (car _8261 kont8005 lst)
   (let ((x79088116 (prim car lst))) (clo-app kont8005 x79088116)))
  (proc
   (cdr _8262 kont8006 lst)
   (let ((x79098117 (prim cdr lst))) (clo-app kont8006 x79098117)))
  (proc
   (lam8263 env8264 a79128121)
   (let ((equal? (env-ref env8264 3)))
     (let ((a79108118 (env-ref env8264 2)))
       (let ((kont8007 (env-ref env8264 1)))
         (clo-app equal? kont8007 a79108118 a79128121)))))
  (proc
   (even? _8267 kont8007 x)
   (let ((a79108118 '0))
     (let ((a79118119 '2))
       (let ((f80088120 (make-closure lam8263 kont8007 a79108118 equal?)))
         (clo-app modulo f80088120 x a79118119)))))
  (proc
   (lam8268 env8269 a79158125)
   (let ((a79138122 (env-ref env8269 3)))
     (let ((equal? (env-ref env8269 2)))
       (let ((kont8009 (env-ref env8269 1)))
         (clo-app equal? kont8009 a79138122 a79158125)))))
  (proc
   (odd? _8272 kont8009 x)
   (let ((a79138122 '1))
     (let ((a79148123 '2))
       (let ((f80108124 (make-closure lam8268 kont8009 equal? a79138122)))
         (clo-app modulo f80108124 x a79148123)))))
  (proc
   (list _8273 . x)
   (let ((kont80118126 (prim car x)))
     (let ((x8127 (prim cdr x))) (clo-app kont80118126 x8127))))
  (proc
   (lam8276 env8277 a79218137)
   (let ((kont8013 (env-ref env8277 3)))
     (let ((x (env-ref env8277 2)))
       (let ((member? (env-ref env8277 1)))
         (clo-app member? kont8013 x a79218137)))))
  (proc
   (lam8278 env8279 a79198134)
   (let ((cdr (env-ref env8279 5)))
     (let ((kont8013 (env-ref env8279 4)))
       (let ((lst (env-ref env8279 3)))
         (let ((x (env-ref env8279 2)))
           (let ((member? (env-ref env8279 1)))
             (if a79198134
               (let ((x79208135 '#t)) (clo-app kont8013 x79208135))
               (let ((f80148136 (make-closure lam8276 member? x kont8013)))
                 (clo-app cdr f80148136 lst)))))))))
  (proc
   (lam8280 env8281 a79188132)
   (let ((cdr (env-ref env8281 6)))
     (let ((kont8013 (env-ref env8281 5)))
       (let ((lst (env-ref env8281 4)))
         (let ((equal? (env-ref env8281 3)))
           (let ((x (env-ref env8281 2)))
             (let ((member? (env-ref env8281 1)))
               (let ((f80158133
                      (make-closure lam8278 member? x lst kont8013 cdr)))
                 (clo-app equal? f80158133 a79188132 x)))))))))
  (proc
   (lam8282 env8283 a79168129)
   (let ((cdr (env-ref env8283 7)))
     (let ((kont8013 (env-ref env8283 6)))
       (let ((lst (env-ref env8283 5)))
         (let ((equal? (env-ref env8283 4)))
           (let ((x (env-ref env8283 3)))
             (let ((car (env-ref env8283 2)))
               (let ((member? (env-ref env8283 1)))
                 (if a79168129
                   (let ((x79178130 '#f)) (clo-app kont8013 x79178130))
                   (let ((f80168131
                          (make-closure
                           lam8280
                           member?
                           x
                           equal?
                           lst
                           kont8013
                           cdr)))
                     (clo-app car f80168131 lst)))))))))))
  (proc
   (member? _8284 kont8013 x lst)
   (let ((f80178128
          (make-closure lam8282 member? car x equal? lst kont8013 cdr)))
     (clo-app null? f80178128 lst)))
  (proc
   (lam8285 env8286 a79258145)
   (let ((a79248143 (env-ref env8286 4)))
     (let ((kont8018 (env-ref env8286 3)))
       (let ((fun (env-ref env8286 2)))
         (let ((foldl (env-ref env8286 1)))
           (clo-app foldl kont8018 fun a79248143 a79258145))))))
  (proc
   (lam8287 env8288 a79248143)
   (let ((cdr (env-ref env8288 5)))
     (let ((lst (env-ref env8288 4)))
       (let ((kont8018 (env-ref env8288 3)))
         (let ((fun (env-ref env8288 2)))
           (let ((foldl (env-ref env8288 1)))
             (let ((f80198144
                    (make-closure lam8285 foldl fun kont8018 a79248143)))
               (clo-app cdr f80198144 lst))))))))
  (proc
   (lam8289 env8290 a79238141)
   (let ((cdr (env-ref env8290 6)))
     (let ((lst (env-ref env8290 5)))
       (let ((kont8018 (env-ref env8290 4)))
         (let ((fun (env-ref env8290 3)))
           (let ((acc (env-ref env8290 2)))
             (let ((foldl (env-ref env8290 1)))
               (let ((f80208142
                      (make-closure lam8287 foldl fun kont8018 lst cdr)))
                 (clo-app fun f80208142 a79238141 acc)))))))))
  (proc
   (lam8291 env8292 a79228139)
   (let ((cdr (env-ref env8292 7)))
     (let ((lst (env-ref env8292 6)))
       (let ((kont8018 (env-ref env8292 5)))
         (let ((fun (env-ref env8292 4)))
           (let ((acc (env-ref env8292 3)))
             (let ((car (env-ref env8292 2)))
               (let ((foldl (env-ref env8292 1)))
                 (if a79228139
                   (clo-app kont8018 acc)
                   (let ((f80218140
                          (make-closure
                           lam8289
                           foldl
                           acc
                           fun
                           kont8018
                           lst
                           cdr)))
                     (clo-app car f80218140 lst)))))))))))
  (proc
   (foldl _8293 kont8018 fun acc lst)
   (let ((f80228138 (make-closure lam8291 foldl car acc fun kont8018 lst cdr)))
     (clo-app null? f80228138 lst)))
  (proc
   (lam8294 env8295 a79298153)
   (let ((reverse-helper (env-ref env8295 3)))
     (let ((a79278149 (env-ref env8295 2)))
       (let ((kont8023 (env-ref env8295 1)))
         (clo-app reverse-helper kont8023 a79278149 a79298153)))))
  (proc
   (lam8296 env8297 a79288151)
   (let ((reverse-helper (env-ref env8297 5)))
     (let ((a79278149 (env-ref env8297 4)))
       (let ((lst2 (env-ref env8297 3)))
         (let ((kont8023 (env-ref env8297 2)))
           (let ((cons (env-ref env8297 1)))
             (let ((f80248152
                    (make-closure lam8294 kont8023 a79278149 reverse-helper)))
               (clo-app cons f80248152 a79288151 lst2))))))))
  (proc
   (lam8298 env8299 a79278149)
   (let ((lst (env-ref env8299 6)))
     (let ((reverse-helper (env-ref env8299 5)))
       (let ((lst2 (env-ref env8299 4)))
         (let ((cons (env-ref env8299 3)))
           (let ((car (env-ref env8299 2)))
             (let ((kont8023 (env-ref env8299 1)))
               (let ((f80258150
                      (make-closure
                       lam8296
                       cons
                       kont8023
                       lst2
                       a79278149
                       reverse-helper)))
                 (clo-app car f80258150 lst)))))))))
  (proc
   (lam8300 env8301 a79268147)
   (let ((cdr (env-ref env8301 7)))
     (let ((lst (env-ref env8301 6)))
       (let ((reverse-helper (env-ref env8301 5)))
         (let ((lst2 (env-ref env8301 4)))
           (let ((cons (env-ref env8301 3)))
             (let ((car (env-ref env8301 2)))
               (let ((kont8023 (env-ref env8301 1)))
                 (if a79268147
                   (clo-app kont8023 lst2)
                   (let ((f80268148
                          (make-closure
                           lam8298
                           kont8023
                           car
                           cons
                           lst2
                           reverse-helper
                           lst)))
                     (clo-app cdr f80268148 lst)))))))))))
  (proc
   (reverse-helper _8302 kont8023 lst lst2)
   (let ((f80278146
          (make-closure
           lam8300
           kont8023
           car
           cons
           lst2
           reverse-helper
           lst
           cdr)))
     (clo-app null? f80278146 lst)))
  (proc
   (lam8303 env8304 a79308155)
   (let ((kont8028 (env-ref env8304 3)))
     (let ((lst (env-ref env8304 2)))
       (let ((reverse-helper (env-ref env8304 1)))
         (clo-app reverse-helper kont8028 lst a79308155)))))
  (proc
   (reverse _8305 kont8028 lst)
   (let ((f80298154 (make-closure lam8303 reverse-helper lst kont8028)))
     (clo-app list f80298154)))
  (proc
   (lam8306 env8307 x79338160)
   (let ((kont8030 (env-ref env8307 1))) (clo-app kont8030 x79338160)))
  (proc
   (lam8308 env8309 a79388169)
   (let ((kont8030 (env-ref env8309 4)))
     (let ((a79348162 (env-ref env8309 3)))
       (let ((a79368165 (env-ref env8309 2)))
         (let ((take-helper (env-ref env8309 1)))
           (clo-app take-helper kont8030 a79348162 a79368165 a79388169))))))
  (proc
   (lam8310 env8311 a79378167)
   (let ((kont8030 (env-ref env8311 6)))
     (let ((a79348162 (env-ref env8311 5)))
       (let ((a79368165 (env-ref env8311 4)))
         (let ((cons (env-ref env8311 3)))
           (let ((take-helper (env-ref env8311 2)))
             (let ((lst2 (env-ref env8311 1)))
               (let ((f80328168
                      (make-closure
                       lam8308
                       take-helper
                       a79368165
                       a79348162
                       kont8030)))
                 (clo-app cons f80328168 a79378167 lst2)))))))))
  (proc
   (lam8312 env8313 a79368165)
   (let ((a79348162 (env-ref env8313 7)))
     (let ((car (env-ref env8313 6)))
       (let ((cons (env-ref env8313 5)))
         (let ((kont8030 (env-ref env8313 4)))
           (let ((lst (env-ref env8313 3)))
             (let ((take-helper (env-ref env8313 2)))
               (let ((lst2 (env-ref env8313 1)))
                 (let ((f80338166
                        (make-closure
                         lam8310
                         lst2
                         take-helper
                         cons
                         a79368165
                         a79348162
                         kont8030)))
                   (clo-app car f80338166 lst))))))))))
  (proc
   (lam8315 env8316 a79348162)
   (let ((cons (env-ref env8316 8)))
     (let ((- (env-ref env8316 7)))
       (let ((kont8030 (env-ref env8316 6)))
         (let ((lst (env-ref env8316 5)))
           (let ((take-helper (env-ref env8316 4)))
             (let ((lst2 (env-ref env8316 3)))
               (let ((n (env-ref env8316 2)))
                 (let ((car (env-ref env8316 1)))
                   (let ((a79358163 '1))
                     (let ((f80348164
                            (make-closure
                             lam8312
                             lst2
                             take-helper
                             lst
                             kont8030
                             cons
                             car
                             a79348162)))
                       (clo-app - f80348164 n a79358163))))))))))))
  (proc
   (lam8317 env8318 a79328158)
   (let ((cdr (env-ref env8318 10)))
     (let ((reverse (env-ref env8318 9)))
       (let ((cons (env-ref env8318 8)))
         (let ((- (env-ref env8318 7)))
           (let ((kont8030 (env-ref env8318 6)))
             (let ((lst (env-ref env8318 5)))
               (let ((take-helper (env-ref env8318 4)))
                 (let ((lst2 (env-ref env8318 3)))
                   (let ((n (env-ref env8318 2)))
                     (let ((car (env-ref env8318 1)))
                       (if a79328158
                         (let ((f80318159 (make-closure lam8306 kont8030)))
                           (clo-app reverse f80318159 lst2))
                         (let ((f80358161
                                (make-closure
                                 lam8315
                                 car
                                 n
                                 lst2
                                 take-helper
                                 lst
                                 kont8030
                                 -
                                 cons)))
                           (clo-app cdr f80358161 lst))))))))))))))
  (proc
   (take-helper _8320 kont8030 lst n lst2)
   (let ((a79318156 '0))
     (let ((f80368157
            (make-closure
             lam8317
             car
             n
             lst2
             take-helper
             lst
             kont8030
             -
             cons
             reverse
             cdr)))
       (clo-app = f80368157 n a79318156))))
  (proc
   (lam8321 env8322 a79398171)
   (let ((lst (env-ref env8322 4)))
     (let ((kont8037 (env-ref env8322 3)))
       (let ((take-helper (env-ref env8322 2)))
         (let ((n (env-ref env8322 1)))
           (clo-app take-helper kont8037 lst n a79398171))))))
  (proc
   (take _8323 kont8037 lst n)
   (let ((f80388170 (make-closure lam8321 n take-helper kont8037 lst)))
     (clo-app list f80388170)))
  (proc
   (lam8325 env8326 a79448179)
   (let ((a79428175 (env-ref env8326 3)))
     (let ((+ (env-ref env8326 2)))
       (let ((kont8039 (env-ref env8326 1)))
         (clo-app + kont8039 a79428175 a79448179)))))
  (proc
   (lam8327 env8328 a79438177)
   (let ((+ (env-ref env8328 4)))
     (let ((kont8039 (env-ref env8328 3)))
       (let ((a79428175 (env-ref env8328 2)))
         (let ((length (env-ref env8328 1)))
           (let ((f80408178 (make-closure lam8325 kont8039 + a79428175)))
             (clo-app length f80408178 a79438177)))))))
  (proc
   (lam8330 env8331 a79408173)
   (let ((cdr (env-ref env8331 5)))
     (let ((lst (env-ref env8331 4)))
       (let ((length (env-ref env8331 3)))
         (let ((+ (env-ref env8331 2)))
           (let ((kont8039 (env-ref env8331 1)))
             (if a79408173
               (let ((x79418174 '0)) (clo-app kont8039 x79418174))
               (let ((a79428175 '1))
                 (let ((f80418176
                        (make-closure lam8327 length a79428175 kont8039 +)))
                   (clo-app cdr f80418176 lst))))))))))
  (proc
   (length _8332 kont8039 lst)
   (let ((f80428172 (make-closure lam8330 kont8039 + length lst cdr)))
     (clo-app null? f80428172 lst)))
  (proc
   (lam8333 env8334 x79468183)
   (let ((kont8043 (env-ref env8334 1))) (clo-app kont8043 x79468183)))
  (proc
   (lam8335 env8336 a79508191)
   (let ((cons (env-ref env8336 3)))
     (let ((kont8043 (env-ref env8336 2)))
       (let ((a79488187 (env-ref env8336 1)))
         (clo-app cons kont8043 a79488187 a79508191)))))
  (proc
   (lam8337 env8338 a79498189)
   (let ((map (env-ref env8338 5)))
     (let ((proc (env-ref env8338 4)))
       (let ((cons (env-ref env8338 3)))
         (let ((kont8043 (env-ref env8338 2)))
           (let ((a79488187 (env-ref env8338 1)))
             (let ((f80458190 (make-closure lam8335 a79488187 kont8043 cons)))
               (clo-app map f80458190 proc a79498189))))))))
  (proc
   (lam8339 env8340 a79488187)
   (let ((cdr (env-ref env8340 6)))
     (let ((kont8043 (env-ref env8340 5)))
       (let ((lst (env-ref env8340 4)))
         (let ((map (env-ref env8340 3)))
           (let ((proc (env-ref env8340 2)))
             (let ((cons (env-ref env8340 1)))
               (let ((f80468188
                      (make-closure lam8337 a79488187 kont8043 cons proc map)))
                 (clo-app cdr f80468188 lst)))))))))
  (proc
   (lam8341 env8342 a79478185)
   (let ((cdr (env-ref env8342 6)))
     (let ((kont8043 (env-ref env8342 5)))
       (let ((lst (env-ref env8342 4)))
         (let ((map (env-ref env8342 3)))
           (let ((proc (env-ref env8342 2)))
             (let ((cons (env-ref env8342 1)))
               (let ((f80478186
                      (make-closure lam8339 cons proc map lst kont8043 cdr)))
                 (clo-app proc f80478186 a79478185)))))))))
  (proc
   (lam8343 env8344 a79458181)
   (let ((kont8043 (env-ref env8344 8)))
     (let ((lst (env-ref env8344 7)))
       (let ((map (env-ref env8344 6)))
         (let ((proc (env-ref env8344 5)))
           (let ((car (env-ref env8344 4)))
             (let ((cons (env-ref env8344 3)))
               (let ((list (env-ref env8344 2)))
                 (let ((cdr (env-ref env8344 1)))
                   (if a79458181
                     (let ((f80448182 (make-closure lam8333 kont8043)))
                       (clo-app list f80448182))
                     (let ((f80488184
                            (make-closure
                             lam8341
                             cons
                             proc
                             map
                             lst
                             kont8043
                             cdr)))
                       (clo-app car f80488184 lst))))))))))))
  (proc
   (map _8345 kont8043 proc lst)
   (let ((f80498180
          (make-closure lam8343 cdr list cons car proc map lst kont8043)))
     (clo-app null? f80498180 lst)))
  (proc
   (lam8346 env8347 x79528195)
   (let ((kont8050 (env-ref env8347 1))) (clo-app kont8050 x79528195)))
  (proc
   (lam8348 env8349 a79578205)
   (let ((kont8050 (env-ref env8349 3)))
     (let ((cons (env-ref env8349 2)))
       (let ((a79558201 (env-ref env8349 1)))
         (clo-app cons kont8050 a79558201 a79578205)))))
  (proc
   (lam8350 env8351 a79568203)
   (let ((op (env-ref env8351 5)))
     (let ((kont8050 (env-ref env8351 4)))
       (let ((filter (env-ref env8351 3)))
         (let ((cons (env-ref env8351 2)))
           (let ((a79558201 (env-ref env8351 1)))
             (let ((f80528204 (make-closure lam8348 a79558201 cons kont8050)))
               (clo-app filter f80528204 op a79568203))))))))
  (proc
   (lam8352 env8353 a79558201)
   (let ((cdr (env-ref env8353 6)))
     (let ((lst (env-ref env8353 5)))
       (let ((op (env-ref env8353 4)))
         (let ((kont8050 (env-ref env8353 3)))
           (let ((filter (env-ref env8353 2)))
             (let ((cons (env-ref env8353 1)))
               (let ((f80538202
                      (make-closure
                       lam8350
                       a79558201
                       cons
                       filter
                       kont8050
                       op)))
                 (clo-app cdr f80538202 lst)))))))))
  (proc
   (lam8354 env8355 a79588207)
   (let ((op (env-ref env8355 3)))
     (let ((kont8050 (env-ref env8355 2)))
       (let ((filter (env-ref env8355 1)))
         (clo-app filter kont8050 op a79588207)))))
  (proc
   (lam8356 env8357 a79548199)
   (let ((cdr (env-ref env8357 7)))
     (let ((lst (env-ref env8357 6)))
       (let ((op (env-ref env8357 5)))
         (let ((kont8050 (env-ref env8357 4)))
           (let ((cons (env-ref env8357 3)))
             (let ((filter (env-ref env8357 2)))
               (let ((car (env-ref env8357 1)))
                 (if a79548199
                   (let ((f80548200
                          (make-closure
                           lam8352
                           cons
                           filter
                           kont8050
                           op
                           lst
                           cdr)))
                     (clo-app car f80548200 lst))
                   (let ((f80558206 (make-closure lam8354 filter kont8050 op)))
                     (clo-app cdr f80558206 lst)))))))))))
  (proc
   (lam8358 env8359 a79538197)
   (let ((cdr (env-ref env8359 7)))
     (let ((lst (env-ref env8359 6)))
       (let ((op (env-ref env8359 5)))
         (let ((kont8050 (env-ref env8359 4)))
           (let ((cons (env-ref env8359 3)))
             (let ((filter (env-ref env8359 2)))
               (let ((car (env-ref env8359 1)))
                 (let ((f80568198
                        (make-closure
                         lam8356
                         car
                         filter
                         cons
                         kont8050
                         op
                         lst
                         cdr)))
                   (clo-app op f80568198 a79538197))))))))))
  (proc
   (lam8360 env8361 a79518193)
   (let ((lst (env-ref env8361 8)))
     (let ((op (env-ref env8361 7)))
       (let ((kont8050 (env-ref env8361 6)))
         (let ((cons (env-ref env8361 5)))
           (let ((list (env-ref env8361 4)))
             (let ((cdr (env-ref env8361 3)))
               (let ((filter (env-ref env8361 2)))
                 (let ((car (env-ref env8361 1)))
                   (if a79518193
                     (let ((f80518194 (make-closure lam8346 kont8050)))
                       (clo-app list f80518194))
                     (let ((f80578196
                            (make-closure
                             lam8358
                             car
                             filter
                             cons
                             kont8050
                             op
                             lst
                             cdr)))
                       (clo-app car f80578196 lst))))))))))))
  (proc
   (filter _8362 kont8050 op lst)
   (let ((f80588192
          (make-closure lam8360 car filter cdr list cons kont8050 op lst)))
     (clo-app null? f80588192 lst)))
  (proc
   (lam8363 env8364 a79638215)
   (let ((kont8059 (env-ref env8364 3)))
     (let ((drop (env-ref env8364 2)))
       (let ((a79618212 (env-ref env8364 1)))
         (clo-app drop kont8059 a79618212 a79638215)))))
  (proc
   (lam8366 env8367 a79618212)
   (let ((kont8059 (env-ref env8367 4)))
     (let ((drop (env-ref env8367 3)))
       (let ((n (env-ref env8367 2)))
         (let ((- (env-ref env8367 1)))
           (let ((a79628213 '1))
             (let ((f80608214 (make-closure lam8363 a79618212 drop kont8059)))
               (clo-app - f80608214 n a79628213))))))))
  (proc
   (lam8368 env8369 a79608210)
   (let ((cdr (env-ref env8369 6)))
     (let ((kont8059 (env-ref env8369 5)))
       (let ((n (env-ref env8369 4)))
         (let ((- (env-ref env8369 3)))
           (let ((lst (env-ref env8369 2)))
             (let ((drop (env-ref env8369 1)))
               (if a79608210
                 (clo-app kont8059 lst)
                 (let ((f80618211 (make-closure lam8366 - n drop kont8059)))
                   (clo-app cdr f80618211 lst))))))))))
  (proc
   (drop _8371 kont8059 lst n)
   (let ((a79598208 '0))
     (let ((f80628209 (make-closure lam8368 drop lst - n kont8059 cdr)))
       (clo-app = f80628209 n a79598208))))
  (proc
   (lam8372 env8373 a79678223)
   (let ((a79658219 (env-ref env8373 3)))
     (let ((kont8063 (env-ref env8373 2)))
       (let ((proc (env-ref env8373 1)))
         (clo-app proc kont8063 a79658219 a79678223)))))
  (proc
   (lam8374 env8375 a79668221)
   (let ((a79658219 (env-ref env8375 5)))
     (let ((foldr (env-ref env8375 4)))
       (let ((kont8063 (env-ref env8375 3)))
         (let ((proc (env-ref env8375 2)))
           (let ((acc (env-ref env8375 1)))
             (let ((f80648222 (make-closure lam8372 proc kont8063 a79658219)))
               (clo-app foldr f80648222 proc acc a79668221))))))))
  (proc
   (lam8376 env8377 a79658219)
   (let ((cdr (env-ref env8377 6)))
     (let ((kont8063 (env-ref env8377 5)))
       (let ((foldr (env-ref env8377 4)))
         (let ((lst (env-ref env8377 3)))
           (let ((proc (env-ref env8377 2)))
             (let ((acc (env-ref env8377 1)))
               (let ((f80658220
                      (make-closure
                       lam8374
                       acc
                       proc
                       kont8063
                       foldr
                       a79658219)))
                 (clo-app cdr f80658220 lst)))))))))
  (proc
   (lam8378 env8379 a79648217)
   (let ((cdr (env-ref env8379 7)))
     (let ((kont8063 (env-ref env8379 6)))
       (let ((car (env-ref env8379 5)))
         (let ((foldr (env-ref env8379 4)))
           (let ((lst (env-ref env8379 3)))
             (let ((proc (env-ref env8379 2)))
               (let ((acc (env-ref env8379 1)))
                 (if a79648217
                   (clo-app kont8063 acc)
                   (let ((f80668218
                          (make-closure
                           lam8376
                           acc
                           proc
                           lst
                           foldr
                           kont8063
                           cdr)))
                     (clo-app car f80668218 lst)))))))))))
  (proc
   (foldr _8380 kont8063 proc acc lst)
   (let ((f80678216
          (make-closure lam8378 acc proc lst foldr car kont8063 cdr)))
     (clo-app null? f80678216 lst)))
  (proc
   (lam8381 env8382 a79718231)
   (let ((a79698227 (env-ref env8382 3)))
     (let ((kont8068 (env-ref env8382 2)))
       (let ((cons (env-ref env8382 1)))
         (clo-app cons kont8068 a79698227 a79718231)))))
  (proc
   (lam8383 env8384 a79708229)
   (let ((append (env-ref env8384 5)))
     (let ((a79698227 (env-ref env8384 4)))
       (let ((kont8068 (env-ref env8384 3)))
         (let ((lst2 (env-ref env8384 2)))
           (let ((cons (env-ref env8384 1)))
             (let ((f80698230 (make-closure lam8381 cons kont8068 a79698227)))
               (clo-app append f80698230 a79708229 lst2))))))))
  (proc
   (lam8385 env8386 a79698227)
   (let ((cdr (env-ref env8386 6)))
     (let ((append (env-ref env8386 5)))
       (let ((kont8068 (env-ref env8386 4)))
         (let ((lst2 (env-ref env8386 3)))
           (let ((lst1 (env-ref env8386 2)))
             (let ((cons (env-ref env8386 1)))
               (let ((f80708228
                      (make-closure
                       lam8383
                       cons
                       lst2
                       kont8068
                       a79698227
                       append)))
                 (clo-app cdr f80708228 lst1)))))))))
  (proc
   (lam8387 env8388 a79688225)
   (let ((cdr (env-ref env8388 7)))
     (let ((append (env-ref env8388 6)))
       (let ((kont8068 (env-ref env8388 5)))
         (let ((lst2 (env-ref env8388 4)))
           (let ((cons (env-ref env8388 3)))
             (let ((lst1 (env-ref env8388 2)))
               (let ((car (env-ref env8388 1)))
                 (if a79688225
                   (clo-app kont8068 lst2)
                   (let ((f80718226
                          (make-closure
                           lam8385
                           cons
                           lst1
                           lst2
                           kont8068
                           append
                           cdr)))
                     (clo-app car f80718226 lst1)))))))))))
  (proc
   (append _8389 kont8068 lst1 lst2)
   (let ((f80728224
          (make-closure lam8387 car lst1 cons lst2 kont8068 append cdr)))
     (clo-app null? f80728224 lst1)))
  (proc
   (hash _8390 . lst)
   (let ((kont80738232 (prim car lst)))
     (let ((lst8233 (prim cdr lst)))
       (let ((x79728234 (apply-prim hash lst8233)))
         (clo-app kont80738232 x79728234)))))
  (proc
   (hash-ref _8391 kont8075 h k)
   (let ((x79738235 (prim hash-ref h k))) (clo-app kont8075 x79738235)))
  (proc
   (hash-set _8392 kont8076 h k v)
   (let ((x79748236 (prim hash-set h k v))) (clo-app kont8076 x79748236)))
  (proc
   (hash-has-key? _8393 kont8077 h k)
   (let ((x79758237 (prim hash-has-key? h k))) (clo-app kont8077 x79758237)))
  (proc
   (hash-count _8394 kont8078 h)
   (let ((x79768238 (prim hash-count h))) (clo-app kont8078 x79768238)))
  (proc
   (lam8395 env8396 a79808243)
   (let ((kont8079 (env-ref env8396 2)))
     (let ((+ (env-ref env8396 1)))
       (let ((cps-lst80808244 (prim cons kont8079 a79808243)))
         (clo-apply + cps-lst80808244)))))
  (proc
   (call _8400 kont8079)
   (let ((a79778239 '1))
     (let ((a79788240 '2))
       (let ((a79798241 '3))
         (let ((f80818242 (make-closure lam8395 + kont8079)))
           (clo-app list f80818242 a79778239 a79788240 a79798241))))))
  (proc
   (lam8401 env8402 x79818246)
   (let ((kont8082 (env-ref env8402 1))) (clo-app kont8082 x79818246)))
  (proc
   (brouhaha_main _8403 kont8082)
   (let ((f80838245 (make-closure lam8401 kont8082)))
     (clo-app call f80838245))))
