'((define (+ . lst)
    (let ((kont73347366 (prim car lst)))
      (let ((lst7367 (prim cdr lst)))
        (let ((x73117368 (apply-prim + lst7367))) (kont73347366 x73117368)))))
  (define (- . lst)
    (let ((kont73367369 (prim car lst)))
      (let ((lst7370 (prim cdr lst)))
        (let ((x73127371 (apply-prim - lst7370))) (kont73367369 x73127371)))))
  (define (* . lst)
    (let ((kont73387372 (prim car lst)))
      (let ((lst7373 (prim cdr lst)))
        (let ((x73137374 (apply-prim * lst7373))) (kont73387372 x73137374)))))
  (define (modulo kont7340 a b)
    (let ((x73147375 (prim modulo a b))) (kont7340 x73147375)))
  (define (= . lst)
    (let ((kont73417376 (prim car lst)))
      (let ((lst7377 (prim cdr lst)))
        (let ((x73157378 (apply-prim = lst7377))) (kont73417376 x73157378)))))
  (define (> . lst)
    (let ((kont73437379 (prim car lst)))
      (let ((lst7380 (prim cdr lst)))
        (let ((x73167381 (apply-prim > lst7380))) (kont73437379 x73167381)))))
  (define (< . lst)
    (let ((kont73457382 (prim car lst)))
      (let ((lst7383 (prim cdr lst)))
        (let ((x73177384 (apply-prim < lst7383))) (kont73457382 x73177384)))))
  (define (<= . lst)
    (let ((kont73477385 (prim car lst)))
      (let ((lst7386 (prim cdr lst)))
        (let ((x73187387 (apply-prim <= lst7386))) (kont73477385 x73187387)))))
  (define (>= . lst)
    (let ((kont73497388 (prim car lst)))
      (let ((lst7389 (prim cdr lst)))
        (let ((x73197390 (apply-prim >= lst7389))) (kont73497388 x73197390)))))
  (define (null? kont7351 x)
    (let ((x73207391 (prim null? x))) (kont7351 x73207391)))
  (define (equal? kont7352 x y)
    (let ((x73217392 (prim equal? x y))) (kont7352 x73217392)))
  (define (eq? kont7353 x y)
    (let ((x73227393 (prim eq? x y))) (kont7353 x73227393)))
  (define (cons kont7354 a b)
    (let ((x73237394 (prim cons a b))) (kont7354 x73237394)))
  (define (car kont7355 lst)
    (let ((x73247395 (prim car lst))) (kont7355 x73247395)))
  (define (cdr kont7356 lst)
    (let ((x73257396 (prim cdr lst))) (kont7356 x73257396)))
  (define (even? kont7357 x)
    (let ((a73267397 '0))
      (let ((a73277398 '2))
        (let ((f73587399
               (lambda (a73287400) (equal? kont7357 a73267397 a73287400))))
          (modulo f73587399 x a73277398)))))
  (define (odd? kont7359 x)
    (let ((a73297401 '1))
      (let ((a73307402 '2))
        (let ((f73607403
               (lambda (a73317404) (equal? kont7359 a73297401 a73317404))))
          (modulo f73607403 x a73307402)))))
  (define (list . x)
    (let ((kont73617405 (prim car x)))
      (let ((x7406 (prim cdr x))) (kont73617405 x7406))))
  (define (call kont7363) (let ((a73327407 '5)) (even? kont7363 a73327407)))
  (define (brouhaha_main kont7364)
    (let ((f73657408 (lambda (x73337409) (kont7364 x73337409))))
      (call f73657408))))
