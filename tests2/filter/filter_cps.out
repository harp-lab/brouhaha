'((define (+ . lst)
    (let ((kont2292923030 (prim car lst)))
      (let ((lst23031 (prim cdr lst)))
        (let ((x2284123032 (apply-prim + lst23031)))
          (kont2292923030 x2284123032)))))
  (define (- . lst)
    (let ((kont2293123033 (prim car lst)))
      (let ((lst23034 (prim cdr lst)))
        (let ((x2284223035 (apply-prim - lst23034)))
          (kont2293123033 x2284223035)))))
  (define (* . lst)
    (let ((kont2293323036 (prim car lst)))
      (let ((lst23037 (prim cdr lst)))
        (let ((x2284323038 (apply-prim * lst23037)))
          (kont2293323036 x2284323038)))))
  (define (modulo kont22935 a b)
    (let ((x2284423039 (prim modulo a b))) (kont22935 x2284423039)))
  (define (/ . lst)
    (let ((kont2293623040 (prim car lst)))
      (let ((lst23041 (prim cdr lst)))
        (let ((x2284523042 (apply-prim / lst23041)))
          (kont2293623040 x2284523042)))))
  (define (= . lst)
    (let ((kont2293823043 (prim car lst)))
      (let ((lst23044 (prim cdr lst)))
        (let ((x2284623045 (apply-prim = lst23044)))
          (kont2293823043 x2284623045)))))
  (define (> . lst)
    (let ((kont2294023046 (prim car lst)))
      (let ((lst23047 (prim cdr lst)))
        (let ((x2284723048 (apply-prim > lst23047)))
          (kont2294023046 x2284723048)))))
  (define (< . lst)
    (let ((kont2294223049 (prim car lst)))
      (let ((lst23050 (prim cdr lst)))
        (let ((x2284823051 (apply-prim < lst23050)))
          (kont2294223049 x2284823051)))))
  (define (<= . lst)
    (let ((kont2294423052 (prim car lst)))
      (let ((lst23053 (prim cdr lst)))
        (let ((x2284923054 (apply-prim <= lst23053)))
          (kont2294423052 x2284923054)))))
  (define (>= . lst)
    (let ((kont2294623055 (prim car lst)))
      (let ((lst23056 (prim cdr lst)))
        (let ((x2285023057 (apply-prim >= lst23056)))
          (kont2294623055 x2285023057)))))
  (define (null? kont22948 x)
    (let ((x2285123058 (prim null? x))) (kont22948 x2285123058)))
  (define (equal? kont22949 x y)
    (let ((x2285223059 (prim equal? x y))) (kont22949 x2285223059)))
  (define (eq? kont22950 x y)
    (let ((x2285323060 (prim eq? x y))) (kont22950 x2285323060)))
  (define (cons kont22951 a b)
    (let ((x2285423061 (prim cons a b))) (kont22951 x2285423061)))
  (define (car kont22952 lst)
    (let ((x2285523062 (prim car lst))) (kont22952 x2285523062)))
  (define (cdr kont22953 lst)
    (let ((x2285623063 (prim cdr lst))) (kont22953 x2285623063)))
  (define (even? kont22954 x)
    (let ((a2285723064 '0))
      (let ((a2285823065 '2))
        (let ((f2295523066
               (lambda (a2285923067)
                 (equal? kont22954 a2285723064 a2285923067))))
          (modulo f2295523066 x a2285823065)))))
  (define (odd? kont22956 x)
    (let ((a2286023068 '1))
      (let ((a2286123069 '2))
        (let ((f2295723070
               (lambda (a2286223071)
                 (equal? kont22956 a2286023068 a2286223071))))
          (modulo f2295723070 x a2286123069)))))
  (define (list . x)
    (let ((kont2295823072 (prim car x)))
      (let ((x23073 (prim cdr x))) (kont2295823072 x23073))))
  (define (member? kont22960 x lst)
    (let ((f2296423074
           (lambda (a2286323075)
             (if a2286323075
               (let ((x2286423076 '#f)) (kont22960 x2286423076))
               (let ((f2296323077
                      (lambda (a2286523078)
                        (let ((f2296223079
                               (lambda (a2286623080)
                                 (if a2286623080
                                   (let ((x2286723081 '#t))
                                     (kont22960 x2286723081))
                                   (let ((f2296123082
                                          (lambda (a2286823083)
                                            (member?
                                             kont22960
                                             x
                                             a2286823083))))
                                     (cdr f2296123082 lst))))))
                          (equal? f2296223079 a2286523078 x)))))
                 (car f2296323077 lst))))))
      (null? f2296423074 lst)))
  (define (foldl kont22965 fun acc lst)
    (let ((f2296923084
           (lambda (a2286923085)
             (if a2286923085
               (kont22965 acc)
               (let ((f2296823086
                      (lambda (a2287023087)
                        (let ((f2296723088
                               (lambda (a2287123089)
                                 (let ((f2296623090
                                        (lambda (a2287223091)
                                          (foldl
                                           kont22965
                                           fun
                                           a2287123089
                                           a2287223091))))
                                   (cdr f2296623090 lst)))))
                          (fun f2296723088 a2287023087 acc)))))
                 (car f2296823086 lst))))))
      (null? f2296923084 lst)))
  (define (reverse-helper kont22970 lst lst2)
    (let ((f2297423092
           (lambda (a2287323093)
             (if a2287323093
               (kont22970 lst2)
               (let ((f2297323094
                      (lambda (a2287423095)
                        (let ((f2297223096
                               (lambda (a2287523097)
                                 (let ((f2297123098
                                        (lambda (a2287623099)
                                          (reverse-helper
                                           kont22970
                                           a2287423095
                                           a2287623099))))
                                   (cons f2297123098 a2287523097 lst2)))))
                          (car f2297223096 lst)))))
                 (cdr f2297323094 lst))))))
      (null? f2297423092 lst)))
  (define (reverse kont22975 lst)
    (let ((f2297623100
           (lambda (a2287723101) (reverse-helper kont22975 lst a2287723101))))
      (list f2297623100)))
  (define (take-helper kont22977 lst n lst2)
    (let ((a2287823102 '0))
      (let ((f2298323103
             (lambda (a2287923104)
               (if a2287923104
                 (let ((f2297823105
                        (lambda (x2288023106) (kont22977 x2288023106))))
                   (reverse f2297823105 lst2))
                 (let ((f2298223107
                        (lambda (a2288123108)
                          (let ((a2288223109 '1))
                            (let ((f2298123110
                                   (lambda (a2288323111)
                                     (let ((f2298023112
                                            (lambda (a2288423113)
                                              (let ((f2297923114
                                                     (lambda (a2288523115)
                                                       (take-helper
                                                        kont22977
                                                        a2288123108
                                                        a2288323111
                                                        a2288523115))))
                                                (cons
                                                 f2297923114
                                                 a2288423113
                                                 lst2)))))
                                       (car f2298023112 lst)))))
                              (- f2298123110 n a2288223109))))))
                   (cdr f2298223107 lst))))))
        (= f2298323103 n a2287823102))))
  (define (take kont22984 lst n)
    (let ((f2298523116
           (lambda (a2288623117) (take-helper kont22984 lst n a2288623117))))
      (list f2298523116)))
  (define (length kont22986 lst)
    (let ((f2298923118
           (lambda (a2288723119)
             (if a2288723119
               (let ((x2288823120 '0)) (kont22986 x2288823120))
               (let ((a2288923121 '1))
                 (let ((f2298823122
                        (lambda (a2289023123)
                          (let ((f2298723124
                                 (lambda (a2289123125)
                                   (+ kont22986 a2288923121 a2289123125))))
                            (length f2298723124 a2289023123)))))
                   (cdr f2298823122 lst)))))))
      (null? f2298923118 lst)))
  (define (map kont22990 proc lst)
    (let ((f2299623126
           (lambda (a2289223127)
             (if a2289223127
               (let ((f2299123128
                      (lambda (x2289323129) (kont22990 x2289323129))))
                 (list f2299123128))
               (let ((f2299523130
                      (lambda (a2289423131)
                        (let ((f2299423132
                               (lambda (a2289523133)
                                 (let ((f2299323134
                                        (lambda (a2289623135)
                                          (let ((f2299223136
                                                 (lambda (a2289723137)
                                                   (cons
                                                    kont22990
                                                    a2289523133
                                                    a2289723137))))
                                            (map
                                             f2299223136
                                             proc
                                             a2289623135)))))
                                   (cdr f2299323134 lst)))))
                          (proc f2299423132 a2289423131)))))
                 (car f2299523130 lst))))))
      (null? f2299623126 lst)))
  (define (filter kont22997 op lst)
    (let ((f2300523138
           (lambda (a2289823139)
             (if a2289823139
               (let ((f2299823140
                      (lambda (x2289923141) (kont22997 x2289923141))))
                 (list f2299823140))
               (let ((f2300423142
                      (lambda (a2290023143)
                        (let ((f2300323144
                               (lambda (a2290123145)
                                 (if a2290123145
                                   (let ((f2300123146
                                          (lambda (a2290223147)
                                            (let ((f2300023148
                                                   (lambda (a2290323149)
                                                     (let ((f2299923150
                                                            (lambda (a2290423151)
                                                              (cons
                                                               kont22997
                                                               a2290223147
                                                               a2290423151))))
                                                       (filter
                                                        f2299923150
                                                        op
                                                        a2290323149)))))
                                              (cdr f2300023148 lst)))))
                                     (car f2300123146 lst))
                                   (let ((f2300223152
                                          (lambda (a2290523153)
                                            (filter
                                             kont22997
                                             op
                                             a2290523153))))
                                     (cdr f2300223152 lst))))))
                          (op f2300323144 a2290023143)))))
                 (car f2300423142 lst))))))
      (null? f2300523138 lst)))
  (define (drop kont23006 lst n)
    (let ((a2290623154 '0))
      (let ((f2300923155
             (lambda (a2290723156)
               (if a2290723156
                 (kont23006 lst)
                 (let ((f2300823157
                        (lambda (a2290823158)
                          (let ((a2290923159 '1))
                            (let ((f2300723160
                                   (lambda (a2291023161)
                                     (drop
                                      kont23006
                                      a2290823158
                                      a2291023161))))
                              (- f2300723160 n a2290923159))))))
                   (cdr f2300823157 lst))))))
        (= f2300923155 n a2290623154))))
  (define (foldr kont23010 proc acc lst)
    (let ((f2301423162
           (lambda (a2291123163)
             (if a2291123163
               (kont23010 acc)
               (let ((f2301323164
                      (lambda (a2291223165)
                        (let ((f2301223166
                               (lambda (a2291323167)
                                 (let ((f2301123168
                                        (lambda (a2291423169)
                                          (proc
                                           kont23010
                                           a2291223165
                                           a2291423169))))
                                   (foldr f2301123168 proc acc a2291323167)))))
                          (cdr f2301223166 lst)))))
                 (car f2301323164 lst))))))
      (null? f2301423162 lst)))
  (define (append kont23015 lst1 lst2)
    (let ((f2301923170
           (lambda (a2291523171)
             (if a2291523171
               (kont23015 lst2)
               (let ((f2301823172
                      (lambda (a2291623173)
                        (let ((f2301723174
                               (lambda (a2291723175)
                                 (let ((f2301623176
                                        (lambda (a2291823177)
                                          (cons
                                           kont23015
                                           a2291623173
                                           a2291823177))))
                                   (append f2301623176 a2291723175 lst2)))))
                          (cdr f2301723174 lst1)))))
                 (car f2301823172 lst1))))))
      (null? f2301923170 lst1)))
  (define (hash . lst)
    (let ((kont2302023178 (prim car lst)))
      (let ((lst23179 (prim cdr lst)))
        (let ((x2291923180 (apply-prim hash lst23179)))
          (kont2302023178 x2291923180)))))
  (define (hash-ref kont23022 h k)
    (let ((x2292023181 (prim hash-ref h k))) (kont23022 x2292023181)))
  (define (hash-set kont23023 h k v)
    (let ((x2292123182 (prim hash-set h k v))) (kont23023 x2292123182)))
  (define (hash-has-key? kont23024 h k)
    (let ((x2292223183 (prim hash-has-key? h k))) (kont23024 x2292223183)))
  (define (hash-count kont23025 h)
    (let ((x2292323184 (prim hash-count h))) (kont23025 x2292323184)))
  (define (call kont23026)
    (let ((a2292423185 '1))
      (let ((a2292523186 '2))
        (let ((a2292623187 '3))
          (let ((f2302723188
                 (lambda (a2292723189) (filter kont23026 odd? a2292723189))))
            (list f2302723188 a2292423185 a2292523186 a2292623187))))))
  (define (brouhaha_main kont23028)
    (let ((f2302923190 (lambda (x2292823191) (kont23028 x2292823191))))
      (call f2302923190))))
