'((define (+ . lst)
    (let ((kont2198922090 (prim car lst)))
      (let ((lst22091 (prim cdr lst)))
        (let ((x2190122092 (apply-prim + lst22091)))
          (kont2198922090 x2190122092)))))
  (define (- . lst)
    (let ((kont2199122093 (prim car lst)))
      (let ((lst22094 (prim cdr lst)))
        (let ((x2190222095 (apply-prim - lst22094)))
          (kont2199122093 x2190222095)))))
  (define (* . lst)
    (let ((kont2199322096 (prim car lst)))
      (let ((lst22097 (prim cdr lst)))
        (let ((x2190322098 (apply-prim * lst22097)))
          (kont2199322096 x2190322098)))))
  (define (modulo kont21995 a b)
    (let ((x2190422099 (prim modulo a b))) (kont21995 x2190422099)))
  (define (/ . lst)
    (let ((kont2199622100 (prim car lst)))
      (let ((lst22101 (prim cdr lst)))
        (let ((x2190522102 (apply-prim / lst22101)))
          (kont2199622100 x2190522102)))))
  (define (= . lst)
    (let ((kont2199822103 (prim car lst)))
      (let ((lst22104 (prim cdr lst)))
        (let ((x2190622105 (apply-prim = lst22104)))
          (kont2199822103 x2190622105)))))
  (define (> . lst)
    (let ((kont2200022106 (prim car lst)))
      (let ((lst22107 (prim cdr lst)))
        (let ((x2190722108 (apply-prim > lst22107)))
          (kont2200022106 x2190722108)))))
  (define (< . lst)
    (let ((kont2200222109 (prim car lst)))
      (let ((lst22110 (prim cdr lst)))
        (let ((x2190822111 (apply-prim < lst22110)))
          (kont2200222109 x2190822111)))))
  (define (<= . lst)
    (let ((kont2200422112 (prim car lst)))
      (let ((lst22113 (prim cdr lst)))
        (let ((x2190922114 (apply-prim <= lst22113)))
          (kont2200422112 x2190922114)))))
  (define (>= . lst)
    (let ((kont2200622115 (prim car lst)))
      (let ((lst22116 (prim cdr lst)))
        (let ((x2191022117 (apply-prim >= lst22116)))
          (kont2200622115 x2191022117)))))
  (define (null? kont22008 x)
    (let ((x2191122118 (prim null? x))) (kont22008 x2191122118)))
  (define (equal? kont22009 x y)
    (let ((x2191222119 (prim equal? x y))) (kont22009 x2191222119)))
  (define (eq? kont22010 x y)
    (let ((x2191322120 (prim eq? x y))) (kont22010 x2191322120)))
  (define (cons kont22011 a b)
    (let ((x2191422121 (prim cons a b))) (kont22011 x2191422121)))
  (define (car kont22012 lst)
    (let ((x2191522122 (prim car lst))) (kont22012 x2191522122)))
  (define (cdr kont22013 lst)
    (let ((x2191622123 (prim cdr lst))) (kont22013 x2191622123)))
  (define (even? kont22014 x)
    (let ((a2191722124 '0))
      (let ((a2191822125 '2))
        (let ((f2201522126
               (lambda (a2191922127)
                 (equal? kont22014 a2191722124 a2191922127))))
          (modulo f2201522126 x a2191822125)))))
  (define (odd? kont22016 x)
    (let ((a2192022128 '1))
      (let ((a2192122129 '2))
        (let ((f2201722130
               (lambda (a2192222131)
                 (equal? kont22016 a2192022128 a2192222131))))
          (modulo f2201722130 x a2192122129)))))
  (define (list . x)
    (let ((kont2201822132 (prim car x)))
      (let ((x22133 (prim cdr x))) (kont2201822132 x22133))))
  (define (member? kont22020 x lst)
    (let ((f2202422134
           (lambda (a2192322135)
             (if a2192322135
               (let ((x2192422136 '#f)) (kont22020 x2192422136))
               (let ((f2202322137
                      (lambda (a2192522138)
                        (let ((f2202222139
                               (lambda (a2192622140)
                                 (if a2192622140
                                   (let ((x2192722141 '#t))
                                     (kont22020 x2192722141))
                                   (let ((f2202122142
                                          (lambda (a2192822143)
                                            (member?
                                             kont22020
                                             x
                                             a2192822143))))
                                     (cdr f2202122142 lst))))))
                          (equal? f2202222139 a2192522138 x)))))
                 (car f2202322137 lst))))))
      (null? f2202422134 lst)))
  (define (foldl kont22025 fun acc lst)
    (let ((f2202922144
           (lambda (a2192922145)
             (if a2192922145
               (kont22025 acc)
               (let ((f2202822146
                      (lambda (a2193022147)
                        (let ((f2202722148
                               (lambda (a2193122149)
                                 (let ((f2202622150
                                        (lambda (a2193222151)
                                          (foldl
                                           kont22025
                                           fun
                                           a2193122149
                                           a2193222151))))
                                   (cdr f2202622150 lst)))))
                          (fun f2202722148 a2193022147 acc)))))
                 (car f2202822146 lst))))))
      (null? f2202922144 lst)))
  (define (reverse-helper kont22030 lst lst2)
    (let ((f2203422152
           (lambda (a2193322153)
             (if a2193322153
               (kont22030 lst2)
               (let ((f2203322154
                      (lambda (a2193422155)
                        (let ((f2203222156
                               (lambda (a2193522157)
                                 (let ((f2203122158
                                        (lambda (a2193622159)
                                          (reverse-helper
                                           kont22030
                                           a2193422155
                                           a2193622159))))
                                   (cons f2203122158 a2193522157 lst2)))))
                          (car f2203222156 lst)))))
                 (cdr f2203322154 lst))))))
      (null? f2203422152 lst)))
  (define (reverse kont22035 lst)
    (let ((f2203622160
           (lambda (a2193722161) (reverse-helper kont22035 lst a2193722161))))
      (list f2203622160)))
  (define (take-helper kont22037 lst n lst2)
    (let ((a2193822162 '0))
      (let ((f2204322163
             (lambda (a2193922164)
               (if a2193922164
                 (let ((f2203822165
                        (lambda (x2194022166) (kont22037 x2194022166))))
                   (reverse f2203822165 lst2))
                 (let ((f2204222167
                        (lambda (a2194122168)
                          (let ((a2194222169 '1))
                            (let ((f2204122170
                                   (lambda (a2194322171)
                                     (let ((f2204022172
                                            (lambda (a2194422173)
                                              (let ((f2203922174
                                                     (lambda (a2194522175)
                                                       (take-helper
                                                        kont22037
                                                        a2194122168
                                                        a2194322171
                                                        a2194522175))))
                                                (cons
                                                 f2203922174
                                                 a2194422173
                                                 lst2)))))
                                       (car f2204022172 lst)))))
                              (- f2204122170 n a2194222169))))))
                   (cdr f2204222167 lst))))))
        (= f2204322163 n a2193822162))))
  (define (take kont22044 lst n)
    (let ((f2204522176
           (lambda (a2194622177) (take-helper kont22044 lst n a2194622177))))
      (list f2204522176)))
  (define (length kont22046 lst)
    (let ((f2204922178
           (lambda (a2194722179)
             (if a2194722179
               (let ((x2194822180 '0)) (kont22046 x2194822180))
               (let ((a2194922181 '1))
                 (let ((f2204822182
                        (lambda (a2195022183)
                          (let ((f2204722184
                                 (lambda (a2195122185)
                                   (+ kont22046 a2194922181 a2195122185))))
                            (length f2204722184 a2195022183)))))
                   (cdr f2204822182 lst)))))))
      (null? f2204922178 lst)))
  (define (map kont22050 proc lst)
    (let ((f2205622186
           (lambda (a2195222187)
             (if a2195222187
               (let ((f2205122188
                      (lambda (x2195322189) (kont22050 x2195322189))))
                 (list f2205122188))
               (let ((f2205522190
                      (lambda (a2195422191)
                        (let ((f2205422192
                               (lambda (a2195522193)
                                 (let ((f2205322194
                                        (lambda (a2195622195)
                                          (let ((f2205222196
                                                 (lambda (a2195722197)
                                                   (cons
                                                    kont22050
                                                    a2195522193
                                                    a2195722197))))
                                            (map
                                             f2205222196
                                             proc
                                             a2195622195)))))
                                   (cdr f2205322194 lst)))))
                          (proc f2205422192 a2195422191)))))
                 (car f2205522190 lst))))))
      (null? f2205622186 lst)))
  (define (filter kont22057 op lst)
    (let ((f2206522198
           (lambda (a2195822199)
             (if a2195822199
               (let ((f2205822200
                      (lambda (x2195922201) (kont22057 x2195922201))))
                 (list f2205822200))
               (let ((f2206422202
                      (lambda (a2196022203)
                        (let ((f2206322204
                               (lambda (a2196122205)
                                 (if a2196122205
                                   (let ((f2206122206
                                          (lambda (a2196222207)
                                            (let ((f2206022208
                                                   (lambda (a2196322209)
                                                     (let ((f2205922210
                                                            (lambda (a2196422211)
                                                              (cons
                                                               kont22057
                                                               a2196222207
                                                               a2196422211))))
                                                       (filter
                                                        f2205922210
                                                        op
                                                        a2196322209)))))
                                              (cdr f2206022208 lst)))))
                                     (car f2206122206 lst))
                                   (let ((f2206222212
                                          (lambda (a2196522213)
                                            (filter
                                             kont22057
                                             op
                                             a2196522213))))
                                     (cdr f2206222212 lst))))))
                          (op f2206322204 a2196022203)))))
                 (car f2206422202 lst))))))
      (null? f2206522198 lst)))
  (define (drop kont22066 lst n)
    (let ((a2196622214 '0))
      (let ((f2206922215
             (lambda (a2196722216)
               (if a2196722216
                 (kont22066 lst)
                 (let ((f2206822217
                        (lambda (a2196822218)
                          (let ((a2196922219 '1))
                            (let ((f2206722220
                                   (lambda (a2197022221)
                                     (drop
                                      kont22066
                                      a2196822218
                                      a2197022221))))
                              (- f2206722220 n a2196922219))))))
                   (cdr f2206822217 lst))))))
        (= f2206922215 n a2196622214))))
  (define (foldr kont22070 proc acc lst)
    (let ((f2207422222
           (lambda (a2197122223)
             (if a2197122223
               (kont22070 acc)
               (let ((f2207322224
                      (lambda (a2197222225)
                        (let ((f2207222226
                               (lambda (a2197322227)
                                 (let ((f2207122228
                                        (lambda (a2197422229)
                                          (proc
                                           kont22070
                                           a2197222225
                                           a2197422229))))
                                   (foldr f2207122228 proc acc a2197322227)))))
                          (cdr f2207222226 lst)))))
                 (car f2207322224 lst))))))
      (null? f2207422222 lst)))
  (define (append kont22075 lst1 lst2)
    (let ((f2207922230
           (lambda (a2197522231)
             (if a2197522231
               (kont22075 lst2)
               (let ((f2207822232
                      (lambda (a2197622233)
                        (let ((f2207722234
                               (lambda (a2197722235)
                                 (let ((f2207622236
                                        (lambda (a2197822237)
                                          (cons
                                           kont22075
                                           a2197622233
                                           a2197822237))))
                                   (append f2207622236 a2197722235 lst2)))))
                          (cdr f2207722234 lst1)))))
                 (car f2207822232 lst1))))))
      (null? f2207922230 lst1)))
  (define (hash . lst)
    (let ((kont2208022238 (prim car lst)))
      (let ((lst22239 (prim cdr lst)))
        (let ((x2197922240 (apply-prim hash lst22239)))
          (kont2208022238 x2197922240)))))
  (define (hash-ref kont22082 h k)
    (let ((x2198022241 (prim hash-ref h k))) (kont22082 x2198022241)))
  (define (hash-set kont22083 h k v)
    (let ((x2198122242 (prim hash-set h k v))) (kont22083 x2198122242)))
  (define (hash-has-key? kont22084 h k)
    (let ((x2198222243 (prim hash-has-key? h k))) (kont22084 x2198222243)))
  (define (hash-count kont22085 h)
    (let ((x2198322244 (prim hash-count h))) (kont22085 x2198322244)))
  (define (call kont22086)
    (let ((a2198422245 '1))
      (let ((a2198522246 '2))
        (let ((a2198622247 '3))
          (let ((f2208722248
                 (lambda (a2198722249) (filter kont22086 odd? a2198722249))))
            (list f2208722248 a2198422245 a2198522246 a2198622247))))))
  (define (brouhaha_main kont22088)
    (let ((f2208922250 (lambda (x2198822251) (kont22088 x2198822251))))
      (call f2208922250))))
